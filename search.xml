<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学习の历程</title>
    <url>/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/</url>
    <content><![CDATA[<p>努力成为一个小富婆。</p>
<ol>
<li>不食嗟来之食</li>
<li>不与人为善</li>
<li>不帮助别人，更不需要别人的帮助</li>
</ol>
<a id="more"></a>
<h1><span id="2021">2021：</span><a href="#2021" class="header-anchor">#</a></h1><h2><span id="07">07</span><a href="#07" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. </span><br></pre></td></tr></tbody></table></figure>
<h4><span id="0703">0703</span><a href="#0703" class="header-anchor">#</a></h4><ol>
<li>新概念到了，买错了</li>
<li>gender wage gap (it is difficult to write and organize)</li>
<li>the evolution of childcare behavior over time(but it is not nice)</li>
</ol>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/仪表板 1.png" style="zoom:50%;"></p>
<h3><span id="week-26">Week 26</span><a href="#week-26" class="header-anchor">#</a></h3><h2><span id="06">06</span><a href="#06" class="header-anchor">#</a></h2><h3><span id="week-08">Week 08</span><a href="#week-08" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. 投稿</span><br><span class="line">2. high-speed rail</span><br></pre></td></tr></tbody></table></figure>
<hr>
<h4><span id="20210627">20210627</span><a href="#20210627" class="header-anchor">#</a></h4><p>revise paper</p>
<p>review academic vacubulary</p>
<h4><span id="20210622">20210622</span><a href="#20210622" class="header-anchor">#</a></h4><p>I repeated a task due to a detail.</p>
<p>table to large?</p>
<p>灌水？垃圾</p>
<h4><span id="20210621">20210621</span><a href="#20210621" class="header-anchor">#</a></h4><p>the effect  of sth on sth (whole paper talks about ,…zhezhezhehzhezhehzehez)</p>
<h3><span id="week-07">Week 07</span><a href="#week-07" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. translation</span><br><span class="line">2. collecting </span><br></pre></td></tr></tbody></table></figure>
<h4><span id="20210620">20210620</span><a href="#20210620" class="header-anchor">#</a></h4><p>OK,efficiency</p>
<h4><span id="20210619">20210619</span><a href="#20210619" class="header-anchor">#</a></h4><p>I got up until elenvn o’colock.</p>
<p>I felt tried, why?</p>
<p>上古还是很好看的。还是三生三世原汁原味</p>
<p>睡得早起得晚。</p>
<p>能不能不要这样子了，积极向上的点，</p>
<p>早起，吃饭，睡觉，一个人好好过</p>
<h4><span id="20210618">20210618</span><a href="#20210618" class="header-anchor">#</a></h4><p>I completed descriptive evidence,  main results, dynamic effect, a part of heterogeneious effect.</p>
<p>I alway think how to write by my style? how to anlysis (coefficient, explanantory, indicate, imply) logical</p>
<p>but I alway could not to speak out???? why , why, why ,why</p>
<h4><span id="20210617">20210617</span><a href="#20210617" class="header-anchor">#</a></h4><p>how to speak</p>
<p>how to write influcently？</p>
<h4><span id="20210616">20210616</span><a href="#20210616" class="header-anchor">#</a></h4><p>tried, want to sleeping</p>
<p>table (麻烦)</p>
<h4><span id="20210615">20210615</span><a href="#20210615" class="header-anchor">#</a></h4><p>vocabulary</p>
<h4><span id="20210614c">20210614c</span><a href="#20210614c" class="header-anchor">#</a></h4><ol>
<li>academic vocabulary</li>
<li>reading</li>
</ol>
<h3><span id="week-06">Week 06</span><a href="#week-06" class="header-anchor">#</a></h3><p>OK! how to writing academic paper?</p>
<p>remember</p>
<h4><span id="20210613">20210613</span><a href="#20210613" class="header-anchor">#</a></h4><p>academic vocabularies</p>
<h4><span id="20210612">20210612</span><a href="#20210612" class="header-anchor">#</a></h4><p>academic vocabularies</p>
<h4><span id="20210611">20210611</span><a href="#20210611" class="header-anchor">#</a></h4><p>我是不是太自私了,我不能只顾着自己，忽视了周围的环境。</p>
<p>今年定个小目标。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210611203818758.png" alt="image-20210611203818758" style="zoom:25%;"></p>
<h4><span id="20210610">20210610</span><a href="#20210610" class="header-anchor">#</a></h4><p><a href="https://en-yinbiao.xiao84.com/">https://en-yinbiao.xiao84.com/</a></p>
<p>曾经我也是非常合群的。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/学习Daily\image-20210611143620234.png" alt="image-20210611143620234" style="zoom:25%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/学习Daily\image-20210611143607552.png" alt="image-20210611143607552" style="zoom: 25%;"></p>
<h4><span id="202010609">202010609</span><a href="#202010609" class="header-anchor">#</a></h4><p>  title={(.+)\}</p>
<p>  title=</p>
<h4><span id="20210608">20210608</span><a href="#20210608" class="header-anchor">#</a></h4><ol>
<li>draw figure (beatiful and )</li>
<li></li>
</ol>
<h4><span id="20210607">20210607</span><a href="#20210607" class="header-anchor">#</a></h4><p>Report!</p>
<font size="15" color="blue">Task </font>

<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. 完善语言</span><br><span class="line">2. 1 paper</span><br><span class="line">3. reading more and write more</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="week-05">Week 05</span><a href="#week-05" class="header-anchor">#</a></h3><p>summary：OK! 收工。</p>
<font size="15" color="blue">Task </font>

<figure class="highlight txt"><table><tbody><tr><td class="code"><pre><span class="line">1. two paper</span><br><span class="line">2. SQL(summary)</span><br><span class="line">3. excel(graph)</span><br><span class="line">4. Tabluar</span><br><span class="line">5. 业务思维</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="20210605">20210605</span><a href="#20210605" class="header-anchor">#</a></h4><p>write</p>
<p>words</p>
<p>sentences</p>
<p>par</p>
<p>section</p>
<h4><span id="20210604">20210604</span><a href="#20210604" class="header-anchor">#</a></h4><p>translation</p>
<h4><span id="20210603">20210603</span><a href="#20210603" class="header-anchor">#</a></h4><p>《数据分析思维：分析方法和思维》猴子</p>
<h4><span id="20210602">20210602</span><a href="#20210602" class="header-anchor">#</a></h4><h4><span id="20210601">20210601</span><a href="#20210601" class="header-anchor">#</a></h4><ol>
<li>tableau </li>
<li>excel(控件)</li>
<li>write paper</li>
</ol>
<p>哈哈哈，精美的报表。</p>
<h4><span id="20210531">20210531</span><a href="#20210531" class="header-anchor">#</a></h4><p>get up late until 11.00 am</p>
<p>completed excel</p>
<p>literature review</p>
<h2><span id="05">05</span><a href="#05" class="header-anchor">#</a></h2><h3><span id="week-04">Week 04</span><a href="#week-04" class="header-anchor">#</a></h3><ol>
<li>lackness<pre><code>1. 纠结
 2. 能力和工作要求还相差很大的距离
 3. 跟我妈吵架
</code></pre></li>
<li>happiness<ol>
<li>复习了excel+sql(高效啊)</li>
<li>认识两个人</li>
<li>吃的相当好啊</li>
</ol>
</li>
</ol>
<h4><span id="20210530">20210530</span><a href="#20210530" class="header-anchor">#</a></h4><p>又睡到十一点钟。</p>
<p>不想早起，我怎么变成这样子了。我怎么就成这样子了。每天睡9-10h。</p>
<p>既然做不出什么大成就，干嘛不去提升工作能力和工作技能呢？</p>
<h4><span id="20210529">20210529</span><a href="#20210529" class="header-anchor">#</a></h4><p>学习excel规划</p>
<p>规划</p>
<h4><span id="20210528">20210528</span><a href="#20210528" class="header-anchor">#</a></h4><ol>
<li>规划下一步学习内容</li>
</ol>
<h4><span id="20210527">20210527</span><a href="#20210527" class="header-anchor">#</a></h4><ol>
<li>resources</li>
</ol>
<h4><span id="20210526">20210526</span><a href="#20210526" class="header-anchor">#</a></h4><ol>
<li>SQL刷题，也就那些技巧</li>
</ol>
<h4><span id="20210525">20210525</span><a href="#20210525" class="header-anchor">#</a></h4><ol>
<li>改了论文</li>
</ol>
<h4><span id="20210524">20210524</span><a href="#20210524" class="header-anchor">#</a></h4><ol>
<li>睡觉到11：30</li>
</ol>
<h3><span id="week-03">Week 03</span><a href="#week-03" class="header-anchor">#</a></h3><h4><span id="20210523">20210523</span><a href="#20210523" class="header-anchor">#</a></h4><p>睡了一天，不想干嘛，看了大江大河，太棒 了</p>
<h4><span id="20210522">20210522</span><a href="#20210522" class="header-anchor">#</a></h4><h4><span id="20210521">20210521</span><a href="#20210521" class="header-anchor">#</a></h4><hr>
<hr>
<p>再见研究生，再见博士</p>
<p>20而已的生活了(果然开始的生活很难啊)</p>
<p>垃圾的自己</p>
<hr>
<hr>
<h4><span id="20210520">20210520</span><a href="#20210520" class="header-anchor">#</a></h4><h4><span id="20210517">20210517</span><a href="#20210517" class="header-anchor">#</a></h4><p>成败在此一举。</p>
<h3><span id="week-02">week 02</span><a href="#week-02" class="header-anchor">#</a></h3><h4><span id="20210510-yao-zhe-ge-fu-za-gui-yi-de-shi-jie-xue-hui-bo-yi">20210510 要这个复杂诡异的世界学会博弈</span><a href="#20210510-yao-zhe-ge-fu-za-gui-yi-de-shi-jie-xue-hui-bo-yi" class="header-anchor">#</a></h4><h4><span id="20210509-sheng-er-wei-ren-wo-gan-dao-bao-qian">20210509 生而为人我感到抱歉</span><a href="#20210509-sheng-er-wei-ren-wo-gan-dao-bao-qian" class="header-anchor">#</a></h4><p>生而为人我感到抱歉</p>
<h4><span id="20210508">20210508</span><a href="#20210508" class="header-anchor">#</a></h4><h4><span id="20210507">20210507</span><a href="#20210507" class="header-anchor">#</a></h4><p>write</p>
<h4><span id="20210506">20210506</span><a href="#20210506" class="header-anchor">#</a></h4><h4><span id="20210505">20210505</span><a href="#20210505" class="header-anchor">#</a></h4><p>data</p>
<h4><span id="20210504">20210504</span><a href="#20210504" class="header-anchor">#</a></h4><h4><span id="20210503">20210503</span><a href="#20210503" class="header-anchor">#</a></h4><h4><span id="20210502">20210502</span><a href="#20210502" class="header-anchor">#</a></h4><h4><span id="20210501">20210501</span><a href="#20210501" class="header-anchor">#</a></h4><hr>
<h3><span id="04">04</span><a href="#04" class="header-anchor">#</a></h3><h4><span id="20210426">20210426</span><a href="#20210426" class="header-anchor">#</a></h4><p>data &amp; reading</p>
<h4><span id="20210425">20210425</span><a href="#20210425" class="header-anchor">#</a></h4><p>data &amp; reading</p>
<h4><span id="20210424">20210424</span><a href="#20210424" class="header-anchor">#</a></h4><p>data &amp; reading</p>
<h4><span id="20210423">20210423</span><a href="#20210423" class="header-anchor">#</a></h4><p>data &amp; reading</p>
<h4><span id="20210422">20210422</span><a href="#20210422" class="header-anchor">#</a></h4><p>data &amp; reading</p>
<h4><span id="20210421">20210421</span><a href="#20210421" class="header-anchor">#</a></h4><p>data &amp; reading</p>
<h4><span id="20210420">20210420</span><a href="#20210420" class="header-anchor">#</a></h4><h4><span id="20210419">20210419</span><a href="#20210419" class="header-anchor">#</a></h4><p>reading</p>
<h4><span id="20210418">20210418</span><a href="#20210418" class="header-anchor">#</a></h4><p>reading </p>
<h4><span id="20210417">20210417</span><a href="#20210417" class="header-anchor">#</a></h4><p>data </p>
<h4><span id="20210416">20210416</span><a href="#20210416" class="header-anchor">#</a></h4><h4><span id="20210415">20210415</span><a href="#20210415" class="header-anchor">#</a></h4><p>data/revise</p>
<h4><span id="20210414">20210414</span><a href="#20210414" class="header-anchor">#</a></h4><p>data</p>
<h4><span id="20210413">20210413</span><a href="#20210413" class="header-anchor">#</a></h4><p>继续写中文，然后把英文技巧练好</p>
<p>complete all process. I get a new long series.</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210413201037960.png" alt="image-20210413201037960"></p>
<h4><span id="20210412">20210412</span><a href="#20210412" class="header-anchor">#</a></h4><p>report</p>
<p>the trend of childcare</p>
<p>ok</p>
<h4><span id="20210411">20210411</span><a href="#20210411" class="header-anchor">#</a></h4><p>report </p>
<h4><span id="20210410">20210410</span><a href="#20210410" class="header-anchor">#</a></h4><p>report</p>
<h4><span id="20210409">20210409</span><a href="#20210409" class="header-anchor">#</a></h4><p>要做一篇令人认可的文章还是非常难的，好文章屈指可数。垃圾文章太多。</p>
<h4><span id="20210408">20210408</span><a href="#20210408" class="header-anchor">#</a></h4><h4><span id="20210407">20210407</span><a href="#20210407" class="header-anchor">#</a></h4><p>微观数据还是很难处理的。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210407200719254.png" alt="image-20210407200719254"></p>
<p>是不是已经到了第四阶段了，</p>
<p>还要继续努力。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210407162914486.png" alt="image-20210407162914486" style="zoom: 25%;"></p>
<h4><span id="20210406">20210406</span><a href="#20210406" class="header-anchor">#</a></h4><p>One day, I will become a disgust person! A female make myself feel uncomfortable to say weakness!</p>
<h4><span id="20210405">20210405</span><a href="#20210405" class="header-anchor">#</a></h4><p>You could understand the world what is run mechanism.</p>
<h4><span id="20210404">20210404</span><a href="#20210404" class="header-anchor">#</a></h4><h4><span id="20210403">20210403</span><a href="#20210403" class="header-anchor">#</a></h4><h4><span id="20210402">20210402</span><a href="#20210402" class="header-anchor">#</a></h4><h4><span id="202100401">202100401</span><a href="#202100401" class="header-anchor">#</a></h4><h3><span id="03">03</span><a href="#03" class="header-anchor">#</a></h3><p>无聊 </p>
<h4><span id="20210328">20210328</span><a href="#20210328" class="header-anchor">#</a></h4><p>PPT</p>
<p>May I should see phd as a task.</p>
<p>One day, I would be a disgusting people.</p>
<h4><span id="20210326">20210326</span><a href="#20210326" class="header-anchor">#</a></h4><p>revised results</p>
<h4><span id="20210325">20210325</span><a href="#20210325" class="header-anchor">#</a></h4><p>report  data gwr</p>
<h4><span id="20210324">20210324</span><a href="#20210324" class="header-anchor">#</a></h4><video src="C:\Users\ADMIN\Documents\WeChat Files\wxid_ygecvupjtoj722\FileStorage\Video\2021-03\844547ce58b0641c04912fbe7e95c0e1.mp4"></video>

<h4><span id="20210322">20210322</span><a href="#20210322" class="header-anchor">#</a></h4><p>data</p>
<h4><span id="20210321">20210321</span><a href="#20210321" class="header-anchor">#</a></h4><p>The confidence gap predicts the gender pay gap among STEM graduates</p>
<p>This paper is very simple, but used data set are exciting! The analysis method is too simple. Omited variables is not considered! It is the difference between social science and 。。</p>
<h4><span id="20210320">20210320</span><a href="#20210320" class="header-anchor">#</a></h4><p>reading classify paper</p>
<h4><span id="20210319">20210319</span><a href="#20210319" class="header-anchor">#</a></h4><h4><span id="20210318">20210318</span><a href="#20210318" class="header-anchor">#</a></h4><p>return to education!</p>
<h4><span id="20210317">20210317</span><a href="#20210317" class="header-anchor">#</a></h4><p>report</p>
<p>English</p>
<h4><span id="20210316">20210316</span><a href="#20210316" class="header-anchor">#</a></h4><p>reading &amp; English</p>
<p>how to publish quality papers</p>
<h4><span id="20210314-20210315">20210314-20210315</span><a href="#20210314-20210315" class="header-anchor">#</a></h4><p>report </p>
<h4><span id="20210311-0314">20210311-0314</span><a href="#20210311-0314" class="header-anchor">#</a></h4><p>data</p>
<h4><span id="20210310">20210310</span><a href="#20210310" class="header-anchor">#</a></h4><p>足够强大，就可以选择自己的人生！</p>
<p>多想是一条咸鱼啊！不要起床，可以天天睡觉。</p>
<p>就换条道路吧！</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210310184801704.png" alt="image-20210310184801704" style="zoom: 25%;"></p>
<h4><span id="20210309">20210309</span><a href="#20210309" class="header-anchor">#</a></h4><p>Ok</p>
<h4><span id="20210308">20210308</span><a href="#20210308" class="header-anchor">#</a></h4><p>report</p>
<h4><span id="20210307">20210307</span><a href="#20210307" class="header-anchor">#</a></h4><p>没有人告诉你，未来的路该怎么走，</p>
<p>我不知道怎么走这条路了！</p>
<h4><span id="20210306">20210306</span><a href="#20210306" class="header-anchor">#</a></h4><p>不想努力了！我发现做科研没什么意思，太难不会啊！</p>
<h4><span id="20210305">20210305</span><a href="#20210305" class="header-anchor">#</a></h4><h4><span id="20210304">20210304</span><a href="#20210304" class="header-anchor">#</a></h4><p><a href="https://www.shangyexinzhi.com/article/523818.html">https://www.shangyexinzhi.com/article/523818.html</a></p>
<p>样本选择偏误（数据集）和选择偏差（被研究个体）</p>
<h4><span id="20210302">20210302</span><a href="#20210302" class="header-anchor">#</a></h4><p>连词（连接作用）</p>
<p>并列句：多个事情（并列词）</p>
<p>复合句：多个事情，不一样重要。（主句+从句）：名词性；定语；状语从句）</p>
<p>要有连接性;主从复合句</p>
<p>名称性：主语；宾语；表语；同位语；（写法相同，位置不同）</p>
<p>​    陈述句变宾语从句（+that(不做成分，可省)</p>
<p>​    特殊疑问句变宾语从句（w+how) 调语序）</p>
<p>​    一般疑问句(be 助动词提前）（Yes/No) weather/if </p>
<p>​    连接词+陈述句</p>
<p>定语从句；连接性（做成分+连接作用）<strong>关系词</strong></p>
<p>​    引导词</p>
<p>​    关系词    </p>
<p>状语从句：描述性信息</p>
<p>​    写法：主句+连接性(<strong>从属连词</strong>，不做成分，做什么状语，表示逻辑关系，是什么类型的连词，是什么状语）+从句（是完整的句子) 常见的从属连词</p>
<p><strong>关键是要掌握引导不同状语从句的引导词及主句和从句的时态选择</strong></p>
<p><img src="https://pic1.zhimg.com/80/v2-6154e7740694cfdd89f98d9b4b957680_720w.jpg" alt="img"></p>
<p>名词性从句：主语、宾语、同位语（that, whether从句）</p>
<p>定语从句：形容词</p>
<p>主句+关系词+从句（引导定语从句的词叫关系词）</p>
<p>状语从句：副词</p>
<p>主句+从句（引导词+从句）</p>
<p><strong>关系词在句中作用有3种：</strong></p>
<ul>
<li><strong>连接作用，连接主句和定语从句</strong></li>
<li><strong>指代前面的先行词</strong></li>
<li><strong>在定语从句中担当成分</strong></li>
</ul>
<p>连词是用来连接词与词、<a href="https://baike.baidu.com/item/词组/8481390">词组</a>与词组或句子与<a href="https://baike.baidu.com/item/句子/4687927">句子</a>、表示某种<a href="https://baike.baidu.com/item/逻辑关系/4630096">逻辑关系</a>的虚词。连词可以表<a href="https://baike.baidu.com/item/并列/4020065">并列</a>、<a href="https://baike.baidu.com/item/转折/3362906">转折</a>、<a href="https://baike.baidu.com/item/假设/1524526">假设</a>、选择、递进、条件、因果等关系。</p>
<p>并列关系连词：<a href="https://baike.baidu.com/item/和/1692925">和</a>、<a href="https://baike.baidu.com/item/跟">跟</a>、<a href="https://baike.baidu.com/item/与/779322">与</a>、<a href="https://baike.baidu.com/item/既">既</a>、<a href="https://baike.baidu.com/item/同/5467233">同</a>、<a href="https://baike.baidu.com/item/及">及</a>、<a href="https://baike.baidu.com/item/而">而</a>、<a href="https://baike.baidu.com/item/况/34239">况</a>、<a href="https://baike.baidu.com/item/况且">况且</a>、<a href="https://baike.baidu.com/item/何况">何况</a>、<a href="https://baike.baidu.com/item/乃至">乃至</a>等。</p>
<p>承接关系连词：<a href="https://baike.baidu.com/item/则">则</a>、<a href="https://baike.baidu.com/item/乃">乃</a>、<a href="https://baike.baidu.com/item/就">就</a>、<a href="https://baike.baidu.com/item/而">而</a>、<a href="https://baike.baidu.com/item/便/34445">便</a>、<a href="https://baike.baidu.com/item/于是/6503543">于是</a>、<a href="https://baike.baidu.com/item/然后/322725">然后</a>、<a href="https://baike.baidu.com/item/至于">至于</a>、说到、<a href="https://baike.baidu.com/item/此外">此外</a>、<a href="https://baike.baidu.com/item/像/5877168">像</a>、<a href="https://baike.baidu.com/item/如">如</a>、<a href="https://baike.baidu.com/item/一般">一般</a>、<a href="https://baike.baidu.com/item/比方">比方</a>、<a href="https://baike.baidu.com/item/接着">接着</a>等。</p>
<p>转折关系连词：却、虽然、但是、然而、而、偏偏、只是、不过、至于、致、不料、岂知等。</p>
<p>因果关系连词：那么、原来、因为、由于、以便、因此、所以、是故、以致等。</p>
<p>选择关系连词：或、或者、还是、亦、非…即、不是…就是等。</p>
<p>假设关系连词：若、如果、若是、假如、只要、除非、假使、倘若、即使、假若、要是、譬如等。</p>
<p>比较关系连词：像、好比、如同、似乎、等于；不如、不及；与其…不如、若…则、虽然…可是等。</p>
<p>让步关系连词：虽然、固然、尽管、纵然、即使等。</p>
<p>递进关系连词：不但、不仅、而且、何况、并、且等。</p>
<p>条件关系连词：不管、只要、除非等。</p>
<p>目的关系连词：以、以便、以免、为了等。</p>
<p>成语中也有使用连词的情况，如：<a href="https://baike.baidu.com/item/宁缺勿滥/10374077">宁缺勿滥</a>、<a href="https://baike.baidu.com/item/三思而行/4605208">三思而行</a>、<a href="https://baike.baidu.com/item/好整以暇">好整以暇</a></p>
<p><strong>引导词</strong>通常指的是用于<strong>引导从句</strong>的单词或词组；当然，在某些情况下，<strong>引导词是可以被省略的</strong>。正如并列连词是并列关系的重要提示，引导词则是主从关系的重要线索。在分析结构较为复杂的复合句时，引导词是理清句子结构的有力助手。常见的引导词通常是连词，副词等。不同类型的从句在引导词的使用上往往存在着不同程度的异同；因此，在学习和使用引导词时，一定要注意明确从句的种类。</p>
<p>引导词与主句和从句的关系可以简单概括如下：</p>
<p>分句1 +引导词 + 分句2</p>
<ul>
<li>分句1是主句。</li>
<li>“引导词+分句2”是从句，作为主句的一部分从属于主句。</li>
<li>引导词可以看作是从句的一部分。</li>
</ul>
<p>引导词：连词</p>
<p><strong>连词可分为两类：</strong><br>1．并列连词(Co-coordinating Conjunctions)：<br>用来连接平行的词、短语或分句。常见的并列连词有and，but，or，nor，so，therefore，get，however，nevertheless，for，hence，as well as,both．．and，not only．．．but also，either．．．or，neither．．．nor，(and)then．</p>
<p>2．从属连词(Subordinating Conjunctions)：<br>用来引起一个从句<strong>在句中担任一个成分</strong>。常见的从属连词有after，when，before，as，while，since，until，till，although，though，if，even if，unless，lest，because，than，that，whether，so that，as soon as，as long as，in order that，as if，as though，suppose(that)，provided(that)，in case(that)，on condition(that)，now that，seeing that，so．．．that，such．．that，as．．．as，so．．．as等。</p>
<p>关系词是在英语中引导从句的词。</p>
<h4><span id="20210301">20210301</span><a href="#20210301" class="header-anchor">#</a></h4><p>Getting a good rest</p>
<h2><span id="02">02</span><a href="#02" class="header-anchor">#</a></h2><h4><span id="20210228">20210228</span><a href="#20210228" class="header-anchor">#</a></h4><h4><span id="20210227">20210227</span><a href="#20210227" class="header-anchor">#</a></h4><p>how to write</p>
<h4><span id="20210226">20210226</span><a href="#20210226" class="header-anchor">#</a></h4><p>准备工作：</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/微信图片_20210226152848.jpg" alt="微信图片_20210226152848" style="zoom:33%;"></p>
<h4><span id="20210225">20210225</span><a href="#20210225" class="header-anchor">#</a></h4><h4><span id="20210224">20210224</span><a href="#20210224" class="header-anchor">#</a></h4><p>OK!. I completed all report and data.</p>
<p>Improvment in English learning</p>
<p> 主谓宾！（句子组合，词，短句，句子）尽量不要定语从句！哪些可以做主谓宾，定状补！（学会主干+修饰的翻译）。不定时，分词，等等的运用</p>
<h4><span id="20210223">20210223</span><a href="#20210223" class="header-anchor">#</a></h4><p>HSR for city-pair level to do experience!</p>
<p>OK!writting</p>
<h4><span id="20210222">20210222</span><a href="#20210222" class="header-anchor">#</a></h4><p>back to school to do seach</p>
<h4><span id="20210221">20210221</span><a href="#20210221" class="header-anchor">#</a></h4><p>taking a rest</p>
<h4><span id="20210220">20210220</span><a href="#20210220" class="header-anchor">#</a></h4><p>婚姻</p>
<p>总感觉自己的东西很多，但是写出来的东西跟别人的研究差太远了。</p>
<p>高铁：如何解决问题</p>
<p>1）深度。</p>
<p>2）表达。表达力不足，不过详细。原因，理由，数据，结果，解释，别人的就很充分，不生硬。就是类似的分析，但是感觉就是不一样。</p>
<p>3）领域。我现在属于经管类和经济类。符合该学科的条件。</p>
<p>4)  专业词汇。要重新背诵。写作的风格。要积累。流畅，舒服。</p>
<p>多阅读好的文章，觉得就是不一样。</p>
<p>生存就不是一件容易的事情！要工作、要照顾家庭、要提升自己！</p>
<h4><span id="20210219">20210219</span><a href="#20210219" class="header-anchor">#</a></h4><p>taking a rest</p>
<p>看了大江大河。世界充满了不公平，你要光鲜亮丽。什么是门当户对，势均力敌，只有如此能力长久。</p>
<h4><span id="20210218">20210218</span><a href="#20210218" class="header-anchor">#</a></h4><p>sleeping</p>
<h4><span id="20210217">20210217</span><a href="#20210217" class="header-anchor">#</a></h4><p>下一阶段任务</p>
<p>writing(not so difficult)</p>
<p>logic (section par sentence)</p>
<p>Summary of stage</p>
<ol>
<li>how to write introduction and related work(analysis)</li>
<li>Result</li>
<li>OK!</li>
</ol>
<h4><span id="20210216">20210216</span><a href="#20210216" class="header-anchor">#</a></h4><p>ok</p>
<h4><span id="20210215">20210215</span><a href="#20210215" class="header-anchor">#</a></h4><p>complete all data and reports</p>
<font color="blue">planning of week 07 </font>

<h4><span id="20210212">20210212</span><a href="#20210212" class="header-anchor">#</a></h4><p>OK</p>
<h4><span id="20210211">20210211</span><a href="#20210211" class="header-anchor">#</a></h4><p>OK! I completed other paper. OK</p>
<p>Happy new year!</p>
<p>When you grow up, I will realize that living in the world is not a easy thing. First, you must be alive.</p>
<p>Pressure coming from society, from myself.</p>
<h4><span id="20210208-202102010">20210208-202102010</span><a href="#20210208-202102010" class="header-anchor">#</a></h4><p>housework</p>
<p>plot figure</p>
<h4><span id="20210208">20210208</span><a href="#20210208" class="header-anchor">#</a></h4><ol>
<li>1980-2000八篇文献</li>
<li>数据的计算结果</li>
</ol>
<font color="blue">planning of week 06 </font>

<h4><span id="20210205">20210205</span><a href="#20210205" class="header-anchor">#</a></h4><p>plan how to write and plot, analyse</p>
<h4><span id="20210204">20210204</span><a href="#20210204" class="header-anchor">#</a></h4><p>Write</p>
<h4><span id="20210203">20210203</span><a href="#20210203" class="header-anchor">#</a></h4><p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210203215902587.png" alt="image-20210203215902587" style="zoom:50%;"></p>
<h4><span id="20210202">20210202</span><a href="#20210202" class="header-anchor">#</a></h4><p>卧槽</p>
<h4><span id="20210201">20210201</span><a href="#20210201" class="header-anchor">#</a></h4><p>尽管浪费时间，但是社会科学就是把社会问题做到本质</p>
<p>啦啦啦啦啦啦啦，把中国性别问题搞清楚了。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210201223732856.png" alt></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210201223741485.png" alt="image-20210129221311055" style="zoom:33%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210201223748469.png" alt="image-20210129221311055" style="zoom:33%;"></p>
<font color="blue">planning of week 05 </font>

<h4><span id="20211029">20211029</span><a href="#20211029" class="header-anchor">#</a></h4><p>One day, you will find you are a normal man. I dream of becoming a superman, and a lonely superman.</p>
<p>two paper</p>
<p>I think the later is a good paper, solving a issure, and discuss channels</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210129221311055.png" alt="image-20210129221311055"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210129221317973.png" alt="image-20210129221317973"></p>
<h4><span id="2021028">2021028</span><a href="#2021028" class="header-anchor">#</a></h4><p>life</p>
<h4><span id="20210117-wei-shi-me-ni-yao-zhe-me-yin-qing-bu-ding">20210117 为什么你要这么阴晴不定</span><a href="#20210117-wei-shi-me-ni-yao-zhe-me-yin-qing-bu-ding" class="header-anchor">#</a></h4><p>I revised all suggestions.</p>
<p>three </p>
<h4><span id="20210126">20210126</span><a href="#20210126" class="header-anchor">#</a></h4><p>我是不适合科研的了，准备数据分析，实习了，不搞科研了，不适合了，我觉得还是</p>
<font color="blue">planning of week 04 </font>

<h4><span id="20210121-20200123">20210121-20200123</span><a href="#20210121-20200123" class="header-anchor">#</a></h4><p>three data set</p>
<p>gender earnings gap</p>
<p>专业的影响（可能是失败）</p>
<p>第一学历+升学（OK)</p>
<p>do file</p>
<p>现在要合理安排时间了，不能低效率</p>
<h4><span id="20210120">20210120</span><a href="#20210120" class="header-anchor">#</a></h4><p>the draft finished. </p>
<h4><span id="20210119">20210119</span><a href="#20210119" class="header-anchor">#</a></h4><p>In order to be a teacher in College, so I must depend on myself to complete all tasks. It is my goal. Bye teacher.</p>
<h4><span id="20210118">20210118</span><a href="#20210118" class="header-anchor">#</a></h4><p>Paper</p>
<font color="blue">planning of week 03 </font>

<h4><span id="20210117">20210117</span><a href="#20210117" class="header-anchor">#</a></h4><p>Writing is easy for me. </p>
<p>vocabulary, sentence, logic,</p>
<h4><span id="20210116">20210116</span><a href="#20210116" class="header-anchor">#</a></h4><p>translation </p>
<p>greatly</p>
<p>I thin I have ability to write English draft. </p>
<h4><span id="20210115">20210115</span><a href="#20210115" class="header-anchor">#</a></h4><p>report</p>
<p>sentence</p>
<h4><span id="20210114">20210114</span><a href="#20210114" class="header-anchor">#</a></h4><p>今天妈妈50岁了，突然发现我好对不起她。</p>
<h4><span id="20210113">20210113</span><a href="#20210113" class="header-anchor">#</a></h4><p>talent migration pattern(OK)</p>
<h4><span id="20210112">20210112</span><a href="#20210112" class="header-anchor">#</a></h4><p>Literature </p>
<h4><span id="20210111">20210111</span><a href="#20210111" class="header-anchor">#</a></h4><p>data</p>
<h4><span id="20210110">20210110</span><a href="#20210110" class="header-anchor">#</a></h4><p>data</p>
<h2><span id="planning-of-week-01"><font color="blue">planning of week 01 </font></span><a href="#planning-of-week-01" class="header-anchor">#</a></h2><ul>
<li>[ ] English(1h/day)</li>
<li>[ ] HSR(new simple report)<ul>
<li>[ ] new variables</li>
</ul>
</li>
<li>[ ] talent migration pattern<ul>
<li>[ ] distribuation feature</li>
<li>[ ] influence</li>
<li>[ ] prediction</li>
</ul>
</li>
</ul>
<h3><span id="20210103-20210110">20210103-20210110</span><a href="#20210103-20210110" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th>2021年1月3日</th>
<th>1. Summary some tips  about Python</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>2021年1月5日</td>
<td>2. Find a IV variables and reselect independ variables</td>
</tr>
<tr>
<td>2021年1月6日</td>
<td>3. Gender earning gap’s result and Literature</td>
</tr>
<tr>
<td>2021年1月7日</td>
<td>Table &amp; Figure</td>
</tr>
<tr>
<td>2021年1月8日</td>
<td></td>
</tr>
<tr>
<td>2021年1月9日</td>
<td></td>
</tr>
<tr>
<td>2021年1月10日</td>
</tr>
</tbody>
</table>
</div>
<ol>
<li>高铁要重新做一份结果了（非常漂亮，一定要把literature 写漂亮）（3 day)</li>
</ol>
<p>IV: 98 RMB</p>
<p>突然发现，简历数据信息的量：根本不用考虑总量啊，只要是相对的数据，就可以拿来做因变量。尽快完成一份新的报告，把IV也用上去。(城市，城市对层面)</p>
<p>两个IV找到了</p>
<p><a href="https://bbs.pinggu.org/thread-7767525-1-1.html">https://bbs.pinggu.org/thread-7767525-1-1.html</a> （这个世界大多数事情可以通过交易完成的，能买就买)</p>
<p>H:\高铁\人才流动\数据\wdp245ll\数据</p>
<p>开源source: 历史数据 H:\高铁\人才流动\数据\wdp245ll\数据</p>
<ol>
<li>gender </li>
</ol>
<h4><span id="20210109">20210109</span><a href="#20210109" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">\begin{center}</span><br><span class="line">\begin{table}[htpb]</span><br><span class="line">	\caption{Status Sequence of SMA wires} </span><br><span class="line">	\label{SMAStatusSequence}</span><br><span class="line">	% For LaTeX tables use</span><br><span class="line">	% \resizebox{\textwidth}{7mm}{		% adjust the height of coloum</span><br><span class="line">	\setlength{\tabcolsep}{1.5mm}{		% adjust the length of coloum</span><br><span class="line">	\begin{tabular}{cccccccccccccc}</span><br><span class="line">		\hline\noalign{\smallskip}</span><br><span class="line">	</span><br><span class="line">	% first &amp; second &amp; third &amp; third\\</span><br><span class="line">	No. &amp;1	&amp;2	&amp;3	&amp;4	&amp;5	&amp;6	&amp;7	&amp;8  &amp;9	&amp;10	&amp;11	&amp;12\\</span><br><span class="line">	</span><br><span class="line">	\noalign{\smallskip}\hline\noalign{\smallskip}		% straight line</span><br><span class="line"></span><br><span class="line">	SMA X &amp;O  &amp;A  &amp;B  &amp;C  &amp;D  &amp;E  &amp;F  &amp;G  &amp;H  &amp;I  &amp;B	&amp;C	&amp;\dots \\</span><br><span class="line">	SMA Y &amp;O  &amp;J  &amp;F  &amp;G  &amp;H  &amp;I  &amp;B  &amp;C  &amp;D  &amp;E  &amp;F	&amp;G	&amp;\dots \\</span><br><span class="line"></span><br><span class="line">	\noalign{\smallskip}\hline</span><br><span class="line">	\end{tabular}</span><br><span class="line">	}</span><br><span class="line">\end{table}</span><br><span class="line">\end{center}</span><br><span class="line"></span><br><span class="line">\documentclass[UTF8]{ctexart}</span><br><span class="line">\usepackage{booktabs} %需要加载宏包{booktabs}</span><br><span class="line">\begin{document}</span><br><span class="line"></span><br><span class="line">\begin{tabular}{ccc}</span><br><span class="line">\toprule  %添加表格头部粗线</span><br><span class="line">姓名&amp; 学号&amp; 性别\\</span><br><span class="line">\midrule  %添加表格中横线</span><br><span class="line">Steve Jobs&amp; 001&amp; Male\\</span><br><span class="line">Bill Gates&amp; 002&amp; Female\\</span><br><span class="line">\bottomrule %添加表格底部粗线</span><br><span class="line">\end{tabular}</span><br><span class="line"></span><br><span class="line">\end{document}</span><br><span class="line">\begin{tabular}{|l|l|l|l| p{5cm}|}  </span><br></pre></td></tr></tbody></table></figure>
<ol>
<li>\caption{设置表格总长} </li>
<li>\begin{tabular*}{12cm}{lll} </li>
</ol>
<p><a href="https://blog.csdn.net/weixin_34114823/article/details/85834934?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1.control">https://blog.csdn.net/weixin_34114823/article/details/85834934?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-1.control</a></p>
<p>自动换行P{}</p>
<p>宽度[]</p>
<p>指定宽度p{}</p>
<h4><span id="20210108">20210108</span><a href="#20210108" class="header-anchor">#</a></h4><p>Data</p>
<h4><span id="20210107">20210107</span><a href="#20210107" class="header-anchor">#</a></h4><p>介词用法</p>
<p>all table</p>
<p>get data.</p>
<p>Tomarrom, go to plotting </p>
<h4><span id="20210106">20210106</span><a href="#20210106" class="header-anchor">#</a></h4><p>as adj/adv原型 as +比较对象</p>
<p>过去和现状的比较</p>
<p>OK! RIF &amp; Decomposition  </p>
<h4><span id="20210105">20210105</span><a href="#20210105" class="header-anchor">#</a></h4><p>HSR &amp; Planning</p>
<h4><span id="20210104">20210104</span><a href="#20210104" class="header-anchor">#</a></h4><p>HSR&amp;Report</p>
<h4><span id="20210103">20210103</span><a href="#20210103" class="header-anchor">#</a></h4><p>在一个错误的道路上，走了很久了。这。。。。。（因变量的选择，就是相对人数啊）</p>
<p>今天板回来了。</p>
<p>找到了IV(应该可以发一个不错的paper)</p>
<p>结果也可以。</p>
<h4><span id="20210102">20210102</span><a href="#20210102" class="header-anchor">#</a></h4><p>Do not need to 扎头发了！！</p>
<p>Planning</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20210102202931517.png" alt="image-20210102202931517" style="zoom: 25%;"></p>
<h4><span id="20210101">20210101</span><a href="#20210101" class="header-anchor">#</a></h4><p>report &amp; sleeping</p>
<hr>
<hr>
<hr>
<p><a href="https://amberwest.github.io/2019/03/04/%E6%B7%BB%E5%8A%A0%E4%B8%80%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%B0DataFrame/">https://amberwest.github.io/2019/03/04/%E6%B7%BB%E5%8A%A0%E4%B8%80%E8%A1%8C%E6%95%B0%E6%8D%AE%E5%88%B0DataFrame/</a></p>
<hr>
<p><strong><font size="14" color="red">再见2020，你好2021</font></strong></p>
<hr>
<h1><span id="2020">2020</span><a href="#2020" class="header-anchor">#</a></h1><h2><span id="202012-paper-paper-paper">202012 Paper Paper Paper</span><a href="#202012-paper-paper-paper" class="header-anchor">#</a></h2><h3><span id="planning-of-week-51-be-done">planning of week 51 be done!~</span><a href="#planning-of-week-51-be-done" class="header-anchor">#</a></h3><ul>
<li>[ ] Introduction</li>
<li>[ ] analysis</li>
<li>[ ] English</li>
<li>[ ] #</li>
</ul>
<h4><span id="1229">1229</span><a href="#1229" class="header-anchor">#</a></h4><p>I had prepare for a PPT by latex.</p>
<h4><span id="1228-great-and-fruitful">1228 Great and fruitful</span><a href="#1228-great-and-fruitful" class="header-anchor">#</a></h4><p>Detailed, I further add some information to analyze. it is a key<br>Oh, I could not believe that I am listening to something emotional。 I am not falling in love with it.<br>Too effective. I get a quick speed to analyze data.</p>
<p>If you enter a new position, you can see a different scene.</p>
<p>I read about 73 articles,which speed about two weeks. </p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201228213603654.png" alt="image-20201228213603654" style="zoom:33%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201228213610708.png" alt="image-20201228213610708" style="zoom:33%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201228213617782.png" alt="image-20201228213617782" style="zoom:33%;"></p>
<h4><span id="1227">1227</span><a href="#1227" class="header-anchor">#</a></h4><p>Code, I handle data. I get a interesting question. And I really care about.</p>
<h4><span id="1226">1226</span><a href="#1226" class="header-anchor">#</a></h4><p>I finished all tasks what I planned last week. So I felt very happy.</p>
<p>Coding for task. </p>
<p>Great day!</p>
<h4><span id="1226">1226</span><a href="#1226" class="header-anchor">#</a></h4><p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201226222431500.png" alt="image-20201226222431500"></p>
<h4><span id="1225">1225</span><a href="#1225" class="header-anchor">#</a></h4><p>I finished 80% paper.</p>
<p>I read a great paper which it is difficult to understand. I think  I only know what it is talk about,how author use model to solve it.  </p>
<p>I wrote something result anlysis. Thus, I read some paper, and I did not understand it.</p>
<h4><span id="1222-literature-planning">1222 Literature + Planning</span><a href="#1222-literature-planning" class="header-anchor">#</a></h4><p>Finished two section.</p>
<h4><span id="1221-learning-english-occupation-segnement">1221 Learning English + occupation segnement</span><a href="#1221-learning-english-occupation-segnement" class="header-anchor">#</a></h4><p>I found that I am too 菜. You are not a great man. F</p>
<p>finished four part.</p>
<h3><span id="planning-of-week-50-be-done">planning of week 50 be done!~</span><a href="#planning-of-week-50-be-done" class="header-anchor">#</a></h3><ul>
<li>[x] literature on gender equality<ul>
<li>[x] theory</li>
<li>[x] empirical study</li>
<li>[x] report</li>
</ul>
</li>
<li>[x] speed four hours on result<ul>
<li>[x] classify  industry into more detail</li>
</ul>
</li>
<li>[x] recite new concept</li>
</ul>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201208204432172.png" alt="image-20201208204432172"></p>
<h3><span id="planning-of-week-49-be-done">planning of week 49 be done!~</span><a href="#planning-of-week-49-be-done" class="header-anchor">#</a></h3><h4><span id="1224">1224</span><a href="#1224" class="header-anchor">#</a></h4><p>Paper</p>
<p>Writting &amp; Result</p>
<h4><span id="1223">1223</span><a href="#1223" class="header-anchor">#</a></h4><p>Paper</p>
<h4><span id="1222">1222</span><a href="#1222" class="header-anchor">#</a></h4><p>Paper</p>
<h4><span id="1221">1221</span><a href="#1221" class="header-anchor">#</a></h4><p>Paper</p>
<h4><span id="1220-20">1220 20+</span><a href="#1220-20" class="header-anchor">#</a></h4><p>Studing English</p>
<p>organise paper</p>
<h4><span id="1219-result-ok-read-paper-learning-english">1219 result(OK) + read paper + learning English</span><a href="#1219-result-ok-read-paper-learning-english" class="header-anchor">#</a></h4><p>Now , I seem to fall in love with English. Learning English is not so hard that it looks. (Remember + basic )</p>
<p>I make a mistake when I plot. Do not always to use AI. Using original is a good chiores to combine subplots.</p>
<p>Thus, I want to change use two monthes to finish a paper.(Form December 2020 to Jar 2021). Now I have result, thus I need to anlysis. I think i come up with a good idea(nobody to talk about)</p>
<h4><span id="1218-writting">1218 writting</span><a href="#1218-writting" class="header-anchor">#</a></h4><p>I learned English sentences componst from 9:00 to 10:00am. I find that I has obtained many knowledge. Great! Studying English is very easy.</p>
<p>In the afternoon, I finished method part. One is begin to understand it. Thus, Writtiing down, and I achieved technology.</p>
<h4><span id="1217-reading-paper-10-paper">1217 reading paper (10+ paper)</span><a href="#1217-reading-paper-10-paper" class="header-anchor">#</a></h4><p>In the morning, I study new concept two. And I study method after it.</p>
<p>Figure is my result from yesterday to today night. I read a little detail including introduce, conclusion and result, but I did not read very deep.  Very interesting!  I may add something when I read more paper and result. </p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201217213546342.png" alt="image-20201217213546342"></p>
<h4><span id="1216-search-many-paper">1216 search many paper</span><a href="#1216-search-many-paper" class="header-anchor">#</a></h4><p>classify paper </p>
<h4><span id="1215-review-paper">1215 review paper</span><a href="#1215-review-paper" class="header-anchor">#</a></h4><p>I finished return to human capital and its ability to explain gender earning gap.</p>
<h4><span id="1214-paper-10">1214 paper 10+</span><a href="#1214-paper-10" class="header-anchor">#</a></h4><p>New concept </p>
<p>paper 10+ </p>
<h4><span id="1213-read-summary-writting-10paper">1213 Read-Summary-Writting 10paper</span><a href="#1213-read-summary-writting-10paper" class="header-anchor">#</a></h4><p>I think I must change my lifestyle. I do not want to stay up too early.</p>
<p>OK. Great! Finished a part</p>
<h4><span id="1212-10-paper">1212 10 paper</span><a href="#1212-10-paper" class="header-anchor">#</a></h4><p>reading many paper</p>
<p>It is a litter difficult to understanding.</p>
<p>duo to many history</p>
<p>It think I must put at least 2 hours to study English, including new concept, academic vocabulary,etc.</p>
<p>I think how to read a paper. Where does the data resource comes from? What method the paper used? What are main findings in this paper, or What does the paper contribute to research field.</p>
<p>Please use your idea to review and rewrite. Do not copy.</p>
<h4><span id="1211">1211</span><a href="#1211" class="header-anchor">#</a></h4><p>research on literature</p>
<h4><span id="1210-prepare-for-result-four-paper">1210 prepare for result + four paper</span><a href="#1210-prepare-for-result-four-paper" class="header-anchor">#</a></h4><ol>
<li>result (Figure and Table)</li>
<li>OK! Method</li>
</ol>
<h4><span id="1209">1209</span><a href="#1209" class="header-anchor">#</a></h4><p>I finished all result.</p>
<p>I  origized same paper.</p>
<h4><span id="1208">1208</span><a href="#1208" class="header-anchor">#</a></h4><p>I got a idea,  but I do not know whether it is valuable?</p>
<p>I wish I could get a result.</p>
<p>Coding in  bedroom.</p>
<p>I finished linux classes task. </p>
<p>布朗分解</p>
<h2><span id="202013-writing-pay-attention-to-studying">202013 Writing: pay attention to studying</span><a href="#202013-writing-pay-attention-to-studying" class="header-anchor">#</a></h2><ul>
<li><p>[ ] Learning English</p>
<ul>
<li>[ ] day+30</li>
</ul>
</li>
<li><p>[x] 重新完成简历数据的封装</p>
<ul>
<li>[x] 期望城市的聚合</li>
<li>[x] 汇总的文件</li>
<li>[x] 基本上是没有任何问题了</li>
</ul>
</li>
<li>[ ] Read 20+ paper</li>
<li>[ ] Writting</li>
<li>[ ] python复习</li>
</ul>
<h4><span id="1207">1207</span><a href="#1207" class="header-anchor">#</a></h4><p>in the morning, learned a method.</p>
<h3><span id="planning-of-week-48-be-done">planning of week 48 be done!~</span><a href="#planning-of-week-48-be-done" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">生活需要满满的仪式感：为下一年铺垫。</span><br><span class="line">	养成良好作息时间(早起早睡,晚上实在是睡不着就看电视剧)</span><br><span class="line">	养成量化的学习习惯</span><br><span class="line">	重头开始一切来得及</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201130223544061.png" alt="image-20201130223544061" style="zoom: 15%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201130223553705.png" alt="image-20201130223553705" style="zoom:13%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201130223601525.png" alt="image-20201130223601525" style="zoom:13%;"></p>
<h4><span id="1206-four-paper">1206 four paper</span><a href="#1206-four-paper" class="header-anchor">#</a></h4><p>In the morning, I also got up very late. I become lazy. I must change it. I must change face.</p>
<p>In the afternoon, I read four paper. And I completed code to aggrated 个人数据. Gender income difference. Yes, very interesting data. But I do not know whether someone had done it. I read a literature about it. Diffficult to understanding. </p>
<p>In the evening,  gender, school, industry, income, province, size scale,age, college, degree, city, region.</p>
<p>Then, tomorrow, I must read many paper (a root paper or quality paper ) and prepare to Stata software.  I wish it’s great result.</p>
<h4><span id="1205-four-paper">1205 four paper</span><a href="#1205-four-paper" class="header-anchor">#</a></h4><p>终究，我还是厌恶这里，烦了，恨透了。剩下的都是<img src="file:///C:\Users\ADMIN\AppData\Local\Temp\SGPicFaceTpBq\22024\07EC93DB.png" alt="img"></p>
<p>In the morning， I went to lab room very late. Yesterday , I got a very relaxed rest.  I determined that I would go to schoolroom before 10:00pm to make sure that I have enough time to play mobile phone and get a good rest.</p>
<p>In the afternoon, I made a test about house price growth rate, but I failed. Thus, I finished task. Thus , I really want to begin to write. I understand that showing what is your idea and thought.  You must do something what is creation or imprance, and how to refer it to my paper.  Next, I learned English course about sentences(名词性从句，定语从句，强调句，插入语，it作形式主语和宾语，excellent)</p>
<p>In the evening, I read some paper.  Suddenly, I realized that  I can read paper very quick and know what’s the contribution, and what’s I really need.  But, I could speak to somebody. I plan to write a document to record academic vocabulary and art of expression. It is the best to communicate with others. </p>
<p>Now, I think that I am a comprehensive researcher.  I can many methodology, including machine learning, quantitative methods, network analysis, etc, but I lack how to complete a work very creative and meaningful.  I think that for the next stage, my goals is to explain my idea and to do valuable work. The latter is difficult  to overcome.</p>
<h4><span id="1204-four-paper">1204 four paper</span><a href="#1204-four-paper" class="header-anchor">#</a></h4><p>in the morning ,I read three paper. Great! How to explain the result.</p>
<p>in the afternoon,  I finished all codes. But I could not understand how to identity caustion. How to handle 遗漏变量和内生性. </p>
<p>in the evening, I listed a  framwork about how to explain house prise.  And I read two paper. How to choose variables. how quality is the best way?</p>
<h4><span id="1203">1203</span><a href="#1203" class="header-anchor">#</a></h4><h4><span id="1202">1202</span><a href="#1202" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">I felt very tired, so I get up until 12.00am. I got a great rest. I think I must revise my rest list. </span><br><span class="line"></span><br><span class="line">I want to lab. I finshed add all informatin to a file. I can sure that my data is right. </span><br><span class="line">newlist = ast.literal_eval(f2.iloc[index,-1]) # tranform str to list</span><br><span class="line">listj = jjj.split('\t')</span><br><span class="line">for kkk in range(0,len(namelist)):</span><br><span class="line">   bookdict[namelist[kkk]] = listj[kkk]</span><br><span class="line">   booklist.append(bookdict) # add information to file</span><br><span class="line"> </span><br><span class="line">ccc  = list(set(ewlist)) # delete the duplicate</span><br><span class="line"># how to get work information(compare to str) so easy oh!</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p>由于得到数据的关系，我现在要重跑一遍结果，好在现在的结果几乎不受影响。</p>
<p>planning：</p>
<pre><code>1. 明天早上，比较是否得到正确结果，然后跑数据，然后 read
2. 明天下午，重跑新结果。并写报告
3. 报告。应该很简单。就是简单交代一下初步结果。
</code></pre><h4><span id="1201">1201</span><a href="#1201" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">In this morning, I find a small bug when I handle dataset. But it's not my false(living_cp has a little wrong).  Thus, I need add new information to my baseline file(json). I had complete a process to add information. In the future, I don't need to check bugs. The first step is to add base information into it.</span><br><span class="line"></span><br><span class="line">In the afternoon, I went go class about linux. I read a paper about how to originze framework.</span><br><span class="line"></span><br><span class="line">In the everning, I listenning to 老爸老妈. Then, I rewrite my datafile. I want to do complete.</span><br><span class="line"></span><br><span class="line">building dict setting start_time as key</span><br><span class="line">compare to start_time to get last time.</span><br></pre></td></tr></tbody></table></figure>
<hr>
<h2><span id="202011-paper-paper-paper">202011 Paper Paper Paper</span><a href="#202011-paper-paper-paper" class="header-anchor">#</a></h2><h3><span id="planning-of-week-47-be-done">planning of week 47 be done!~</span><a href="#planning-of-week-47-be-done" class="header-anchor">#</a></h3><ul>
<li>[x] complete talent &amp; economy report( Monday 1)</li>
<li>[x] Reading</li>
<li>[x] English</li>
<li>[x] Writting</li>
<li>[x] Supplement the literature review on high-speed rail</li>
</ul>
<h4><span id="1130">1130</span><a href="#1130" class="header-anchor">#</a></h4><h4><span id="1129">1129</span><a href="#1129" class="header-anchor">#</a></h4><p>测试结果。分析结果。</p>
<h4><span id="1128">1128</span><a href="#1128" class="header-anchor">#</a></h4><p>下辈子我一定做一条咸鱼，好多现成数据，我艹，高铁，城市，我艹，我艹，我艹</p>
<p>房价，指数，城市年鉴！</p>
<p>看来是我忽略，二手平台的好处！几十块钱就可以解决的问题啊！</p>
<h4><span id="1127">1127</span><a href="#1127" class="header-anchor">#</a></h4><h4><span id="1126">1126</span><a href="#1126" class="header-anchor">#</a></h4><h4><span id="1125">1125</span><a href="#1125" class="header-anchor">#</a></h4><p>population flow</p>
<p>literature  on population migration</p>
<p>mobile phone data</p>
<p>night lighting data</p>
<p>Give your complete essay</p>
<p>Firstly, Chinest, Then English</p>
<h4><span id="1124">1124</span><a href="#1124" class="header-anchor">#</a></h4><p>liteature on </p>
<hr>
<h4><span id="1123">1123</span><a href="#1123" class="header-anchor">#</a></h4><p>in the morning, I finish a Chinese report. (very quick)</p>
<hr>
<p>开启下一段关卡了</p>
<p>​    Top 1. oral English &amp; academic writing</p>
<p>​    Top 2.  Reading. </p>
<p>​    Top 3. Value</p>
<hr>
<p>我猜测我已经度过了最艰难的关，主要是解决如下问题：</p>
<pre><code>1. Literature:  although I can tell a complete story, I know how to organize story line.
2. Writting  in Chinese for a report. 
3. Plot in python &amp; origin. I speed more time on it. I think it deserve .
4. Analysis.  Beginning to reveal result.
</code></pre><p>In my research field, Plotting is the best way to show you finding.</p>
<p>recently,  我忽略给老师及时报告结果。只顾自己，什么都prepare well, well, well.</p>
<hr>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>时间表</th>
<th>分类</th>
<th>任务细化</th>
<th>Deadline</th>
</tr>
</thead>
<tbody>
<tr>
<td>Daily</td>
<td>11.13-11:23</td>
<td>10 paper/day</td>
<td>Literature review: extract from  five papers</td>
<td>one weekends</td>
</tr>
<tr>
<td></td>
<td>11.12 everning</td>
<td>literature of talent migration</td>
<td>1. build talent attraction index based census data or survey through PCA，etc.2.  And influenced element of talent attraction includes economy,  industry development, income level, working environment, and living environment.  3. the talent mobility pattern and the influencing factors.</td>
<td></td>
</tr>
<tr>
<td></td>
<td>11.15(14:00~16:30)</td>
<td>Literature on population migration</td>
<td>20paper(so easy)</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>two days</td>
<td>description of talent network</td>
<td>Method &amp; Figure &amp; Result</td>
<td>√（×)</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>three days</td>
<td>Character of talent network</td>
<td>Method &amp; Figure &amp; Table  &amp; Result</td>
<td>√(×）</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>three days</td>
<td>Identify determinants of talent  migration</td>
<td>Method &amp; Figure &amp; Table  &amp; Result</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>two</td>
<td>Predicting economic development  by talent migration</td>
<td>Method &amp; Table &amp; Result</td>
</tr>
</tbody>
</table>
</div>
<h3><span id="planning-of-week-46-be-done"><strong>planning of week 46 be done!~</strong></span><a href="#planning-of-week-46-be-done" class="header-anchor">#</a></h3><ul>
<li>[ ] GWR result &amp; OLS result</li>
<li>[ ] Result &amp; Method<ul>
<li>[ ] Description</li>
<li>[ ] Tier</li>
<li>[ ] GWR</li>
<li>[ ] OLS(prediction)</li>
</ul>
</li>
<li>[ ] Writting</li>
<li>[ ] Oral English</li>
</ul>
<h4><span id="1122">1122</span><a href="#1122" class="header-anchor">#</a></h4><p>完成数据和报告部分。应该是可以直接用的那种。</p>
<p>现在数据，异常处理。基本没有什么问题了。</p>
<p>how to document notes(Latex+bib document)</p>
<ol>
<li>literature review</li>
<li>Result/Conclusion</li>
<li>systemic arrangement</li>
</ol>
<h4><span id="1121">1121</span><a href="#1121" class="header-anchor">#</a></h4><p>下午加晚上完成了报告，我操</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201121230111241.png" alt="image-20201121230111241"></p>
<h4><span id="1120">1120</span><a href="#1120" class="header-anchor">#</a></h4><p>OK?</p>
<p>I choose variable ? Solve this problem</p>
<p>Great result? Oh Yeah！</p>
<p>wisestep regression.</p>
<h4><span id="1119">1119</span><a href="#1119" class="header-anchor">#</a></h4><p>Literure on population mobile(Great). Do not thing without theory and previous research.</p>
<h4><span id="1118">1118</span><a href="#1118" class="header-anchor">#</a></h4><p>换了一个模型，感觉效果相当好啊。在城市对层面研究，而不是单个城市。果然读论文的重要性。改进的引力模型</p>
<script type="math/tex; mode=display">
Ln M_{ij} = a_0+a_1lnp_i+a_2lnp_j+blnd_{ij}+e_{ij}</script><ol>
<li>Finished talent migration on Figure &amp; Table</li>
<li>Finished the codes for city pair.</li>
</ol>
<h4><span id="1117">1117</span><a href="#1117" class="header-anchor">#</a></h4><p>Literature on migration.</p>
<p>Choosing what is similar to your search.</p>
<h4><span id="1116">1116</span><a href="#1116" class="header-anchor">#</a></h4><p>Problem: Tell me why you choose this variables as influenced factor? how to handle 多重共线性？ </p>
<p>Done: </p>
<h4><span id="1115">1115</span><a href="#1115" class="header-anchor">#</a></h4><p>How to organize paper for writting(Should one aiming(find what?)) Such as, category(the research content),  finding explanatory variables( the effect of empirical study).  Calssification ( Result+Figue(Table)) + One sentence what you will refer to your paper. Excerpt quotes and sentence patterns(&lt;5 records)+ abstract</p>
<p>If possible, we could arrange papers at least three times. (The first is category, then is content, finally more detail information)</p>
<p>I finished GWO model(how to choose variables), but result shows bad. Data problem. just so so.</p>
<h4><span id="1114">1114</span><a href="#1114" class="header-anchor">#</a></h4><p>GWO VS OLS</p>
<p>What a great regression model? not easy!!! Need dignose, Need experience,</p>
<p>多重共线性，效果，误差，</p>
<p>统计量（零假设，显著性（P-value))</p>
<p>GWO(多重共线性)</p>
<p>First, OLS(variable), GWR model</p>
<p>variabel standardization and normalization</p>
<h4><span id="1113">1113</span><a href="#1113" class="header-anchor">#</a></h4><p>Figure Map</p>
<p>Network feature(problem?)</p>
<p>The pagerank algorithm is excellent.</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201114220630487.png" alt="image-20201114220630487"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201114220647583.png" alt="image-20201114220647583"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201114220701606.png" alt="image-20201114220701606"></p>
<h4><span id="20201112">20201112</span><a href="#20201112" class="header-anchor">#</a></h4><p>data &amp; Figure &amp; Table(OK,Ok, ok, ok)</p>
<p>Literature review:</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201112220145087.png" alt="image-20201112220145087" style="zoom:67%;"></p>
<p>把最近的三篇文章的引用，整理excel+abstract 即可以。（也就哪些研究）关键是这几篇文章也十分的相似啊。</p>
<p>​        人才资本论</p>
<p>​        人才流动理论</p>
<p>​        中国研究</p>
<p>​        人才流动（少）</p>
<p>​        big data </p>
<h3><span id="planning-of-week-46-be-done"><strong>planning of week 46 be done!~</strong></span><a href="#planning-of-week-46-be-done" class="header-anchor">#</a></h3><p>Assuming you can not do anything or saying any words, you can try.</p>
<ul>
<li>[ ] Research<ul>
<li>[ ] data analysis</li>
</ul>
</li>
<li>[ ] English<ul>
<li>[ ] listening</li>
</ul>
</li>
<li>[ ] reading</li>
</ul>
<p>Week 3: Writting</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>11月8日</td>
<td>数据准备</td>
<td>地图准备</td>
<td>√</td>
<td>GeoDa</td>
<td>√</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11月9日</td>
<td>绘图</td>
<td>分布特征</td>
<td>流动特征</td>
<td>流向图</td>
<td>地图</td>
<td>√</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>流动特征</td>
<td></td>
<td></td>
<td></td>
<td>√</td>
<td>未导出</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11月10日</td>
<td>节点重要性排序</td>
<td>PageRank</td>
<td>地图</td>
<td>√</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>表格</td>
<td>√</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td>城市等级之间</td>
<td>城市群</td>
<td>桑基图</td>
<td>（可选）</td>
<td>√</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11月11日</td>
<td>空间集聚性</td>
<td>全局相关性</td>
<td>图</td>
<td>×</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>具备相关性</td>
<td>表格</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11月12日 -  11月13日</td>
<td>空间自相关模型</td>
<td>权重矩阵</td>
<td>可能不行</td>
<td>√</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>算法</td>
<td></td>
<td>√</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>11月10日 -  11月15日</td>
<td>完成方法（英文为主，中文简略）</td>
<td>结果分析</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4><span id="20201112-centrality">20201112 centrality</span><a href="#20201112-centrality" class="header-anchor">#</a></h4><ol>
<li>social network analysis(centrality)</li>
<li><p>how to use python package Networkx or matlab  to calculate indexs.</p>
</li>
<li><p>all data files(result OK)</p>
</li>
</ol>
<h4><span id="20201111">20201111</span><a href="#20201111" class="header-anchor">#</a></h4><p>I clearly know what is GWR and how to work.</p>
<p>I know the Spatial autocorrelation analysis(HH HL LH LL)</p>
<p>It’s different but significant to choose weighted matrix.</p>
<p>In ArcGIS, weighted matrix,named kernel function, offered by Gauss kernel, band(带宽)（cv, <strong>AICc</strong> ),research area</p>
<h4><span id="20201110">20201110</span><a href="#20201110" class="header-anchor">#</a></h4><p>I got up very late. I bought something to my brother and parents.</p>
<p>I finished pagerank algorithm （greatly)</p>
<h4><span id="20201109">20201109</span><a href="#20201109" class="header-anchor">#</a></h4><p>I got up very late.</p>
<p>16map + 4 flow</p>
<p>nice</p>
<h3><span id="planning-of-week-45-be-done"><strong>planning of week 45 be done!~</strong></span><a href="#planning-of-week-45-be-done" class="header-anchor">#</a></h3><ul>
<li>[x] Research<ul>
<li>[x] day1: figure &amp; Table</li>
<li>[x] day2-3: result analysis</li>
<li>[x] day4: effect 机制</li>
</ul>
</li>
<li>[x] English</li>
<li>[x] Reading</li>
</ul>
<h4><span id="1108">1108</span><a href="#1108" class="header-anchor">#</a></h4><p>两天半写完了报告，一天也可以的，只要把图和表准备好。</p>
<p>so easy</p>
<p>so easy</p>
<h4><span id="1107-report">1107 report:</span><a href="#1107-report" class="header-anchor">#</a></h4><p>终于写完了，明天收尾。</p>
<h4><span id="1106-report">1106 report：</span><a href="#1106-report" class="header-anchor">#</a></h4><p>写了八页的中文报告。明天继续。周末就能完成了。明天回归分析结果的分析。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201106195708183.png" alt="image-20201106195708183"></p>
<p>idea-&gt;data analysis -&gt;writting</p>
<h4><span id="1105-ranking-by-importance">1105 ranking by importance</span><a href="#1105-ranking-by-importance" class="header-anchor">#</a></h4><p>figure &amp; report</p>
<h4><span id="1104">1104</span><a href="#1104" class="header-anchor">#</a></h4><p>今天我才认识到，</p>
<h4><span id="1103-ren-xing">1103 人性</span><a href="#1103-ren-xing" class="header-anchor">#</a></h4><p>人性就是给别人挖了一个洞，你还不得不心甘情愿的往里面跳。这种人性最高明了。人就是逃不掉对利益，金钱，权势的诱惑。</p>
<h4><span id="20201102">20201102</span><a href="#20201102" class="header-anchor">#</a></h4><p>Excepting map, I get all tables and figures.</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201102223605713.png" alt="image-20201102223605713" style="zoom: 67%;"></p>
<h2><span id="202010-gui-lu-kai-xin-zi-ru-mv">202010 规律，开心，自如.mv</span><a href="#202010-gui-lu-kai-xin-zi-ru-mv" class="header-anchor">#</a></h2><font color="red">**生活篇**</font>

<ul>
<li>[ ] 看血祭+书评</li>
</ul>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201001152013359.png" alt="image-20201001152013359" style="zoom: 50%;"></p>
<ul>
<li>[ ] 了解女孩子的心思</li>
</ul>
<font color="blue">科研篇</font>

<ul>
<li>[ ] the results of high-speed railway(one week)</li>
<li>[ ] reading paper</li>
</ul>
<font color="green">学习篇</font>

<ul>
<li>[ ] English</li>
</ul>
<hr>
<p>hr {</p>
<p>  border: 1px solid #c13535;</p>
<p>}</p>
<hr>
<p>hr {</p>
<p>  border: 1px solid #c13535;</p>
<p>}</p>
<h3><span id="planning-of-week-44-be-done"><strong>planning of week 44 be done!~</strong></span><a href="#planning-of-week-44-be-done" class="header-anchor">#</a></h3><p>把论文初稿出来</p>
<ul>
<li>[ ] PHD<ul>
<li>[ ] the first draft<ul>
<li>[ ] figure</li>
<li>[ ] table</li>
</ul>
</li>
</ul>
</li>
<li>[ ] English<ul>
<li>[ ] 2 hour/day</li>
</ul>
</li>
<li>[ ] Studying<ul>
<li>[ ] vidoe : how to use big data to solve economic and social problem.(pubished by a handsome professor in harvard university) <a href="https://www.youtube.com/watch?v=qgs-bfA6HRg&amp;list=PLalrHnPrv5uDe-vDW5dPxTByQoZu6P6Hq&amp;index=1">link</a></li>
<li>[ ] paper:  a list of 5 papers</li>
</ul>
</li>
</ul>
<h3><span id="20201101">20201101</span><a href="#20201101" class="header-anchor">#</a></h3><hr>
<h4><span id="202031">202031</span><a href="#202031" class="header-anchor">#</a></h4><p><strong>Planning:</strong> </p>
<p><strong>Done:</strong></p>
<pre><code>1. pychart (Map, Geo to draw a map at province level and at city level)(city name file , position, parameter)
2. I finished the result
3. I did not know why I 
</code></pre><hr>
<h4><span id="202030">202030</span><a href="#202030" class="header-anchor">#</a></h4><p><strong>Planning:</strong> </p>
<ul>
<li><p>[x] I plan to finish Chinese map(five picture)(morning)</p>
</li>
<li><p>[x] the difference of the feature of talents migration(afternoon)</p>
</li>
<li><p>[x] the correlation between talents migration metrics and economic development</p>
</li>
</ul>
<p>感觉好像做了很多无用功啊。但是后面用就高效率了</p>
<p>感觉有些太微小的细节更不不用考虑啊，所以啊不用花费那么多时间啊。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201030222231596.png" alt="image-20201030222231596"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201030222402760.png" alt="image-20201030222402760" style="zoom: 50%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201030222540525.png" alt="image-20201030222540525" style="zoom: 80%;"></p>
<hr>
<h4><span id="202029">202029</span><a href="#202029" class="header-anchor">#</a></h4><hr>
<h4><span id="202028-kai-xin">202028 开心</span><a href="#202028-kai-xin" class="header-anchor">#</a></h4><p><strong>Planning:</strong>  生活就是如此</p>
<p>hexo d 出现了问题，加载不了大的录屏，卧槽啊，导致一直提交不上</p>
<hr>
<h4><span id="202027">202027</span><a href="#202027" class="header-anchor">#</a></h4><p><strong>Planning:</strong> </p>
<ol>
<li><p>the results of talent imgration (map)</p>
<ol>
<li>English Listening</li>
</ol>
</li>
</ol>
<hr>
<h4><span id="202026">202026</span><a href="#202026" class="header-anchor">#</a></h4><p><strong>Planning:</strong> </p>
<ol>
<li><p>the migration status of city and city-pair </p>
<ol>
<li>watching video / hour</li>
<li>new concept(10/min) &amp; kaochong(Listening/30min) &amp; writting(/30min)</li>
</ol>
</li>
</ol>
<p><strong>Done:</strong></p>
<ol>
<li><p>how to analyse total information</p>
<ol>
<li>step by step </li>
</ol>
</li>
</ol>
<hr>
<h3><span id="planning-of-week-43-be-done">planning of week 43 be done!~</span><a href="#planning-of-week-43-be-done" class="header-anchor">#</a></h3><ul>
<li>[x] Results of reseach</li>
<li>[x] Studying English</li>
</ul>
<h3><span id="summary-of-week-43-the-importance-of-step-by-step">summary of week 43 the importance of step by step</span><a href="#summary-of-week-43-the-importance-of-step-by-step" class="header-anchor">#</a></h3><ol>
<li>I implement interface.</li>
<li>how to draw a high-quality and nice picture.</li>
<li>the first step is to prepare data,then the second step is that inputting data file into software.</li>
</ol>
<h4><span id="1025-oh-yeach-how-to-use-arcgis-map-to-draw-china-map-at-city-level">1025 oh yeach! how to use arcgis map to draw China map at city-level.</span><a href="#1025-oh-yeach-how-to-use-arcgis-map-to-draw-china-map-at-city-level" class="header-anchor">#</a></h4><p>I went to lab at  9:40 and arried at 10:00 o’clock</p>
<p>I made a mistake when a drink XY Line beacuse I the x,y location must not unable(blank)(costing 5 hours)</p>
<p>how to mark ?(fill in  by hand(manual operation))</p>
<p>Today ,I made a screen in AI.  I eat a lot,badly.</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/1025Z_1.gif" alt></p>
<h4><span id="1024-oh-yeach-a-china-map">1024  oh yeach! A China map</span><a href="#1024-oh-yeach-a-china-map" class="header-anchor">#</a></h4><p>I got up very late. I stayed in the bed until 11.am </p>
<p>I speet more than 5 hours on searching a China map.  Now , I could draw a China map thought a shp file. oh yeach! oh yeach!</p>
<h4><span id="1023-yuan-lai-wo-he-bie-ren-yi-yang-ye-shi-you-yu-wang-de">1023 原来我和别人一样也是有欲望的</span><a href="#1023-yuan-lai-wo-he-bie-ren-yi-yang-ye-shi-you-yu-wang-de" class="header-anchor">#</a></h4><p>喜、怒、哀、惧、爱、恶、欲，原来我也有。</p>
<h4><span id="1022-ren-xing-shi-yao-fu-chu-dai-jie-de">1022 任性是要付出代价的</span><a href="#1022-ren-xing-shi-yao-fu-chu-dai-jie-de" class="header-anchor">#</a></h4><ol>
<li><p>English(宾语从句，it)</p>
</li>
<li><p>模板+ 图层</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201021214624034.png" alt="image-20201021214624034" style="zoom:33%;"></p>
</li>
<li><p>要努力丫丫丫丫</p>
</li>
<li><p>今天把堆积了两个星期的衣服洗完了，感觉衣柜是空了不少啊~</p>
</li>
<li><p>昨天晚上买的百草园零食到了，不知道为什么最近晚上老是很饿</p>
</li>
</ol>
<h4><span id="1021-wu-fen-zhong-chu-yi-zhang-gao-zhi-liang-fu-za-de-tu-bu-shi-meng-origin">1021 五分钟出一张高质量，复杂的图不是梦~~~~origin</span><a href="#1021-wu-fen-zhong-chu-yi-zhang-gao-zhi-liang-fu-za-de-tu-bu-shi-meng-origin" class="header-anchor">#</a></h4><p>so easy~~</p>
<p>so easy~~</p>
<p>图层，模板，拼接的用法</p>
<h4><span id="1020">1020</span><a href="#1020" class="header-anchor">#</a></h4><p>English &amp; research</p>
<h4><span id="1019-hui-tu">1019 绘图</span><a href="#1019-hui-tu" class="header-anchor">#</a></h4><p>origin软件的更新速度比我的认知程度块多了。今天至于掌握到精髓部分了。</p>
<ol>
<li>主题模板<ol>
<li>坐标轴的范围</li>
<li>label的大小</li>
</ol>
</li>
<li>绘图模板（批量绘图)<ol>
<li>创建模板时注意数据结构的一致性。（不同单元格数据的位置或者名称要一样) 要对齐</li>
</ol>
</li>
<li>图层的合并和分解<ol>
<li>这个很好啊，拿来做组合，然后调节页面细节。</li>
</ol>
</li>
</ol>
<p>综上，要化相对复杂图，这些复杂图由各种相似的小图构成，避免重复性的调节，先把单个小图的模板做好（一个单元的内容),然后再把某个单元的内容做成模板，然后画出大的部分。然后在图层合并。先做好单个零件的图（如果要大量批量操作，做成模板),然后图层管理工具（合并)。</p>
<p>注意：</p>
<pre><code>1. 相同类型的绘图，保持相同的数据结构。
2. 较大的单个图控制好物理尺寸
</code></pre><p><img src="https://pic1.zhimg.com/d7fc70f4a60ffc10c495167b494e72d4_r.jpg" alt="img" style="zoom: 50%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201019223051292.png" alt="image-20201019223051292" style="zoom:33%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201019223113139.png" alt="image-20201019223113139" style="zoom:33%;"></p>
<p>hr {</p>
<p>  border: 1px solid #c13535;</p>
<p>}</p>
<h3><span id="planning-of-week-42-be-done">planning of week 42 be done!~</span><a href="#planning-of-week-42-be-done" class="header-anchor">#</a></h3><ul>
<li>[ ] English(背)<ul>
<li>[ ] 新概念二（10)</li>
<li>[ ] 背诵一篇范文（1）</li>
<li>[ ] 精度(2)</li>
<li>[ ] 听力（30min/day)</li>
</ul>
</li>
<li>[ ] Research &amp; Data Analysis<ul>
<li>[ ] 数据分析思维篇（Blog1)</li>
<li>[ ] 数据分析报告(Report)</li>
<li>[ ] 封装time series(total sum of 5h) </li>
<li>[ ] 如何开展调研方法论</li>
</ul>
</li>
<li>[ ] 生活篇<ul>
<li>[ ] 每天至少半小时的阅读时间（中午吧）</li>
<li>[ ] 多喝水</li>
</ul>
</li>
</ul>
<h4><span id="1018-zhong-yu-zhang-wo-hui-tu-mi-jue-liao">1018 终于掌握绘图秘诀了</span><a href="#1018-zhong-yu-zhang-wo-hui-tu-mi-jue-liao" class="header-anchor">#</a></h4><p>一天的成果。为了以后使用方便。感觉傻瓜式的软件直接点快很多啊。如果是编程实现，感觉所以参数都要修改麻烦啊。</p>
<p>发现还是origin好用，直接点，点那里修改那里。</p>
<p>8pt Arial</p>
<p>感觉还是origin好，创建模板多好啊。能用origin的还是这个好</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201018205350508.png" alt="image-20201018205350508"></p>
<h4><span id="1017-plot-tu-pian-da-xiao-yu-zi-ti">1017 plot （图片大小与字体)</span><a href="#1017-plot-tu-pian-da-xiao-yu-zi-ti" class="header-anchor">#</a></h4><ol>
<li><p>终于知道图片尺寸的作用了。不管图片大小多少，只要把字体，和字号放在上面。然后不同大小的图片，最终效果一样。</p>
</li>
<li><p>绘图先定图片大小，尤其多张。然后用AI组成。</p>
<p>View : Whole Page：步骤2显示Page放大，虽然此时屏幕尺寸可能大于设置尺寸，但不影响输出效果</p>
</li>
<li><p>CMYK是适合印刷的四色模式。</p>
</li>
<li><p>C代表青色<code>Cyan</code>，M代表洋红色<code>Magenta</code>，Y代表黄色<code>Yellow</code>，K代表黑色<code>Black</code></p>
</li>
</ol>
<ul>
<li>有衬线字体：Times New Roman，宋体；</li>
<li>无衬线字体：Arial，黑体；</li>
</ul>
<ol>
<li>绘图一定改默认参数。尤其是科研绘图。就是改设置的参数，都要敲一下</li>
</ol>
<h4><span id="1016-yao-zai-zhe-ge-xie-yu-xing-feng-de-huan-jing-li-chong-sheng">1016  要在这个血雨腥风的环境里重生</span><a href="#1016-yao-zai-zhe-ge-xie-yu-xing-feng-de-huan-jing-li-chong-sheng" class="header-anchor">#</a></h4><p>data analysis</p>
<h4><span id="1015-cheng-wei-bie-de-ren-hao-ma-quantify">1015 成为别的人好吗？？？quantify</span><a href="#1015-cheng-wei-bie-de-ren-hao-ma-quantify" class="header-anchor">#</a></h4><p>experience:unit &amp;DID&amp;planning</p>
<p>efficency:quantify</p>
<p>要用一辈子来偿还曾经任性，无知犯过的错</p>
<hr>
<h4><span id="1014">1014</span><a href="#1014" class="header-anchor">#</a></h4><p>City-level &amp; Concept</p>
<hr>
<h4><span id="1013">1013</span><a href="#1013" class="header-anchor">#</a></h4><p>Coding &amp; English</p>
<p><a href="https://www.vitae.ac.uk/researchers-professional-development/about-the-vitae-researcher-development-framework/developing-the-vitae-researcher-development-framework">https://www.vitae.ac.uk/researchers-professional-development/about-the-vitae-researcher-development-framework/developing-the-vitae-researcher-development-framework</a></p>
<p><strong><a href="https://www.vitae.ac.uk/researchers-professional-development/knowledge-and-intellectual-abilities">Domain A: Knowledge and intellectual abilities:</a></strong> The knowledge, intellectual abilities and techniques to do research<strong>
</strong></p>
<p><strong><em>\</em><a href="https://www.vitae.ac.uk/researchers-professional-development/personal-effectiveness">Domain B: Personal effectiveness</a>\</strong>:** The personal qualities and approach to be an effective researcher</p>
<p><strong><em>\</em><a href="https://www.vitae.ac.uk/researchers-professional-development/research-governance-and-organisation">Domain C: Research governance and organisation</a>\</strong>:<br>**Knowledge of the professional standards and requirements to do research</p>
<p><strong><a href="https://www.vitae.ac.uk/researchers-professional-development/engagement-influence-and-impact">Domain D: Engagement, influence and impact</a></strong>: The knowledge and skills to work with others to ensure the wider impact of research</p>
<p><img src="https://pic2.zhimg.com/v2-2ec49490e8db93246265df3fe50e3b74_r.jpg?source=1940ef5c" alt="preview" style="zoom: 25%;"></p>
<h4><span id="1012-dan-ran-mv">1012 淡然.mv</span><a href="#1012-dan-ran-mv" class="header-anchor">#</a></h4><p>Pyechart绘制地图。1. 添加数据点。已经提供了省份、城市经纬度的坐标。自定义，添加即可。 2. 径向图 3. 属性自定义</p>
<p>ArcGIS: 准备地图。拼接，设置即可。也简单。</p>
<hr>
<h3><span id="review-amp-summary"><font color="blue" size="12">Review &amp; Summary</font></span><a href="#review-amp-summary" class="header-anchor">#</a></h3><ol>
<li>收获。<ol>
<li>重新搭建了Blog；总结和加深了seaborn和matplotlib的学习；系统性学习了计量经济学（玄学啊，还要在学)；</li>
<li>英语。每天基本上保持了半天的学习时间。在学新概念二的时态。</li>
</ol>
</li>
<li>感悟<ol>
<li>会看文献的人都相似，优秀的人都相似。calendar&amp;Study&amp;Reading</li>
</ol>
</li>
<li>改进<ol>
<li>如何高效记单词。学习英语效率不高的原因就是记忆力跟不上。我觉得大量堆积的输入，忘得很快啊。改进。</li>
<li>生活时间很少。最近终于有早睡的想法了。</li>
</ol>
</li>
</ol>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-202010112045149551.png" alt="image-20201011204514955" style="zoom: 15%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201011204514955.png" alt="image-20201011204514955" style="zoom:15%;"></p>
<hr>
<h3><span id="planning-of-week-41-coming-on">planning of week 41 coming on!~</span><a href="#planning-of-week-41-coming-on" class="header-anchor">#</a></h3><ul>
<li>[x] English<ul>
<li>[x] speeding two hours on studying every day.</li>
</ul>
</li>
<li>[ ] research<ul>
<li>[ ] reviewing resource</li>
<li>[ ] a new result</li>
</ul>
</li>
<li>[ ] specific tasks<ul>
<li>[ ] how to visualize Chinese map</li>
<li>[ ] a new analysis report</li>
<li>[ ] </li>
</ul>
</li>
</ul>
<hr>
<h4><span id="1011">1011</span><a href="#1011" class="header-anchor">#</a></h4><p>English &amp; Python</p>
<hr>
<h4><span id="1010">1010</span><a href="#1010" class="header-anchor">#</a></h4><p>学生版originPro 2021。 beauty</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201010144443156.png" alt="image-20201010144443156" style="zoom:50%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20201010145640459.png" alt="image-20201010145640459" style="zoom:50%;"></p>
<hr>
<h4><span id="1009">1009</span><a href="#1009" class="header-anchor">#</a></h4><p>English &amp; Blog</p>
<p>晚上和室友去逛</p>
<hr>
<h4><span id="1008">1008</span><a href="#1008" class="header-anchor">#</a></h4><p>Blog</p>
<hr>
<h4><span id="1007">1007</span><a href="#1007" class="header-anchor">#</a></h4><p>Today, English &amp; Research</p>
<hr>
<h4><span id="1006">1006</span><a href="#1006" class="header-anchor">#</a></h4><p>Today, I greatly has obtained much knowledgeable about econometrics.</p>
<p>English</p>
<hr>
<h4><span id="1005">1005</span><a href="#1005" class="header-anchor">#</a></h4><p>Experience &amp;Listening</p>
<hr>
<h4><span id="1004">1004</span><a href="#1004" class="header-anchor">#</a></h4><p>Experience &amp; English</p>
<p>I get a good measure to memory  words deeply.  It’s one that putting a   word into  a sentence which is link with life.  It can make the words keep in mind. </p>
<p>I has learnt how to use Geopy, a package in Python, to calculate distance for two points of surface of the earth.</p>
<p>The more you obtain,  the smarter you have.</p>
<p>I am going to be a researcher, so I need to collect and share what you have get.</p>
<p>It’s nice to cook. </p>
<h4><span id="1003">1003</span><a href="#1003" class="header-anchor">#</a></h4><p>English &amp; Experience</p>
<hr>
<h4><span id="1002">1002</span><a href="#1002" class="header-anchor">#</a></h4><p>English &amp; Experience</p>
<p>什么是犯贱，什么是</p>
<hr>
<h4><span id="1001">1001</span><a href="#1001" class="header-anchor">#</a></h4><p>I learned new concept English about one hours.</p>
<p>I collected data from other school website.</p>
<h2><span id="202009">202009</span><a href="#202009" class="header-anchor">#</a></h2><h3><span id="planning-of-week-40-just-do-it">planning of  week 40 just do it</span><a href="#planning-of-week-40-just-do-it" class="header-anchor">#</a></h3><ul>
<li>[x] Learning English by kaochong<ul>
<li>[x] speeding two hours every day on studying English</li>
</ul>
</li>
<li>[x] data analyse<ul>
<li>[x] prepare for data set for practice</li>
<li>[x] Excel(Blog) function &amp; plot</li>
</ul>
</li>
<li>[ ] experience<ul>
<li>[ ] selecting metrics &amp; model</li>
<li>[ ] reading significant paper(&gt;three PPT)</li>
<li>[ ] 李航《统计学习》chapter 3-4</li>
</ul>
</li>
<li>[ ] reading<ul>
<li>[ ] do read notes</li>
</ul>
</li>
<li>[ ] 彩铅</li>
</ul>
<h4><span id="0929">0929</span><a href="#0929" class="header-anchor">#</a></h4><p>In the morning, I stuied English .</p>
<p>In the afternoon, I listening to course kaochong.</p>
<p>In the everning, I studied KNN algirithm.</p>
<p>You decide what you will  meet. So I wan to meet more strong partner.</p>
<h4><span id="20928">20928</span><a href="#20928" class="header-anchor">#</a></h4><p>In the morning, I learned English and excel</p>
<p>in the afternoon, I summaried Excel &amp; coding</p>
<p>In the evening, I collected resource about how to show. and </p>
<h3><span id="planning-of-week-39">planning of  week 39</span><a href="#planning-of-week-39" class="header-anchor">#</a></h3><p>I think I could not get more knowledge than costing time. </p>
<p>I must more focused.  I must learn to apart time. </p>
<ul>
<li>[x] English Learning<ul>
<li>[ ] at least，I will speed two hours on studying it.(kaochong course and new concept )</li>
</ul>
</li>
<li>[ ] Paper<ul>
<li>[ ] Do a simple  report</li>
<li>[x] Do research</li>
<li>[x] Reading paper (&gt; five)</li>
</ul>
</li>
<li>[x] time series<ul>
<li>[x] giving results</li>
</ul>
</li>
</ul>
<p>Thing about clear, thus do it.</p>
<h3><span id="journey-of-life">journey of life</span><a href="#journey-of-life" class="header-anchor">#</a></h3><h4><span id="0924">0924</span><a href="#0924" class="header-anchor">#</a></h4><p>今天早上，睡觉+葛优瘫</p>
<p>今天下午，听力训练</p>
<p>今天晚上，句型</p>
<h4><span id="0923">0923</span><a href="#0923" class="header-anchor">#</a></h4><p>今天早上，英语</p>
<p>今天下午，继续测试</p>
<p>今天晚上，time series</p>
<h4><span id="0922">0922</span><a href="#0922" class="header-anchor">#</a></h4><p>今天早上，校稿</p>
<p>今天下午，校稿+美美</p>
<p>今天晚上，数据分析+time serie</p>
<h4><span id="0921">0921</span><a href="#0921" class="header-anchor">#</a></h4><p>今天早上，英语+数据处理</p>
<p>今天下午，城市层面的数据处理</p>
<p>今天晚上，时间序列+论文阅读</p>
<h3><span id="planning-of-week-38">planning of  week 38</span><a href="#planning-of-week-38" class="header-anchor">#</a></h3><ul>
<li><p>[x] 英语</p>
<ul>
<li>[x] 新概念(2) 三篇的精度+背诵</li>
<li>[x] 新概念(3)a puma at large 的背诵</li>
</ul>
</li>
<li><p>[ ] 论文</p>
<ul>
<li>[x] 跑论文数据</li>
<li>[ ] PSM的解读</li>
<li>[ ] 稳健性检测的方法</li>
<li>[ ] 问题汇总</li>
<li>[x] 阅读人口流动模式相关的introduction</li>
</ul>
</li>
<li>[x] time series<ul>
<li>[x] 测试结果+复制粘贴(这种应用好干，就是特征工程不同罢了)</li>
</ul>
</li>
</ul>
<p>In this week, I felt inefficient. This is because I repeat one thing. So I want to change it. I think I must improve my efficiency by handwriting. </p>
<h4><span id="0920">0920</span><a href="#0920" class="header-anchor">#</a></h4><p>In the morning ,I went to cainiao to get my package including shoes and a clothes. And run codes.</p>
<p>In the afternoon, I tested the experience. I felt too bad for the results is not significant.</p>
<p>In the evening, </p>
<h4><span id="0918-selecting-paper">0918 selecting paper(🙂）</span><a href="#0918-selecting-paper" class="header-anchor">#</a></h4><p>In the morning, I learned English. And ran program。</p>
<p>In the afternoon, I collected a few papers from other literature.</p>
<h4><span id="0917-efficiency-efficiency-efficiency-efficiency-how-to-write-introduction">0917 efficiency efficiency efficiency efficiency; how to write introduction</span><a href="#0917-efficiency-efficiency-efficiency-efficiency-how-to-write-introduction" class="header-anchor">#</a></h4><p>In the morning, I practice oral English. I read some paper.</p>
<p>In the afternoon, I think about how to show the framework.</p>
<p>In the evening,  running codes &amp; vacabulary</p>
<p><strong>It’s important to subdivide task and classify.</strong></p>
<p>You should make you time more valuable &amp; costly.</p>
<h4><span id="0916-efficiency">0916 efficiency</span><a href="#0916-efficiency" class="header-anchor">#</a></h4><p>In the morning, I learned the new concept English of series 2, read one paper , and rewrite my code. </p>
<p>In the afternoon, I learned the GWR model in Gedao and ArcGIS, at the same time, I ran my program.</p>
<p>In the evening,  I  corrected error of time series. And I thought about how to manage paper. How to classify for refer convenient.</p>
<h4><span id="0915-du-lun-wen">0915 读论文</span><a href="#0915-du-lun-wen" class="header-anchor">#</a></h4><p>In the morning, I study the new concept English of series 2 and process economic data set at city level.</p>
<p>In the afternoon,  I read more than three papers which refer to population migration pattern.  In information era, new timely, available, and detail data. In information era, new timely, available, and detail data offer chance to researchers for empirical research. On the one hand, we can research old problem based on new data, on the other hand, we can investigate socioeconomic development to reveal new phenomenon which may the census data and survey data can not do.</p>
<p>In the evening,   You can’t have your cake and eat it.  I classify the literature to the Excel and Blog.</p>
<h4><span id="0914-que-shi-zhi-chu-li-shi-jian-xu-lie">0914 缺失值处理 + 时间序列</span><a href="#0914-que-shi-zhi-chu-li-shi-jian-xu-lie" class="header-anchor">#</a></h4><p>今天早上，英语+数据整合（累，累，累) 流水线搭好了。</p>
<p>今天下午，处理缺失值</p>
<p>今天晚上，党会+time series </p>
<h4><span id="0913-pao-shi-yan">0913 跑实验</span><a href="#0913-pao-shi-yan" class="header-anchor">#</a></h4><p>今天早上，英语（新2）+ 检查数据流程</p>
<p>今天下午，测试实验数据，计量经济学就是玄学啊。换种解释变量和自变量，这结果就会发生天壤之别。问题是我的结果不显著啊。难怪要做那么多的稳健性测试。</p>
<p>今天晚上，跑time series。复制+粘贴，不用动脑子。</p>
<p>问题：如何养成白净的自然皮肤。戒腥，戒辣，戒糖；多喝水，多吃水果；</p>
<p>很多的人喜欢狂欢，可我就不同了，我偏偏喜欢独处，我觉得很轻松。一旦忙起来，我就效率非常高。</p>
<h4><span id="0912">0912</span><a href="#0912" class="header-anchor">#</a></h4><p>今天早上，睡到了8：00，关键是现在在和自己的生物钟发起挑战，我居然在学新概念二，当口语。我发现我高中英语就没有过关。</p>
<p>今天把新问题的数据HSR, City &amp; resume。 流水线。以后就是放文件，跑结果了。</p>
<h4><span id="0911">0911</span><a href="#0911" class="header-anchor">#</a></h4><p>今天早上，继续把暑假资料梳理。差不多好了。</p>
<p>今天下午，规划了下这学年的玩法。默默加油。下午继续梳理论文思路。文献分门别类的重要性。</p>
<p>今天晚上，文献阅读和接下来的项目规划。</p>
<p>最近五天就是清理实验数据阶段。</p>
<p>看完了实验室的关于社会经济学的论文。棒棒棒棒棒棒。我什么时候也能贡献一点点啊！把自己的研究方向和研究方法论调到和实验室同步了。</p>
<p>把研究人口流动模式的相关不错论文读了读，Introduction，好相似呢！不错不错呢。感觉渐渐建立起文献之间相关联的感觉了，探索新问题。</p>
<h4><span id="20200909-wu-liao-de-zi-ji">20200909 无聊的自己</span><a href="#20200909-wu-liao-de-zi-ji" class="header-anchor">#</a></h4><p>今天早上分类资料（堆积了很多个月了），总觉得不命名自己能找到</p>
<p>今天下午解决自己的疑问，似乎没有得到自己的答案</p>
<p>今天晚上看剧+coding</p>
<hr>
<h4><span id="20200909">20200909</span><a href="#20200909" class="header-anchor">#</a></h4><p>今天早上总结了最近所学</p>
<p>今天下午学习了绘图和数据思路的厘清。就是AI对图片做处理，</p>
<p>今天晚上读了一个体系的引言。难，难，难，难！</p>
<h4><span id="20200908">20200908</span><a href="#20200908" class="header-anchor">#</a></h4><p>今天早上在寝室看了科普资料。</p>
<p>今天下午整理数据资料和收集了资料，果然管理文件和数据是项技术活，不定期清理就爆炸了。当然了对于某些不会再修改的文件要单独保持好。对于对于二次性文件，最好每天都要清理和管理，命名和备份。积累的过程不是一朝一夕。我大概是这么回事，先大量产生垃圾文件，然后在里面掏金子。最后输出一份有模有样的汇总，报告，分析结果等等。我觉得产生大量垃圾文件的时候，要尽早清理。</p>
<p>今天晚上时间序列。提了一些好玩的idea，看了文献。</p>
<h4><span id="20200907-you-xie-wu-liao">20200907 有些无聊</span><a href="#20200907-you-xie-wu-liao" class="header-anchor">#</a></h4><p>今天晚上跑了时间序列。</p>
<hr>
<p>今天早上寝室睡觉，养精蓄锐。昨天走太久了。</p>
<p>今天晚上终于把时间序列跑出基本预测结果了。但是效率低，效率低，</p>
<hr>
<p>写程序，一定要讲究逻辑性啊，这样补充功能会方便很大啊。</p>
<p>pandas里面的赋值要小心啊，这个和索引有关系的啊</p>
<p>事事皆学问！</p>
<h4><span id="20200906-ju-can">20200906 聚餐</span><a href="#20200906-ju-can" class="header-anchor">#</a></h4><p>今天和本科的好朋友去犀浦和博物馆逛了很久，吃了很多好吃的</p>
<p>晚上想了想下周干嘛</p>
<h4><span id="20200905-jia-you-bi-guan">20200905 加油（闭关）</span><a href="#20200905-jia-you-bi-guan" class="header-anchor">#</a></h4><p>今天早上整理暑假任务</p>
<p>今天下午看了绘图echart</p>
<p>今天晚上继续time series(添堵啊)</p>
<h4><span id="20200904-duan-she-chi">20200904 断舍离</span><a href="#20200904-duan-she-chi" class="header-anchor">#</a></h4><p>今天早上扔掉了许多东西，翻出来特别多大学买的没有穿的东西</p>
<p>今天下午绘图看了1.3h，学习了猴子的数据分析的指标体系的建立方法！感觉还是套路.</p>
<p>今天晚上弄了时间序列</p>
<h4><span id="20200903-zhong-yu-kao-wan-liao-a">20200903 终于考完了啊</span><a href="#20200903-zhong-yu-kao-wan-liao-a" class="header-anchor">#</a></h4><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>必修环节</td>
<td>6400006003</td>
<td>学术活动</td>
<td>研究生院</td>
<td>0</td>
<td>1</td>
<td>春与秋</td>
<td>其他</td>
<td>考查</td>
<td>是</td>
<td></td>
<td></td>
</tr>
<tr>
<td>必修环节</td>
<td>6400006009</td>
<td>论文开题报告及文献阅读综述II</td>
<td>研究生院</td>
<td>0</td>
<td>1</td>
<td>春与秋</td>
<td>其他</td>
<td>考查</td>
<td>是</td>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>实践教学环节：还有五个学分。</p>
<p>实践教学环节6个学分中，基地实践必须完成2-4个学分，按照实践时间1-3个月、4-6个月、7-12个月及以上作为实践时间单位，分别认定为2学分、3学分和4学分。要求提交实践总结报告，实践基地（单位）就学生提交的报告给予相关支撑书面材料证明，根据实际实践时间，经导师审核通过，可获得2-4个学分。<br>实践教学课程主要指突出实践训练的实验课程，全校可通选，完成者取得相应学分。</p>
<p>4个学分(实习)+学位论文写作规范(1)个学分</p>
<p><strong>虽然在成为那个独特的自己的时候，会走很多的弯路，然后才知道怎么样的自己适合自己。什么的东西是应该丢掉的。</strong></p>
<p>修炼，修炼，修炼</p>
<p>不能再吃外卖了！</p>
<h4><span id="20200902-fu-xi">20200902 复习</span><a href="#20200902-fu-xi" class="header-anchor">#</a></h4><p>今天复习软件安全性分析</p>
<hr>
<h4><span id="20200901-fu-xi">20200901 复习</span><a href="#20200901-fu-xi" class="header-anchor">#</a></h4><p>今天早上复习背诵</p>
<p>今天下午敢报告</p>
<p>今天晚上Android漏洞，哎，虽然写过android apk,但是安全问题好难啊</p>
<h3><span id="202008">202008</span><a href="#202008" class="header-anchor">#</a></h3><h4><span id="2020-831-fu-xi-wan-shua">2020-831 复习+玩耍</span><a href="#2020-831-fu-xi-wan-shua" class="header-anchor">#</a></h4><p>今天早上复习软件安全性分析</p>
<p>今天下午和鹏哥出去看电影了</p>
<p>今天晚上复习软件安全性分析</p>
<hr>
<h4><span id="20200830-fu-xi-ing">20200830 复习ing</span><a href="#20200830-fu-xi-ing" class="header-anchor">#</a></h4><p>今天继续软件安全性分析（无聊，低效率)</p>
<p>决定晚上把报告完成了</p>
<hr>
<h4><span id="20200829-fu-xi-ing">20200829 复习ing</span><a href="#20200829-fu-xi-ing" class="header-anchor">#</a></h4><p>今天早上和同学聊天，居然出去实习了</p>
<p>今天晚上和下午复习软件安全性分析（难）</p>
<h4><span id="202008028-mi-ma-xue-kao-shi">202008028 密码学考试</span><a href="#202008028-mi-ma-xue-kao-shi" class="header-anchor">#</a></h4><p>今天早上靠密码学</p>
<p>今天下午收拾博客文章</p>
<p>今天晚上，由于下大雨，回寝室看剧了</p>
<h4><span id="20200827-gong-cheng-lun-li">20200827 工程伦理</span><a href="#20200827-gong-cheng-lun-li" class="header-anchor">#</a></h4><p>今天早上，</p>
<p>今天下午，考工程伦理。心塞塞。</p>
<p>今天晚上，看了我在颐和园。历史文物，园林风景太棒了。英语：《breakfast or lunch》。又进一步进行了职业规划； 复习密码学；学习了tableau，果然漂亮啊！</p>
<hr>
<h4><span id="202007826-deadline">202007826 Deadline</span><a href="#202007826-deadline" class="header-anchor">#</a></h4><p>今天早上，复习了全部的密码学。</p>
<p>今天下午，复习了工程伦理的分析题。</p>
<p>今天晚上，学习了数据分析中的逻辑思维，如何精准化产品设计，产业运营。</p>
<p>我已经受够了这样的生活了。</p>
<h4><span id="20200825-qi-xi-kuai-le">20200825 七夕快乐</span><a href="#20200825-qi-xi-kuai-le" class="header-anchor">#</a></h4><p>今天早上，起床发现臀部好疼啊</p>
<p>今天下午继续复习密码学 可证明的加密安全性；数字签名安全性相关概念。公钥体制的安全性</p>
<p>今天下午学习了A/B(what，why,  how)，用于评估某种产品和设计是否有效的提供了某项指标，进而有助于辅助决策。</p>
<h4><span id="20200824-fu-xi-ing">20200824 复习ing</span><a href="#20200824-fu-xi-ing" class="header-anchor">#</a></h4><p>今天早上在寝室复习控制流完整性</p>
<p>今天下午复习模糊测试，fuzzing，各种细节</p>
<p>今天晚上低效率复习密码学分组密码和基本概念，还可证明安全性，第七章的基本概念，区别公钥密码体制（三种），</p>
<p>《像鱼》好听</p>
<p>5W2H分析法在数据分析中的应用</p>
<p>期末考试咋回事背诵呢？还是数学好，一个定理做几十道题，这种学科几个点都不一定考</p>
<hr>
<p>下周，全新全意的看视频，看PPT，打印论文背诵</p>
<p>背诵，完成课程报告。</p>
<hr>
<h4><span id="20200823-fu-xi-ing">20200823 复习ing</span><a href="#20200823-fu-xi-ing" class="header-anchor">#</a></h4><p>今天早上寝室洗衣服（周末嘛，多睡会)</p>
<p>今天下午继续复习工程伦理，。。。文科。。。还看了我在颐和园等你。我还在想怎么用工程伦理分析生活中的小三。</p>
<p>今天晚上写了工程伦理的课件， 回寝室健身，哑铃到了</p>
<h4><span id="20200822-ping-dan-wu-qi-de-sheng-huo">20200822 平淡无奇的生活</span><a href="#20200822-ping-dan-wu-qi-de-sheng-huo" class="header-anchor">#</a></h4><p>今天早上低效率的复习了密码学和软件安全性分析，太难记忆了。看剧日常</p>
<p>今天下午复习继续</p>
<p>今天晚上继续复习，啊，为什么那么多要背的东西啊</p>
<h4><span id="20200821-wu-liao-de-sheng-huo">20200821 无聊的生活</span><a href="#20200821-wu-liao-de-sheng-huo" class="header-anchor">#</a></h4><p>昨天晚上睡不好，盖被子太热，不盖又太冷，折腾着睡不着，我的天啊。</p>
<p>今天早上备份资料。</p>
<p>今天下午和晚上继续复习。好心塞啊，太难背了，感觉在考文科啊。</p>
<h4><span id="20200820-fan-xiao-ji">20200820 返校记</span><a href="#20200820-fan-xiao-ji" class="header-anchor">#</a></h4><hr>
<h4><span id="20200819-lu-man-man-qi-xiu-yuan-xi">20200819 路漫漫其修远兮</span><a href="#20200819-lu-man-man-qi-xiu-yuan-xi" class="header-anchor">#</a></h4><h4><span id="20200822-wo-lei-liao">20200822 我累了</span><a href="#20200822-wo-lei-liao" class="header-anchor">#</a></h4><hr>
<p>八月要准备考试了</p>
<p>现代密码理论（李发根老师授课）考试时间：2020-08-28，09:30-11:30 </p>
<p>软件安全性分析（陈厅老师授课）考试时间：2020-09-03，09:30-11:30  死记硬背吧， 实在是恼火</p>
<h4><span id="20200814-zhao-dian-le-zi">20200814 找点乐子</span><a href="#20200814-zhao-dian-le-zi" class="header-anchor">#</a></h4><p>今天早上睡觉</p>
<p>今天下午改了会综述，思考了会自己找点什么东西玩玩</p>
<ol>
<li>找一些公开的项目（复现一下结果，补充一会)，玩玩数据分析（爬取数据-&gt;数据分析-&gt;数据建模）感觉这个过程满好玩的喔</li>
<li>不知道为什么我特别喜欢可视化，但现在遇到的瓶颈是怎么把图画好看, 字体，字号，颜色的配置)，准备好好玩玩这个，excel, echart, Python各种库，R， BI(tableau)都去水一把啦啦啦啦啦啦啦啦啦啦啦</li>
<li></li>
</ol>
<hr>
<h4><span id="20200812-xi-wang-ni-yan-jing-li-shi-wen-rou-gu-zi-li-shi-jian-chi-nu-li-cheng-wei-suo-ai-zhi-ren-xu-yao-de-xiao-tai-yang">20200812 希望你眼睛里是温柔，骨子里是坚持，努力成为所爱之人需要的小太阳！</span><a href="#20200812-xi-wang-ni-yan-jing-li-shi-wen-rou-gu-zi-li-shi-jian-chi-nu-li-cheng-wei-suo-ai-zhi-ren-xu-yao-de-xiao-tai-yang" class="header-anchor">#</a></h4><p>我没有在你最艰难的时候陪伴你，怎么能在你得意的时候出现呢？</p>
<p>今天下午时间序列</p>
<p>今天晚上</p>
<hr>
<h4><span id="20200811-hao-xiang-chi-bing-qi-lin-a-bing-qi-lin-bing-qi-lin-bing-qi-lin-bing-qi-lin">20200811 好想吃冰淇淋啊，冰淇淋，冰淇淋，冰淇淋，冰淇淋</span><a href="#20200811-hao-xiang-chi-bing-qi-lin-a-bing-qi-lin-bing-qi-lin-bing-qi-lin-bing-qi-lin" class="header-anchor">#</a></h4><hr>
<h4><span id="20200809-zhun-bei-diao-zheng-sheng-li-zhong">20200809 准备调整生理钟</span><a href="#20200809-zhun-bei-diao-zheng-sheng-li-zhong" class="header-anchor">#</a></h4><hr>
<h4><span id="20200808-ji-xu-yu-xi">20200808 继续预习</span><a href="#20200808-ji-xu-yu-xi" class="header-anchor">#</a></h4><p>今天下午复习了numpy，我觉得先用（初步实践后）再去写全面的基础教程，这样子的效果好很多（现在基本上掌握numpy了，包括细节，嗯嗯)。还复习了软件安全性分析。</p>
<ol>
<li>缺陷(设计和代码) 和漏洞的区别和联系</li>
<li>第三章（浏览器攻击)</li>
</ol>
<p>今天晚上看了bilibili (我的青春恋爱物语果然有问题)</p>
<ol>
<li>关于时间处理numpy, pandas 要单独学习一下，这个学好了，处理数据就好干了</li>
</ol>
<hr>
<h4><span id="20200807">20200807</span><a href="#20200807" class="header-anchor">#</a></h4><p>今天早上睡觉</p>
<p>今天下午，家里网太差了。复习密码学数字签名和整数溢出。</p>
<p>今天晚上，学习新知识——数据挖掘+读文章（社科类文章，越往内深入越有意思，突然觉得人生百态咯)</p>
<p>想法：</p>
<ol>
<li>实现一个python绘图模板，主要是想改python提供的默认参数，因为官方提供的绘图方式，不咋滴好看。</li>
</ol>
<hr>
<h4><span id="20200806">20200806</span><a href="#20200806" class="header-anchor">#</a></h4><p>今天复习考试了！</p>
<hr>
<hr>
<h4><span id="20200801-20200806">20200801-20200806</span><a href="#20200801-20200806" class="header-anchor">#</a></h4><hr>
<hr>
<p>八月份大事件：</p>
<pre><code> 1. 八月二十开学
 2. 密码学
 3. 软件安全性分析（课程设计）
 4. 六级考试
</code></pre><p>一切如期进行</p>
<p>8：00- 11：00 </p>
<p>14：00-17：00</p>
<p>19：00-22：00</p>
<p>好困啊，睡觉，睡觉，睡觉😴😴😴😴</p>
<h3><span id="202007">202007</span><a href="#202007" class="header-anchor">#</a></h3><hr>
<h4><span id="20200731">20200731</span><a href="#20200731" class="header-anchor">#</a></h4><p>今天早上睡觉，看视频。</p>
<p>今天下午去市里，吃了小龙虾，买了一大堆吃食</p>
<p>今天晚上看剧 </p>
<hr>
<h4><span id="20200730-zu-gou-re-ai-zu-gou-jian-chi">20200730 足够热爱，足够坚持</span><a href="#20200730-zu-gou-re-ai-zu-gou-jian-chi" class="header-anchor">#</a></h4><p>今天早上，继续睡觉，昨天晚上睡得太晚了</p>
<p>今天下午，继续实现时间序列项目！实战机器学习</p>
<p>今天晚上，看了推荐的nature paper，原创太厉害了。继续追纪晓岚和和珅。</p>
<hr>
<h4><span id="20200729-mian-zhao-da-hai-chun-nuan-hua-kai">20200729  面朝大海，春暖花开</span><a href="#20200729-mian-zhao-da-hai-chun-nuan-hua-kai" class="header-anchor">#</a></h4><p>今天下午，时间序列分析。</p>
<p>今天晚上，学习数据挖掘+python</p>
<hr>
<h4><span id="20200728-wa-jue-nei-xin-xu-yao-de-dong-xi">20200728  挖掘内心需要的东西</span><a href="#20200728-wa-jue-nei-xin-xu-yao-de-dong-xi" class="header-anchor">#</a></h4><p>今天早上，逛了知乎</p>
<p>今天下午，跑时间序列。</p>
<p>今天晚上，看python，规划自己的职业规划</p>
<hr>
<h4><span id="20200727">20200727</span><a href="#20200727" class="header-anchor">#</a></h4><p>今天早上睡觉，刷视频 aaaaaaaa</p>
<p>今天下午，继续码字。</p>
<p>今天晚上，sklearn太好玩了呀！</p>
<p>问题就在于你想太多，而读的书太少了！！！！！阅读的确给人很多启发，尤其是人物传记类。</p>
<p>帮别人填个志愿，还得到一个瓜瓜瓜！</p>
<p>在这么追剧下去，爱奇艺都要看完了啊！</p>
<hr>
<h4><span id="2020-7-26">2020-7-26</span><a href="#2020-7-26" class="header-anchor">#</a></h4><p>今天早上睡觉</p>
<p>今天下午数据分析</p>
<p>今天晚上时间序列。跑程序</p>
<hr>
<h4><span id="2020-7-25">2020-7-25</span><a href="#2020-7-25" class="header-anchor">#</a></h4><p>今天早上去外婆家吃饭。好吃呢</p>
<p>今天下午看了一下建模。建模果然很厉害啊！看了纪晓岚和和珅(太好看了)</p>
<p>今天晚上看回顾了数据分析</p>
<hr>
<h4><span id="2020-7-24">2020-7-24</span><a href="#2020-7-24" class="header-anchor">#</a></h4><p>今天早上学绘图。</p>
<p>今天下午跑时间序列</p>
<p>今天晚上总结绘图模板（seaborn ,matplotlib）看剧</p>
<p>弟弟太厉害了，文课考的太好了</p>
<hr>
<h4><span id="2020-7-23-zhen-zheng-de-ying-xiong-zhu-yi-zhe-shi-kan-qing-sheng-huo-de-zhen-xiang-yi-ran-re-ai-sheng-huo">2020-7-23 真正的英雄主义者是看清生活的真相，依然热爱生活。</span><a href="#2020-7-23-zhen-zheng-de-ying-xiong-zhu-yi-zhe-shi-kan-qing-sheng-huo-de-zhen-xiang-yi-ran-re-ai-sheng-huo" class="header-anchor">#</a></h4><p>今天早上睡觉，看剧。舒服</p>
<p>今天下午时间序列</p>
<p>今天晚上写分析报告。</p>
<hr>
<h4><span id="2020-7-22-dui">2020-7-22  对</span><a href="#2020-7-22-dui" class="header-anchor">#</a></h4><p>今天下午写分析报告，词穷。</p>
<p>今天晚上时间序列</p>
<hr>
<h4><span id="2020-7-21">2020-7-21</span><a href="#2020-7-21" class="header-anchor">#</a></h4><p>今天早上改代码</p>
<p>今天下午学习3绘图seaborn,不好用啊，字体和字号的设置，不对头。origin可能以后不能用了，matplotlib searborn 才是王道。绘图色彩搭配很重要</p>
<p>今天晚上学习了数据分析。我发现我太喜欢数据分析了，以后要从事这行了。</p>
<p>2020-7-20 </p>
<p>今天早上睡觉</p>
<p>今天下午测试数据（感觉应该没什么问题了）</p>
<p>今天晚上跑了xgboost</p>
<hr>
<h3><span id="2020-30-zhou">2020 30周</span><a href="#2020-30-zhou" class="header-anchor">#</a></h3><p>最近十天，把八月份要干的事情干完，八月份要准备六级和期末考试了，报告和测试，我的个天，心塞啊，我选了什么课啊！全心全意准备考试。</p>
<p>Input  ✔️❌ Output ❌❌✔️ 关键最近老是想睡觉。</p>
<font color="red">Input</font>

<ol>
<li>time series</li>
<li>数据分析技能</li>
</ol>
<font color="red">Output</font>

<ol>
<li>每两天交接一下</li>
<li>增量和差值学习一下</li>
<li>学习人际交往的本质</li>
</ol>
<hr>
<h4><span id="2020-7-19-ni-ru-jin-de-qi-zhi-li-cang-zhao-ni-zou-guo-de-lu-du-guo-de-shu-he-ai-guo-de-ren">2020-7-19 你如今的气质里，藏着你走过的路，读过的书，和爱过的人。</span><a href="#2020-7-19-ni-ru-jin-de-qi-zhi-li-cang-zhao-ni-zou-guo-de-lu-du-guo-de-shu-he-ai-guo-de-ren" class="header-anchor">#</a></h4><p>今天早上睡觉</p>
<p>下午跑时间序列</p>
<p>无争无忧！</p>
<hr>
<h4><span id="2020-7-18-ni-ru-jin-de-qi-zhi-li-cang-zhao-ni-zou-guo-de-lu-du-guo-de-shu-he-ai-guo-de-ren">2020-7-18  你如今的气质里，藏着你走过的路，读过的书，和爱过的人。</span><a href="#2020-7-18-ni-ru-jin-de-qi-zhi-li-cang-zhao-ni-zou-guo-de-lu-du-guo-de-shu-he-ai-guo-de-ren" class="header-anchor">#</a></h4><p>今天早上睡觉，煮饭。</p>
<p>今天下午时间序列&amp;处理数据</p>
<p>今天晚上看《谁说我结不了婚》</p>
<p>《面朝大海，春暖花开》做个幸福的人、种菜、劈柴，周游世界！</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/image-20200718223132260.png" alt="image-20200718223132260" style="zoom:33%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/MyBlog\hexo\source\_posts\学习Daily\image-20200718223122825.png" alt="image-20200718223122825" style="zoom:33%;"></p>
<hr>
<h4><span id="2020-7-17">2020-7-17</span><a href="#2020-7-17" class="header-anchor">#</a></h4><p>今天早上，睡觉</p>
<p>今天下午，调研了很多东西。跑了时间序列，交接了工作，下面都好干了</p>
<p>今天晚上，清洗数据。感觉应该快了</p>
<hr>
<h4><span id="2020-7-16">2020-7-16</span><a href="#2020-7-16" class="header-anchor">#</a></h4><p>你如今的气质里，藏着你走过的路，读过的书，和爱过的人。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/QQ图片20200716222012.jpg" alt="QQ图片20200716222012" style="zoom:33%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/QQ图片20200716222004.jpg" alt="QQ图片20200716222004" style="zoom: 25%;"></p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/MyBlog\hexo\source\_posts\学习Daily\QQ图片20200716221955.jpg" alt="QQ图片20200716221955" style="zoom:33%;"></p>
<hr>
<h4><span id="2020-7-15">2020-7-15</span><a href="#2020-7-15" class="header-anchor">#</a></h4><p>今天早上处理数据。</p>
<p>今天下午搞时间序列分析。[]倒着索引</p>
<p>今天晚上看论文，对比分析了两篇同类的文章。</p>
<hr>
<h4><span id="2020-7-14">2020-7-14</span><a href="#2020-7-14" class="header-anchor">#</a></h4><p>今天下午（午睡了很久）学了空间分析工具，工具还挺好用的哇。继续sklearn</p>
<p>今天晚上继续处理数据，跑的时候读了别人的文献，突然觉悟。科研的过程就是浪费时间的过程。</p>
<hr>
<h4><span id="2020-7-13-sheng-cun-huan-shi-hui-mie-zhe-shi-ge-wen-ti">2020-7-13  生存还是毁灭？这是个问题。</span><a href="#2020-7-13-sheng-cun-huan-shi-hui-mie-zhe-shi-ge-wen-ti" class="header-anchor">#</a></h4><p>今天早上刷视频，学英语！<br>今天下午睡觉&amp;学软件&amp;跑程序</p>
<p>今天晚上读论文。</p>
<p>明天：1. 时间序列调参，交接工作。2. 调研一下数据归一化的方法。3. 读论文</p>
<hr>
<h3><span id="2020-29-zhou">2020 29周</span><a href="#2020-29-zhou" class="header-anchor">#</a></h3><font size="5" color="red">Input</font>

<ol>
<li>尝试调研小领域（感觉下载的文献质量非常高）</li>
<li>学习写作</li>
<li>时间序列（机器学习算法）</li>
</ol>
<font size="5" color="red">Output</font>

<ol>
<li>PPT</li>
<li>多记点专业词汇和句式（我就是照着别人写的，但是读起来不对劲，不通畅）</li>
</ol>
<hr>
<h4><span id="2020-7-12">2020-7-12</span><a href="#2020-7-12" class="header-anchor">#</a></h4><p>今天找了几篇非常好的文献，可以做这方面的细调研，大概就10篇左右。</p>
<p>今天处理了数据，实在是麻烦。</p>
<p>突然发现文章最难的是文献综述。</p>
<p>Input  ✔️❌ Output ❌❌✔️</p>
<hr>
<p>2020-7-11 看剧，跑程序</p>
<p>今天早上睡觉，看视频</p>
<p>今天下午和晚上，处理数据，啊麻烦</p>
<hr>
<h4><span id="2020-7-10-pao-cheng-xu">2020-7-10 跑程序</span><a href="#2020-7-10-pao-cheng-xu" class="header-anchor">#</a></h4><p>今天早上跑程序（封装接口）</p>
<p>今天下午跑程序，学习写作的思维</p>
<p>今天晚上跑程序，看纪晓岚和和珅。</p>
<hr>
<h4><span id="2020-7-9-ke-yan-xie-zuo-hao-tong-ku">2020-7-9  科研写作好痛苦</span><a href="#2020-7-9-ke-yan-xie-zuo-hao-tong-ku" class="header-anchor">#</a></h4><p>今天早上听了听力，刷B站</p>
<p>今天下午学习了如何进行科研写作。太不容易了。《Some Tips on Writing》。原因如下：词汇缺乏；直译；毫无讲故事的思路；交代不清晰，含糊。更别提逻辑了，我觉得中文论文的逻辑关系都把握不好。</p>
<hr>
<h4><span id="2020-7-8">2020-7-8</span><a href="#2020-7-8" class="header-anchor">#</a></h4><p>今天早上啃了一个🍎。 刷刷小红书，B站。</p>
<p>下午写了代码注释。封装成接口。规划了下一步方案。</p>
<p>晚上读了一篇Data Science的文章，数据好才能讲好故事啊。引力模型、线性回归模型。变量的构造是亮点。每天坚持写作（英文写作好难）</p>
<hr>
<h4><span id="2020-7-7">2020-7-7</span><a href="#2020-7-7" class="header-anchor">#</a></h4><p>下午实现了xgboost, 数据-&gt;模型-&gt;调超参数</p>
<p>晚上收拾了论文，感觉就像俄罗斯方块，底层没有做好，越往上堆，就要回归底层。写了1000多点的小论文，也不知道每一个优秀的博士要经历什么才能创造出这么多的文字。值得学习。</p>
<p>释放光芒！</p>
<hr>
<h4><span id="2020-7-6-ji-xu-nu-li-de-yi-tian">2020-7-6 继续努力的一天</span><a href="#2020-7-6-ji-xu-nu-li-de-yi-tian" class="header-anchor">#</a></h4><p>今天早听了英语访谈</p>
<p>今天下午复习了密码学第1-2章（1h);  </p>
<hr>
<h3><span id="2020-28-zhou">2020 28周</span><a href="#2020-28-zhou" class="header-anchor">#</a></h3><hr>
<p>2020-7-5 要做的事情还很多，我努力做我喜欢的一切，并不是为了赢别人，而是要自己满足。</p>
<p>今天又是睡得晚起的早的一天。a. 我把trfersh完全搞懂了。b. 谈整合资料的重要性，为什么我总是一个专题的资料，每次都要重复弄呢。不好不好不好。</p>
<p>这一周还是不错的，在精神上，每天睡足了10h，啊哈哈哈哈哈。时间序列基本上搞通了。读了几篇不错的论文，还把stata软件学会了，其实计量经济学无非就是要解决因果关系，遗漏变量，序列相关性，异方差性等等，几个问题，要解决是不容易的。sklearn用的不熟练</p>
<p>Input  ✔️ Output ❌✔️</p>
<p>这周主要把统计学里面的基础复习了，总感觉没找到我想要的那种深度。我也不知道我到底需要怎么样的深度。感觉自己又胖了！</p>
<font size="5" color="red">Input</font>

<ol>
<li>密码学复习两章（PPT+习题+百度）</li>
<li>网络安全复习两章（视频+笔记+概念）</li>
<li>写1000字左右的结课论文（关于大数据下孕育而生的计算社会经济学，抄袭抄袭，借鉴咯）</li>
<li>封装特征提取</li>
<li>论文数据分析(现在就差分析结果)（不知道我怎么会给造成一种，我很会写论文的样子，想太多了吧) 现在还是数据驱动研究，并非研究问题驱动数据的阶段</li>
<li>准备六级</li>
<li>reading record</li>
</ol>
<font size="5" color="red">Output</font>

<ol>
<li>基本的数据分析结果</li>
<li>论文阅读：一定要以PPT的形式给出（每周给自己做个1-3页的PPT)</li>
<li>看一道建模题</li>
<li>学习机器学习集成算法</li>
</ol>
<hr>
<h4><span id="2020-7-4-lan-de-de-wo">2020-7-4 懒得的我</span><a href="#2020-7-4-lan-de-de-wo" class="header-anchor">#</a></h4><p>今天早上又睡了很久！可以是昨天晚上看别人的vlog太久了，羡慕那种独居生活。我什么时候可以过上独居的日子啊！</p>
<p>今天下午学了stata这个工具，基本上学会了，我发现机器学习开源工具，有些不良心啊！</p>
<p>今天晚上看了会电视剧。跟踪公众号。学习统计学。</p>
<hr>
<h4><span id="2020-7-3-shui-bao-he-zu-du-hui-lun-wen-amp-qiao-dai-ma">2020-7-3 睡饱喝足，读会论文，&amp; 敲代码</span><a href="#2020-7-3-shui-bao-he-zu-du-hui-lun-wen-amp-qiao-dai-ma" class="header-anchor">#</a></h4><p>今天下午玩了xgboost,集成学习有点难，但也要手动推导，这可以加深对算法内涵的理解。</p>
<p>晚上统计学习，stata和计量经济学（学的很基础，但实际应用不是那么回事了）。做数据科学，肯定要学习R语言</p>
<p>沉思：😔😔😔。</p>
<hr>
<h4><span id="2020-7-2-xian-ru-shen-yuan-de-wo">2020-7-2 陷入深渊的我</span><a href="#2020-7-2-xian-ru-shen-yuan-de-wo" class="header-anchor">#</a></h4><p>今天又是上课，不知道老师扯了些什么，听着听着就关成静音了。(阴险.jpg)</p>
<p>实现了时间序列的特征工程，读了一篇好文章（关于女性政治地位的提高），还找到了一篇EPJ data science上的好文章（追踪文献的重要性）</p>
<p>明天：1）实现xgboost 2) 模型设置（中文）综述和变量 </p>
<hr>
<h4><span id="2020-7-1-wu-liao-de-wo">2020-7-1 无聊的我</span><a href="#2020-7-1-wu-liao-de-wo" class="header-anchor">#</a></h4><p>今天玩了tsfresh库，怎么那么难理解啊！实在是不知道别人怎么编程的！关键是返回的数据结构，和底层实现有关系！再次学习了参数估计（极大似然估计，最大后验估计）。我可能要手把手教那种。</p>
<hr>
<h3><span id="202006">202006</span><a href="#202006" class="header-anchor">#</a></h3><h4><span id="2020-6-30-xin-lei-de-yi-tian">2020-6-30 心累的一天</span><a href="#2020-6-30-xin-lei-de-yi-tian" class="header-anchor">#</a></h4><p>今天早上，下午上课，是张老师的课，课程难度很大。我也是半听半玩耍。可能是数学学多了，对这个社会问题感悟能力跟不上。就一句话存在即合理！顺道看了tsfresh的doc</p>
<p>晚上，读了一篇science，开创性工作就是厉害啊！从0到1是飞跃，1到2，3…是发展。还有跨界的精英。温习了机器学习里面的基本概念！</p>
<hr>
<h4><span id="2020-6-29">2020-6-29</span><a href="#2020-6-29" class="header-anchor">#</a></h4><p>今天早上，下午上课去了。还去看了回归分析sklearn的实现。 关键点相关性分析-&gt;因果分析， correlation － causality - prediction - control。解释型研究（描述，统计方法)——&gt;充分解释（因果关系）科学研究： 解释，预测，控制闭环（干预），找不到因果关系。 因果关系分析方法：Causality: Models, Reasoning, and Inference</p>
<p>晚上复习统计学day Ox 01（本科我怎么没有作电子稿笔记啊，哭死了，还去反翻看了过去的笔记和博客，菜死了）。加个学习小组，感觉别人做的资料，和我想要的深度差太远了。数据挖掘上次看那个Dr.yuan的课程，笔记不是特别好！还要把时间序列特征工程做了！</p>
<p>我发现申请实践学分，做助教，怎么那么多人申请啊！</p>
<p>统计学习方法那个，我发现我做的笔记，好差劲啊！</p>
<hr>
<h4><span id="2020-6-28-yuan-qi-shao-nu-de-du-bai-ge-ren-zhi-lu">2020-6-28 元气少女的独白— 个人之旅</span><a href="#2020-6-28-yuan-qi-shao-nu-de-du-bai-ge-ren-zhi-lu" class="header-anchor">#</a></h4><hr>
<h3><span id="2020-27-zhou-gong-xing-shi-jian">2020 27周：躬行实践</span><a href="#2020-27-zhou-gong-xing-shi-jian" class="header-anchor">#</a></h3><hr>
<font color="red" size="5"> INPUT </font>

<p>a.  Linear Models &amp; Python 学会 <a href="https://scikit-learn.org/stable/supervised_learning.html#supervised-learning">https://scikit-learn.org/stable/supervised_learning.html#supervised-learning</a> </p>
<p>b. Time series &amp; Feature select tfresh</p>
<p>c.  English: youtube &amp; shanbei</p>
<p>e.  reading record</p>
<p>f.  概率论（极大似然估计，假设检验，显著性检测，参数估计）</p>
<font color="red" size="5">OUTPUT</font>

<p>a. kaggle project</p>
<p>b. 掌握一个中高难度的数学模型</p>
<p>c. Reading Record</p>
<hr>
<p>今天早上睡觉啦！</p>
<p>下午和电脑人一起玩麻将，收拾了本周的资料汇总</p>
<p>晚上看了视频学习关于xgboost,和关于一些公众号的文章</p>
<p>F:</p>
<p>​    输出（✔️）； 论文阅读（✔️）；读书（❌，主要是没有那种心境，不上瘾）；英语（✔️）</p>
<p>S:</p>
<ol>
<li><strong>论资料的收集的重要性</strong>。知识在脑海里会忘记，但硬盘不会。一定要把自己遇到的顶级资料收集好，厘成doc。一定是高质量和高密度的资料才记录。原来一直注重资料的学习，忽略了资料整合的重要性。并且最好每段时间，写一篇大汇总。</li>
<li><strong>切记从头开始</strong>。学习回路：资料收集（分等级：全局观—&gt;入门-进阶-高级，科普)——&gt;</li>
<li><strong>把自己的输出提升到别人也可以直接用的水平</strong>。不错，是这么回事！这也是对自己的一种要求。</li>
</ol>
<p>快乐夹杂着悲伤，至少结尾不能让自己太难堪！这条路只会与自己相关。</p>
<hr>
<h4><span id="2020-6-27-wai-gong-ba-shi-sui-sheng-ri">2020-6-27 外公八十岁生日</span><a href="#2020-6-27-wai-gong-ba-shi-sui-sheng-ri" class="header-anchor">#</a></h4><p>白天在外婆家，给教书先生外公过生日。</p>
<p><strong>你永远无法叫醒一个装睡的人</strong></p>
<p><strong>当你真心渴望某样东西时，整个宇宙都会联合起来帮助你完成！</strong></p>
<p>学到了两句话，我不知道选哪个！</p>
<p>关键词: 硬核</p>
<hr>
<h4><span id="2020-6-26">2020-6-26</span><a href="#2020-6-26" class="header-anchor">#</a></h4><p>今天早上，睡到了11：00</p>
<p>下午，查重，心累！时间序列！</p>
<p>晚上，读了一篇时间序列在预测能源消费里面的大综述。和本科的经历契合。重点看了最小二乘支持向量机的应用，研究结果拟合精度和预测精度还行。这些模型，我还挺熟悉的。</p>
<hr>
<h4><span id="2020-6-25-duan-wu-kuai-le-biubiubiu">2020-6-25 端午快乐,biubiubiu</span><a href="#2020-6-25-duan-wu-kuai-le-biubiubiu" class="header-anchor">#</a></h4><p>早上，睡到了中午，感觉太热了，不想早起。</p>
<p>中午，我和弟弟去街上吃饭了：豆腐、水饺、水煮肉片。感觉我要是愿意做一次饭，那简直是太阳从西方出来了。妈妈果然是世界上最辛苦的人了。</p>
<p>下午，交接一下时间序列项目，话说这个东西不是很火吗，为什么资料这么少啊！！！跑了一天一夜ARIMA了。帮我表弟写一篇中小企业发展现状的论文，找了几篇文章抄袭，看了别人的硕士学位论文，我才意识到我还是本科论文的水平。</p>
<p>晚上，研读论文。</p>
<hr>
<h4><span id="2020-6-24-7h-shui-mian-bu-zu-de-wo-jpg">2020-6-24 7h睡眠不足的我.jpg</span><a href="#2020-6-24-7h-shui-mian-bu-zu-de-wo-jpg" class="header-anchor">#</a></h4><p>今天早上迷迷糊糊起床，和同学唠嗑，昨天睡的好玩，1：30，听说墨西哥地震了，然后我发了消息，居然心安理得的睡着了！</p>
<p>晚上，了解时间序列的特征提取，什么鬼，怎么那么难啊！晚上看了大数据机器学习时代，科普。</p>
<p>突然想到还有好多复习的课程要考试啊，突然想到了。</p>
<p>Probit vs logit</p>
<p><a href="https://www.econometrics-with-r.org/11-2-palr.html">https://www.econometrics-with-r.org/11-2-palr.html</a></p>
<h4><span id="2020-6-23-wo-yao-fang-chang-jia-mp4">2020-6-23 我要放长假.mp4</span><a href="#2020-6-23-wo-yao-fang-chang-jia-mp4" class="header-anchor">#</a></h4><p>今天睡了10h多。晚上十一点睡到早上11.00，中途还迷迷糊糊的在研究生系统打卡！！！！已经是自然状态了啊！</p>
<p>下午：继续时间序列，理论完全不懂。这是怎么回事。</p>
<p>晚上：开开心心复习四川大学的概率论。好久没有接触机器学习了，差不多还给书本了。</p>
<p>机器学习算法+概率论统计学</p>
<hr>
<h4><span id="2020-6-22-ru-guo-ke-yi-yi-zhi-yi-zhi-shui-xia-qu-duo-hao-a-eps">2020-6-22 如果可以一直一直睡下去多好啊.eps</span><a href="#2020-6-22-ru-guo-ke-yi-yi-zhi-yi-zhi-shui-xia-qu-duo-hao-a-eps" class="header-anchor">#</a></h4><p>今天睡了11多个小时，太幸福了啊！</p>
<p>下午玩了会时间序列。和灯夜聊了很久的天，就是关于兴趣和人生追求。</p>
<hr>
<hr>
<h4><span id="2020-6-21">2020-6-21</span><a href="#2020-6-21" class="header-anchor">#</a></h4><p>今天上街去了，买了一个大大的冰淇淋。</p>
<font size="12," color="red">输出</font>

<ol>
<li>完成一篇博客</li>
<li>推进时间序列项目（读相关论文）</li>
<li>论文阅读</li>
</ol>
<p>今天早上和下午睡了好久啊！</p>
<p>下周规划：</p>
<ol>
<li><p>时间序列项目（主线1）：具体把相关的方法整理成笔记</p>
</li>
<li><p>统计学（主线2）：统计学课程每天学一学，做练习。</p>
</li>
</ol>
<p>mooc: <a href="https://www.icourse163.org/learn/NJUE-1001752031?tid=1206103246&amp;from=study#/learn/content">https://www.icourse163.org/learn/NJUE-1001752031?tid=1206103246&amp;from=study#/learn/content</a></p>
<ol>
<li><p>编程：SQL、Excel、Python的精髓用法，本着提高效率去的。</p>
</li>
<li><p>看剧 《白箱》</p>
</li>
<li><p>看两篇机器学习回归分析的论文</p>
<p>统计学习补上</p>
</li>
<li><p>书籍阅读：</p>
<p>​    《大秦帝国》</p>
<p>​    《人性的弱点》</p>
</li>
<li><p>每天2h的英语学习，过六级啊</p>
</li>
</ol>
<p>反思：</p>
<p>​    日出而作，日落而息。</p>
<hr>
<h4><span id="2020-6-20-xin-sai">2020-6-20 心塞</span><a href="#2020-6-20-xin-sai" class="header-anchor">#</a></h4><p>下午学了python技巧绘制各类bar,barh</p>
<hr>
<h4><span id="2020-06-19">2020-06-19</span><a href="#2020-06-19" class="header-anchor">#</a></h4><p>下周规划：</p>
<p>时间序列项目（主线1）：具体把相关的方法整理成笔记</p>
<p>统计学（主线2）：统计学课程每天学一学，做练习。</p>
<p>编程：SQL、Excel、Python的精髓用法，本着提高效率去的。。</p>
<p>晚上：恶补pythonic和统计学</p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzI1MzAwODMyMQ==&amp;mid=2650338461&amp;idx=1&amp;sn=be67a2565cf5f0922e84e5076fe1c0d2&amp;chksm=f1d75433c6a0dd25fa6e25fae624cb21738b0fc4b28f833db0844f8bbb6e02c1dc9dfddac03a&amp;scene=0&amp;xtrack=1#rd">https://mp.weixin.qq.com/s?__biz=MzI1MzAwODMyMQ==&amp;mid=2650338461&amp;idx=1&amp;sn=be67a2565cf5f0922e84e5076fe1c0d2&amp;chksm=f1d75433c6a0dd25fa6e25fae624cb21738b0fc4b28f833db0844f8bbb6e02c1dc9dfddac03a&amp;scene=0&amp;xtrack=1#rd</a></p>
<hr>
<h4><span id="2020-06-18-xin-bu-zai-yan-quan-zhan">2020-06-18 😴 心不在焉 。全栈。</span><a href="#2020-06-18-xin-bu-zai-yan-quan-zhan" class="header-anchor">#</a></h4><p>今天发现自己离全栈在程度在降低。</p>
<ol>
<li><p>今天和萌萌组个学习队，加油，考研加油！！！！！！</p>
</li>
<li><p>就是参考文献的插入。</p>
<p><img src="/2019/02/22/%E5%AD%A6%E4%B9%A0Daily/微信图片_20200618225004.jpg" alt="微信图片_20200618225004" style="zoom: 25%;"></p>
</li>
</ol>
<hr>
<h4><span id="2020-06-17-wan-de-fun">2020-06-17 玩的fun</span><a href="#2020-06-17-wan-de-fun" class="header-anchor">#</a></h4><p>明天：</p>
<p>如果不出意外，尽量睡到九点！看会电视剧！</p>
<p>继续跑程序</p>
<p>学习统计学</p>
<p>下午搞了会数据</p>
<p>晚上：</p>
<ol>
<li>规划一会统计学学习</li>
<li>看了下自己的塑身计划，纠正体型，感觉还差好多啊</li>
<li>看下自己的技能树</li>
</ol>
<hr>
<h4><span id="2020-06-16">2020-06-16</span><a href="#2020-06-16" class="header-anchor">#</a></h4><ol>
<li><p>下午和爷爷聊天了，</p>
</li>
<li><p>晚上学习了新知识</p>
<p>继续学习统计学</p>
</li>
</ol>
<p>野外一游</p>
<hr>
<h4><span id="2020-6-15-er-ci-yuan-shao-nu-de-wei-xiao-jpg">2020-6-15 二次元少女的微笑.jpg</span><a href="#2020-6-15-er-ci-yuan-shao-nu-de-wei-xiao-jpg" class="header-anchor">#</a></h4><hr>
<h4><span id="2020-6-14-kai-xin-shui-jue-ing">2020-6-14 开心睡觉ing</span><a href="#2020-6-14-kai-xin-shui-jue-ing" class="header-anchor">#</a></h4><p>今天家里没有网，断网啊！</p>
<p>复盘这周工作，感觉要把某个知识、理论学到脑子里，不忘记，随机应变，太难了！</p>
<p>​        第一：跑程序。我觉得要跑大程序，才是把程序精髓学到家，时间效率。</p>
<p>​        第二：阅读。显而易见的现象问题啊。</p>
<p>​        第三：课程结课。 几门课程，感觉不是自己当初想选的，学起来怎么都不顺心。我就学不来了，配不上！</p>
<p>最主要的收获</p>
<p>​    pandas不断新增行的方法。</p>
<p>​    pandas if 的用法</p>
<h4><span id="2020-6-15-2020-6-21-ji-hua">2020-6-15—2020-6-21计划</span><a href="#2020-6-15-2020-6-21-ji-hua" class="header-anchor">#</a></h4><p>感觉自己是听蠢笨的啊。</p>
<hr>
<h4><span id="2020-6-13-bu-bei-bu-xi-png">2020-6-13 不悲不喜.png</span><a href="#2020-6-13-bu-bei-bu-xi-png" class="header-anchor">#</a></h4><p>今天a .出门拜访亲戚，身心疲惫</p>
<p>b. 好想回学校啊，想念食堂，想念杉杉宝贝</p>
<p>c. 什么能力都在下降。。。。不好的预感啊！过去学的东西，长时间搁置，已经发霉了，啊，啊，啊，啊，啊， 啊———————————</p>
<p>d. 还是要多元化发展，感觉自己已经是单一维度了，不知道怎么回事。</p>
<p>e. 我发现我记忆力衰退的太厉害了，脑子不够灵活，为什么呢。要及时记录啊。</p>
<p>好有效率问题啊，效率啊，效率啊，效率啊！</p>
<p>f. 看清自己，终能看破红尘。</p>
<p>今天：遇到的一些问题：</p>
<p>​    1. 对应DataFrame数据类型的行索引。在插入新行的问题，从其他DataFrame或者自定义插入。可以用append()在末尾新增行，但传参数切记是列表，最好用DataFrame</p>
<pre><code> 2. 还有列表和字符串的相互转换。如果要把[]传入DataFrame
</code></pre><hr>
<h4><span id="2020-6-12-bu-jiu-jie-liao-svg">2020-6-12 不纠结了.svg</span><a href="#2020-6-12-bu-jiu-jie-liao-svg" class="header-anchor">#</a></h4><p>明天周末了。今晚要追剧；车水马龙；在月光下奔跑，我什么都不想要，你爱我就好</p>
<p>今天是没有课的一天。还有杉杉在学校了。</p>
<hr>
<h4><span id="2020-6-11-ban-shui-ban-xing">2020-6-11 半睡半醒 :</span><a href="#2020-6-11-ban-shui-ban-xing" class="header-anchor">#</a></h4><p>明天</p>
<p>​        今天的任务没有做完，明天继续</p>
<p>今天</p>
<p>跑程序的过程中，把文件夹清理了</p>
<p>那么有趣，那么有价值-——评判公平性标准</p>
<p>品读了《喜欢你是寂静的》</p>
<p>听了陈奕迅《我要稳稳的幸福》</p>
<hr>
<h4><span id="2020-6-10-kai-xin-eps">2020-6-10 开心.eps</span><a href="#2020-6-10-kai-xin-eps" class="header-anchor">#</a></h4><p>明天：</p>
<ol>
<li>调用时间序列指标 2. 线性回归模型 3. 跑程序，计算人才流动指标</li>
</ol>
<hr>
<h4><span id="2020-6-9-yu-yue-jpg">2020-6-9 愉悦.jpg</span><a href="#2020-6-9-yu-yue-jpg" class="header-anchor">#</a></h4><p>今天：</p>
<ol>
<li>精读了一篇论文，收获满满，因为都是自己学过，看过的方法，看别人论文里面的应用，有所启发！以后要看顶级的资料</li>
<li>喝着安慕希，看别人的数据分析报告。</li>
<li>最近知识输入太过了，虽然都是本科了解过的（数学方面）</li>
<li>重要要清洗出数据，不知道为什么，我发现我的数据，居然只读了十几万条，然后重新跑。</li>
<li>等忙过了这段时间，一定要好好厘清最近的思路<ol>
<li>可视化</li>
<li>数据清洗：python</li>
<li>线性预测模型</li>
<li>计量经济学</li>
</ol>
</li>
</ol>
<hr>
<h4><span id="2020-6-8-yuan-qi-kai-xin-xi-chu-wang-wai">2020-6-8 元气 开心 喜出望外</span><a href="#2020-6-8-yuan-qi-kai-xin-xi-chu-wang-wai" class="header-anchor">#</a></h4><p>明天1. 基本数据统计结果 2. 项目交接！3. good night</p>
<ol>
<li><p>今天早</p>
</li>
<li><p>今天做了的数据序列项目上周的报告！</p>
</li>
<li><p>今天终于预处理完论文数据了</p>
</li>
</ol>
<h4><span id="2020-6-6">2020-6-6</span><a href="#2020-6-6" class="header-anchor">#</a></h4><ol>
<li>今天又是元气满满的一天</li>
<li>温习了numpy的用法，numpy,pandas,list直接的相互转换关系，以及sklearn metric里面的各类指标，什么叫指标的鲁棒性，怎么按需求选或者构造适合自己的评估指标。</li>
<li>读了高见师兄的综述。</li>
<li>做了指标体系图和高铁站点（Edraw中文坑，怎么不是矢量图啊，Visio破解不安全，AI还不知道怎么操作）</li>
<li>明天录视频，</li>
</ol>
<hr>
<h4><span id="2020-6-5">2020-6-5</span><a href="#2020-6-5" class="header-anchor">#</a></h4><ol>
<li>今天熟悉了时间序列流程；1. 平稳性。序列平稳性是做分析的基础。平稳性检测—单位根；非平稳性处理：差分~log~分解~平滑处理；2. ARIMA模型 基本思路；相关性和偏相关性定阶数 3. 网格+信息准则 调参：惩罚性 nbeats工具封装好了 4. predict样本内，动态和静态预测 forecase外推，timedelt 绘图，指标</li>
<li>假设检验：统计量和显著性水平，总感觉理解起来太难了，等忙了一定要好好复习统计学，参数估计，显著性检测，好好补。</li>
<li>记不住的函数<ol>
<li>pd.date_range(start = sub.index[-1],end = sub.index[-1]+timedelta(days = 2),freq = ‘1h’)</li>
<li>stat_rawdata = rawdata[rawdata[‘站点名称’]==stat] 布尔类型的切片，不上很明白原理</li>
<li>plt.xlim(sub.index[0],sub.index[-1]+timedelta(days = 2))</li>
<li>绘制热力图<ol>
<li>seaborn里面的heamap()<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import seaborn as sns</span><br><span class="line"></span><br><span class="line">x = np.random.rand(10, 10)</span><br><span class="line">sns.heatmap(x, vmin=0, vmax=1, center=0)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<h4><span id="2020-6-4">2020-6-4</span><a href="#2020-6-4" class="header-anchor">#</a></h4><p>今天最大的头疼之处和领悟就是，跑大型程序，一定要准备一份下程序，调好结果才放在服务器上面跑，不然结果难以想象。。。。。。。。。。。。。</p>
<ol>
<li>感觉调包侠也不是想象中那么好当的，一是现实中的数据一般般不规则，我发誓以后一定要做个合格的客户，二是参数默认是最讨厌的</li>
<li>今天又改程序，数据预处理果然头疼啊！希望周末可以出个大概结果，再重新跑数据</li>
</ol>
<p>绝知此事要躬行，原来觉得自己学各种库还不错，实践的时候还是用不上的时候，😔</p>
<ol>
<li>还有就是命名的重要性，</li>
<li>准备出一篇实践的心得，月末，主要是现在写程序太安逸了，</li>
<li>知识<ol>
<li>pandas新增列</li>
<li>更改索引</li>
<li>range()</li>
<li>行政单位，变更情况</li>
<li>函数，写函数，不知道为什么，像python这种解释型的语言，自己老是重复，不好，不好，</li>
</ol>
</li>
</ol>
<hr>
<h4><span id="2020-6-3">2020-6-3</span><a href="#2020-6-3" class="header-anchor">#</a></h4><p>今天还是学了不少东西，效率不高，主要是记不住函数传参数！</p>
<ol>
<li>掌握了一些pythonic的用法，想in for if ; if else 的一行代码；lambda单行函数功能的简化等等</li>
<li>一些常用的数据分析函数，sort_values();concat; append; time_range();绘图功能；就是就不知道，肯定是别人已经封装好了！</li>
</ol>
<hr>
<h4><span id="2020-6-2">2020-6-2</span><a href="#2020-6-2" class="header-anchor">#</a></h4><p>今天总体还是满不错的！</p>
<hr>
<h4><span id="2020-6-1">2020-6-1</span><a href="#2020-6-1" class="header-anchor">#</a></h4><p>今天刚好是2020年的一半，忙完第一学期（半梦半醒）,最终如梦初醒！<br>今天接触许多新鲜的玩意：</p>
<ol>
<li>ArcMap绘制地图、流向图（关键是起点和终点坐标，如何根据名称获取坐标，要做连接。Arc ToolBox中提供了许多工具，方便了用户完成一些简单的操作，如Join、Excel to Tabel常用的工具箱。今天学习绘制地图和流向图涉及的操作包括：文件夹链接到工作目录；ArcMap导入Excel坐标数据并显示；XY to Line工具流向图；提取面要素的质心点；多表链接操作；属性设置（bar)。渲染结果的确漂亮</li>
<li>linux系统后端运行 nohup &amp;命令的使用，如何记录日志文件，定向输出；学了ps命令 ps 查看进程；还有|通道，grep查找； ps -ef| grep pyton</li>
<li>matplotlib绘图的原理。<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">创建figure后，还需要轴</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax1 = fig.add_subplot(221)</span><br><span class="line">ax2 = fig.add_subplot(222)</span><br><span class="line">ax3 = fig.add_subplot(224)</span><br><span class="line">   </span><br><span class="line">fig, axes = plt.subplots(nrows=2, ncols=2)</span><br><span class="line">axes[0,0].set(title='Upper Left')</span><br><span class="line">axes[0,1].set(title='Upper Right')</span><br><span class="line">axes[1,0].set(title='Lower Left')</span><br><span class="line">axes[1,1].set(title='Lower Right')</span><br><span class="line">   </span><br><span class="line">axes[0,0].plot()</span><br><span class="line">axes[0,0].set_xlim([-1,6])</span><br><span class="line">axes[0,0].legend()</span><br></pre></td></tr></tbody></table></figure>
matplotlib.plot的基础绘图流程：</li>
</ol>
<p>创建画布（选择是否绘制子图，指定画布大小，像素）<br>添加标题—添加x轴的名称，刻度与范围—添加y轴的名称，刻度与范围<br>绘制图形，设置图形的样式，颜色，背景，并添加图例<br>保存图形，显示图形</p>
<p>感谢爷爷提供的CSDN账号 下载不少资料，一次性解决完了！</p>
<h3><span id="202005">202005</span><a href="#202005" class="header-anchor">#</a></h3><h4><span id="2020-5-31">2020-5-31</span><a href="#2020-5-31" class="header-anchor">#</a></h4><p>这是上完研究生第一学期上，第二学期下中旬！也是隔了很久才更新个人记录。<br>研一上，换了一个新环境，终于有个特别舒适的环境了！大屏幕，柔软的凳子,太舒服了！怎可辜负呢。<br>电科的课程实在是太多了，都不能安心玩耍了！<br>这段时间算个积淀吧！</p>
<h3><span id="201906">201906</span><a href="#201906" class="header-anchor">#</a></h3><hr>
<p>2019.6.2</p>
<p>今天才来写，罪过啊！老师不在，室友不在，无聊至极，只能以视频唯友，解闷也！睡了一个星期，但是我瘦了2斤了。开始不在懒惰了，在这样下去我就完蛋了。。。。。。。</p>
<p>不知道怎么回事，VPN老是 time out ,明明还有$啊！</p>
<p>造成了只能一段一段翻译，无语凝噎ing</p>
<p>还有百度上说是两篇，可是要求是一篇，于是我多花了2h,天杀的！！！</p>
<p>下午跑了个步，</p>
<p>越来越发现，事先计划一下，再去做，效率更好了！</p>
<h3><span id="201905">201905</span><a href="#201905" class="header-anchor">#</a></h3><hr>
<p>2019.5.12</p>
<p>今天才来更新这个日常，真是罪过，上段时间一直忙其他的事情，毕业设计，回家，处理家务啊。直到今天学完了Course 3,如何改善神经网络的性能</p>
<h3><span id="201904">201904</span><a href="#201904" class="header-anchor">#</a></h3><hr>
<p>2019.4.18</p>
<p>今天学了一部分course two week two的课程，终于学到精彩的部分了，由于今天想练彩铅和帮忙收拾教室，所以就没有学完了，学了几种变种的梯度下降法，提高速度，太棒了，太棒了，太棒了！！！！！！</p>
<hr>
<p>2019.4.17 </p>
<p>今天学完国course two的第一周课程，大概记时4h，还是颇多收获，学到了以前完全没有接触的东西，正则化方法，梯度消失的和爆炸的问题，感觉很棒，</p>
<p>2019.4.16</p>
<p>今天学了吴恩达老师的第一周关于神经网络的基础的课程，好厉害的</p>
<p>2019.4.15</p>
<p>今天学习了deep-layer neural network的正向传播和反向传播的过程，矩阵化计算的方式。</p>
<hr>
<p>2019.4.14</p>
<p>今天学习了第三周课程，shallow (2层)神经网络的正向传播和反向传播，以及矩阵化的计算方式，以及和logistics regression的表示上的不同地方</p>
<hr>
<p>2019.4.13</p>
<p>今天继续学习第二周课程，logistics regression 的模型，策略，算法的相关，如何把学习的到数学知识应用上去。</p>
<hr>
<p>2019.4.12</p>
<p>今天没有去跑步，处理一些情感问题去了，学了Androw Ng的 第二周的部分课程，主要是链式求导法则，通过计算图，一步一步的复合求导，复合函数用计算图表示，并链式求导</p>
<p>2019.4.11</p>
<p>今天是很愉快的一天，起的很早，精神很足，学了学习，写完了吴恩达老师的第一周深度学习。</p>
<hr>
<p>2019.4.10</p>
<font color="red" size="6">今天刷完了第一遍，完了西瓜书第一章到第十一章，不过呢，还是要继续在刷基础还看论文</font><font>

这段时间，跑步锻炼第一，睡觉，贪睡第二，第三，开始散漫了，自律的我，在哪里去了啊！ 争取在上研究生这段时间，把机器学习、Python编程能力提升上去

今天晚上弄了一个，吴恩达的deep Learning Ai课程笔记，<font color="blue" size="5">开始学习这个系列的课程了</font>

<p>笔记模板</p>
<p>英文：<a href="http://dl-notes.imshuai.com/#/">http://dl-notes.imshuai.com/#/</a>](<a href="http://dl-notes.imshuai.com/#/c1w1">http://dl-notes.imshuai.com/#/c1w1</a>)</p>
<p>什么都有的 <a href="https://redstonewill.com/category/deeplearning/">https://redstonewill.com/category/deeplearning/</a></p>
<p>中文笔记：</p>
<p>详细，相当于翻译： <a href="http://www.ai-start.com/dl2017/html/lesson1-week1.html">http://www.ai-start.com/dl2017/html/lesson1-week1.html</a></p>
<p>思考和总结： <a href="https://link.zhihu.com/?target=http%3A//kyonhuang.top/Andrew-Ng-Deep-Learning-notes/">https://link.zhihu.com/?target=http%3A//kyonhuang.top/Andrew-Ng-Deep-Learning-notes/</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/35333489">https://zhuanlan.zhihu.com/p/35333489</a></p>
<p><a href="http://imshuai.com/tag/deeplearning-ai-notes/">http://imshuai.com/tag/deeplearning-ai-notes/</a></p>
<p><a href="https://zhuanlan.zhihu.com/koalatree">https://zhuanlan.zhihu.com/koalatree</a></p>
<p>上班族的学习时长：<br>  整理笔记要明显消耗更多的时间，基本上10分钟的视频，做笔记至少要50分钟才能看完。每周的视频大概在2-3个小时，这就意味着看学习视频就要10-15个小时。编程作业3个小时左右，每周平均在15个小时，16周的课，净时间就花了240个小时！</p>
<p>video  <a href="https://www.youtube.com/channel/UCcIXc5mJsHVYTZR1maL5l9w/playlists">https://www.youtube.com/channel/UCcIXc5mJsHVYTZR1maL5l9w/playlists</a></p>
<p>西瓜书的公式推导：</p>
<p> <a href="https://datawhalechina.github.io/pumpkin-book/#/chapter1/chapter1">https://datawhalechina.github.io/pumpkin-book/#/chapter1/chapter1</a></p>
<p>统计机器学习：</p>
<p><a href="https://github.com/SmirkCao/Lihang">https://github.com/SmirkCao/Lihang</a></p>
<h3><span id="201903">201903</span><a href="#201903" class="header-anchor">#</a></h3><hr>
<p>2019.3.23-2019.3.24 </p>
<p>今天（今天）是周末，两个早上都睡觉去了，处理一下，我弟弟的问题，和孩子交流的重要性，晚上什么都没有干，周日下午跑了步，学习了python sci-learn里面的交叉验证、超参数选择，集成学习库的用法，终于不再迷茫了，慢慢来</p>
<ol>
<li><p>及时的记录学习过程</p>
</li>
<li><p>多去看别人的进展</p>
</li>
<li><p>去做别人没有做过的事情</p>
<p>只有你努力，努力的方向是正确的，就可以做出伟大的成就</p>
<p><a href="https://zhuanlan.zhihu.com/p/29704017">https://zhuanlan.zhihu.com/p/29704017</a></p>
<hr>
</li>
</ol>
<p>2019.3.21</p>
<p>今天了解一下操盘，就是那个股票，感觉做数据科学家好吃香啊，加油，接下来有得忙了</p>
<hr>
<p>2019.3.20 </p>
<hr>
<p>2019.3.19</p>
<hr>
<p>2019.3.18</p>
<p>今天看病去了，睡了好久，药物作用果然出乎意料，</p>
<p>2019.3.17</p>
<p>今天主要学习支持向量机的前世今生，怎么由来的</p>
<hr>
<p>2019.3.16</p>
<hr>
<p>2019.3.14</p>
<p>今天改了论文，感觉快完了；学习了BP矩阵推导，人真的是越来越聪明和灵活</p>
<p>2019.3.13</p>
<p>今天晚上学完了回归树，好棒，虽然原理给人的感觉很直接，但是也是一种体现</p>
<hr>
<p>2019.3.12</p>
<p>今天跑了步，早上改了毕业设计，下午配置了新手机，晚上写了日记</p>
<p>2019.3.11</p>
<p>今天早上听了听力，修改了毕业设计，核函数还是不是很懂；下午看了决策回归树，感觉很棒，过拟合才是该解决的关键问题！跑了步，感觉自己身体状况很不好啊！ 晚上听力电台，写了程序！</p>
<p>慢慢的学习，慢慢的努力，慢慢的加油，慢慢的遇见自己的憧憬天空</p>
<hr>
<p>2019.3.10</p>
<p>今天写了日记，说不上自己哪里郁闷，哪里开心！希望早点跑完程序，早点完事</p>
<hr>
<p>2019.3.9</p>
<p>今天才发现，最近状态非常的不好，可能是无所事事吧，可是我有很多事情要做，加油，少女，加油，少女，以后一定要记得写了!总觉得自己逃不出自己的羁绊，被束缚</p>
<h3><span id="201902">201902</span><a href="#201902" class="header-anchor">#</a></h3><hr>
<p>2019.2.28<br>今天调整自己的心态，回顾自己的生活，自己太急于求成了，心急吃不了热豆腐啊！！！！！<br>中国有句老话说得对，积少成多，不积跬步无以至千里，不积小流无以成江河，慢慢来，弄透弄清楚</p>
<hr>
<p>2019.2.27<br>今天早上，我读了同校同学写的简书文章，实在是感到好想笑，搜索了别人的解决方法，还是自己的知识量不足啊！！！！！！！！<br>下午看了下假设检验的视频，再去跑了两个小时的步</p>
<p>晚上逛了一下午各位网站</p>
<hr>
<p>2019.2.26<br>今天看了下某个计算机大佬的历程，深深地感到佩服。<br>《梦想小镇》又多了一块地盘了，</p>
<p>又重新学习了matplotlib,才发现,然后了玩了一下sklearn里面的带cross-validation的lasso的regression 再kaggle housr-prices 里面，rmse=$0.15386$,rank = 2903,不过做得也相当</p>
<hr>
<p>2019.02.25</p>
<p>今天好像不在状态，可能是焦虑+迷茫，有动力，动力的方向在哪里啊！，还是好好的做好当下吧！ 阿西吧</p>
<hr>
<p>2019.02.24<br>今天特别不想起床，有点小感冒，整理周志华的第一章笔记<br>下午总结日前学习的python库<br>顺便去kaggle做了小练习，数据的预处理工作。</p>
<p>​</p>
</font>]]></content>
      <categories>
        <category>学习の历程(Journal of Studying)</category>
      </categories>
      <tags>
        <tag>Daily</tag>
      </tags>
  </entry>
  <entry>
    <title>shiyi-summary</title>
    <url>/2021/05/30/%E5%AD%A6%E4%B9%A0%E6%8A%80%E8%83%BD/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="447ed8cf5228d139553d6e7d358926bd97f1c31a4a54061ec00f584e77015355">b487a4d5ccc6a30eed6f7489af661ec91bc7a00f358ed92a30555c93c99e84123454f7fabb8b3c2a6915bc7da3060e0160712441ab7611a70dd7a5332f8e9a877abbf2c34f99c410b5d9e80c53dc92d21919512743bbb70789953a56867d81cdcbf4e985eb1679c1ec2258a2ef5bf4cbf59b27ce7acc74949759de21d9dcdb05b9c4f5f0942b4dfcc2f992b8c632b3ad1127b9e2c8bdc102192d3b12f35f5b8260bfe0920e2074ea124a02195dfb6f51294b7d0f1e9667b8a209084bce27b885070c732bbbf2d40f4dda0f4eb3c6dc57890c93fdcceafe1e20a06b39fa919674aeb5cfe84f221e6055414f4288a2bbccb24e82b92dbebca4c313463dc456bb54edfe1e87a7775192813eb65b4d78cb4edb9a5ee85959bbb855ae521018f0b00f898495f734c02c3f4b6ec53061103827407f7d0fef39e481157e828c24db7e299c5988f8a12101057a048aaa2a04fd0538ee175702baddbd5f87ebaa42707097f345c8150fbf54eff688e65b976fb361030611546aa571ed9dfed8918ebe53c991e94ee6a2d0be74efd43ad0ee4ffc8257bb9a09b492f2ce6435ef1975b17b65a894cc2f9034fcc9133e13eef39814b3d74c5227f221a29df6cdc6bbe2443bf5e259631d6616f2739dccdcc0c41d8156ad6675ffbe4123b4256bc88d860e08866645ccfb460247badf121b1a71ced1834b400420a28da75bf80a928127a7f4cd96137027f632723233d93580ee2fb81e83c070c376fb015c109302143bf4232ed9be5dd70adccf8a49ebfee81de8cdb53f751f0fcd14e035c0ee0790163f1acedc5425475f191fa9ad5fa74074ad582ce3f4b5cd555e390f8484e3c8efbb15e87aa58d52e3e2c71672bb1eb24d7f8257f2dd633e6e3b95186291cd4f9442b466926791f99e65915d07e10cd1dbecae955021be27489dbcaa89766d0f936acece3d8679c7f2d09a9163768484499f565b8a1a0776615ea7e642ea3f65afa35537e6c6f8e8ec28f9936bd2d37c5eb5741f2adb5e2115306e92a04e3e4337fdc8219e8ed6224a82de0ea2621a58061c0a9ace4a53d094a11bb88d59d2901d3879e3c4f01b4e8a8f887dcd270623956aabe48d875266d5e81fb2e1f8adb9167d5e22027af5473f2ce282bc3a2e5719512edee19ad3cae037da216ac0ecd82bc3c285</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>自己呀</category>
      </categories>
      <tags>
        <tag>自己呀</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-期刊</title>
    <url>/2021/05/09/%E7%A7%91%E7%A0%94-%E6%9C%9F%E5%88%8A/</url>
    <content><![CDATA[<p>科研期刊收集</p>
<a id="more"></a>
<h1><span id="zhong-guo">中国</span><a href="#zhong-guo" class="header-anchor">#</a></h1><h1><span id="qi-ta">其他</span><a href="#qi-ta" class="header-anchor">#</a></h1><h2><span id="social-science-research">Social Science Research</span><a href="#social-science-research" class="header-anchor">#</a></h2><p><strong>impact factor</strong>1.9592.48620195 年JCR® 类别类别中的排序JCR 分区SOCIOLOGY45/150Q2</p>
<p>JOURNAL OF MARRIAGE AND FAMILY </p>
<p><a href="https://www.journals.elsevier.com/social-science-research">https://www.journals.elsevier.com/social-science-research</a></p>
<h2><span id="china-economic-review">China Economic Review</span><a href="#china-economic-review" class="header-anchor">#</a></h2><p><a href="https://www.sciencedirect.com/journal/china-economic-review">https://www.sciencedirect.com/journal/china-economic-review</a></p>
<h2><span id="world-development"></span><a href="#world-development" class="header-anchor">#</a></h2><p><a href="https://www.sciencedirect.com/journal/world-development">https://www.sciencedirect.com/journal/world-development</a></p>
<h2><span id="habitat-international"></span><a href="#habitat-international" class="header-anchor">#</a></h2><p><a href="https://www.sciencedirect.com/journal/habitat-international">https://www.sciencedirect.com/journal/habitat-international</a></p>
<h2><span id="chinese-sociological-review">Chinese Sociological Review</span><a href="#chinese-sociological-review" class="header-anchor">#</a></h2><p><strong>impact factor</strong>2.5763.14720195 年JCR® 类别类别中的排序JCR 分区SOCIOLOGY21/150Q1</p>
<h2><span id="journey-of-marriage-and-family">Journey of Marriage And Family</span><a href="#journey-of-marriage-and-family" class="header-anchor">#</a></h2><h2><span id="journal-of-population-economics">JOURNAL OF POPULATION ECONOMICS</span><a href="#journal-of-population-economics" class="header-anchor">#</a></h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">JCR® 类别</th>
<th style="text-align:center">类别中的排序</th>
<th style="text-align:center">JCR 分区</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">DEMOGRAPHY</td>
<td style="text-align:center">11/29</td>
<td style="text-align:center">Q2</td>
</tr>
<tr>
<td style="text-align:left">ECONOMICS</td>
<td style="text-align:center">120/373</td>
<td style="text-align:center">Q2</td>
</tr>
</tbody>
</table>
</div>
<p><strong>impact factor</strong>1.842.35320195 年JCR® 类别类别中的排序JCR 分区DEMOGRAPHY11/29Q2ECONOMICS120/373Q2</p>
<h2><span id="journal-of-human-resources">JOURNAL OF HUMAN RESOURCES</span><a href="#journal-of-human-resources" class="header-anchor">#</a></h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">JCR® 类别</th>
<th style="text-align:center">类别中的排序</th>
<th style="text-align:center">JCR 分区</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ECONOMICS</td>
<td style="text-align:center">37/373</td>
<td style="text-align:center">Q1</td>
</tr>
<tr>
<td style="text-align:left">INDUSTRIAL RELATIONS &amp; LABOR</td>
<td style="text-align:center">2/30</td>
<td style="text-align:center">Q1</td>
</tr>
</tbody>
</table>
</div>
<p><strong>impact factor</strong>3.6986.89920195 年JCR® 类别类别中的排序JCR 分区ECONOMICS37/373Q1INDUSTRIAL RELATIONS &amp; LABOR2/30Q1</p>
<h2><span id="journal-of-comparative-economics">Journal of Comparative Economics</span><a href="#journal-of-comparative-economics" class="header-anchor">#</a></h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">JCR® 类别</th>
<th style="text-align:center">类别中的排序</th>
<th style="text-align:center">JCR 分区</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ECONOMICS</td>
<td style="text-align:center">109/373</td>
<td style="text-align:center">Q2</td>
</tr>
</tbody>
</table>
</div>
<h2><span id="journal-of-development-economics">Journal of Development Economics</span><a href="#journal-of-development-economics" class="header-anchor">#</a></h2><h2><span id="economics-of-education-review">Economics of Education Review</span><a href="#economics-of-education-review" class="header-anchor">#</a></h2><h2><span id="social-networks">Social Networks</span><a href="#social-networks" class="header-anchor">#</a></h2><h2><span id="regional-science-and-urban-economics">Regional Science and Urban Economics</span><a href="#regional-science-and-urban-economics" class="header-anchor">#</a></h2><h2><span id="women-s-studies-international-forum">Women’s Studies International Forum</span><a href="#women-s-studies-international-forum" class="header-anchor">#</a></h2><h2><span id="international-journal-of-educational-development">International Journal of Educational Development</span><a href="#international-journal-of-educational-development" class="header-anchor">#</a></h2><h2><span id="economics-of-education-review">ECONOMICS OF EDUCATION REVIEW</span><a href="#economics-of-education-review" class="header-anchor">#</a></h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">JCR® 类别</th>
<th style="text-align:center">类别中的排序</th>
<th style="text-align:center">JCR 分区</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ECONOMICS</td>
<td style="text-align:center">196/373</td>
<td style="text-align:center">Q3</td>
</tr>
<tr>
<td style="text-align:left">EDUCATION &amp; EDUCATIONAL RESEARCH</td>
<td style="text-align:center">170/263</td>
<td style="text-align:center">Q3</td>
</tr>
</tbody>
</table>
</div>
<h1><span id="economic-modelling">Economic Modelling</span><a href="#economic-modelling" class="header-anchor">#</a></h1><p>Economic Modelling是经济学国际知名期刊之一，主要发表经济建模相关的理论和实证论文。近5年影响因子2.362，2019年引用分数4.2，是JCR经济学领域的二区期刊。</p>
]]></content>
      <tags>
        <tag>社科</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-sharepaper</title>
    <url>/2020/12/25/%E7%A7%91%E7%A0%94-sharepaper/</url>
    <content><![CDATA[<p>Reading </p>
<a id="more"></a>
<h1><span id="2021">2021</span><a href="#2021" class="header-anchor">#</a></h1><h2><span id="04">04</span><a href="#04" class="header-anchor">#</a></h2><h4><span id="14-kong-qi-wu-ran-yu-lao-dong-li-qian-yi">14 空气污染与劳动力迁移</span><a href="#14-kong-qi-wu-ran-yu-lao-dong-li-qian-yi" class="header-anchor">#</a></h4><p>Khanna, Gaurav, Wenquan Liang, Ahmed Mushfiq Mobarak, and Ran Song, 2021, The Productivity Consequences of Pollution-Induced Migration in China. NBER Working Paper Series.</p>
<p>Manesh, S. N., Choi, J. O., Shrestha, B. K., Lim, J., Shrestha, P. P. (2020). Spatial Analysis of the Gender Wage Gap in Architecture, Civil Engineering, and Construction Occupations in the United States. <em>Journal of Management in Engineering, 36</em>(4), 1-15.<br><a href="http://dx.doi.org/10.1061/(ASCE)ME.1943-5479.0000780">http://dx.doi.org/10.1061/(ASCE)ME.1943-5479.0000780</a></p>
<p>性别收入的分布：自相关分析工具非常棒，用于非常广泛</p>
<h4><span id="zhong-guo-xing-bie-shou-ru-chai-ju-duo-wei-jie-gou-fen-xi">中国性别收入差距多维解构分析</span><a href="#zhong-guo-xing-bie-shou-ru-chai-ju-duo-wei-jie-gou-fen-xi" class="header-anchor">#</a></h4><p>理论——实证</p>
<h4><span id="narrow-gender-earnings-gap-in-the-urban-areas-of-the-people-s-republic-of-china-to-what-extent-does-service-economy-matter">Narrow Gender Earnings Gap in the Urban Areas of the People’s Republic of China: To What Extent Does Service Economy Matter?</span><a href="#narrow-gender-earnings-gap-in-the-urban-areas-of-the-people-s-republic-of-china-to-what-extent-does-service-economy-matter" class="header-anchor">#</a></h4><h3><span id="family-companionship-and-elderly-suicide-evidence-from-the-chinese-lunar-new-year">FAMILY COMPANIONSHIP AND ELDERLY SUICIDE: EVIDENCE FROM THE CHINESE LUNAR NEW YEAR</span><a href="#family-companionship-and-elderly-suicide-evidence-from-the-chinese-lunar-new-year" class="header-anchor">#</a></h3><ol>
<li>性别和年龄的分类的讨论</li>
<li></li>
</ol>
<h2><span id="03">03</span><a href="#03" class="header-anchor">#</a></h2><h4><span id="0323">0323</span><a href="#0323" class="header-anchor">#</a></h4><h5><span id="relationship-of-gender-differences-in-preferences-to-economic-development-and-gender-equality">Relationship of gender differences in  preferences to economic development  and gender equality</span><a href="#relationship-of-gender-differences-in-preferences-to-economic-development-and-gender-equality" class="header-anchor">#</a></h5><p>研究核心：经济发展、性别平等于性别偏好的相关性</p>
<p>性别偏好的指标:</p>
<p>We tested these competing predictions using data on experimentally validated measures of willingness to take risks, patience, altruism,<br>positive and negative reciprocity, and trust for 80,000 individuals in 76 representative country samples.  </p>
<h4><span id="0318">0318</span><a href="#0318" class="header-anchor">#</a></h4><h5><span id="beauty-and-job-accessibility-new-evidence-from-a-field-experiment">Beauty and job accessibility: new evidence from a field experiment</span><a href="#beauty-and-job-accessibility-new-evidence-from-a-field-experiment" class="header-anchor">#</a></h5><ol>
<li>实验（相当于构造出了反事实）</li>
<li>简历的回复率</li>
<li>性别</li>
<li>教育</li>
<li>区域等等方面的异质性分析</li>
<li></li>
</ol>
<h4><span id="0317">0317</span><a href="#0317" class="header-anchor">#</a></h4><h5><span id="returns-to-higher-education-in-china-what-is-the-role-of-college-quality">Returns to higher education in China: What is the role of college quality?</span><a href="#returns-to-higher-education-in-china-what-is-the-role-of-college-quality" class="header-anchor">#</a></h5><h6><span id="selection-bias-omitted-ability-and-measurement-error">Selection bias, omitted ability, and measurement error</span><a href="#selection-bias-omitted-ability-and-measurement-error" class="header-anchor">#</a></h6><p>收入回报率，如何解决遗留变量、内生性、选择偏误、样本选择偏误</p>
<p>IV:很难的。</p>
<h6><span id="abstract">Abstract</span><a href="#abstract" class="header-anchor">#</a></h6><p>When there is substantial variation in the quality of colleges and universities, estimating returns to higher education based on quantity of education alone can be misleading. This paper examines the relationship between returns to higher education and college quality in China. </p>
<p>大学教育质量的回报率</p>
<p>We find that returns to higher education vary significantly depending on school quality. In addition, we find that the relationship between earnings and school quality is stronger for cohorts of workers that have entered the workforce more recently. </p>
<p>大学教育质量相关回报率</p>
<p>This finding may result from the fact that as the transition toward a market system progresses in China, the wage system becomes increasingly responsive to key components of human capital.</p>
<p> We also find that the earning gap between graduates from lower-quality colleges and those from vocational/technical schools decreases over time. </p>
<p>Our results may help to inform individual decision-making on investment in education, effective expansion of the higher education system, and efficient resource allocation across different levels of the education system.</p>
<h4><span id="0317">0317</span><a href="#0317" class="header-anchor">#</a></h4><p>计量分析的问题：</p>
<ol>
<li><p>内生性</p>
<p>高铁</p>
<ol>
<li><p>选择偏误</p>
<p>收入</p>
<h2><span id="yi-zi-xuan-ze-pian-wu-self-selection-bias"><strong>一、自选择偏误（self selection bias）</strong></span><a href="#yi-zi-xuan-ze-pian-wu-self-selection-bias" class="header-anchor">#</a></h2><p><strong>1.概念界定：*</strong>解释变量*不是随机的，而是选择的结果，而这个选择的过程会对我们研究的主效应的估计产生偏差。</p>
<p><strong>2.举例：</strong>参加培训x对找工作y的帮助，正常的理解是参加培训的人比未参加的人更容易找到理想的工作。但可能出现相反的情况，因为未参加培训的人可能自身能力就强，就没选择参加培训，因此结论也可能是未参加培训的人比参加培训的人有更大的概率找到心仪的offer。简而言之，个人的能力z会影响我们未来就业的情况y，同样也会影响我们是否选择参加培训x，此时变量x不再外生，这种xyz的三角关系便是自选择偏误。</p>
<p>这个例子的问题就在于未能严格控制无关变量，比如性格、家庭背景、教育背景、沟通能力等，导致我们得出的回归结果无法正确解释培训对就业的影响。</p>
<p><strong>3.修正办法：*</strong>PSM<em> 倾向得分匹配和 </em>DID* 双重差分分析进行反事实分析，通过对照组和实验组的差异得出实验变量（研究中关注的解释变量）的作用。思想可以参考高中学过的生物，控制变量法。</p>
<p><strong>4. 概念区分——样本选择偏误（sample selection bias）</strong></p>
<p>4.1 概念界定：研究中选择的 <em>样本</em> 非完全随机。</p>
<p>4.2 举例：研究工业企业研发投入对股利政策的影响，我们能搜集到的数据都是规模以上的（一般是500万以上），这样的样本缺少了规模以下的工业企业数据，不是随机抽样。其他例子还有是否加入公会对工资的影响，教育程度对工资的影响，都因为无法观测到未就业人群的情况，回归都会导致样本选择问题。</p>
<p>4.3 修正办法：<em>heckman两步法</em> 和在heckman模型上发展出来的<em>treatment effect模型</em> 。被解释变量y样本选择偏误采用heckman两阶段模型，也称heckman两步法估计。解释变量x存在样本自选择偏误采用处理效应模型。</p>
<h2><span id="er-shuang-xiang-yin-guo-simultaneous"><strong>二、双向因果（simultaneous</strong></span><a href="#er-shuang-xiang-yin-guo-simultaneous" class="header-anchor">#</a></h2></li>
</ol>
</li>
</ol>
<pre><code>作者：问题锅
链接：https://www.zhihu.com/question/311199969/answer/1011192804
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
</code></pre><h4><span id="0308">0308</span><a href="#0308" class="header-anchor">#</a></h4><h5><span id="xing-bie-zhuan-ti">性别专题：</span><a href="#xing-bie-zhuan-ti" class="header-anchor">#</a></h5><p>年龄与性别收入差距的影响：较为简单。</p>
<h6><span id="the-expanding-gender-earnings-gap-evidence-from-the-lehd-2000-census">The Expanding Gender Earnings Gap:Evidence from the LEHD-2000 Census</span><a href="#the-expanding-gender-earnings-gap-evidence-from-the-lehd-2000-census" class="header-anchor">#</a></h6><p>男女在通勤偏好对性别收入差距影响：虽然有过类似的文章。计量模型难。</p>
<p>Gender Differences in Job Search: Trading off Commute against Wage</p>
<p>Zhuo Chen, Kakoli Roy &amp; Gotway Crawford.2010.“Examining the Role of Gender in Career Advancement at the Centers for Disease Control and Prevention.” American Journal of Public Health, 100(3), 426–434. </p>
<p>计量模型难：统计分析简单</p>
<p>Kuhn P, Shen K. Gender Discrimination in Job Ads: Evidence from China[J]. Quarterly Journal of Economics, 2013, 128(1):287-336</p>
<h6><span id="some-evidence-of-the-importance-of-sticky-wages">Some evidence of the importance of sticky wages</span><a href="#some-evidence-of-the-importance-of-sticky-wages" class="header-anchor">#</a></h6><p>孩子对女性的影响：随时间变化。</p>
<p>Kleven, H., Landais, C., &amp; Søgaard, J. E. (2018). Children and gender inequality: Evidence from Denmark (No. w24219). <em>National Bureau of Economic Research</em>.</p>
<p>婚姻和孩子的性别收入差距的影响</p>
<p>“Specialization Then and Now: Marriage, Children, and the Gender Earnings Gap across Cohorts”，The Journal of Economic Perspectives, Vol. 31, No. 1 (Winter 2017), pp. 183-204.</p>
<h4><span id="0307">0307</span><a href="#0307" class="header-anchor">#</a></h4><h3><span id="xue-li-qi-shi">学历歧视</span><a href="#xue-li-qi-shi" class="header-anchor">#</a></h3><h5><span id="xue-li-de-xin-hao-ji-zhi-lai-zi-jian-li-tou-di-shi-yan-de-zheng-ju">学历的信号机制: 来自简历投递实验的证据</span><a href="#xue-li-de-xin-hao-ji-zhi-lai-zi-jian-li-tou-di-shi-yan-de-zheng-ju" class="header-anchor">#</a></h5><p>What is discrimintation?</p>
<p>劳动力市场歧视( discrimination) 是指根据一些可观察的群体特征( 例如种族、族群、性别等) ，<br>具有相同生产率( 工作能力) 的不同工人群体受到不平等对待的现象， 包括工资差异、工作机会的<br>不平等。劳动力市场中存在着许多类型的身份歧视， 研究中最常见的包括种族、族群、性别、年龄歧视等( Bertrand ＆ Mullainathan， 2004; Riach ＆ Rich， 2006; Lang ＆ Manove， 2011) ， 这些群体特征构成了招聘方区别对待劳动者( 不同的工资或雇佣行为) 的身份基础。  </p>
<p>劳动力市场中存在着各种类型的身份歧视， 求职者是否会因为<strong>大学本科第一学历差异</strong>而受到招聘方的歧视对待? 这在中国当前的劳动力市场中是一个存在争论的问题。目前鲜有直接的证据表明第一学历歧视系统地存在于招聘过程中， 也缺乏对此类歧视背后原因的研究。  </p>
<p>What is 211 project?985 project?</p>
<p>1995 年 11 月， 经国务院批准， 原国家计委、原国家教委和财政部联合下发了《“211 工程”总体<br>建设规划》， 即面向 21 世纪、重点建设 100 所左右的高等学校。1998 年 5 月， 江泽民同志在北大发言指出: “我国要有若干所具有世界先进水平的一流大学。”1999 年， 国务院批转教育部《面向 21 世纪教育振兴行动计划》， 重点支持建设一批一流大学， 即所谓的“985 工程”院校。政府通过更多的财政倾斜和政策配套提高这些高校的人才培养和学科建设水平， 同时在客观上创造了中国普通高<br>等院校的分类依据， 并促成了国人对于国内大学差异的基本观念.<a href="http://www.moe.gov.cn/srcsite/A03/moe_634/201706/t20170614_306900.html">http://www.moe.gov.cn/srcsite/A03/moe_634/201706/t20170614_306900.html</a></p>
<p>截至 2017 年 5 月， 全国高等院校共有 985 院校 39 所， 占全国高等院校( 2914 所) 的 1. 3% ， 占<br>本科院校( 1243 所) 的 3. 13% ; 共有 211 院校( 包含所有 985 院校) 112 所， 占全国高等院校的</p>
<ol>
<li>8% ， 占本科院校的 9% 。① 全国 211 院校 2016 年计划招收硕士研究生 27. 7 万人， 占所有高校硕士研究生招生总数的 46. 9% 。② 因此， 211 院校研究生中会有相当大比例的学生是出身于非 211院校的本科毕业生。本科第一学历的身份标签若构成歧视的基础( 尤其是在劳动力市场中) ， 那么按照这类学生的总量， 第一学历歧视必然构成非常重要的社会问题， 并可能降低劳动力市场的效率</li>
</ol>
<p>截至2020年6月30日，全国高等学校共计3005所，其中：普通高等学校2740所，含本科院校1272所、高职（专科）院校1468所；成人高等学校265所。本名单未包含港澳台地区高等学校。</p>
<h4><span id="0305">0305</span><a href="#0305" class="header-anchor">#</a></h4><h4><span id="zi-liao">资料</span><a href="#zi-liao" class="header-anchor">#</a></h4><h5><span id="xuan-ze-pian-wu">选择偏误</span><a href="#xuan-ze-pian-wu" class="header-anchor">#</a></h5><h2><span id="nei-sheng-xing-wen-ti-he-qing-xiang-de-fen-pi-pei-xian-gei-zhun-zi-ran-shi-yan-de-hou-li">内生性问题和倾向得分匹配, 献给准自然试验的厚礼</span><a href="#nei-sheng-xing-wen-ti-he-qing-xiang-de-fen-pi-pei-xian-gei-zhun-zi-ran-shi-yan-de-hou-li" class="header-anchor">#</a></h2><p><a href="https://mp.weixin.qq.com/s/qYwv4Sv9XqIpi4NTUv5ehA">https://mp.weixin.qq.com/s/qYwv4Sv9XqIpi4NTUv5ehA</a></p>
<h5><span id="lun-wen">论文</span><a href="#lun-wen" class="header-anchor">#</a></h5><h2><span id="ya-li-mian-qian-shui-geng-rong-yi-zao-yu-hua-tie-lu-lai-zi-gao-kao-de-fen-xi">压力面前，谁更容易遭遇滑铁卢？来自高考的分析</span><a href="#ya-li-mian-qian-shui-geng-rong-yi-zao-yu-hua-tie-lu-lai-zi-gao-kao-de-fen-xi" class="header-anchor">#</a></h2><p>Cai, Xiqian, Yi Lu, Jessica Pan, and Songfa Zhong. “Gender Gap under Pressure: Evidence from China’s National College Entrance Examination”, Review of Economics and Statistics, forthcoming.</p>
<p>这种文献较为简单，计量模型没什么创新。意义大！</p>
<p><img src="/2020/12/25/%E7%A7%91%E7%A0%94-sharepaper/image-20210305133945903.png" alt="image-20210305133945903"></p>
<h4><span id="kuhn-p-shen-k-gender-discrimination-in-job-ads-evidence-from-china-j-quarterly-journal-of-economics-2013-128-1-287-336">Kuhn P, Shen K. Gender Discrimination in Job Ads: Evidence from China[J]. Quarterly Journal of Economics, 2013, 128(1):287-336</span><a href="#kuhn-p-shen-k-gender-discrimination-in-job-ads-evidence-from-china-j-quarterly-journal-of-economics-2013-128-1-287-336" class="header-anchor">#</a></h4><h5><span id="zhai-yao">摘要</span><a href="#zhai-yao" class="header-anchor">#</a></h5><p>We study explicit gender discrimination in a population of ads on a Chinese Internet job board. </p>
<p>通过招聘广告分析性别歧视</p>
<p>Gender-targeted job ads are common, favor women as often as men, and are much less common in jobs requiring higher levels of skill. </p>
<p>以性别为目标的招聘广告很常见，对女性的青睐程度和对男性的青睐程度一样高，但在要求更高技能的工作中却不那么常见。</p>
<p>Employers’ relative preferences for female versus male workers, on the other hand, are more strongly related to the preferred age, height, and beauty of the worker than to job skill levels. </p>
<p>另一方面，相对于男性员工，雇主对女性员工的偏好与员工的年龄、身高和外貌的偏好关系更大，而与工作技能水平的关系更大。</p>
<p>Almost two thirds of the variation in advertised gender preferences occurs within firms, and one third occurs within firm*occupation cells. </p>
<p>几乎三分之二的性别偏好差异发生在公司内部，三分之一发生在公司职业内。</p>
<p>Overall, these patterns are not well explained by a firm-level animus model, by a glass-ceiling model, or by models in which broad occupational categories are consistently gendered across firms.</p>
<p> Instead, the patterns suggest a model in which firms have idiosyncratic preferences for particular job-gender matches, which are overridden in skilled positions by factors such as thinner labor markets or a greater incentive to search broadly for the most qualified candidate.</p>
<p>建模看不懂！</p>
<h4><span id="02">02</span><a href="#02" class="header-anchor">#</a></h4><h2><span id="bi-ye-sheng-ren-li-zi-ben-sheng-chan-neng-fou-cu-jin-di-fang-jing-ji-fa-zhan-ji-yu-gong-ju-bian-liang-fa-de-shi-zheng-yan-jiu">毕业生人力资本生产能否促进地方经济发展?——基于工具变量法的实证研究</span><a href="#bi-ye-sheng-ren-li-zi-ben-sheng-chan-neng-fou-cu-jin-di-fang-jing-ji-fa-zhan-ji-yu-gong-ju-bian-liang-fa-de-shi-zheng-yan-jiu" class="header-anchor">#</a></h2><p>Amendola, A. Barra, C. and Zotti, R. “Does graduate human capital production increase local economic development? An instrumental variable approach.” Journal of Regional Science. 2020; 60: 959– 994. </p>
<h2><span id="xiang-zhang-tui-wen-2054-fei-zhou-di-qu-de-dai-ji-liu-dong-xing">【香樟推文2054】非洲地区的代际流动性</span><a href="#xiang-zhang-tui-wen-2054-fei-zhou-di-qu-de-dai-ji-liu-dong-xing" class="header-anchor">#</a></h2><p>Alesina, A. F. , Hohmann, S. , Michalopoulos, S. , &amp; Papaioannou, E. (2021). Intergenerational mobility in africa, Econometrica, 89(1), 1-35.</p>
<h4><span id="01">01</span><a href="#01" class="header-anchor">#</a></h4><h3><span id="mei-guo-da-xue-jian-de-shou-ru-ge-chi-he-dai-ji-liu-dong">美国大学间的收入隔离和代际流动</span><a href="#mei-guo-da-xue-jian-de-shou-ru-ge-chi-he-dai-ji-liu-dong" class="header-anchor">#</a></h3><p>Chetty, R., Friedman, J. N., Saez, E., Turner, N., &amp; Yagan, D. (2020). Income segregation and intergenerational mobility across colleges in the united states. The Quarterly Journal of Economics, 135 (3), 1567-1633.</p>
<p>What is great research</p>
<p><strong>01</strong></p>
<h4><span id="yin-yan">引言</span><a href="#yin-yan" class="header-anchor">#</a></h4><p>　　代际流动问题一直备受学术界和政策界的关注。不管是在美国还是中国，许多人都将上大学视为提高代际流动性的途径。那么，高等教育体系是如何影响代际流动性的呢？寒门学子是否真的难以通过高等教育实现逆袭了吗？本文分享哈佛大学教授Raj Chetty等学者2020年发表于QJE上的论文，该文以美国为例，探讨了高等教育体系对代际流动性的影响。作者使用个人所得税申报记录构建了美国每所大学家长收入和学生收入的具体数据，统计数据显示，父母收入在大学之间的隔离程度非常高。在同一所大学就读的学生中，低收入家庭和高收入家庭的孩子之间的大学后的收入差异要比不同大学之间小得多。并且，未来学生收入最好的大学往往招收的是高收入家庭的学生。进一步地，作者将家长与孩子的收入数据与孩子的SAT和ACT分数联系起来，反事实模拟了大学中学生分配的变化会如何影响收入隔离和代际流动。作者发现，在以考试成绩为录取条件并且忽视父母收入差异的前提下（Income-neutral student allocations，收入中性的分配方式），将大大减少大学之间的收入隔离。如果在申请和录取过程中给予低收入和中等收入学生足够的分数减免（Need-affirmative student allocations，需要肯定的分配方式），甚至可以消除大学之间父母的收入隔离。通过计算可知，在假设学生收入的80%的取决于就读于该大学的因果效应时，收入中性的分配方式可以将大学生的代际收入持久性降低约15%，需要肯定的分配方式可以将大学生的代际收入持久性降低约25%。简言之，通过改变学生分配到大学的方式可以大大减少收入隔离，增加代际流动性。</p>
<p><strong>02</strong></p>
<h4><span id="shu-ju-jie-shao"><strong>数据介绍</strong></span><a href="#shu-ju-jie-shao" class="header-anchor">#</a></h4><p>（一）样本定义</p>
<p>　　儿童样本包括：所有（1）拥有有效的社会安全号码（SSN）或个人纳税人识别码（ITIN），（2）出生于1980至1991年间，（3）并且可以与税收数据中收入非负的父母建立联系的所有美国个人，样本约4810万人。父母样本定义为在孩子12-17岁之间是孩子最新纳税申报人的美国个人。</p>
<p>（二）大学入学率</p>
<p>　　孩子的大学入学信息源于联邦税收记录和教育部记录，数据的可得范围为1999-2013年。具体地，文章主要使用1098-T表格和国家学生贷款数据系统（NSLDS）的佩尔补助金记录识别孩子在19-22岁中就读于哪所大学的详细信息。识别步骤详见在线附录B。</p>
<p>（三）收入</p>
<p>　　作者从1996年至2014年的联邦所得税记录中获得了有关儿童和父母收入的数据，具体源于所得税申报表（1040表格）和第三方信息申报表（例如W -2表格），并以2015年消费者物价指数调整了通货膨胀。作者将家庭层面的税前总收入定义为父母收入，并对孩子15至19岁时的父母收入进行平均，然后对父母的收入百分位数进行排名。孩子收入是2014年的税前个人总收入，根据同一出生队列中其他孩子的个人收入来对孩子的收入百分位数进行排名。</p>
<p>（四）考试成绩和种族</p>
<p>　　作者从大学委员会和ACT获得了孩子样本的标准高考成绩和种族记录，数据涵盖了1996-2004年的SAT分数和1995-2007年的ACT分数。文章优先关注SAT分数，并将ACT分数映射为同等的SAT分数，如果个人参加了多次相同的测试，则取其最高分。此外，文章使用了以下五个种族类别：黑人、亚裔、非西班牙裔白人、西班牙裔和其他。</p>
<p>（五）大学水平的数据统计分析</p>
<p>　　进一步地，作者将孩子与父母的数据匹配到孩子就读的大学，具体的数据处理流程详见原文的在线附录F和G。此外，文章还将学校划分为四年制和两年制，并使用巴伦指数将四年制学校进一步划分为，常春藤联盟学校、其他精英类学校、高选择性类学校、选择性类学校和非选择性类学校五个层次。</p>
<p>（六）汇总统计</p>
<p>　　表1报告了研究样本中部分汇总统计数据。文章中主要关注1980-1982年的出生群组，因为这些孩子在2014年是32岁或更大，收入趋于稳定。列（1）基于1980-1982年出生群组的全样本，列（2）是1980-1982年出生并在19-22岁之间上大学的样本，列（3）是在1980-1982年出生但在19-22岁之间没上大学的。由表1可知，1980-82年出生的孩子中有62％在19至22岁之间的某个时候上大学，27％的孩子在28岁之前根本没有上过大学。1980年至1982年之间出生的孩子的父母家庭收入中位数为59,100美元，孩子在2014年的平均个人收入为26,900美元。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnyATMFdE2kicwr19mXJdSdfuDzMmKQvLKXKicLrias9rKZB5mTeBqicZ6vw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p><strong>03</strong></p>
<h4><span id="da-xue-zhi-jian-de-fu-mu-shou-ru-ge-chi"><strong>大学之间的父母收入隔离</strong></span><a href="#da-xue-zhi-jian-de-fu-mu-shou-ru-ge-chi" class="header-anchor">#</a></h4><p><code>父母收入水平与子女入学率，按照比例给出的！）分析非常好）</code></p>
<p>　　在评估高等教育体系如何影响代际流动时，了解<strong>大学之间收入隔离</strong>的程度是关键的第一步。在这一部分，作者构建了每个学校父母收入的统计数据。</p>
<p>　　图1中Panel A的横轴是父母的<strong>收入排名</strong>，纵轴是孩子的<strong>大学入学率</strong>。显然，学生是否上大学随父母收入的不同而有很大差异，父母收入越高其子女的大学入学率越高。</p>
<p>​        Panel B和Panel C则体现了子女就读的<strong>大学水平</strong>也会随父母的<strong>收入变化</strong>。Panel B展示了<strong>具有代表性的四所学校</strong>的父母收入分布，具体包括哈佛大学，伯克利大学、石溪大学和格伦代尔社区学校。以哈佛大学为例，有3.0％来自收入最低的家庭，而收入最高家庭的学生比例则超过70％，并且15.4％来自位于收入1％的顶端家庭。相比之下，格伦代尔社区学校中来自收入最高家庭的比例只有13.6％。</p>
<p>值得注意的是，伯克利是美国的精英公立学校，由图可知随着父母收入下降，贫穷的孩子上伯克利大学的可能性比上哈佛大学更大，但实际上底层家庭的学生几乎不需支付学费就可以进入精英私立大学，因此该结果表明，学费并不是造成精英私立大学中低收入学生人数不足的主要原因。</p>
<p>Panel C显示了常春藤盟校的父母收入分布情况，其中14.5％的学生来自收入最高的顶端1%家庭，而只有3.8％的学生来自底层家庭，这意味着精英大学中父母收入的集中度更高。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnRdOupmKwbdjoXB66U1acwYwh3VImtMwxlxy90nW1U71Gw3XJZNbFibA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p><strong>04</strong></p>
<h4><span id="hai-zi-de-shou-ru-jie-guo"><strong>孩子的收入结果</strong></span><a href="#hai-zi-de-shou-ru-jie-guo" class="header-anchor">#</a></h4><p>　　本部分，作者研究每所大学的孩子的收入结果（以父母的收入为条件），这是与大学在代际流动中的作用有关的三个关键因素中的第二个。作者首先评估了大学内部的代际收入持久性，然后分析孩子的收入结果和代际流动率在各大学之间如何变化。</p>
<p>（一）大学内部孩子收入结果的异质性</p>
<p>　　图2中Panel A的横轴是父母的收入排名，纵轴是孩子的收入排名，斜率越大说明孩子收入对父母的依赖性越高，即代际流动性越低。基于全部样本时斜率为0.288，即父母收入平均排名每提高1个百分点，孩子的平均收入就会增加0.288个百分点，在进一步控制大学固定效应时，斜率下降至0.139。</p>
<p>此外，Panel B还展示了伯克利大学、石溪大学和社区大学的代际收入情况，尽管三条线的截距存在差异但斜率趋于一致，截距不同说明<strong>不同层次学校</strong>之间的学生收入差距明显，斜率一致并且很小则意味着同一学校的学生收入并不十分依赖父母的收入。这一结果也体现在了不同层次大学之间详见Panel C。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnM03zY1iawcMncs5iaXBy8ILSIY1bh9v6ic1plawQibPWxbKOcwc5OPbDxw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>　　表3是具体的实证结果，其中的系数对应图2中的斜率，数值越大说明代际越固化。其中，列（1）汇报了基准回归结果，列（2）-（8）是稳健性回归结果。以列（1）为例，Panel A报告了基于所有样本的父母收入排名对孩子收入排名回归的系数，Panel B控制了大学固定效应。Panel C控制了分数与大学固定效应的交互项，系数变化不大，说明就读于同一所大学的低收入家庭和高收入家庭的孩子之间的收入差异不能用学习能力或准备程度的差异来解释。Panel D将样本限制在那些上大学的人，斜率下降到0.10。Panel E，F和G分别展示了精英类大学、其他四年制大学、两年制大学的回归结果。关于稳健性检验，列（2,按照当地收入对孩子的收入进行了调整，列（3）更换了被解释变量，使用孩子是否工作代替收入排名，列（4）和列（5）是分性别回归，列（6）和列（8）使用孩子家庭层面的收入排名代替个人收入排名，列（7）是是否结婚，具体分析详见原文Section Ⅳ.A.1。上述结果说明，无论是普通大学还是精英大学，一旦跨进了学校的门槛，其实孩子之间的收入差距就已经被缩小。换句话说，孩子的收入差异大部分是由于就读于不同大学导致的。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnjKmgkPaWJ49w0epDLUePtpTNQ95jaNEuTadJN2Tx0utI91LEUicQfww/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>（二）大学之间孩子收入结果的异质性</p>
<p>　　前文的分析说明孩子之间的收入差异主要体现在大学之间。为探究大学之间学生收入的异质性，本文设置了流动率计算公式计算全美各高校的流动率，原文的正文中作者主要计算了父母收入位于底层五分之一子女收入进入最顶层五分之一的流动率。需要注意的是流动率反映了选择效应（被录取学生的类型）和因果效应（学校的附加值）的结合。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnoIJIUpSMUjLNniaPVqH00CGJniay535vchupbmzRLzBhqDKyceffaU8Q/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>　　下图展示了各大学的流动率情况，并且绘制了代表一组大学流动率的等量线。Panel A，横轴可以理解为寒门学子在某大学学生中比例，纵轴表示寒门学子的收入进入顶端五分之一的成功率。显然，寒门学子比例较高的大学，成功率往往较小。蓝色表明常春藤盟校的情况，显然，寒门学子的成功率较高，但就读率低，平均流动率为2.2%略高于全国平均水平。精英类的公立大学用红色表示，它们的就读率略高但成功率却低得多，因此平均流动率低于常春藤联盟。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnfgq8ZnJrpV4srzL2ZBicPXqNNF9jsNwRvwhIibuicSpup9ynoibuQbn49w/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>　　Panel B是寒门学子的收入进入顶端1%的流动率，显然常春藤大学的成功率明显高于其他学校。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPn76VYnKicABB85Bl7sNSb3NB7ECibIPPYqLjyCTk3yJiaXV6PH41zFUk4A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p><strong>05</strong></p>
<p><strong>学生分配到大学的变化将如何影响种族隔离和代际流动？</strong></p>
<p>　　在这一部分，作者使用反事实模拟的手段评估如果学生被分配到不同的大学，不同大学之间的收入差距和代际流动性会发生怎样的变化。</p>
<p>（一）不匹配：按父母收入划分的SAT / ACT分数</p>
<p>　　文章首先展示SAT/ACT分数如何随父母收入的变化而变化。下图中Panel A绘制了研究样本中分数高于1300的大学生的父母收入分布。显然，来自低收入家庭学生的平均考试成绩要低得多。分数高于1300的孩子中仅有3.7%来自底层五分之一家庭，而53.7%来自顶层五分之一的家庭。而对中产阶级，他们的考试成绩好像与常春藤的就读比例不太匹配。Panel B表示常春藤盟校中分数为1400的学生比例，可以观察到一个不对称的U形。说明常青藤盟校中确实中产阶级缺失。因此作者推测，申请或招生政策的变化可能会显著增加中产阶级家庭在美国最具选择性的私立大学中的比例。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPn4hpcrpGaBo9RkNRJUO04Jn2rhwBOjSxrC0ehE645LMU0p4UJqggvDw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnv2nTDzLfGrZQUltfRt04otMDAJCc5yqsotnfsWfJv71jPDicdYhJwmQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>（二）反事实分配</p>
<p>　　收入中性的分配方式（Income-neutral student allocations）。文章按州和种族记录每个学校SAT分数向量。然后从各州各种族的大学生中随机抽取一名考试成绩为s的学生，填补学校中对应州对应种族的学生空缺。这种分配制度消除了同一州和种族中考试成绩相似的学生之间因父母收入而导致的入学差异，该分配方式称收入中性的分配方式。</p>
<p>　　需要肯定的分配方式（Need-affirmative student allocations）。文章还考虑到这样一个问题，我们需要给低收入的孩子多少优先权，或者说低收入学生的考试成绩必须提高多少才能完全消除大学之间的隔离。通过迭代发现为来自底层五分之一的孩子增加160分会产生了精英大学中大致相等的各层父母收入份额，该分配方式称为需要肯定的分配方式。</p>
<p>（三）收入隔离的变化</p>
<p>　　下图的Panel A展示了在反事实分配下大学之间的隔离会如何变化。左边的一组柱状图绘制了来自底层五分之一的学生接触到的顶层五分之一的大学同龄人的比例，考察了低收入家庭的学生与高收入家庭的学生接触的程度。右边的一组柱状图考察了高收入家庭学生之间的接触程度。显然，如果大学入学是以收入中性的分配方式进行，大学之间的隔离将大幅下降，而肯定需求的分配方式则基本上完全取消了高等教育系统的隔离。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnFKrPExVzGMsCXX4sCxgIcDPbQ5bdHJJEZdIcNyQmuibqBIrNAH3yYZw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>（四）代际流动的变化</p>
<p>　　首先，文章通过以下回归模型评估出大学的因果效应。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnvFQA78IEQ6m9QfnWZdQd4SGDLnUCr5sJWY3kqPrKus0Y5By8U45CJg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>　　其中<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnO4cGrqGx4yy7tGKtc5VJlxqPzicDMyEpfqlpUN3Ay7ZCc47hdaTiaJgA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">表示父母收入等级为q就读于大学c的学生i的收入等级；<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPn8icWPmOCOBRSHvRSIdVEcofJVZlZLv2yx4iapVtUekgppiawRRV6eRHicA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">是观察到的学生特征；<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPn3icBuT86DAJX2KFmymwheoYhfvcelWAVy2xHMlrzpA3AjYiaxGPYL1yg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">是学生SAT分数的五分位数；<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnnpMQh2CvvmrukcmZfvcllQ5Rz6oDD6v7R1zWOTlIbkIPWe9RbFOA3Q/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">是学生父母收入等级的五分位数，<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnIFjFIQFB5E9icEvv3y1R0u0iczUCZrKqAice8H7b4BgFgNAsg3Ln5VtHg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">是种族固定效应，<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnfZDwS3tgvuhDKayzJucrmSg7VRvTeKRJjaWpyAODjib3wuaC4dWVbCA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">是大学固定效应。首先，第一个回归中不加<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPn8icWPmOCOBRSHvRSIdVEcofJVZlZLv2yx4iapVtUekgppiawRRV6eRHicA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">得出<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnNS4r9wBfoicTFicAM0Aps2bWd5B138sA24V2vXUWkBXl3hqj6zWB77OQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">，然后加入<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPn8icWPmOCOBRSHvRSIdVEcofJVZlZLv2yx4iapVtUekgppiawRRV6eRHicA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">得出<img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnmVxQXMnfeibnP05Mb1d2H5Sprfhnq3bxBMiagsHZNWz1GAvUia6G8ehHg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">，最后通过第二个回归估计λ。在潜在学生的素质与就读大学的条件不相关的前提下，λ可以视为大学因果关系的反映。</p>
<p>　　表7展示了估计λ的回归结果。列（1）至列（3）控制了一系列可观测的学生特征，λ&gt; 0.9，即超过90%的收入变化是源于因果效应。列（4）和列（5）使用学生申请的学校作为对他们潜在能力的控制，具体的是控制学生申请学校的平均分数和申请学校的总数，列（6）将样本限制于父母收入位于底层五分之一的样本，λ估计值约为0.85，95%置信区间的下限约为0.82。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnjQkCibiaJQDgF3q9VJhZibMLugYia9wqNW21iaXSribWnGoHJ5ibwdjxQUJ3w/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>　　接下来，作者假设λ= 80%，即孩子们的条件收入差异是80%由于大学造成的因果效应，同时假设这些估计的因果效应在我们的反事实学生重新分配下不会改变。作者为每个大学的儿童构建了一个反事实的收入分布。具体地，孩子们实际收入的概率为20%，收入中性分配下对应的收入的概率为80%，据此得到反事实收入并重新计算五分位数。</p>
<p>　　表8展示了学校的代际过渡矩阵。Panel A显示了实际的过渡矩阵，Panel B显示了收入中性的分配方式下的代际过渡矩阵，Panel C展示了需要肯定的分配方式下的代际过渡矩阵。以父母收入处于底层五分之一而孩子进入收入顶层五分之一为例，实际情况下，Panel A第五栏显示，孩子进入收入最高的五分之一的范围从18.2％到40.2％；收入中性的分配方式下，Panel B第五栏显示，孩子进入收入最高的五分之一的范围从19.5％到38.3％；需要肯定的分配方式下，Panel C第五栏显示，进入收入最高的五分之一的范围从20.8％到37.0％。通过计算：</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnlkuSvGo1Noxvq4FTIIrtmQwbebndNvALDomFCmeVnGmCBhy2Z6fQZA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPngpXnqEv9QibPiaW4F4HcMQMnZUQOwHfYvGwwdGmicfwRdJZsBr5Vbbwzg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>　　可得，在收入中性分配方式下，父母与子女收入等级之间的相关性下降14.6％；在需要肯定的分配方式下，父母与子女收入等级之间的相关性下降26.5％。需求肯定的分配对流动率的影响几乎是收入中立分配的两倍，这是因为需求肯定的分配可以使低收入的学生能够进入更高选择性层次中的高附加值大学。此外，文章还对因果效应的比例进行了不同的假设详见在线附录表XVI。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/dmLyqh5TYr8W7e55RxVdK0V5X1UFZrPnVDMvCK2UDVmvel5KD7URWFZCSKnts9MaibgLJIo48MVwAVl4jJEYNibA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p><strong>06</strong></p>
<p><strong>结论和启示</strong></p>
<p>　　这篇文章考察了高等教育体系对美国社会流动性的影响，借助所得税申报表上和大学出勤等信息，计算了涵盖全美高校的流动率，发现不同学校在促进代际流动上差异明显，并证明了家境贫寒的学生可以通过报考学校实现逆袭，具有极强的理论意义和政策含义。具体地，作者利用涵盖1999年至2013年几乎所有美国大学生的数据构建了大学层面的统计数据，发现了这样两个事实：（1）大学之间存在父母收入隔离；（2）在同一所大学就读的低收入家庭和高收入家庭的孩子的收入差异不大，但来自高收入家庭的孩子更有可能进入收入结果高的大学。作者结合大学层面的统计数据和学生SAT/ACT成绩发现，在保持学生的种族构成和地理来源不变的前提下，根据学生的考试成绩，以收入中性的分配方式将学生分配到大学，将大大增加来自中低收入家庭的学生在精英类大学中的人数。进一步地，在假设80%的收入差异源于因果关系的情况下（取决于父母收入、种族和州），反事实模拟表明，收入中性的分配方式会使收入的代际持久性降低15%，需要肯定的分配方式将收入的代际持久性降低约25%。作者指出对学生分配大学的可行改变可以在不改变现有教育计划的情况下大幅提高代际流动性。</p>
<p>　　尽管中美两国的教育背景有很大差异，但这项研究对我们仍有非常大的参考意义。政策制定方面：首先，政府在帮助寒门学子通过教育改变命运时，或许不止高考扩招这一条路径；并且，政府可以对于985/211类大学和普通大学制定针对性的政策，以便大学教育更好地促进社会流动性。学术研究方面：相对于选择大学，寒门学子能否通过职业或行业选择实现逆袭呢？换言之，哪些职业或行业的代际流动性高一些？政府和高校为寒门学子提供就业支持或补贴是否可以更好的促进社会流动性呢？这些均是值得进一步探索的研究方向。这些均是毕竟，教育资源的不平等或许不是通过个人努力就可以突破的。</p>
<h2><span id="02">02</span><a href="#02" class="header-anchor">#</a></h2><h3><span id="0223">0223</span><a href="#0223" class="header-anchor">#</a></h3><h5><span id="specialization-then-and-now-marriage-children-and-the-gender-earnings-gap-across-cohorts">Specialization Then and Now: Marriage, Children, and the Gender Earnings Gap across Cohorts</span><a href="#specialization-then-and-now-marriage-children-and-the-gender-earnings-gap-across-cohorts" class="header-anchor">#</a></h5><p>“Specialization Then and Now: Marriage, Children, and the Gender Earnings Gap across Cohorts”，The Journal of Economic Perspectives, Vol. 31, No. 1 (Winter 2017), pp. 183-204.</p>
<h5><span id="yin-yan">引言</span><a href="#yin-yan" class="header-anchor">#</a></h5><p><img src="/2020/12/25/%E7%A7%91%E7%A0%94-sharepaper/Specialization Then and Now_ Marriage,Children, and the Gender Earnings Gapacross Cohorts .png" alt="Specialization Then and Now_ Marriage,Children, and the Gender Earnings Gapacross Cohorts "></p>
<h4><span id="returns-to-education-the-causal-effects-of-education-on-earnings-health-and-smoking">Returns to Education: The Causal Effects of Education on Earnings, Health, and Smoking</span><a href="#returns-to-education-the-causal-effects-of-education-on-earnings-health-and-smoking" class="header-anchor">#</a></h4><p>This paper estimates returns to education using a dynamic model of educational choice that synthesizes approaches in the structural dynamic discrete choice literature with approaches used in the reduced form treatment effect literature. It is an empirically robust middle ground between the two approaches which estimates economically interpretable and policy-relevant dynamic treatment effects that account for heterogeneity in cognitive and non-cognitive skills and the continuation values of educational choices. Graduating college is not a wise choice for all. Ability bias is a major component of observed educational differentials. For some, there are substantial causal effects of education at all stages of schooling.</p>
<p><img src="/2020/12/25/%E7%A7%91%E7%A0%94-sharepaper/image-20210223130537148.png" alt="image-20210223130537148" style="zoom:33%;"></p>
<hr>
<p>I can not understand it duo to difficulty.</p>
<hr>
<h4><span id="thinking"># Thinking</span><a href="#thinking" class="header-anchor">#</a></h4><p>社会科学问题：1</p>
<p>​    .1. problem(确定核心自变量，因变量)，要聚集于一个点。</p>
<pre><code>2. 实证；计量（控制变量）
3. 如果能有IV,文章档次瞬间提升。找不到，也没什么关系。也可以研究。我发现IV也不是想想的那么难，还是那么多人找得到，这是计量的热点。
4. 聚焦于一个点，切勿太大。姚洋老师说的很对，好的选择不是研究很对的因素，只聚焦于一个自变量。
</code></pre><p>Input then output</p>
<p>It is similar  for great scentific paper!</p>
<p><a href="https://academic.oup.com/qje/article/136/1/381/5928590">https://academic.oup.com/qje/article/136/1/381/5928590</a></p>
<h4><span id="specialization-then-and-now-marriage-children-and-the-gender-earnings-gap-across-cohorts">Specialization Then and Now: Marriage, Children, and the Gender Earnings Gap across Cohorts</span><a href="#specialization-then-and-now-marriage-children-and-the-gender-earnings-gap-across-cohorts" class="header-anchor">#</a></h4><p>old method! but an interesting problem</p>
<p>In this paper, we examine the evolution of the gender gap associated with marriage and parental status, comparing cohorts born between 1936 and 1985. The model of household specialization and division of labor introduced by Becker posits that when forming households, couples will exploit the gains from trade by having one spouse specialize in market work while the other specializes in household work. Given the historical advantage of men in the labor market, the model predicts specialization by gender and therefore an earnings advantage for married men and an earnings disadvantage for married women. Is this model of specialization useful for understanding the evolution of the gender gap across generations of women? And what about children? Academic papers have shown that wages of mothers are significantly lower than those of non-mothers with similar human capital characteristics. We do not attempt to build a structural model here, but rather document how changing associations between marriage and earnings, and between children and earnings, have contributed to the gender gap in an “accounting” sense.</p>
<h4><span id="gender-differences-in-job-search-trading-off-commute-against-wage">Gender Differences in Job Search: Trading off Commute against Wage</span><a href="#gender-differences-in-job-search-trading-off-commute-against-wage" class="header-anchor">#</a></h4><p>好的problem,</p>
<p>We relate gender differences in willingness to commute to the gender wage gap. Using French administrative data on job search criteria, we first document that unemployed women have a lower reservation wage and a shorter maximum acceptable commute than their male counterparts. We identify indifference curves between wage and commute using the joint distributions of reservation job attributes and accepted job bundles. Indifference curves are steeper for women, who value commute around 20% more than men. Controlling in particular for the previous job, newly hired women are paid after unemployment 4% less per hour and have a 12% shorter commute than men. Through the lens of a job search model where commuting matters, we estimate that gender differences in commute valuation can account for a 0.5 log point hourly wage deficit for women, that is, 14% of the residualized gender wage gap. Finally, we use job application data to test the robustness of our results and to show that female workers do not receive less demand from far-away employers, confirming that most of the gender gap in commute is supply-side driven.</p>
<h4><span id="the-effect-of-air-pollution-on-migration-evidence-from-china">The Effect of Air Pollution on Migration: Evidence from China</span><a href="#the-effect-of-air-pollution-on-migration-evidence-from-china" class="header-anchor">#</a></h4><p>old method to solve new question</p>
<p>it is worthy to template!</p>
<p>This paper looks at the effects of air pollution on migration in China using changes in the average strength of thermal inversions over five-year periods as a source of exogenous variation for medium-run air pollution levels. Our findings suggest that air pollution is responsible for large changes in inflows and outflows of migration in China. Specifically, we find that a 10 percent increase in air pollution, holding everything else constant, is capable of reducing population through net out migration by about 2.8 percent in a given county. We find that these inflows are primarily driven by well-educated people at the beginning of their professional careers, leading to substantial changes in the sociodemographic composition of the population and labor force of Chinese counties. We also find strong gender asymmetries in the response of mid-age adults that suggests families are splitting across counties to protect vulnerable members of the household. Our results are robust to different specifications, including a spatial lag model that accounts for localized migration spillovers and spatially correlated pollution shocks.</p>
<h3><span id="0219">0219</span><a href="#0219" class="header-anchor">#</a></h3><p>行为思路+写作技巧</p>
<h5><span id="beauty-premium-in-china-s-labor-market-is-discrimination-the-main-reason">Beauty premium in China’s labor market: Is discrimination the main reason?</span><a href="#beauty-premium-in-china-s-labor-market-is-discrimination-the-main-reason" class="header-anchor">#</a></h5><p>Based on data from the China Labor-force Dynamics Survey (CLDS), this paper analyzes the effects of the height as well as other appearance characteristics of workers on their wages. Regression results show that after controlling for social network, human capital, and other endowment characteristics, the effects of the appearance characteristics become smaller and statistically insignificant. The decomposition results of the wage-appearance differentials show that higher wages for good-looking workers are mainly attributable to differences in individual characteristics. Among them, the lower wages for shorter males and higher wages for thinner females are mainly attributable to the unexplained parts of discrimination. Males suffer more from “shortness penalty”, whereas females may earn from “pretty face”. Further results showed that height may influence blue-collar workers’ wages through the effect on physical strength. Empirical evidence also demonstrates that there are strong correlations between appearance and working ability (social network and human capital). Thus, our results confirmed the little beauty premium in the Chinese labor market and the relatively wages differentials are not mainly due to discrimination from consumers or employers, instead attributable mainly to differences of individual endowment characteristics.</p>
<p>I listening to Yao Yang’s course about to do economic research?</p>
<p>Story</p>
<p>STory</p>
<h1><span id="2020">2020</span><a href="#2020" class="header-anchor">#</a></h1><h2><span id="12">12</span><a href="#12" class="header-anchor">#</a></h2><h3><span id="computational-socioeconomics">computational socioeconomics</span><a href="#computational-socioeconomics" class="header-anchor">#</a></h3><h4><span id="predicting-neighborhoods-socioeconomic-attributes-using-restaurant-data">Predicting neighborhoods’ socioeconomic attributes using restaurant data</span><a href="#predicting-neighborhoods-socioeconomic-attributes-using-restaurant-data" class="header-anchor">#</a></h4><p><a href="https://www.pnas.org/content/116/31/15447">https://www.pnas.org/content/116/31/15447</a></p>
<p>High-resolution socioeconomic data are crucial for place-based policy design and implementation, but it remains scarce for many developing cities and countries. We show that an easily accessible and timely updated neighborhood attribute, restaurant, when combined with machine-learning models, can be used to effectively predict a range of socioeconomic attributes. This approach allows us to collect training samples from representative neighborhoods and then use our trained model to infer unsampled neighborhoods in the city in a granular, timely, and low-cost manner. The good cross-city transferability performance of our model can also help bridge the “data gap” between cities, by training the model in cities with rich survey data and then applying it to cities where such data are unavailable.</p>
<p>It is a creative but simple paper. Oh yeah!</p>
<p>How to use data to reveal economic status. How to do obtain deep and different from big data.(How to tell a beautiful story)</p>
<h3><span id="social-science">social science</span><a href="#social-science" class="header-anchor">#</a></h3><h4><span id="immigrants-and-the-making-of-america">Immigrants and the Making of America</span><a href="#immigrants-and-the-making-of-america" class="header-anchor">#</a></h4><p><a href="https://scholar.harvard.edu/files/nunn/files/sequeira_nunn_qian_restud_forthcoming_0.pdf">https://scholar.harvard.edu/files/nunn/files/sequeira_nunn_qian_restud_forthcoming_0.pdf</a></p>
<p>Abstract：We study the effects of European immigration to the U.S. during the Age of Mass Migration (1850-1920) on economic prosperity. Exploiting cross-county variation in immigration that arises from the interaction of fluctuations in aggregate immigrant flows and of the gradual expansion of the railway network, we find that counties with more historical immigration have higher income, less poverty, less unemployment, higher rates of urbanization, and greater educational attainment today. The long-run effects seem to capture the persistence of short-run benefits, including greater industrialization, increased agricultural productivity, and more innovation.</p>
<p>细细品味：发在了Top 5的期刊上。</p>
<p>选择的IV作为迁移量的代理： 单独建立一个回归方程，考虑了铁路，铁路相关的交互项。（接入前后)</p>
<p>然后在进行了2SLS回归。</p>
<p>内生性问题</p>
<p>工具变量，就是要找到一个跟误差项不相关，但是跟内生变量高度相关的变量，从而得到一致估计。</p>
<h3><span id="literature-review">Literature Review</span><a href="#literature-review" class="header-anchor">#</a></h3><p>三篇文献综述写的非常棒的文章。如果每个研究方向都有这种综述性，系统性文章，多省事啊。</p>
<p><a href="https://mp.weixin.qq.com/s/vYSpNQsYcri6QSvtU1dpag">夜间经济理论研究进展</a></p>
<p> <a href="https://mp.weixin.qq.com/s/qsDGxiTSVNuhNLeKymT3sw">性别收入差距问题研究新进展</a></p>
<p><a href="https://mp.weixin.qq.com/s/ka4LCOG5aZcey84ZIZkGEA">人工智能对经济的影响研究进展</a></p>
]]></content>
      <categories>
        <category>paper reading</category>
      </categories>
      <tags>
        <tag>paper</tag>
      </tags>
  </entry>
  <entry>
    <title>规划—-技能Post_Get</title>
    <url>/2020/10/09/%E8%A7%84%E5%88%92%E2%80%94-%E6%8A%80%E8%83%BDPost-Get/</url>
    <content><![CDATA[<p>积累</p>
<a id="more"></a>
<h1><span id="2021">2021</span><a href="#2021" class="header-anchor">#</a></h1><h2><span id="04">04</span><a href="#04" class="header-anchor">#</a></h2><h3><span id="10">10</span><a href="#10" class="header-anchor">#</a></h3><p><a href="https://posts.careerengine.us/p/5dac3e628c131b0541dd9171">https://posts.careerengine.us/p/5dac3e628c131b0541dd9171</a></p>
<p>衬托字体 ：time new roman 宋体</p>
<p>无衬托字体： 适合演示文稿</p>
<h4><span id="xing-zheng-qu-hua">行政区化</span><a href="#xing-zheng-qu-hua" class="header-anchor">#</a></h4><h2><span id="02">02</span><a href="#02" class="header-anchor">#</a></h2><h1><span id="202010">202010</span><a href="#202010" class="header-anchor">#</a></h1><h2><span id="list">List</span><a href="#list" class="header-anchor">#</a></h2><ol>
<li>origin绘图模板</li>
<li>Python绘图模型显示数值</li>
<li>ArcGIS绘图地图</li>
<li>GeoDa 分析空间数据</li>
</ol>
<p>不同数据间的汇合：键值的同一化</p>
<h2><span id="pyecharts-map">Pyecharts—Map</span><a href="#pyecharts-map" class="header-anchor">#</a></h2><p>行政边界</p>
<p><a href="https://blog.csdn.net/Jarry_cm/article/details/101464556?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight">https://blog.csdn.net/Jarry_cm/article/details/101464556?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.edu_weight</a></p>
<p><a href="https://blog.csdn.net/sinat_34117508/article/details/93186175">https://blog.csdn.net/sinat_34117508/article/details/93186175</a></p>
<p><a href="https://gallery.pyecharts.org/#/Calendar/calendar_heatmap">https://gallery.pyecharts.org/#/Calendar/calendar_heatmap</a></p>
<h2><span id="zi-liao-qing-dan">资料清单</span><a href="#zi-liao-qing-dan" class="header-anchor">#</a></h2><ol>
<li>地级市的地图<ol>
<li>标注省份城市</li>
<li>地市级图像</li>
<li>省份边界</li>
</ol>
</li>
<li>城市层面的数据</li>
</ol>
<h2><span id="ji-qi-xue-xi-suan-fa">机器学习算法</span><a href="#ji-qi-xue-xi-suan-fa" class="header-anchor">#</a></h2><p>要系统整理一个（原理推导，调包上sklean)</p>
<p>用latex做一个学术报告PPT</p>
<h2><span id="origin-zhi-shi-dian">origin 知识点</span><a href="#origin-zhi-shi-dian" class="header-anchor">#</a></h2><ol>
<li><p>新版本</p>
</li>
<li><p><a href="https://www.originlab.com/doc/python/originpro/New-originpro-package-for-easy-access-to-Python">https://www.originlab.com/doc/python/originpro/New-originpro-package-for-easy-access-to-Python</a></p>
</li>
<li><a href="https://www.originlab.com/doc/python/originpro/Sample-Projects-with-attached-Python-Code">https://www.originlab.com/doc/python/originpro/Sample-Projects-with-attached-Python-Code</a></li>
</ol>
<p><a href="https://icalculate.website/2020/02/24/Origin-Plugins-Graph-Maker/">https://icalculate.website/2020/02/24/Origin-Plugins-Graph-Maker/</a></p>
<p><img src="/2020/10/09/%E8%A7%84%E5%88%92%E2%80%94-%E6%8A%80%E8%83%BDPost-Get/录制_2020_10_10_19_14_51_262.gif" alt="录制_2020_10_10_19_14_51_262"></p>
]]></content>
      <categories>
        <category>学习の历程(Journal of Studying)</category>
      </categories>
      <tags>
        <tag>规划</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之可视化summary</title>
    <url>/2021/06/29/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8B%E5%8F%AF%E8%A7%86%E5%8C%96summary/</url>
    <content><![CDATA[<h1><span id="ruan-jian">软件</span><a href="#ruan-jian" class="header-anchor">#</a></h1><p>ArcGIS</p>
<p>Python</p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>可视化</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之BIday01</title>
    <url>/2021/06/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BBIday01/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="2168deda10f35e740a2095af53fa7157bcfad757632f7c6e7ba6952f0b858855"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>可视化</tag>
        <tag>BI</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-PSM</title>
    <url>/2021/04/17/%E7%A7%91%E7%A0%94-PSM/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="1f0bfbbcdaf9d3cf7c89a85f6eb1c854d7ed52532208d6faee6c0698afb3658a"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>内生性</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-微观数据库</title>
    <url>/2021/04/07/%E7%A7%91%E7%A0%94-%E5%BE%AE%E8%A7%82%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>免费的微观数据库</p>
<a id="more"></a>
<h1><span id="tong-ji-gong-kai-shu-ju-ji">统计公开数据集</span><a href="#tong-ji-gong-kai-shu-ju-ji" class="header-anchor">#</a></h1><h2><span id="cfps">CFPS</span><a href="#cfps" class="header-anchor">#</a></h2><p>中国家庭追踪调查（China Family Panel Studies，CFPS）旨在通过跟踪收集个体、家庭、社区三个层次的数据，反映中国社会、经济、人口、教育和健康的变迁，为学术研究和公共政策分析提供数据基础。</p>
<h2><span id="chip">CHIP</span><a href="#chip" class="header-anchor">#</a></h2><ul>
<li><strong>数据名称：</strong>中国家庭收入调查（China Household Income Projects） </li>
<li><strong>执行机构：</strong>北京师范大学</li>
<li><strong>开放数据年份：</strong>1988、1995、2002、2007</li>
<li><strong>调查方式：</strong>面访</li>
<li><strong>采用计算机辅助调查：</strong>否</li>
<li><strong>数据类型：</strong>截面数据</li>
<li><strong>抽样方式：</strong>国家统计局城乡居民收入调查的样本</li>
<li><strong>覆盖省份：</strong>19个省（1995）；22个省（2002）</li>
<li><strong>受访者：</strong>抽中家庭户中全部18岁以上人员</li>
<li><strong>分析单位：</strong>个人/家庭</li>
<li><strong>核心问题：</strong>收入水平</li>
<li><strong>具体内容：</strong>收入、消费、就业、生产等方面</li>
<li><strong>代表文章：</strong>赵西亮,梁文泉,李实. 房价上涨能够解释中国城镇居民高储蓄率吗?——基于CHIP微观数据的实证分析[J]. 经济学(季刊),2014,01:81-102.</li>
<li><strong>网站链接：</strong><a href="http://www.ciidbnu.org/chip">http://www.ciidbnu.org/chip</a></li>
</ul>
<h3><span id="zhong-guo-jia-ting-shou-ru-diao-cha-chip-shu-ju-shou-ye">中国家庭收入调查（CHIP）数据首页</span><a href="#zhong-guo-jia-ting-shou-ru-diao-cha-chip-shu-ju-shou-ye" class="header-anchor">#</a></h3><p>为了追踪中国收入分配的动态情况，中国家庭收入调查（CHIP）已经相继在1989年、1996年、2003年、2008年和2014年进行了五次入户调查。它们分别收集了1988、1995、2002、2007和2013年的收支信息，以及其他家庭和个人信息，分别编号为CHIP1988、CHIP1995、CHIP2002、CHIP2007和CHIP2013。这几次调查是由中外研究者共同组织的、关于“中国收入和不平等研究”的组成部分，并且在国家统计局的协助下完成。CHIP项目的参与者和其他学者分析了这四次调查数据，并且发表了涉及很多领域的文章、报告和学术书籍。对于CHIP调查的具体描述和主要研究发现可在Griffin 和Zhao（1993），Riskin、Zhao和Li（2001），Gustafsson、Li和Sicular（2008）以及Li、Hiroshi和Sicular（2013）中找到。</p>
<h2><span id="rumic">RUMIC</span><a href="#rumic" class="header-anchor">#</a></h2><ul>
<li><p><strong>数据名称：</strong>中国城乡流动数据库（Rural-Urban Migration in China） </p>
</li>
<li><p><strong>执行机构：</strong>澳大利亚国立大学、北京师范大学</p>
</li>
<li><p><strong>开放数据年份：</strong> 2008、2009</p>
</li>
<li><p><strong>调查方式：</strong>面访</p>
</li>
<li><p><strong>采用计算机辅助调查：</strong>是</p>
</li>
<li><p><strong>数据类型：</strong>追踪数据</p>
</li>
<li><p><strong>覆盖省份：</strong>本项目主要在人口流出或流入的大省进行调查。其中，农村住户调查是在以下9个省（直辖市）进行：安徽，重庆，广东，河北，河南，湖北，江苏，四川，浙江；城市流动人口调查是在以下15个城市进行：蚌埠，成都，重庆，东莞，广州，合肥，杭州，洛阳，南京，宁波，上海，深圳，武汉，无锡，郑州。城镇住户调查是在19个城市进行，包括城市流动人口调查以外的四个城市：安阳市，建德市，乐山，绵阳。</p>
</li>
<li><p><strong>分析单位：</strong>个人/家庭</p>
</li>
<li><p><strong>核心问题：</strong>人口流动的福利问题</p>
</li>
<li><p><strong>具体内容：</strong>调查问卷涉及个人和家庭层面的信息如家庭构成、成人教育、成人就业、家庭资产等。</p>
</li>
<li><p><strong>代表文章：</strong>温兴祥. 城镇化进程中外来居民和本地居民的收入差距问题[J]. 人口研究,2014,02:61-70.</p>
</li>
<li><p><strong>网站链接：</strong></p>
<p><a href="https://www.iza.org/organization/idsc?page=27&amp;id=58">https://www.iza.org/organization/idsc?page=27&amp;id=58</a></p>
<h2><span id="biao-ge">表格</span><a href="#biao-ge" class="header-anchor">#</a></h2></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>中文全称</strong></th>
<th><strong>英文简写</strong></th>
<th><strong>组织实施机构</strong></th>
<th><strong>数据申请网站</strong></th>
<th><strong>备注</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>中国家庭追踪调查</strong></td>
<td><strong>CFPS</strong></td>
<td><strong>北京大学中国社会科学调查中心</strong></td>
<td><strong><a href="http://www.isss.edu.cn/cfps/">http://www.isss.edu.cn/cfps/</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国健康与养老追踪调查</strong></td>
<td><strong>CHARLS</strong></td>
<td><strong>北京大学国家发展研究院</strong></td>
<td><strong><a href="http://charls.pku.edu.cn/zh-CN">http://charls.pku.edu.cn/zh-CN</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国综合社会调查</strong></td>
<td><strong>CGSS</strong></td>
<td><strong>中国人民大学社会学系、香港科技大学社会科学部</strong></td>
<td><strong><a href="http://www.chinagss.org/">http://www.chinagss.org/</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国家庭收入调查</strong></td>
<td><strong>CHIPS</strong></td>
<td><strong>北京师范大学中国收入分配研究院</strong></td>
<td><strong><a href="http://www.ciidbnu.org/index.asp">http://www.ciidbnu.org/index.asp</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国健康与营养调查</strong></td>
<td><strong>CHNS</strong></td>
<td><strong>北卡罗来纳大学人口研究中心、中国疾病控制中心</strong></td>
<td><strong><a href="http://www.cpc.unc.edu/projects/china/">http://www.cpc.unc.edu/projects/china/</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国家庭金融调查</strong></td>
<td><strong>CHFS</strong></td>
<td><strong>西南财经大学中国家庭金融调查与研究中心</strong></td>
<td><strong><a href="http://chfs.swufe.edu.cn/">http://chfs.swufe.edu.cn/</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国城镇住户**</strong>调查**</td>
<td><strong>UHS</strong></td>
<td><strong>国家统计局城调总队</strong></td>
<td></td>
<td><strong>特殊申请</strong></td>
</tr>
<tr>
<td><strong>中国人口普查（抽样调查）</strong></td>
<td><strong>Census</strong></td>
<td><strong>国家统计局</strong></td>
<td></td>
<td><strong>特殊申请</strong></td>
</tr>
<tr>
<td><strong>中国劳动力动态调查</strong></td>
<td><strong>CLDS</strong></td>
<td><strong>中山大学社会科学调查中心</strong></td>
<td><strong><a href="http://css.sysu.edu.cn/data/list">http://css.sysu.edu.cn/data/list</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国教育追踪**</strong>调查**</td>
<td><strong>CEPS</strong></td>
<td><strong>中国人民大学中国调查与数据中心</strong></td>
<td><strong><a href="http://ceps.ruc.edu.cn/">http://ceps.ruc.edu.cn/</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>中国宗教调查</strong></td>
<td><strong>CRS</strong></td>
<td><strong>中国人民大学哲学院与中国人民大学中国调查与数据中心</strong></td>
<td><strong><a href="http://crs.ruc.edu.cn/">http://crs.ruc.edu.cn/</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>全国流动人口动态监测调查数据</strong></td>
<td></td>
<td><strong>国家卫计委</strong></td>
<td><strong><a href="http://www.chinaldrk.org.cn/data/">http://www.chinaldrk.org.cn/data/</a></strong></td>
<td><strong>公开申请</strong></td>
</tr>
<tr>
<td><strong>全国农村固定观察点调查数据</strong></td>
<td></td>
<td><strong>中共中央政策研究室、国家农业部</strong></td>
<td></td>
<td><strong>特殊申请</strong></td>
</tr>
</tbody>
</table>
</div>
<h1><span id="zong-jie">总结</span><a href="#zong-jie" class="header-anchor">#</a></h1><p>文件名字： 经济学研究常用中国微观数据</p>
]]></content>
      <tags>
        <tag>科研</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-空间计量学</title>
    <url>/2021/04/01/%E7%A7%91%E7%A0%94-%E7%A9%BA%E9%97%B4%E8%AE%A1%E9%87%8F%E5%AD%A6/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="53ff9d8b3129b31c92c9ff7e949d52df39e961918de7924dc98329cfbeb39bd5"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>计量经济学</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-spatial</title>
    <url>/2021/03/28/%E7%A7%91%E7%A0%94-spatial/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="c72bdffad43671e61714c4cc264df338632f42dd1ec4cb3ca9d63615c7995dbe">d48c5e745d715f122bd09e68dcae5d1c9a536888bd5c10e48ec5df837e288e98baf5d98848204865a769cd63cf9389fef2d25b02d6bda80fb3b1a91e843b8308fa910d6df1b51b1ee98eb30db64ad09c5190cad1800089e1df844a46fbf538fcadabacf857d7282664d391292cb8da1e2b50b9ac48d32e9656b4159b3711dc8cffdde386cedf0395fc0714685680f8c9b75f01e1629fceb30669c18f5afe2bbac5cc58b487a91b3da5428a81bd8d7810593029fb310ced45d17f351224b684093c40d422ddcf5cd4bac985786c682698052d0c74ea2d645227cd3317f4b865a41013d5a5c0e76fef451ff2dc62cd071bc1d4dd480b3275a36e05b6ed01e14d931f30b9bba0f43706f5707e25e6fbfc10e2239a0793ae95544ab6a797004f38f991fc9f8d91ec6ff6d0299c397a0957d91342e5bafe20e5fb4c863018f527e44fbf508aa3f9e1908b39a11a3c9278f77f32e52bd58f358e4721f38632d01dc8cb0ae8d14963f22d03ac6a51cdef2a53e6df9072607ae5239535c703bedd24ab79715b90fc0929d0a3c506583c78a3d1ccb8e4dce1975e92f4df017d4e6f1d2d400dc081ca5ee3f107f7b92faf15811bd877d0701d8feef88574d403ab5597477435837e9111f3fb81d5de361d12344d54b4fc02b7cd10232454a69889f3a48c1aa089e21bbe3f4c4f1e66ccc8ed94d92e905c70478fb61a27acb284f51e8c82bf8b24a6ac4458c065c185a7f42d6dcc5c257fb71a2569a3279737ec3a1096e22fde811a147a9b76416e94aa453baeafe44cbdb5d3cbc4bfe72b9c69987187e2535dea41dbecec8874c222e1584164e5fc9c4a0aa1d14ccf4fe07f8315ead4fadcadf63d988cf22740fa39ad30a52fe5352fb1827dd2381591a6bf9ef2de27082257f1fb1b757dac5f961f2cc8e4ec2ba0c33352e1f73ea4ff3a4e8fe97d05625d9078a4d9d61f7c540a2ae04b8b055bd93851bd43e87e9250e62bc9888033914791734629e64d4b31b15eebe4281a6b0089d03673d6716721068a42afaeb470651b3c9c07d0c30cd5367327de905285b2b5cdd4c694b40e9bc802dd9deb3ddeab8d8e2264f2f793b0ae104feaccd5464b9cf89c9dead67f37af0ec793d4ce5fe6e5b37d574c65d158610bafce53fba161f0ce7b3bb6b352295b7daa7aae81af23c2411cf50fb2f683e9f3d33173bacf5181ba8c4a45f1c9a870c69afb37ccef98cac8a0791323ebeba436eaf471a4559f3690e53e63423d67123f7bc579b3011662c8d6c70dea8e3e4398589285fe1913ab1253a55f6d3975e9bf27aeb6c9e3314f6cf1d165186feae2dbe57d090956ea553c3b9db87a3db3706b3f029a4098772ccb1077433e71358b6a08ee22261527709297d4cc78a86b3a6d1772b1b6395635af250a7ac10d56b5897e6df2522c9b8e6dd168b70fbe21f974f42e47a541162b9a389e51b5ce7130e140320627cf8698256d0ecd37f66f2b638221e933312fbf2e68b5b3157788a082bff32cdc7aeff6f662fe8c4ba94ce4210bbcdca6b3c020a5645bb04d565d8f09697e2c631ae2d067e67970f12b7dfe6bba84624045c29efa7b4a20830f36af0a67f84d07c11dc0df1faeac46de130710ca06e7cc2ddc5c23f98205080eac3a9183efec6776066cd526efb8a3a0234c7d376a9d11816e5b9e43679d71a822741b5bf7d1e413531039e160fb44aecf044d1c78b454d0bb5df2e744132c545f9efafeb7c1819a90ca3a1e11ffe7b275f691b99c9f1eda7eb6915ce6731ba4a968098023bd9a7593b081098bcf0b7971bbbacce8071fc0bc45a30c0f1bf56c2394c6d98c39d8fd5698798398865036c89d44d4a74260b05f9bf982302a8d9ce173432bbfbe865fd3170595f4933f78a093e5cfee090b6153480112934d302a7a5a6c3663b8872bab8736ea80f7e6d3e18fa860c8d3001a5d5913073fcf846c3fcf8cf51b19b49463b664a69bd4d5ec02c7b3ac7eab215596a7c72937da1ca3f13e9c2914c42f5159462dd7ba9b083a2af6223149e0c8850d20f218e8118cf0407136e95925bf99b5727e3321d00ce1a0b44b88129f4f0e5f38498ccd5271ad8915b5fdb113f259f1e6c3633e48077afbf9c19a899e8d438f82cb29b1d71e085bee60961068338b2feae3f773b9d7a3f34dd110825dd6b88eb2153adf31a2fae05f71cff247d246dd283d732187b53e2e3fe0ce8ca320cb5ad9910319e1f13efc2504b9c0ea2d6c0af6bed3628e864134700a68c4c7c39bf7bfe0573cec0d05d8b32997e321e6c85d3f9a136a504a23ae67bc59a65cbdd668beabc24938f493d094c3574b079857290b52a06882d6132d687bf7101d483b9a7e3e23321b33d7e6fd5476e47c761d8533aa78e3c2257d81602e08fce918917943cbbc0233116969c390e1fce22f835d17607dbd567158fdf20a76cee71c2599f868433aad904d5cb3a657eda41b876ed38113467d5e81631fc0765fcfecbc09b88e12a7ed2860857bc4e8af9230dd7cd5f80e83d264ff9e5a511d83461a190c97a4fed9f506425d48a10cf8e61a1e9eeb8fb1bd27075c7439df9692c8215190851a579f28a09924ae65770fb6275705efb1b0c41f42d0d7864cdb4c58d966b259a93dcb2869a2bbf19a512e1aa6858e126d01bd5b12a9a99d501b8e163a78f3d1364024fa9ad2e4a3f7a91c455405baf8bf8a3261000367b060cae1e44a8524626a057ce6f0466c2665739899a63907566d8bfb28cf5794e9c32eadbd2c386ba43bc0334a51448a49cd9cb9dbd305843f4512e25ef870a967d612e92e2d02a5600ece478db046659a7ae160721b9f9fbcbc945e1a5eed1bffc6d609a06251e10fc8d0956e9e3a70e1629760bab80287c47bca17ab3fcd1ce7e1bf76a928499c46bc01ee7bbe2846022d78cbeeb1ee994934702c71fa1e83fdf7e1e27541d3a9be94db3c0e2a4a4f240419d8b75abbc51034a40dcfa6480c3d17533b2ca353f5bd4d87919234efd9e0f5167795407f53a89b8a16bc063fb61989cc2a8130a05bcb5ff27723b248f032eeac522ac0a033bc19f70bd4f496586bcac86654dd42d5b85130b12fa54a9c3f138131ff61a6b4f77cc140d5780db1cea73b148922d263f24c48e677dfee78a7ad24c9d99b93bc9852ac3f6c701a1725e86fe485af963e6d2e1c5174ff79229d5e2c82427b62928a140a68ef30904bb5eca927479314374d178b91e349b8d24d6f7f1a2efd635615f6797f40fb3fb99175d6daad1d3a8150e8f1b4d6938a1163a50d03b0bfbc5d1e43a81fee20c4047d04bdffb0952b795521ae6552062de0ad76b7e9baf66a8cd5d89da9b88c850c1935f4b25193e8b3e293bd198edb02c1a2a66a4c2bcb2030afe04b36ab10ecc998ea392ac886c05f2bd7f6af8094af6fe4f61440a17e3164c80f597c97ff383dc99c17ee504b073a03f9b721ac638f80a67f6fa6e1ef29f9bdb4d927cb8d0eff668413d313424399fa60ea160922a17a24c55d9965d01620e8c0d611bd7db8c6b9f34702a36d72599395e777313cfd04a2d4e0e25e8724379524288b6eb6bdf267132d0b6fbcad417560d4598f9bab26a6d157e63f320e339d4f308d6e241fa895287174c3ecace5dca3da576476c0e8a37053693f4214c06d2c45d9e1b1a1c20bdd8fe399b08e59c8ead2d454d4a4279a00a30fa5c3284d8ed662442fe9853ed43cd7ed63a143e26d8778aa8bb2a2c9bcd11c449b1d7be9bae4d5b1ba2aa3466127def4af0b54de6f9855d6381fc755e63f98144bf0914d316638c34b19687564e457814d5e3fa718c1b6cf00dbc4965068ef09976f5c98a68ae6364b32a141f998bde5ec41979f97605cc0fa42b41889d99061646c71af4517b23acdb604df2527e95687dca3179407bce45d7a7f43b19a9d4d570a01a2414db25584110e3bb72d5b04df68bb7e22603a4e40019e59ffdfd527c23b3e599d2e98e105e752ee9d52e9637cf6fabf9440fdc73f724f98ff48e1264bd73ec3ee9c71ba178d1794804417611e69510e0a05634a7c88cc30e7c048311d4bc899961cfde8788246e1da57a8cec0c0725f958ed23167c948db755a02e9cfd74e729bf4955247b6c1cb87a174e1756bf9b05c6051e3ac33ce4eb19ebcb54f3bd4b21d09a6a5f6dfb91e9ccce7a150464a678a5443bf3a8b3f6600955adb027a42783348df6de6d8241a5b9babd4bb923faf78dbe4bb6befe844925343030ce341bac8e7f9d08b8854a95c9000855d6d0594930ebe1f1f88a4efc8596f46ea3af94b24829fc7c76e14204b13e99e5fcf48a2bb2d45da386648034e59f683f4e728b304b5bc0f3ebd0083bf43937fc8e7c2be0da9a8103dd3baa2cc301ba9d5c191d6846d679c8c7da654c9e8d9ae5085cb6e5e0c38eefb5f42dd5ea7913cb4f0a95d710b79e7c0a34162f402aa88bc92c90a2ddbb734f1719435f5010b99bad82631f98b00735f22bc69dcc9ff4ae799693beace068dcdcbd899ee1632735df66023b6b34059219217dd1c5ba3e49e389c3c1e39ab0cc2d03930405929512c410f4b65395542c3d6f80f2d2f35ce8425b354db49fecfde1a898d31e22fa6c572ed993091082abfc6f3d4c2f23877c7f90e2d47bedf6979bde4a0631adbd66c7dbbab8668857d228ac228900d6f785b94861d07a808155c4ab8a9b2abcc4b19c7e9c05dd757909b7b6d013f4f035f8358a951c5bde63357f336875237c545dfeb979af5e749676063836e363c96f9ea16ad34ca4f5a0ff977c003263f96a67c4eb6d3873a454bc9c31ebd3363d8555a3fcecfb16045feccaa55049415c3de29db20fd26ebe6c70a1ef094a3b30d2e4ddf73a99f12e5c88992f576360171cc3dfd43545c5751ef8b223a223c00d3d14d8d4b3e4f8ede90e7e36fd4ebbc57bf9fd575d1ef94064b4d813d642b1dbc964e177a53589d5e742fe593dae9604a0373d542b8ff2dc853837f47a2930142c3c180bcd7b8616e9cadb2c35433b2e9841b19efa32dd5495e21ec575cb6e917841c6af983464b25efbeeed09426a5093b9135c58329b06f2574fb248f25b23a1ea5cbf459289dfd5f5fb9625053b9a29638ac1cd9a496362fcbe63cdb0881c70e038be61cd13e70c4887b9148d02e535bedda027ce22677e027754df50a0762b276ce1378b74b4908aad2486aac931fb2cc5826db25a033f061799d31d90a8a7f33c034981d4b5f6f924809e17d2c71f318d16f1a49d54a188114ca8f47733648e3be1425ec222b7071960fe030b8042d7dc3e80dca31108ab2e6294231790374d6b570f48e5b5a0fbb8c7190cf43acb72c7e6125075271ee73063aac8cac345bd5fab156eca95ed6c4f8fb3bb44b0ee5dcfbc72977641f936aa7594fabf8f5b66e88a3456f36162693cf96befe32f86854d423e7330907a26c43f1908610d02a9a4b1717de84c7d3cc081508af14fd719ce5f72e1788d9d43675937a42bcee7da2adeb9fc88c8af30e69a8f10cc97a4c20f37dc5586f1d86eeebf317951c7ded2abe95dd00a03a36cc5384ac43fbcedb26a5c6f16a21f2f6ff94f47011eeb82df921e6078eed1dbe96c06d0e5f527bde47a031991cd4ed67dd7553d5ba880b4f3ba67ccdab194cdd66fca94dae75044f5dbe290520cdcdd5f47cdde96970c50b8a2a2a747e6a1852f98e6aef88e3839671477b16a7c659488f03e5ef26edafeb8f5ca6221be10ee17c76b9a7ee3db54f2740c5f27f285fe3261c4430be2713644fd67cff3d8a4017526b2eb99eac7f88ee99f33e986806a65d0d4fddc829389bb7e0c1daad866155792afb148b491f3ef7852115733266637532b39f664be3e1f439171d97aa5144352e788b25a6ff6d35065a033bce909510e37a40bc35e9f961a97c20917af04d755ba3ae622db7df110d55defa1b411180a1d20a3b6fb588023fa9191912394f0433dac7bee2a3e891fd497c93bfc6aa5822ec46a01684945616f8283d58e4a39ad29f025f8b901418cde63ce3829497053ab9593e1ebf438f5fb4b4e84ca0a76231a758b6fe175c02c1e271c80dc3e34de332dc19a61e11a304cf0ec5acb2c4b3bf7917a0c2fc274f40d10ab802873d32b91109fce836c26989c3bd6d2ef57a18e3423052d96f52bc2983abf3c837a94feb43d198bb32ae47993d9689ceeec1e1d1345a263ca9e30fdcc4d721917ec522cfdfd0e28a801649d5470822d99fc426cb2dffb654e610d153efd2eba38ab9a39f3592e9e9512f501494cc9f234702b5d84db68ae406a85ff9d6f9f5bceb529cdc579b5a9a04fe7b66d0d10a5cdf99ca0927c7fb7f3580f04f837099d66508795118accf42dc40a3494511dfd88ff4f3c67b7eed3afcbd4b6eddbeefc4991905d09e8a2d9422ce12af2780622d4f879e4dff2db7e4883579e79b8dd939cd1ff925291fb19e60af2efc64bd349c8b931b2fa6c4178bca1a4c3f0c84c4f39238ad545caf4fea4670b65b1f0b4e311398a26d2640553c2f576ba44c2e00682b178b1156b85e6a02f1d7f575b52bc9dbb889c760c82cab0df0d1a835aafede04e202e7ddd9cf7d4f4362afdacf91a409afcfda3d6d591ae4216d45a856e24a4a8cd7bb24a9286be5efa6f9918e1eba80c41a4b5afe09e4c9e217d5afdc0ad5bd96c7062087e7387d67dc8e03a2abe2f97edf5c3de7acd213cc9e60ce766e804c86461a861cc32a3e6814fdf9ae29b1026d091a91f1cca5f3f8004ae86681513413ddceff620cfe8e2c2689af3d70e4fe1330f880600b4903b34589a2a97c268faee5ec74753ef4b2c0c5cbac3555b12625f17547c83d9eaedcaeb8fc1e4676b8d848c6dbbaedb47ca9a38ebb1b8dd57dba2721d2bf928ad605b51eb206fd17288730effa46bfc3e62bb817238e0f4490362c23e71fd557f504641634aef6278885199117fd70c0389ee3bab0686c25cdf0e2ab858985443cba59814746dc22821af53cdece7744fda936651c1c4e7c89acecfdbb385c41fee4a940a67fbc645e9529bfa81455453da03f7ef5d1fb46d64587295be82ba9804a7c6e1c062aef81553411588e50a8fe7a7fd5ee90503c6fe36e7647c2f7ac7c9c0ddf5b2c1b8dd97785f8bde3e1b281697db9ca9ac79f93a10bfa5dab5b5d492d3986321c328ddc26961fd228b0067fa8d67047d40684d921c89cca92e18c963c9cbdfead31bab92c7db5fc00ba0d256a0347248f072b3f60631e129daa56731e937195cff2c6c42da82bad7c818896d4708ea22ec56f027a098ff504e89731ff4b134f8178e06bf49018fc81009e558f12aabcd8de7490552b7d7268ee9112ddb75f2a4a2ac6308c1458050fc1987edfc01a41283c388a0b60af18cccb0a72e1d5cb36b9f24d219c34a5fb9f1ec6a70115dd06fe5dc56ecff00fe61853425d2b31f03324175bd9d1cb47cad824704fb56b5a7c01649fb29d2c53a68f5a44a385f94646e6d3685bfb9bebb4a5897e784c6bcf1a55f0f4e9de1648f26b57882e91ca1b4ee48f6b40f9f5e29ea3320a19bc3c543b8d284f1dd78d4b1d5265e8584ff40c35bf1469e6085cc1beb1d59b7d5fcbf051fa706078229984f93a2df8cb0fb4bb9e3656d73e9a5e38d695f2a4ceebe2b92364b81c044ed14eb78f12e0d2666ade28eb72cd6f1e2297eb5bf758e5833c1948d374dad94f352e329c8af4797cdd2b6b5208b4e628fc4583ddf3e7cb78d9d791c4fa76d6329bceabfba8071e12eb3b96d849360bf6d491b753b637f31653ab8c4ca6a93e90709b92b5336648120684fdc5b60a33b4d1e906ecfb1064a4f3c9a65096adce38821810fbc46db6f23ea4103a65c585b33da3c8c6aba30bbcc4394c1161bd9260cdba3f97c9cc7008bb0f0174db1874d48c1fcf0a03ab30389928cf50893a916fa8a8ebbf26250e01243ecc23fb59f80785fcac4c9acb7dc3e9d25c02aaf77ca1df21eea7ee98bbc6d5eb6e9b323b5f8e99b58b85b682e3fa6e9cc694087269295309c5fde428bc32a6795ff2800e43ee967572d618fc694a306954ef8f52860a2db504e36421a9fe9e8f2cff94103f845e90517244121eaa0ba1715ff8e9940ad994946ced371f024652e6c012e6daf114f8b1c48a4cd00ad5f57997b6de537da3e36e98bd5e47ab755c6b22e5a838ca076eb92c039d1fbdf72746ad062751380b72436d81b4da760a562638748b1f18c779f36f1ffe31fc4eda699bca827ba2fc1c998a379cf474ac82d0b10f25602f1ce7dd56821f1016ff3120aef136607f6541af5e72259f70bf90d27019cc71065b2dcaaf1b732a9e9626313d48ac345a2b3e9a3493661c471db9068e332f9cd5f8012e7e81862ab2ac07255a06694bc44337d4182e886c3d02ab16d288116d25755d383768a54d50134998106d0637376ec3ef7e2197a1479c1b28cdfc34c4d95bc16cac24999c300d397eb378c616cb066eb1b78213b9ba3db1877ab824b3c7345f29b547fe6aacdfde1c071d2b653eede5b09adf3635101398aad4129671cf720e2cc09f652329ffc81a4f06d562f4063a16d9384ed1c9207ea7d2495db9f31824ad139c27c7ceb55f0e811579633856a2d9341aa81562b1fee11d5d00b2ff0428647294d91b787a0c221f37a9c1d321176b6eabe9498a3501ef86022b3dd9e54fdf504847d1929c32e523fb45ac14d777b114fa8db7e58880cc36827558c02556f1d1940b9c0d731cd3da5dd69a8fcf4e119ef7a95ecb61122bbc30b6b9ba7dc9ff96459ffe248179aa85debf5578fbbdd7748bc3b15f5b4fe6ecf99d1b4f545b299ebf794535baa20cda342919442c7cabb97aeb1f4f3c6169ef755b9c9719d255569177116ef632dee71c97dc2bcabfa4e0b2e07f2ba95670c4f144765acb7bb86e6a1aee38bb59c3b1bce9f280a1675f33a932a9b771dfc8aab86e4f9611b93fd732af09c7d66b7ba4775ccaf4222408023956af17bba4fa278f56d984ec3d98a31b80a89deb3ed8f5859f115e235783542efcb0c4b90ae07b29757316cd2d439b4b80860d84819de413823b9c08a1c3cdbe1f2ad50f2147dc21e3bccb8e9cc90f9ec22180211501ddad330d73876b82da23d918c8a35cb128df05e9933405eac12a9f4f3d1a3742111984d955fa25523ebc95bf485487d433d815e0d0dd0390dd865ce0f5bbd481acd88f66d57d6fdceb775f39f5f85968c9e290e883065042170d9471469fc5195fec2ca29175af2c5a32f7c08b9377ece5a6435b90e134dd65840afd85b7a46904fefe4fc9c9414c2e254ce1d818149327b3020cf9bc11607709ed4de1d94f96b010ab5e50c05234432c285f68fa3f6719862c8180b78d7a92ab9ecba26825dbd1d1ae616b1a75907f92d22f87880a9daa39d623cfb3dab3fd1fd1909f7c263d0b0dbe2ab849dae804233b0d5857ef4487e5858f90a1f9de068469656b81495c91e243f929c6b94b83ce11b91d9b0e926b9b52d1974ec59519ccb1782a35913d97c73951bc24d883a2b2f718cf07fead8a6d0485d322b0f504b77910f39d1922d6a44c140f9337863ee1512baa23cf8845d8bb6f4c835d15b42d5af94cabdadca5c9f44d0b4b6b69940d53ad0f14223140b327f5023c14c93f2400c4cd6d2797ca0d45d24fb548de3d56c12851f9ce3a30aeb6ad5edd5fd06cb6ec08901dc3ee8295f81c48f25b0220443f0ba3d4d65e7f2e2a98c028c7f0964066b8a8f06e28f1acec603b76ba5ac626f7002cc9280acc734ddd51299483fc55c792b80e312aee873ad7a52322e08d38c4a2299b1e9d0369b6d9b7e98fbc7040e0e258193191cf1a0bf5b078961dada7bd585a69b7436122a244d2fddcd1663e41d0de1f2e935fafa130290106b24caeb9ff70129029275f88a2e32e857daae5f50b36898aafa06174a00b7402f4be77183322741a775b634b81f5ceed6623f8ebfcc6da1a9c05f1fdb838b8764a84cbeb0918581fb264d7780933271bde7678481b9bdc52c1a6a367200997c96e8f8efb1c22cd194347c93f3702d16b5f96deb03e13815fc5a95fb7374dbfa658bf54a2f1ab895afc1ac49c7c1fa1a0df7f072900333378f990d5a824b624fb19fa32810e1bbfd126ae81b81df5373bbded84b5a4fcdedeec3b799a507ea24a55d49a36298f465b2ea61db9e7108b2a1dbccfb998d039c1496a3cd9a8c991594de3857ebd2a4a5852601b74241e981510d425f2d2306daa39ffa7e89dea32b552a344e32ec4d7db67d2f8bca0f3d9f39ef984f85f8898f6223e67620fef1e79c793038e7501c6b088765196055b6b3f18e6bbcbe7f753176e9c193364ad860d3d8c357d2f27dbea4906cb7ddd038c5af88971cdadbc8594f07b45d14239d4cdb46ac6eb25ca2aa4efff827db6842daee7a049dc20109887e7ed38894553447379987d4a88bd8cfcb92dc1115dbc1087c1fd2a10e5e75d5045b78b66021653822487f81c3aa41616608bc3d8754006e667aa555493465a09f9b3b33449fca33044b85c295bd5abf458dcd432294aa033f420803229808bead021411300608d9bcef06210be93fcb2aabf8f3b2616e9d70e63c1e6c1aec60d914e</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>stata</tag>
      </tags>
  </entry>
  <entry>
    <title>stata</title>
    <url>/2021/03/23/stata/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="f958418da99f3dc2ca1efb7228088e85b4494ea3124c441f818a89b4595b1816"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>编程语</category>
      </categories>
      <tags>
        <tag>Stata</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-文献阅读</title>
    <url>/2021/02/24/%E7%A7%91%E7%A0%94-%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB-1/</url>
    <content><![CDATA[<p>文献阅读</p>
<a id="more"></a>
<h2><span id="06">06</span><a href="#06" class="header-anchor">#</a></h2><h2><span id="she-hui-ke-xue">社会科学</span><a href="#she-hui-ke-xue" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">The HSR network reduces the barriers to transport  and trade. </span><br><span class="line">As it enables people to come and go more  easily between different locations, it seems likely that  the cities that have high-quality resources will become  more attractive places to visit and do business. </span><br><span class="line">随着他使得人们来回在区域间非常方便，可能城市有更好的资源变成了更有吸引力的地区去旅游和商务</span><br><span class="line">It should  be expected that megacities like Shanghai, Beijing and Guangzhou will be the most enhanced.</span><br><span class="line">值得注意的是大城市想北京，上海，将被提高</span><br><span class="line">after the start of operation of the Beijing-Shanghai HSR line and found that the cities that most benefitted from the HSR</span><br><span class="line">were the two megacities Beijing and Shanghai. </span><br><span class="line">在高铁开通后，大城市从中获益的是北京和上海</span><br><span class="line">benefit from the arrival of HSR.</span><br><span class="line">从高铁中获益</span><br><span class="line">Some recent  observations show that the HSR has had a positive  impact on urban tourism in the cities connected to the  network.</span><br><span class="line">高铁对有的城市影响有正面影响</span><br><span class="line">Two possible reasons account for this larger effect.</span><br><span class="line">involve 涉及到</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="explaining-wage-differentials-by-field-of-study-among-higher-education-graduates-evidence-from-a-large-scale-survey-of-adult-skills">Explaining wage differentials by field of study among higher  education graduates: Evidence from a large-scale survey of  adult skills</span><a href="#explaining-wage-differentials-by-field-of-study-among-higher-education-graduates-evidence-from-a-large-scale-survey-of-adult-skills" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">专业</span><br><span class="line">分解了专业间的差异性(为什么产生专业间收入差异性的原因)</span><br><span class="line">	1. 常规技能 2. 技能 3. 性别因素</span><br><span class="line">	不错，不错的</span><br><span class="line"></span><br><span class="line">Field of study is an important correlate of labor market outcomes among higher-education graduates , but the underlying mechanisms are not well-understood. （学习与劳动率输出相关，但背后机制不好理解）</span><br><span class="line"></span><br><span class="line">between-fields wage differentials 专业间的差异性与技能水平差异有关联性（人力资本）</span><br><span class="line"></span><br><span class="line"> Specific skills, proxied by skill use on the job, explain a substantial portion of betweenfield wage differentials. </span><br><span class="line"> The literature review is vary deeping. What lie(underlying) behind betwen-filed disparities. </span><br><span class="line"> Quantifing : </span><br><span class="line"> 	(语言和算术） Literacy and numeracy skills can be understood as general (rather than specific) cognitive skills.</span><br><span class="line"> In addition to this between-field variation in general cognitive skills, there may be systematic differences in job-specific skills.  Job-specific skills that are low in supply (and/or in high demand) will yield higher returns. </span><br><span class="line">  除了在常规性认知技能</span><br><span class="line">  </span><br><span class="line">  sex distribution</span><br><span class="line">  anticipate childbearing （预期生产）</span><br><span class="line">  性别角色理论： gender role theory argues that social values and norms (e.g., of men as “breadwinners” and women as “carers”) affect  women’s preferences and make them select fields that emphasize social and immaterial skills (e.g., creative and artistic skills) with  limited labor market value, while eschewing fields that emphasize skills (e.g., mathematical and business skills) with substantial labor  market value.</span><br><span class="line">  </span><br><span class="line">  It is shown that </span><br><span class="line">  it is noted that</span><br><span class="line">  it is noticed that </span><br><span class="line">  it is well-known that</span><br><span class="line">  </span><br><span class="line">  is the composition effect, often also referred to as the “endowment effect” or the “explained part”. </span><br><span class="line">  </span><br><span class="line">  respectively， separately （separate） se par ate</span><br><span class="line">  </span><br><span class="line">  endowment composition effect</span><br><span class="line">  unexplained component </span><br><span class="line">  二元结构和城乡差距</span><br><span class="line">   China has a long history of a dual socioeconomic structure with huge urban–rural development gaps </span><br><span class="line">   a sharp reduction in cots lead to a fast flow of information. have advanced resource like education, economy,and culture.</span><br><span class="line">   HSR reduces GDP per cpaita in rurla and less developed areas.</span><br><span class="line">   某些地方：in city that 等等表达方式</span><br><span class="line">   resident(居民)</span><br><span class="line">   industrial restructure</span><br><span class="line">   别来 the share of secondary industry in GDP （在什么中的比例）</span><br><span class="line">   </span><br><span class="line">The results imply that a sharp increase in accessibility in remote counties due to HSR connection leads to greater population outflow than in unconnected counties。（比较，than in)(结果什么，lead to greater population outfow in less developed regions 导致，什么增加导致什么， 相比于等等)</span><br><span class="line">Specifically(In particular)特别的</span><br><span class="line">HSR connection decreases population growth in connected counties by 6.3% and in prefectural districts by 5.6%。（导致什么地方的什么减少了，lead a reduction in by. lead a xx reduction in (of)</span><br><span class="line"></span><br><span class="line">1. 目的</span><br><span class="line">2. 结果翻译（系数，显著性，相关性，增加，减少）</span><br><span class="line">3. 结果分析（一致性，解释理由，说明了什么，证明了什么，</span><br><span class="line">transport-realted, producer service</span><br><span class="line">Since China’s GDP has long been dominated by the secondary industry, such a restructuring process contributes to a reduction in GDP per capita.</span><br><span class="line">因为，对GDPpc的建设有贡献。</span><br><span class="line">reduction/ inseace in leads to </span><br><span class="line">generate(产生) yield lead to</span><br><span class="line">contribute</span><br><span class="line"></span><br><span class="line">解释： One possible explanation for the larger IV estimates is that </span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p>基于此，我觉得可以发一篇那种文章。有一个想法了。</p>
<h3><span id="oecd-guo-jia-er-tong-zao-qi-zhao-gu-zheng-ce-qu-xiang-chai-yi-ji-qi-dui-wo-guo-de-qi-shi">OECD 国家儿童早期照顾政策取向差异及其对我国的启示</span><a href="#oecd-guo-jia-er-tong-zao-qi-zhao-gu-zheng-ce-qu-xiang-chai-yi-ji-qi-dui-wo-guo-de-qi-shi" class="header-anchor">#</a></h3><h3><span id="you-er-yuan-jiao-yu-zhi-liang-dui-er-tong-fa-zhan-zeng-zhi-de-ying-xiang">幼儿园教育质量对儿童发展增值的影响</span><a href="#you-er-yuan-jiao-yu-zhi-liang-dui-er-tong-fa-zhan-zeng-zhi-de-ying-xiang" class="header-anchor">#</a></h3><p><strong>太有见解了。专业术语基本上都没有看见过。</strong></p>
<p>人口学信息和家庭背景特征  </p>
<p>人口学特征如性别、年龄、种族/民族，</p>
<p>家庭背景变量如家庭社会经济地位、家庭学习环境等。  可以通过收入、</p>
<p>发展增值</p>
<p>效应：两种效应</p>
<p>补偿效应假设（compensatory hypothesis），即处境不利儿童更能从高质量学前教育中获益；</p>
<p>[53]累积优势假设（leveraging hypothesis），即处于优势地位的儿童更能获益，这是由于其能力建立在先前的优势基础上。[54]但总体来看，高质量学前教育对哪类家庭状况的儿童群体作用更大仍未得出一致结论。  </p>
<p>每个园所从小班、中班两个年龄段随机选取 38 个班级、共 665 名儿童作为参与对象。<br>其中，男孩 311 名，占 46.8%，女孩 354 名，占 53.2%，平均年龄为 49.72 个月，标准差为 6.52。  </p>
<p>国家介入儿童照顾的程度和方式，国家和家庭的责任边界并非清晰且确定的。</p>
<p>质量的可靠性、价格的可负担性、资源的可获得性  </p>
<h2><span id="big-data-human-being-actitvies">big data - human being actitvies</span><a href="#big-data-human-being-actitvies" class="header-anchor">#</a></h2><h3><span id="exploring-the-spatiotemporal-patterns-of-residents-daily-activities-using-text-based-social-media-data-a-case-study-of-beijing-china">Exploring the Spatiotemporal Patterns of Residents’ Daily Activities Using Text-Based Social Media Data: A Case Study of Beijing, China</span><a href="#exploring-the-spatiotemporal-patterns-of-residents-daily-activities-using-text-based-social-media-data-a-case-study-of-beijing-china" class="header-anchor">#</a></h3><p><img src="https://www.mdpi.com/ijgi/ijgi-10-00389/article_deploy/html/images/ijgi-10-00389-g001-550.jpg" alt="img"></p>
<p><a href="https://www.mdpi.com/2220-9964/10/6/389">https://www.mdpi.com/2220-9964/10/6/389</a></p>
<p><img src="https://www.mdpi.com/ijgi/ijgi-10-00389/article_deploy/html/images/ijgi-10-00389-g004-550.jpg" alt="img"></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">lack limiations </span><br><span class="line">Using social media big data to human activities.</span><br><span class="line">resident cluster agglomaration behavior</span><br><span class="line">Beijing, the capital of China, is also the political and cultural center of the country. As of the end of 2019, the city had a total area of approximately 16,410 km2, including 16 districts, and a resident population of 21,536,000</span><br><span class="line">多少面积和多少常住人口</span><br><span class="line">Data:</span><br><span class="line">	1. 来源 （obtain from)</span><br><span class="line">	2. 数量规模（ pieces of data, involving )</span><br><span class="line">	3. 范围（城市数量等+时间+地理+人物）</span><br><span class="line">	4. 属性（字段）</span><br><span class="line">	5. 数据的缺陷 we are also aware of the problems of sample bias and representativeness in social media data</span><br><span class="line">	</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/2021/02/24/%E7%A7%91%E7%A0%94-%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB-1/image-20210626161032419.png" alt="image-20210626161032419"></p>
<p>the category of results is pretty good: semantic, temporal, spatial, influences factors. </p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">越来越好像没有谓语：</span><br><span class="line">	The more convenient the transport conditions, the more significant the co-location cluster of the residents’ daily activities</span><br><span class="line">	</span><br><span class="line">the explanatory power of variables by ranking </span><br><span class="line">	The study of residents’ daily activities has traditionally been an important part in the  fields of time-geography and behavioral geography, involving a range of activities such  as commuting, shopping, and leisure [62]. There exists a wealth of existing methods for  the classification of daily activities, with the number of activity types ranging from four  to hundreds [63,64]. However, residents’ daily activities are habitual, stable and highly  repetitive, overly broad or trivial classifications of activities are not conducive to research,  and the randomness of related activities may make it difficult to extract valuable regular  features. Moreover, some scholars have found that social media-based daily activities  include those such as at-home activities, working, eating, shopping, learning, leisure, and  entertainment, with an activity coverage rate of 94.5% [15,52]. However, given the broad  scope of at-home activities, the spatial characteristics are not obvious, and the Weibo data  themselves have a certain outdoor feature. Therefore, based on previous research and  taking into account the behavioral characteristics of local residents, seven types of activities  were selected as the main types of daily activities (Table 1), based on which the subsequent  step of text classification was carried out.</span><br><span class="line">	</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight latex"><table><tbody><tr><td class="code"><pre><span class="line">allow &amp; combine with :</span><br><span class="line">	Labor market flexibility is also key, since mothers, especially those with young children, may find it more difficult to return to full time positions. Flexible labor markets allow women to combine work with family responsibilities, increasing their labor supply, however, this may lead to lower wages</span><br><span class="line">	</span><br><span class="line">dependent variable derive</span><br><span class="line">	The dependent variable in our analysis is the natural logarithm of hourly wage. We derive the hourly wage based on the calculated  monthly earnings, using information on gross earnings received during the income reference period, the number of months spent in  full-time and part-time employment during that period, and the reported working time in hours.</span><br><span class="line">	</span><br><span class="line">Control for variable:</span><br><span class="line">	We start the analysis with the estimation of wage equations – for each country and for subsamples defined by gender and by  parenthood status. We control for several variables in the wage equations, namely education level, the age of individuals, and their  marital status. In addition to individual characteristics, we also control for regional disparities, and include the size of the place of  residence in terms of the total number of inhabitants and the region. In all equations, time fixed effects are controlled for using year  dummy variables. This is especially important because, as mentioned earlier, the years of data included in the analysis vary by country. The wage equations were estimated using robust standard errors</span><br><span class="line"></span><br><span class="line">收入方程：</span><br><span class="line">	Mincerian wage equations</span><br><span class="line">Note that</span><br><span class="line">结果陈述：</span><br><span class="line">	The highest gender gap can be seen in Estonia (0.35), followed by Norway and the Czech Republic (0.26), and Germany (0.24). The lowest gaps are observed in Romania (0.05) and Poland (0.06), followed by Greece (0.07). In  terms of country groups, the Nordic countries have the highest raw gaps (0.21), and the Southern EU countries have the lowest on  average (0.09), the other groups’ means are around 0.15. The unexplained gaps show a similar pattern, with the exception of the Eastern European group, which rises to the level of the Nordic countries mean gap (around 0.25) once observed characteristics are  accounted for.</span><br><span class="line">	</span><br><span class="line">restrict to(样本范围)</span><br><span class="line">	our samples are restricted to individuals aged 25–45 as opposed to all working age pop</span><br><span class="line">差异性很大：</span><br><span class="line">	vary across countries:</span><br><span class="line">		Contrary to the family gap among men, the family gap among women and its contribution to the gender wage gap varies significantly across countries, and there are some persistent patterns that are characteristic of the specified groups of countries.</span><br><span class="line">哪方面的差异性：	</span><br><span class="line">	difference in </span><br><span class="line">		gender wage gap among childless are explained by differences in the observable characteristics of individuals</span><br><span class="line">		</span><br><span class="line">观测observe</span><br><span class="line">	observable</span><br><span class="line">	</span><br><span class="line">范围：</span><br><span class="line">	Motherhood, in turn, affects women’s wages negatively in most, but not all of the countries. </span><br><span class="line">特别：</span><br><span class="line">	specially， particularly， In particular, </span><br><span class="line">	</span><br><span class="line">托幼的作用：</span><br><span class="line">	The accessibility of public childcare is also an important factor. Easily accessible childcare is found to affect the labor market  participation and the work continuity of women positively (Pettit and Hook, 2005), leading to a lower motherhood penalty.</span><br><span class="line">退出，受限，高cost</span><br><span class="line">	In particular, when public childcare is limited and private care is costly, lower  paid women may be more likely to drop out of the labor market.</span><br><span class="line">	</span><br><span class="line">工作中断的结果</span><br><span class="line">	The evidence suggests that long leaves decrease women’s employment continuity, leading to longer career interruptions, and consequently, the lower average wage of mothers once they return to work</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">By</span><br><span class="line">inserting city pair fixed effects into our regression framework, we can control for all unobserved and non-time varying heterogeneity on city pair level.</span><br><span class="line">These time-varying dummy variables capture the time varying local  heterogeneity that affect the attractiveness of destination cities and the investment  capacity of investor cities, and help to address the above endogeneity problems.</span><br><span class="line"></span><br><span class="line">This study first controls enough fixed effect to address this concern. The variable γc represents the  city’s fixed effects, τt captures the year’s fixed effect, δct represents a city-specific linear time trend. The city’s fixed effects can rule out  the time invariant geography or historical character, which affects both HSR connection and urban industry structure.</span><br><span class="line"></span><br><span class="line">The year’s  fixed effects can help to control for macroeconomic or political shocks, and city-specific linear can help to control for the city’s  economic growth. Standard errors are clustered at the province level.</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="high-speed-rail-and-urban-service-industry-agglomeration-evidence-from-china-s-yangtze-river-delta-region">High speed rail and urban service industry agglomeration: Evidence from China’s Yangtze River Delta region</span><a href="#high-speed-rail-and-urban-service-industry-agglomeration-evidence-from-china-s-yangtze-river-delta-region" class="header-anchor">#</a></h4><figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">A HSR service shortens the space-time distances between different  cities, and makes it possible for residents to work and consume in different cities. The “one-city effect” has appeared in China's Yangtze River Delta region and Pearl River Delta region, which have the highest  degree of HSR network density in China.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This is because a service industry is more dependent on the flow of population and information, but is not directly</span><br><span class="line">engaged in production activities </span><br><span class="line">how to choose variables:</span><br><span class="line"></span><br><span class="line">The reasons for the selection of control variables are described as  follows:</span><br><span class="line"><span class="code">	(1) Wage level is measured by the average wage in a city. The wage  level affects industry agglomeration from two perspectives. On the one  hand, a higher wage could attract labor and raise the degree of agglomeration. On the other hand, a higher wage could increase an enterprise's labor cost and thus negatively affect their location choice and  employment decision, thereby decreasing the agglomeration degree. Hence, the direction of the influence wage level on agglomeration is  uncertain.</span></span><br><span class="line"><span class="code">	(2) Openness is measured by the proportion of foreign direct investment (FDI) actually utilized in GDP. Since FDI brings in capital,  advanced technology, and management experience, FDI can induce a  spillover effect that facilitates industry agglomeration. Therefore, the  coefficient of Openness is expected to be positive.</span></span><br><span class="line"><span class="code">	(3) Human capital is measured by the number of full-time teachers in  higher schools, per 10,000 persons. Knowledge spillover is not only an  important influence factor of manufacturing agglomeration, but this  phenomenon also has a significant promotion effect on service industry  agglomeration, especially producer service industries. Hence, the  coefficient of Human capital is expected to be positive.</span></span><br><span class="line"><span class="code">	(4) Population density is measured by the population per square  kilometer. Population density reflects the influence of city scale on  service industry agglomeration. On the one hand, a greater population  density means a greater market size. This could create a “centripetal  force effect” and promote service industry agglomeration (Givoni, 2006). On the other hand, a HSR service enhances the location advantages of medium and small-sized cities with lower population density. Therefore, the “centrifugal force effect” may cause population and  production resources to spread from core cities with higher population  density to these medium and small-sized cities (Garmendia et al., 2008; Hall, 2009). Hence, the direction of the influence of population density  on agglomeration is uncertain.</span></span><br><span class="line"><span class="code">	(5) Infrastructure is measured by urban road area per person. Because having good infrastructure conditions is an important factor in  the promotion of industry agglomeration, the coefficient of Infrastructure is expected to be positive.</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">the domination of megacities</span><br><span class="line">China is currently undergoing the process of rapid urbanization. Such a rapid urbanization process results in some prominent issues in large cities, such as environmental pollution, traffic congestion, and high housing prices.</span><br><span class="line">Despite these negative impacts on the quality of life of urban residents, large cities have irreplaceable advantages in terms of employment, income, education, and health care.</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">industry</span><br><span class="line">Another study focusing on the HSR network in California argued that knowledge-intensive, time-sensitive, and tourism industries  are more affected by HSR than other industries.</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">leads to a reduction of GDP per capita by 10%.</span><br><span class="line">系数的解读：</span><br><span class="line">	As shown in columns (1) and (2), counties or districts in the central  areas do not suffer from, but actually gain from, connecting to HSR, and those at the peripheral  areas receive an increasing negative effect from HSR connection</span><br><span class="line">结果的extend:</span><br><span class="line">	The results also verify  predictions from the new economic geography that improvement in transports strengthens the  core–periphery pattern of regional development, which in our case happens mainly within a  province.</span><br><span class="line">下降：A sharp reduction in costs accessing central urban cities, due to HSR connection</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Panel A in Table 11 reports the effect of HSR connection on population growth, that is, the firstorder difference of the natural logarithm of population.</span><br><span class="line">We observe significant negative effects of HSR connection on population growth, which is larger at the county level than at the prefectural  municipal district level. </span><br><span class="line">(分解）The results imply that a sharp increase in accessibility in remote counties  due to HSR connection leads to greater population outflow than in unconnected counties.</span><br><span class="line"></span><br><span class="line">Specifically, HSR connection decreases population growth in connected counties by 6.3% and in  prefectural districts by 5.6%. A slightly larger effect of HSR connection from all data than from the  data dropping observations from provincial capitals also indicates that the population polarization  effect of HSR connection outweighs its population diffusion effect.</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h4><span id="family-structure-transitions-and-child-development-instability-selection-and-population-heterogeneity">Family Structure Transitions and Child Development: Instability, Selection, and Population Heterogeneity</span><a href="#family-structure-transitions-and-child-development-instability-selection-and-population-heterogeneity" class="header-anchor">#</a></h4><figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line">Literature summary</span><br><span class="line">	大量的文献</span><br><span class="line">	a growing literature</span><br><span class="line">	a large boby of literature on</span><br><span class="line">	document/ address</span><br><span class="line">	Numerous studies</span><br><span class="line">	A growing body of research finds that family structure instability is negatively associated with children’s wellbeing</span><br><span class="line">	研究内容： researc(literature on )</span><br><span class="line">	Research on the life course and human capital formation identifies early to middle childhood as a critical and sensitive period in child development</span><br><span class="line">	（过往研究聚焦在） Most prior research focuses on the quantity of change, that is, the number of family structure transitions a child experiences.</span><br><span class="line">	目的： In this article, we use longitudinal data from the Fragile Families and Child Wellbeing Study to examine the impacts of family instability on children’s cognitive and socioemotional development in early and middle childhood.</span><br><span class="line"></span><br><span class="line">	贡献：</span><br><span class="line">	1. contribute to</span><br><span class="line">	2. we extend(expand) existing(previous) research in several ways(from three aspects(threefild))</span><br><span class="line">	</span><br><span class="line"> Generally speaking</span><br><span class="line"> </span><br><span class="line">For example: Notably, Wu and Martinson (1993) found that family instability during childhood  increased the risk of nonmarital childbearing, whereas(while whereas 连词 therefore thus 介词) living in a stable, single-mother  family had no such effect.</span><br><span class="line">相关性：</span><br><span class="line">	be related to be associated with be correlated to / an association/correlation/relation between</span><br><span class="line">	</span><br><span class="line">decline increase</span><br><span class="line"></span><br><span class="line">研究问题</span><br><span class="line">	(causzal relationship) A second question is whether the association between family structure instability and child wellbeing is causal.</span><br><span class="line"></span><br><span class="line">stable stability steady</span><br><span class="line"></span><br><span class="line">	(heterogeneity) A final question involves differences in children’s responses to family instability across population subgroups. 异质性的表达： differences in acorss groups</span><br><span class="line"></span><br><span class="line">lackness(limiation) standard panel models are inadequate to provide unbiased estimates of treatment effects</span><br><span class="line"></span><br><span class="line">gain loss of</span><br><span class="line"></span><br><span class="line">意义</span><br><span class="line">	建立关系： We are willing to （be willing to ) build a solid and smooth bridge(build a bridge link) between producing and consumption, creating a harmonious and cooperative environment.</span><br><span class="line"></span><br><span class="line">名称： frequency and intensity of family change </span><br><span class="line">不同类型：  different types of family structure transitions （单复数） type of family transitions</span><br><span class="line"></span><br><span class="line">illustrate depict （图）</span><br><span class="line">benefit beneficial</span><br><span class="line">（特别输出的名称） Scholars  have also shown that the cognitive and socioemotional skills developed during childhood are  strong predictors of life course outcomes, such as academic achievement, health, educational  attainment, labor market performance, and union formation</span><br><span class="line"></span><br><span class="line">模型</span><br><span class="line">	 unobserved biased  significant  coefficients are statistically significant</span><br><span class="line">	  different types of selection bias.</span><br><span class="line">	  effect on</span><br><span class="line">	  </span><br><span class="line">对比  which is inconsistent with prior research.</span><br><span class="line">	  It is possible that</span><br><span class="line">	  </span><br><span class="line">A second limitation of our study is that sample size prevents us from examining the effects of instability in dating partnerships </span><br></pre></td></tr></tbody></table></figure>
<h4><span id="the-effects-of-formal-and-informal-child-care-on-the-mother-s-labor-supply-evidence-from-urban-china">The effects of formal and informal child care on the Mother’s labor supply—Evidence from urban China</span><a href="#the-effects-of-formal-and-informal-child-care-on-the-mother-s-labor-supply-evidence-from-urban-china" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">tend to</span><br><span class="line">In contrast on the contrary</span><br><span class="line"> inflexible time schedule </span><br><span class="line"> To keep mothers of young children on the labor market and to maintain good health of their children, one possible way could be to provide child care programs with fewer admission requirements, a more flexible time schedule, affordable prices, and reasonable quality.</span><br><span class="line">reasonable</span><br><span class="line">flexible</span><br><span class="line">approximately simultaneity</span><br><span class="line"> reverse causality</span><br><span class="line"> endogeneity</span><br><span class="line"> address</span><br><span class="line"> decisions</span><br><span class="line"> ignore</span><br><span class="line"> determiant</span><br><span class="line"> inflexibility</span><br><span class="line"> nursey kindergarten</span><br><span class="line"> current</span><br><span class="line"> supply</span><br><span class="line"> be referred to as</span><br><span class="line"> With regard to/ in terms of</span><br><span class="line"> especially</span><br><span class="line"> residence resident</span><br><span class="line"> organize</span><br><span class="line"> brief</span><br><span class="line"> biased</span><br><span class="line"> propensity preference</span><br><span class="line"> restriction</span><br><span class="line"> system, program</span><br><span class="line">  in parentheses </span><br><span class="line">  community</span><br><span class="line">  median</span><br><span class="line">  job type</span><br><span class="line">  lack limit limitation</span><br><span class="line">  elimit relieve allevate ease  relieve</span><br><span class="line">  three generations living together</span><br><span class="line">  exclude</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line">总结贡献：</span><br><span class="line">	In view of the limitations of previous studies, this paper contributes to the existing literature in the following aspects. </span><br><span class="line">Dummay 取值</span><br><span class="line">	that take value of one if .</span><br><span class="line">	FP status is defined as a dummy that takes the value of one if the mother has worked for at least 1 h for pay or has a job  but is temporarily on leave during the week prior to the interview, regardless of the job type.</span><br><span class="line">定义变量</span><br><span class="line">	For the benchmark sample, I define grandchild care use as a dummy that takes the value of one if any preschooler of the mother is mostly taken care of by the grandparents, where the grandparents do not necessarily live with the preschooler.</span><br><span class="line">	</span><br><span class="line">数据 （指标类型，including ）</span><br><span class="line">	The parent questionnaire provides demographic and socioeconomic characteristics of the parents and parents-in-law of the household head who are not living with the household head at the time of the interview, including whether they are living, age, gender, categorical educational attainment, etc. </span><br><span class="line">	The information on school-age children includes school attending status, schooling fees, etc.</span><br><span class="line">描述性证据</span><br><span class="line">	The figures in columns 1 and 2 of panel C show that mothers who receive grandchild care are more likely to participate in labor  force and work for longer hours. It seems that mothers who obtained polytech or undergraduate education and mothers who have at  least one child under age 2 are more likely to receive grandchild care.</span><br><span class="line">    (参与率，学历）Looking at columns 3 and 4, we see that the mother whose  child goes to kindergarten is more likely to participate in the labor force and work for longer hours. Mothers with a postgraduate  education and mothers who do not have any child under age 2 are more likely to send their children to kindergarten.</span><br><span class="line">    （描述现象，解释现象）Looking at the instruments in panel C, the smallest number of children of the grandparents is negatively associated with mother's LFP, possibly implying that the more children the grandparents have, the less likely it is that the grandparents provide child care and the less likely it is that the mother participates in the labor force.</span><br><span class="line">    （描述现象，数据表现，解释现象，现象说明了说明？？对现象进行转移）The figures in panel B show that, again, grandchild care use and kindergarten attendance of the preschooler are positively correlated with the mother's LFP. Better educated mothers and mothers with no child under age 2 are more likely to work. LFP is a decreasing function in market earnings of the spouse and the number of children.</span><br><span class="line"> 回归结果（while, whereas)</span><br><span class="line">	 Regarding instrumental variables, the number of children the grandparents have negatively affects the probability of grandchild care use, whereas whether the kindergarten has enrolled migrants children does not have a significant impact on grandchild care.</span><br><span class="line">	 （解释回归回归的系数显著性和正负，数值，然后进一步翻译，增加了多少，减少了对手，变化情况，得到了多少，增加了，负向还是正向影响）Estimated marginal effects in column 1 of Table 3 show that grandchild care has a significant positive impact on mother LFP. If  the grandchild care variable changes from 0 to 1, the probability of the mother participating in the labor force will increase by 26.0<span class="comment">%.</span></span><br><span class="line">	 （回归解释的翻译，影响，)indcaite, suggest, The number of private firms has a negative and significant impact on mother LFP, whereas the number of self-employed  firms has a positive and significant impact. This could indicate that self-employed firms provide job opportunities with a more flexible  time schedule than private firms, and therefore the mother is more willing to work. Better educated women are more likely to join the  labor force, and spouse earnings have a negative influence on women's LFP. Better educated maternal grandfathers tend to have  daughters who are more likely to participate in labor force, whereas the educational attainment of maternal grandmothers has no  significant impact on the mother's labor decision.</span><br><span class="line">	  （回归系数的解释，数值上）As shown in column 3, grandchild care has a significant positive impact on mother LFP. If the grandchild care variesfrom 0 to 1, the probability of the mother participating in labor force will increase by 18.5<span class="comment">%. </span></span><br><span class="line">	（回归结果的现象，然后解释为什么） However, the estimated effect of formal child care is positive but not significant. This might be because of admission restrictions of  public kindergartens and an inflexible time schedule of the kindergarten that is not compatible with the time schedule of full-time  jobs</span><br><span class="line">	(回归结果的现象，证明了说明，验证了说明，与谁的的研究一致性)</span><br><span class="line">	解释原因:  This might be because of admission restrictions of public kindergartens and an inflexible time schedule of the kindergarten that is not compatible with the time schedule of full time jobs.</span><br><span class="line">回归类型的交代</span><br><span class="line">	Estimation results from these two additional models reflect that without controlling for endogeneity,</span><br><span class="line">	</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="an-introduction-to-the-china-family-panel-studies-cfps">An Introduction to the China Family Panel Studies (CFPS)</span><a href="#an-introduction-to-the-china-family-panel-studies-cfps" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">transform</span><br><span class="line"></span><br><span class="line">observe, document, and analyze</span><br><span class="line"></span><br><span class="line">taking place in China</span><br><span class="line"></span><br><span class="line">reflect Chinese reality and its dynamics.</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight markdown"><table><tbody><tr><td class="code"><pre><span class="line">中国经历巨大的改变：</span><br><span class="line"><span class="code">	China has been undergoing a rapid, large-scale, and irreversible social transformation since the late 1980s.</span></span><br><span class="line"><span class="code">具体的改变内容</span></span><br><span class="line"><span class="code">	The most significant social changes in this great transformation include rapid economic growth, a huge education expansion, and the completion of China’s demographic transition (Xie 2011). These dramatic changes have been accompanied by others, such as increased income inequality (Xie and Zhou 2014) and the erosion of traditional family and marriage values (Xie 2013b).</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">The great transformation in contemporary China is, sociologically speaking, a  uniquely Chinese phenomenon that invites scholarly studies that pay specific attention to this particular context, with its unique political, economic, historical,  cultural, and social backgrounds and constraints. </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">we social scientists  today are in a privileged position to observe, document, and analyze the social  changes now taking place in China but affecting the course of human history.</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">Even highly trained, experienced social scientists, however, may fail to properly  understand this transformation and its full ramifications, as individuals’ perspectives  are easily confounded by the complex and highly heterogeneous nature of what  is happening in China today.</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">Furthermore, all humans, even social scientists, are  inevitably limited by their own experiences and values and are inclined to make  subjective judgments and unsubstantiated deductions.</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">为什么 现实和underlying</span></span><br><span class="line"><span class="code">	How, then, can we best understand the social changes that have been taking place in China comprehensively  and objectively? What is the best way to analyze and describe the social processes  underlying those changes? The answer, we believe, is empirical research based on  high-quality data that reflect Chinese reality and its dynamics.</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></tbody></table></figure>
<h4><span id="cfps">CFPS</span><a href="#cfps" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">@article{xie2014introduction,</span><br><span class="line">  title={An introduction to the China family panel studies (CFPS)},</span><br><span class="line">  author={Xie, Yu and Hu, Jingwei},</span><br><span class="line">  journal={Chinese sociological review},</span><br><span class="line">  volume={47},</span><br><span class="line">  number={1},</span><br><span class="line">  pages={3--29},</span><br><span class="line">  year={2014},</span><br><span class="line">  publisher={Taylor \&amp; Francis}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">The China Family Panel Studies (CFPS) is a general-purpose, nationally representative, longitudinal survey of Chinese society that was launched in 2010 by Peking University.</span><br><span class="line"></span><br><span class="line">Designed by an interdisciplinary group of scholars, the survey  collects individual-, family-, and community-level longitudinal data in contemporary China in order to provide current and future researchers with comprehensive  and objective data on Chinese society. The CFPS focuses on the economic as well  as the noneconomic well-being of the Chinese population, gathering a wealth of  information covering topics such as economic activities, education outcomes,  family dynamics and relationships, migration, and health.</span><br><span class="line"></span><br><span class="line">Four waves of the CFPS (2010, 2011, 2012, and 2014) have been carried out thus far by the Institute of Social Science Survey (ISSS) at Peking University. The data that have accumulated in the  project can now be used to support both academic and policy research that demand  high-quality longitudinal data.</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="chan-ye-hua-fen-industry-occupation-ownership">产业划分industry occupation ownership</span><a href="#chan-ye-hua-fen-industry-occupation-ownership" class="header-anchor">#</a></h3><ol>
<li>第一产业，第二产业，第三产业</li>
<li>在进一步划分为制造业等等</li>
<li>第二产业可以三种类型的服务业，在进一步划分为消费性，服务型，公共服务业</li>
</ol>
<p><a href="https://www.bls.gov/ocsm/commain.htm">https://www.bls.gov/ocsm/commain.htm</a></p>
<p> Occupation type is classified into managerial (reference category), professional, clerical, service, production, farming, military, and others. </p>
<p>Ownership sector is classified into public (government agency, state-owned enterprise or institution）, collective, private, and foreign.</p>
<p>所有制，</p>
<p>名词还是形容词</p>
<div class="table-container">
<table>
<thead>
<tr>
<th><strong>MOG</strong></th>
<th><strong>Title</strong></th>
<th><strong>In-scope?</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>Professional, Technical, and Related Occupations</td>
<td>YES</td>
</tr>
<tr>
<td>B</td>
<td>Executive, Administrative, and Managerial Occupations</td>
<td>YES</td>
</tr>
<tr>
<td>C</td>
<td>Sales Occupations</td>
<td>YES</td>
</tr>
<tr>
<td>D</td>
<td>Administrative Support Occupations</td>
<td>YES</td>
</tr>
<tr>
<td>E</td>
<td>Precision, Production, Craft, and Repair Occupations</td>
<td>YES</td>
</tr>
<tr>
<td>F</td>
<td>Machine Operators, Assemblers, and Inspectors</td>
<td>YES</td>
</tr>
<tr>
<td>G</td>
<td>Transportation and Material Moving Occupations</td>
<td>YES</td>
</tr>
<tr>
<td>H</td>
<td>Handlers, Equipment Cleaners, Helpers, and Laborers</td>
<td>YES</td>
</tr>
<tr>
<td>I</td>
<td>Farming, Forestry, and Fishing Occupations*</td>
<td>NO</td>
</tr>
<tr>
<td>K</td>
<td>Service Occupations</td>
<td>YES</td>
</tr>
<tr>
<td>L</td>
<td>Private Household Occupations*</td>
<td>NO</td>
</tr>
</tbody>
</table>
</div>
<p> workers</p>
<p><img src="https://pic2.zhimg.com/80/v2-469b139f21821b4b5c1a711c8ac6d675_720w.jpg" alt="img"></p>
<p><img src="/2021/02/24/%E7%A7%91%E7%A0%94-%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB-1/image-20210616153204001.png" alt="image-20210616153204001"></p>
<p><img src="/2021/02/24/%E7%A7%91%E7%A0%94-%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB-1/image-20210616153143722.png" alt="image-20210616153143722"></p>
<p>‘制造业’: 1,</p>
<p>  ‘农、林、牧、渔业’: 2, </p>
<p>  ‘建筑业’  :  3,</p>
<p>  ‘采矿业’  :  4,</p>
<p>  ‘电力、燃气及水的生产和供应业’  :  5,</p>
<p>  ‘批发和零售业’  :  6,</p>
<p>  ‘教育’:  7,</p>
<p>  ‘住宿和餐饮业’:8,</p>
<p>  ‘卫生、社会保障和社会福利业’ :  9,</p>
<p>  ‘居民服务和其他服务业’  :  10,</p>
<p>  ‘公共管理和社会组织’ :  11,</p>
<p>  ‘租赁和商务服务业’ :  12,</p>
<p>  ‘交通运输、仓储和邮政业’  :  13,</p>
<p>  ‘金融业’  :  14,</p>
<p>  ‘文化、体育和娱乐业’ :  15,</p>
<p>  ‘房地产业’: 16,</p>
<p>  ‘信息传播、计算机服务和软件业’:  17,</p>
<p>  ‘水利、环境和公共设施管理业’:  18,</p>
<p>  ‘科学研究、技术服务和地质勘查业’  :  19</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/TZFfuwah3rMQkhvOQNeqDLA4UJ6xyalmLVPSe21vJiasVufPvNL8oaoAPlM4Gs8YZ87iapUtlYKBwfzThSEVRFyw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>不适合分的太小</p>
<p>餐饮和住宿可以合并</p>
<p>金融，法律和房地产可以合并</p>
<p><img src="/2021/02/24/%E7%A7%91%E7%A0%94-%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB-1/image-20210627111635960.png" alt="image-20210627111635960"></p>
<p>更加吻合的分类别标准</p>
<p>进一步聚合了（每一个子类包含了小的分类）</p>
<p>按照数量来聚合，要有标准。当下13或者14个已经是非常好的的标准。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>生产性服务业</th>
<th>tts</th>
<th>交通运输仓储和邮政业</th>
<th>itc</th>
<th>信息传输计算机服务业和软件业</th>
<th>fin</th>
<th>金融业</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td>lbs</td>
<td>租赁和商业服务业</td>
<td>srt</td>
<td>科学研究技术服务和地质勘探业</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>9</td>
<td></td>
<td>9</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>消费性服务业</td>
<td>wrt</td>
<td></td>
<td>hcs</td>
<td>rea</td>
<td>sho</td>
<td>cse</td>
</tr>
<tr>
<td></td>
<td>批发零售业</td>
<td></td>
<td>住宿餐饮业</td>
<td>房地产业</td>
<td>居民 服务和其他服务业</td>
<td>文化体育和娱乐业</td>
</tr>
<tr>
<td></td>
<td>10</td>
<td></td>
<td>10</td>
<td>8</td>
<td>9</td>
<td>11</td>
</tr>
<tr>
<td>公共服务业</td>
<td>mwc</td>
<td>edu</td>
<td>hss</td>
<td>pms</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>水利环境和公共设施管理业</td>
<td>教育</td>
<td>卫生、社 会保障和社会福利业</td>
<td>公共管理和社会组织</td>
<td>12</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>第二产业</td>
<td>man</td>
<td>egw</td>
<td>con</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>建筑业</td>
<td>、电力热力燃气及水生产</td>
<td>制造业</td>
<td>采矿业</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>3</td>
<td>4</td>
<td>1</td>
<td>5</td>
<td></td>
<td></td>
</tr>
<tr>
<td>第一产业</td>
<td>农业</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4><span id="child-care-and-parent-labor-force-participation-a-review-of-the-research-literature">Child care and parent labor force participation: a review of the research literature</span><a href="#child-care-and-parent-labor-force-participation-a-review-of-the-research-literature" class="header-anchor">#</a></h4><p>mother maternal 而非female</p>
<p>reseach on mother</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">a very simple literature review on the impact of child care on parent labor force paticopation, partcular for mothers'</span><br><span class="line"></span><br><span class="line">afforadble-subsidy</span><br><span class="line">accessible-expansion</span><br><span class="line"></span><br><span class="line">mothers' employment ratio、work house?</span><br><span class="line"></span><br><span class="line">child care system/program</span><br><span class="line"></span><br><span class="line">参与率：针对母亲（托幼阶段）</span><br><span class="line">female 和maternal are different??????</span><br><span class="line">children under 3 years</span><br><span class="line">chidren 4-6 years</span><br><span class="line">research object are mothers with children aged 0-5 years????(这一段的母亲就业率) DID, coverage</span><br><span class="line">母亲劳动参与率（0-5岁儿童） 一定是母亲劳动的参与率</span><br><span class="line"></span><br><span class="line">labor force participation (劳动参与率)</span><br><span class="line">female employement</span><br><span class="line">DID coverage(share of)</span><br><span class="line">employment</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="worksplace-solution-for-childcare">worksplace solution for childcare</span><a href="#worksplace-solution-for-childcare" class="header-anchor">#</a></h3><p>what</p>
<p>why childcare for working parents is improtant</p>
<p>balance quality and cost</p>
<p>perspectives of workplace partners</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">olleagues provided valuable assistance or inputs</span><br><span class="line">universal</span><br><span class="line">various  kinds of assistance with childcare is through support that they can access through  their workplace.</span><br><span class="line"></span><br><span class="line">involve in</span><br><span class="line"></span><br><span class="line">This book seeks to explore why the workplace has become involved in childcare  support and what programmes have been implemented, based on concrete examples of childcare support that can be found in workplaces around the world</span><br><span class="line">a variety of workplaces.</span><br><span class="line"></span><br><span class="line">Family care</span><br><span class="line">		Families are the main providers of care for their children. At birth, usually the  round-the-clock care needed is 	provided by the family and a baby is not normally  left with no one responsible. Someone has to ensure their basic needs are met (fed,  washed, clothed, housed and so on) as well as to provide a loving and stimulating  environment that will foster their social and psychological development.</span><br><span class="line">From the end of maternity leave(产假)</span><br><span class="line">from grandparents or other family members to cover at least part of their childcare needs. </span><br><span class="line"> Th is solution usually has the advantage of being without fi nancial cost</span><br><span class="line">  this is clearly not the ideal solution from the point of view of society.</span><br><span class="line"> 依然要参与放学： child care:  Once children attend school, working parents still have to make care arrangements for before or aft er school, lunch breaks and the school holidays. Family members may be able to cover at least a portion of this time.</span><br><span class="line">  </span><br><span class="line"> 工作时间： Non-family care is needed to look aft er children during the working hours of parents when there is no family member available.</span><br><span class="line">  For school-age children, childcare may be needed before or aft er school, during  a lunch break or during school holidays</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  Childcare provision needs to balance the needs of children and the needs</span><br><span class="line">of working parents. At one extreme, leaving young children in non-parental care  for 14 hours per day because of the work of parents is clearly not the ideal for the  child or the parents. At the other extreme, providing preschool education for two  hours a day may complicate considerably the lives of working parents.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">In most countries, looking after children was traditionally considered to be a</span><br><span class="line">responsibility of families alone – mainly the women. In most countries, looking after children was traditionally considered to be a responsibility of families alone – mainly the women. </span><br><span class="line"></span><br><span class="line">Cost paid by parents:</span><br><span class="line">	Apart from a few welfare cases, childcare usually has to be paid for by  the parents, so that it is mainly well-off parents who can fi nd arrangements for  ensuring that their children are well looked after while they work.</span><br><span class="line">	Paying a reliable nanny or childminder or putting a toddler into quality daycare can be quite  expensive and often out of the reach of low-income and even middle-income parents.</span><br><span class="line"></span><br><span class="line">Impacts:</span><br><span class="line">	福利和社会经济 The consequences of lack of access to affordable, good-quality childcare go beyond the welfare of individual children and their families and affect the social and economic development of the whole society.</span><br><span class="line">	工作连续对于女性：Childcare can help parents, particularly mothers, ensure continuity in their  careers. If they are compelled to resign for lack of affordable, quality childcare and  do not work at all for a long period, they tend to have difficulty re-entering work,  particularly at the same level as they were when they left.</span><br><span class="line">	家庭红利 女性红利</span><br><span class="line">	benefi t from childcare support</span><br><span class="line">	儿童权益：Promoting the rights and development of children</span><br><span class="line">	Improving the access of vulnerable and disadvantaged groups to quality care for preschoolers can provide opportunities for these children to begin primary education on a more equal footing with more privileged children</span><br><span class="line">	cognitive development at the age of 3</span><br><span class="line">	create job oppotiuny: </span><br><span class="line">		Contributing to the national economy</span><br><span class="line">	physical, social and cognitive development of children</span><br><span class="line">	support and facilitate access to childcare</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Signifiance:</span><br><span class="line">	In the developing world, the number  of publicly subsidized or funded early childhood care and education programs  has been on a steady increase, with the growing awareness that child care and  early intervention are powerful mechanisms for alleviating poverty and overcoming future inequalities.</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">summary:</span><br><span class="line">	A large body of research has emerged that investigates the interrelationship between child care and women’s labor market outcomes in developed market economies.</span><br><span class="line"></span><br><span class="line">gap</span><br><span class="line">	However, the literature on child care in developing and transition countries is relatively thin, and empirical studies of child care and women’s work in China have just begun to emerge.</span><br><span class="line">for example</span><br><span class="line">	Kilburn and Datar ð2002Þ estimate the impact of the availability of child care centers, using data from the CHNS for 1991–97. Applying difference-in-differences and bivariate probit regression techniques, they find that the presence of child care centers in a community has a positive effect on women’s labor force participation and the use of child care. Du ð2008Þ explores the relations between informal child care arrangements and Chinese women’s employment. She presents evidence that coresidence with grandparents or having grandparents living nearby increases the labor force participation of women with preschool children. Maurer-Fazio et al. ð2011Þ find that the labor force participation rate of urban women with preschool children fell dramatically between 1990 and 2000, and coresidence  with grandparents became increasingly important for women to stay in the  labor market.</span><br><span class="line"></span><br><span class="line">contribution:</span><br><span class="line">	This article makes two specific contributions to the literature on women’s  work and child care in China. First, the article provides an overview of China’s  child care reforms, using information obtained from official documents, Chinese literature, and the authors’ field studies. Such background information,  which has thus far been unavailable to existing studies, highlights the institutional context in which women craft their solutions to the conflicts between  their paid work and child-rearing responsibilities. Second, the article extends  the work of Kilburn and Datar ð2002Þ, which focuses on women’s labor force  participation and child care use during the early years of economic transition. Using the data from the same survey that also cover the later years of transition  during which much of the change to public child care programs took place, we  estimate the effects of child care availability and affordability on a mother’s labor force participation, labor hour supply, and child care choice.</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="women-s-employment-and-child-care-choices-in-urban-china-during-the-economic-transition">Women’s Employment and Child Care Choices in Urban China during the Economic Transition</span><a href="#women-s-employment-and-child-care-choices-in-urban-china-during-the-economic-transition" class="header-anchor">#</a></h3><p>availability and affordability   </p>
<p>supply demand</p>
<p>child-rearing responsibilities   responsibility  responsible response</p>
<p>avail available availability access accessible accessibility afford affordable affordability</p>
<p>enrollment</p>
<p>kindergarten nursery</p>
<p>aged  between year olds</p>
<p>dramatic entering subsidy</p>
<p>residence</p>
<p>rapid separate</p>
<p>public universal </p>
<figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">As women are oft en the parent with major responsibility for children, lack of  access to affordable, reliable childcare can be a major factor in gender inequality,  undermining women’s ability to work and their opportunities for employment.</span><br><span class="line">In the European Union, childcare is recognized as a critical factor in meeting its  goal of full employment and a concrete way of eliminating barriers to women’s  participation in the labour market.</span><br><span class="line"></span><br><span class="line">Promoting gender equality</span><br><span class="line"></span><br><span class="line">Evidence from Europe suggests that where governments support the costs of widely available childcare, these countries tend to have higher rates of women s labour force participation and fertility and lower gender inequality, as is particularly the case in Nordic countries.4 Childcare can help parents, particularly mothers, ensure continuity in their careers. If they are compelled to resign for lack of affordable, quality childcare and do not work at all for a long period, they tend to have difficulty re-entering work, particularly at the same level as they were when they left.</span><br><span class="line"></span><br><span class="line">Childcare not only increases women’s access to employment, but also  increases employment opportunities in childcare, and contributes to job creation in the service sector to replace some of the unpaid household work such  as cleaning and food preparation.</span><br><span class="line"></span><br><span class="line">The estimates in column 3 suggest that mothers living in communities with more private firms are more likely to use grandchild  care, implying that private firms offer jobs with an inflexible time schedule and mothers are in need of grandchild care if they want to  participate in the labor force. Better educated mothers and mothers with a child under age 2 are more likely to be helped by  grandparents. Regarding instrumental variables, the number of children the grandparents have negatively affects the probability of  grandchild care use, whereas whether the kindergarten has enrolled migrants children does not have a significant impact on  grandchild care.</span><br><span class="line"></span><br><span class="line">Regarding instrumental variables, the number of  children the grandparents have has a significant positive impact on formal child care use.</span><br><span class="line"></span><br><span class="line">In a study of Guatemala City and Accra, Hallman, Peracca, Catino and Ruiz (2006) used the median price of childcare  in a community as a proxy for childcare costs and found that the price of childcare has  no significant effect on mothers’ LFP or on the number of hours worked. </span><br><span class="line"></span><br><span class="line">Using the  median price of childcare in a city as a proxy for childcare cost, Du and Dong (2013)  found that childcare costs have no effect on maternal LFP in urban China. Given the  size of Chinese cities and the disparities in childcare services within a geographic  location in China, the prices at the city level are not an appropriate measure of the  prices Chinese families actually paid.</span><br><span class="line"></span><br><span class="line">Applying difference-in-differences and bivariate probit  regression techniques, they find that the presence of child care centers in a  community has a positive effect on women’s labor force participation and the  use of child care.</span><br><span class="line"></span><br><span class="line">Du ð2008Þ explores the relations between informal child care  arrangements and Chinese women’s employment. She presents evidence that  coresidence with grandparents or having grandparents living nearby increases  the labor force participation of women with preschool children.</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="racial-and-gender-pay-disparities-the-role-of-education">Racial and gender pay disparities: The role of education</span><a href="#racial-and-gender-pay-disparities-the-role-of-education" class="header-anchor">#</a></h3><p>读起来不难，写起来就非常难，感觉就是不生动（死板）</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">n</span><br><span class="line">potential </span><br><span class="line">unpaid work</span><br><span class="line">specific</span><br><span class="line">in spite of </span><br><span class="line">progress</span><br><span class="line">Despite</span><br><span class="line">evolution</span><br><span class="line">v</span><br><span class="line">captured </span><br><span class="line">declining </span><br><span class="line">widening </span><br><span class="line">contribute to</span><br><span class="line">dominate </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">adj</span><br><span class="line"></span><br><span class="line">dramatically </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">With respect to</span><br><span class="line"></span><br><span class="line">Female-typed degrees</span><br><span class="line"></span><br><span class="line">whereas;连词</span><br><span class="line">underlying reasons for </span><br><span class="line"> leads to</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="sentence">sentence</span><a href="#sentence" class="header-anchor">#</a></h4><p>Rich traditions of sociological <strong>research on</strong> stratification argue that education <strong>is crucial for</strong> <strong>reducing</strong> social inequality and <strong>increasing</strong> the status attainment in occupational hierarchies of successive generations of workers, <strong>particularly</strong> <strong>among</strong> more socially disadvantaged <strong>groups</strong></p>
<p>人口学特征demographic characteristics</p>
<p>Our data are from the 1979–2012 waves of the NLSY (National Longitudinal Survey of Youth), a national probability <strong>sample</strong> of 12,686 individuals aged 14–21 in 1979.</p>
<p> First, we present descriptive statistics from the 2012 wave for all variables separately by racial group and gender. </p>
<p>We use t-tests with means and chi-square with proportions to test for significant differences between groups.（差异性显著性检测是有方法的）</p>
<p>To <strong>illustrate</strong>, while men, relative to high school dropouts, receive returns of about 43 percent, 54 percent, and 62 percent for bachelor’s’, master’s, and doctoral levels, women’s <strong>returns</strong> <strong>are</strong> about 31 percent, 23 to 31 percent, and 50 percent, respectively. </p>
<p>用词的新（要揭示的现象）</p>
<p><strong>Among men,</strong> there is greater racial disparity in field of study.</p>
<p> <strong>At the bachelor’s level</strong>, white men are more concentrated in STEM and business, whereas black men are more often found in the social sciences, as well as business.</p>
<p> <strong>At the doctoral level,</strong> natural and social sciences are the leading areas for white men, while humanities and business <strong>lead</strong> for black men.</p>
<p>Turning to other human capital, the <strong>difference</strong> in AFQT by race is <strong>dramatic</strong>, <strong>with</strong> the mean score for whites around the 56–59th percentiles and the mean score for blacks at the 26th percentile, <strong>consistent with</strong> past research. </p>
<p>White men <strong>have greater</strong> job tenure, more experience, and work longer hours <strong>than other groups</strong>. Black women <strong>are more likely to</strong> work irregular shifts, and black men and women are more likely to be union members and <strong>less likely to</strong> hold professional or managerial occupations, <strong>relative to</strong> whites. </p>
<p><strong>In regard to</strong> industry, black men are more likely to <strong>be in</strong> personal and professional services, <strong>relative to</strong> white men, <strong>while</strong> black women are more often <strong>found in</strong> public administration and transportation/public utilities, <strong>compared to</strong> white women. Women <strong>are concentrated</strong> in service industries, <strong>whereas</strong> men are more <strong>often found in</strong> manufacturing, trade, and construction.<strong>（fact)</strong></p>
<p><strong>descriptive analysis</strong></p>
<p>Our dependent variable, hourly earnings, shows significant race and gender differences. White <strong>men</strong> <strong>have</strong> the significantly highest <strong>mean hourly rate</strong> at $30.97, followed by black men ($21.33) and white women ($21.20), with black women having the significantly lowest rate at $17.37. This renders the overall racial pay gap among men as 0.69 and 0.82 among women. The <strong>overall gender gap</strong> <strong>is</strong> 0.68 among whites and 0.81 among blacks. </p>
<h3><span id="hu-lian-wang-shi-dai-lu-you-zhi-li-xian-dai-hua-yan-jiu">互联网时代旅游治理现代化研究</span><a href="#hu-lian-wang-shi-dai-lu-you-zhi-li-xian-dai-hua-yan-jiu" class="header-anchor">#</a></h3><p>新信息革命的到来，全球已进入信息资本主义时代，传统的权力结构关系发生了改变，技术对社会结构产生了革命性的影响，经济与社会的动力也发生了改变，这需要政府转变角色，开拓新视野,创造更加灵活的治理体系。互联网时代的到来,给各国的国家战略既带来了重大的机遇，也带求了巨大的挑战。为了应对互联网带来的挑战，抓住发展的机遇，政府应转变角色，建立适应技术发展与变革、实现多利益相关方共同参与和去中心化特征的新治理体系，显得尤为迫切。面对新形势与新问题，十九届四中全会提出，必须坚持和完善中国特色社会主义制度、推进国家治理体系和治理能力现代化。</p>
<p>经过四十多年的发展，我国旅游业从改革开放的前沿<strong>迈向</strong>经济社会发展中心，已全面<strong>融入</strong>国家战略体系，迈向国民经济建设的最前沿。旅游治理现代化已成为国家治理现代化的重要组成部分。作为已融入国家战略的旅游产业，应紧紧抓住互联网的时代背景，<strong>构建</strong>起以游客满意为导向的旅游治理新体系，<strong>推动</strong>实现旅游治理现代化。因此，以互联网时代的视角，从国家治理现代化的<strong>战略</strong>出发，<strong>探讨</strong>在新形势下如何<strong>实现</strong>旅游治理现代化<strong>具有</strong>重要的现实意义，<strong>不仅可以推动</strong>建立现代旅游治理体系，<strong>助推</strong>世界旅游强国之梦，而且还能<strong>有效地发挥</strong>旅游治理现代化在国家治理现代化中的作用。<strong>推进</strong>旅游治理现代化，应<strong>科学</strong>地界定何为旅游治理现代化，互联网时代传统旅游管理模式面临着什么挑战，旅游治理现代化的科学内涵又是什么。当前我国正处于全面建成小康社会的关键期，有效地发挥旅游治理现代化在国家治理现代化中的独特作用，就必须回答好这些问题。基于此，本文将<strong>围绕着</strong>以上问题对互联网时代旅游治理现代化展开系统研究。</p>
<h3><span id="shu-ju-jun-zhi-chai-yi-xing-jian-ce">数据均值差异性检测</span><a href="#shu-ju-jun-zhi-chai-yi-xing-jian-ce" class="header-anchor">#</a></h3><h4><span id="li-yu-yan-min-zu-di-qu-you-er-yuan-jiao-shi-zi-yuan-pei-zhi-de-cheng-xiang-chai-yi-fen-xi-yi-guang-xi-zhuang-zu-zi-zhi-qu-wei-li">李钰燕:民族地区幼儿园教师资源配置的城乡差异分析——以广西壮族自治区为例</span><a href="#li-yu-yan-min-zu-di-qu-you-er-yuan-jiao-shi-zi-yuan-pei-zhi-de-cheng-xiang-chai-yi-fen-xi-yi-guang-xi-zhuang-zu-zi-zhi-qu-wei-li" class="header-anchor">#</a></h4><p>file:///F:/Paper/storage/A2KE64HD/nopbccE3Y2b2DzqlSALUhg.html</p>
<h2><span id="05">05</span><a href="#05" class="header-anchor">#</a></h2><h4><span id="0509">0509</span><a href="#0509" class="header-anchor">#</a></h4><h5><span id="gen-fu-mu-tong-zhu-neng-gai-shan-jia-wu-de-xing-bie-fen-gong-ma">跟父母同住能改善家务的性别分工吗？</span><a href="#gen-fu-mu-tong-zhu-neng-gai-shan-jia-wu-de-xing-bie-fen-gong-ma" class="header-anchor">#</a></h5><p>Hu, Shu, and Zheng Mu. 2020. “Extended Gender Inequality? Intergenerational Coresidence and Division of Household Labor.” Social Science Research. doi: 10.1016/j.ssresearch.2020.102497.</p>
<p>Ma, Sen, and Fangqi Wen. 2016. “Who Coresides With Parents? An Analysis Based on Sibling Comparative Advantage.” Demography 53(3):623–47. doi: 10.1007/s13524-016-0468-8.</p>
<p>Yu, Jia, and Yu Xie. 2018. “Motherhood Penalties and Living Arrangements in China.” Journal of Marriage and Family 80(5):1067–86. doi: 10.1111/jomf.12496. </p>
<h3><span id="0503">0503</span><a href="#0503" class="header-anchor">#</a></h3><h4><span id="yi-wu-jiao-yu-xin-xi-hua-zi-yuan-pei-zhi-jun-heng-xing-yan-jiu-ji-yu-2001-2018-nian-zhong-guo-jiao-yu-tong-ji-nian-jian-shu-ju-fen-xi">义务教育信息化资源配置均衡性研究 ——基于2001～2018年《中国教育统计年鉴》数据分析</span><a href="#yi-wu-jiao-yu-xin-xi-hua-zi-yuan-pei-zhi-jun-heng-xing-yan-jiu-ji-yu-2001-2018-nian-zhong-guo-jiao-yu-tong-ji-nian-jian-shu-ju-fen-xi" class="header-anchor">#</a></h4><p>教育信息化<strong>是</strong>促进教育公平，缩小城乡、区域义务教育差距的<strong>有效途径</strong>[1]。21世纪以来，我国政府非常重视教育信息化工作，<strong>持续加大教育信息化的建设力度</strong>，已取得显著效果。目前，我国构建的教育信息基础设施和公共服务体系已初见雏形，优质数字教育资源日益丰富，教育信息化<strong>在</strong>促进教育公平、提高教学质量方面的支撑和引领<strong>作用日益显现</strong>[2]。但在义务教育信息化建设的过程中，一直存在城乡发展不均衡的问题。基于2001～2018年《中国教育统计年鉴》的时序数据，<strong>聚焦于</strong>21世纪以来中国义务教育信息化资源配置的均衡性问题，本研究拟采用趋势外推法预测未来义务教育信息化的建设情况，以客观反映城乡义务教育信息化资源配置均衡状况，为推进义务教育的均衡发展提供科学依据。</p>
<p>此外，也有一些学者基于《中国教育统计年鉴》面板数据，从时间纵向发展角度分析了某一区域配置均衡与否的状况。例如，张屹等[7]根据2003～2010年我国31个省市自治区中学教育信息化建设的相关数据，计算出东、中、西部三大区域中学教育信息化基础设施的建设发展状况，发现“生机比”区域差异一直存在，但在不断缩小；陈纯槿等[8]基于2006～2016年《中国教育统计年鉴》的全国时序数据，考察了基础教育信息化均衡发展的状况及其变化趋势，发现基础设施差距在不断缩小，但信息技术教师配置城乡差距明显。</p>
<p>目前，许多研究成果都证实了教育信息化城乡、区域发展会存在不均衡状况。其中，一些学者对比研究了某一时间不同区域教育信息化建设均衡与否的情况</p>
<p>上述文献分析表明，目前针对中国城乡义务教育信息化资源配置均衡的研究时间段较短，评估指标也较少，还没有研究者专门分析、预测过21世纪以来中国城乡义务教育信息化资源的配置均衡状况。</p>
<p>基于结论，针对我国义务教育不均衡状况，提出以下建议。</p>
<p><strong>1 建立、健全义务教育信息化资源配置监测、评估机制</strong></p>
<p>21世纪以来，我国教育信息化资源配置水平从最初的城市高于县镇和农村，到现在农村每百名学生拥有计算机台数和网络多媒体教室数高于城市和县镇，出现了新的不均衡，故国家需调整策略。而城市学校建立校园网的百分比仍远高于农村，故国家还需加强农村学校校园网建设。建立、健全义务教育信息化资源配置评估机制，监测教育信息化建设水平，依据数据分析教育信息化资源配置状况，据此制定教育信息化发展政策，能够保障义务教育信息化均衡发展。</p>
<p><strong>2 深入推进教育供给侧结构性改革，保障信息技术教师数量、质量供给</strong></p>
<p>信息技术教师的地位变得越来越重要，但城市、县镇和农村，信息技术教师的数量都还偏少，并且增长速度缓慢。受我国义务教育国策和中考制度的影响，在义务教育阶段，信息技术教师尤其是农村信息技术教师一直不受重视，数量少，质量参差不齐，这影响了信息技术师资的良性建设。国家应该深入推进教师培养、供给侧结构性改革，充实和稳定信息技术教师队伍。</p>
<p><strong>3 健全义务教育均衡发展评估机制，纳入更多教育信息化评估指标</strong></p>
<p>政府评估义务教育的均衡发展时，《县域义务教育均衡发展督导评估暂行办法》、《县域义务教育优质均衡发展督导评估办法》已经把“每百名学生拥有计算机台数”和“每百名学生拥有网络多媒体教室数”作为了教育均衡评估指标，但关于教育信息化评估的指标还有学校建立的校园网状况、学校宽带情况等其它指标未被纳入。如果国家制定的义务教育均衡发展评估办法能够纳入更多关于教育信息化资源配置的指标，将能更好地保障城乡教育信息化的均衡发展。</p>
<p>教育乃兴邦之本。学前教育作为国民教育的基础，对实现教育和社会公平、整体提升国民素养、打破贫困的代际传递、提高国家未来核心竞争力具有重要战略意义。[1]2010年发布的《国家中长期教育改革和发展规划纲要(2010—2020年)》充分肯定了学前教育在幼儿身心健康、习惯养成、智力发展中发挥的重要意义，提出支持贫困地区发展学前教育，实现公共教育资源向民族地区倾斜。然而，由于政府资金投入不足、资源分配不均、家长观念落后等原因，西南民族地区农村学前教育发展普遍存在入园率低、教育不公平等突出问题。[2]面对民族地区农村学前教育资源匮乏、整体发展水平落后的现实困境，四川省、新疆维吾尔自治区等省份先后出台了一系列的普惠性学前教育政策，在学前教育普及、双语教育推广等方面取得了较好的政策绩效。</p>
<p>教育扩张是增加教育资源供给，推动教育平等化发展的重要途径。我国大规模的学前教育扩张始于2010年。《国家中长期教育改革和发展规划纲要（2010—2020年）》（中发[2010]12号）提出基本普及学前教育、重点发展乡村和贫困地区学前教育等政策目标，《国务院关于当前发展学前教育的若干意见》（国发[2010]41号）要求各省以县为单位在2011—2020年间编制并实施三期“学前教育三年行动计划”，在政策推动下，我国学前教育发展迅速，2010—2019年全国幼儿园数量由15.04万所增至28.12万所，学前三年毛入园率由56.6%增至83.4%。(1)学前教育扩张彰显了“儿童平等”的价值取向，儿童入园机会的大幅增加为个体早期发展平等化提供了必要条件。然而，基于公共利益取向的教育政策还需要关注儿童家庭的发展问题。家庭是儿童早期教育的共同提供者，我国学前教育阶段的教育成本近一半由家庭承担，(2)(3)如果家庭权益和功能受损，儿童权利将难以得到保障。为此，本文从“儿童平等”和“家庭平等”的双重视角，重新审视学前教育扩张政策的平等内涵。家庭早期教育投资平等化是衡量学前教育扩张对“儿童平等”和“家庭平等”推进程度的重要切入点，它联结着公共教育资源供给、家庭教育支出负担和儿童教育获得，能够为分析学前教育平等化提供一个涵盖“国家-家庭-儿童”三个层面的全景视角。</p>
<p>每百名学生拥有计算机台数是测量学校信息化建设水平的重要指标。分析2002～2018年《中国教育统计年鉴》的数据，</p>
<p>可以发现：城市小学每百名学生拥有计算机台数由4.54增长到13.25，县镇由2.51增长到11.44，农村由1.01增长到15.41；而城市初中每百名学生拥有计算机台数由4.18增长到了19.48，县镇由2.36增长到了16.47，农村由2.04增长到了21.19，如表1所示。</p>
<p>由此可见，中国义务教育每百名学生拥有计算机台数逐年提高，并且农村地区增长更快。</p>
<p>从城乡比较的角度分析，截至2018年，无论是小学还是初中，农村每百名学生拥有计算机台数都反超城市、县镇，县镇每百名学生拥有计算机台数最少，与城市、农村存在差距。城乡小学、初中每百名学生拥有计算机台数的差异系数在2002～2016年逐年减小，但2017、2018年小学的差异系数比2016年有所增加。</p>
<p>农村每百名学生拥有计算机台数迅速增加，与城市差距不断缩小，体现了我国推进义务教育的均衡发展政策以来，不断向农村倾斜的国家政策效果。</p>
<p>校园网建设能为学校现代化教学、科研和综合信息服务提供保障。</p>
<p>表2显示，城乡义务教育学校建立校园网的百分比差距不断缩小，</p>
<p>表现为：城市小学建立校园网的百分比从2001年的11%提高到2018年的83%，县镇由3%提高到72%，农村则由1%提高到61%；城市初中从2001年的15%提高到2018年的86%，县镇由6%提高到77%，农村则由3%提高到69%。</p>
<p>这些数据表明义务教育学校网络基础设施建设取得了重要进展，城市、县镇和农村都得以大幅提升。</p>
<h2><span id="03">03</span><a href="#03" class="header-anchor">#</a></h2><h2><span id="how-do-home-purchase-restrictions-affect-elite-chinese-graduate-students-job-search-behavior">How do home purchase restrictions affect elite Chinese graduate students’ job search behavior?</span><a href="#how-do-home-purchase-restrictions-affect-elite-chinese-graduate-students-job-search-behavior" class="header-anchor">#</a></h2><p>If do not pay more attention to the bias of OLS, and focus on roubutness checks, to do social problem, it becomes very easy.</p>
<h2><span id="social-and-economic-presentation-xiang-zhang-tui-wen-2083-jing-ji-xue-gao-su-ni-wei-shi-me-yao-chang-hui-jia-kan-kan">social and economic presentation 【香樟推文2083】经济学告诉你为什么要常回家看看</span><a href="#social-and-economic-presentation-xiang-zhang-tui-wen-2083-jing-ji-xue-gao-su-ni-wei-shi-me-yao-chang-hui-jia-kan-kan" class="header-anchor">#</a></h2><p><strong>Hanming Fang, Ziteng Lei,Liguo Lin, and Peng Zhang, Family Companionship and Elderly Suicide: Evidence from the Chinese Lunar New Year, NBER Working Paper No. 28566</strong></p>
<h4><span id="jian-dan-dan-nei-rong-feng-fu-how-do-home-purchase-restrictions-affect-elite-chinese-graduate-students-job-search-behavior">简单但内容丰富：How do home purchase restrictions affect elite Chinese graduate students’ job search behavior?</span><a href="#jian-dan-dan-nei-rong-feng-fu-how-do-home-purchase-restrictions-affect-elite-chinese-graduate-students-job-search-behavior" class="header-anchor">#</a></h4><p>Though reading this rich paper, I learned how to changing a question to a scientific problem and  how to answer a question step by step.</p>
<ol>
<li>variables</li>
<li>correlation analysis</li>
<li>descible information</li>
<li>baseline  result</li>
<li>mechanism</li>
<li>heterogenous( may equal to mechanism)</li>
</ol>
<p>Summary:</p>
<pre><code>1. literature review
2. data analysis
      1. Figure
      2. Table
      3. conclusion
</code></pre><h3><span id="yin-yan-when-a-question-is-rarely">引言(When a question is rarely)</span><a href="#yin-yan-when-a-question-is-rarely" class="header-anchor">#</a></h3><p>P1: 老年人问题的重要性（引用了WHO的数据）—-》自杀成本后果（经济压力）—》因此，研究重要</p>
<p>P2: 发展中国家—》引出高铁</p>
<p>P3: 为什么自杀（经济要素）。过往研究是相关性，（中国的）</p>
<h3><span id="background">background</span><a href="#background" class="header-anchor">#</a></h3><p>回归模型的设置：</p>
<ol>
<li><p>春节变量</p>
</li>
<li><p>每周每月的自杀率</p>
</li>
<li><p>固定效应控制多，可以学习</p>
<p>图片可以看出春节要小</p>
</li>
</ol>
<p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/dmLyqh5TYr99CkJWuIb6ELxH8uRQNY0vAkU4iaXge2EQj8lhNsqaDRPukdO1Icjp6OqmTK8mJspD2xMXZ4ziaE4Q/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p>模型回归：</p>
<p><img src="/2021/02/24/%E7%A7%91%E7%A0%94-%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB-1/image-20210327215541421.png" alt="image-20210327215541421"></p>
<h1><span id="yi-wang">以往</span><a href="#yi-wang" class="header-anchor">#</a></h1><h1><span id="http-cec-blog-caixin-com-usercategory-0-page-42"></span><a href="#http-cec-blog-caixin-com-usercategory-0-page-42" class="header-anchor">#</a></h1><h1><span id="zai-jing-ji-xue-jie-chang-de-hao-kan-chong-yao-ma">在经济学界，长得好看重要吗？</span><a href="#zai-jing-ji-xue-jie-chang-de-hao-kan-chong-yao-ma" class="header-anchor">#</a></h1><h2><span id="galina-hale-tali-regev-yona-rubinstein-do-looks-matter-for-an-academic-career-in-economics">Galina Hale, Tali Regev, Yona Rubinstein, Do Looks Matter for an Academic Career in Economics?</span><a href="#galina-hale-tali-regev-yona-rubinstein-do-looks-matter-for-an-academic-career-in-economics" class="header-anchor">#</a></h2><h1><span id="xiang-zhang-tui-wen-1691-gao-xin-hui-xi-yin-geng-duo-de-qiu-zhi-zhe-ma">【香樟推文1691】高薪会吸引更多的求职者吗</span><a href="#xiang-zhang-tui-wen-1691-gao-xin-hui-xi-yin-geng-duo-de-qiu-zhi-zhe-ma" class="header-anchor">#</a></h1><p>Banfi, S. and Villena-Roldán, B. (2019), “Do high-wage jobs attract more applicants? Directed search evidence from the online labor market”, Journal of Labor Economics, Vol. 37, No. 3, pp. 715-746.</p>
<h2><span id="xiang-zhang-tui-wen-1692-yin-du-ban-cun-cun-tong-dao-lu-jian-she-ru-he-ying-xiang-ren-li-zi-ben-tou-zi">【香樟推文1692】印度版“村村通”：道路建设如何影响人力资本投资？</span><a href="#xiang-zhang-tui-wen-1692-yin-du-ban-cun-cun-tong-dao-lu-jian-she-ru-he-ying-xiang-ren-li-zi-ben-tou-zi" class="header-anchor">#</a></h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzAwMTExMTI1Nw==&amp;mid=2650138545&amp;idx=1&amp;sn=38d810d62621c1ca9beadaa23fa3ddf5&amp;chksm=82dfe207b5a86b110135dd7a53e9b96107a4972afbbab71deeb519ce5f98c890bf82be12b037">https://mp.weixin.qq.com/s?__biz=MzAwMTExMTI1Nw==&amp;mid=2650138545&amp;idx=1&amp;sn=38d810d62621c1ca9beadaa23fa3ddf5&amp;chksm=82dfe207b5a86b110135dd7a53e9b96107a4972afbbab71deeb519ce5f98c890bf82be12b037</a></p>
<h1><span id="shi-pin-zi-liao">视频资料</span><a href="#shi-pin-zi-liao" class="header-anchor">#</a></h1><p><a href="https://ocw.mit.edu/courses/economics/14-387-applied-econometrics-mostly-harmless-big-data-fall-2014/">https://ocw.mit.edu/courses/economics/14-387-applied-econometrics-mostly-harmless-big-data-fall-2014/</a></p>
<h1><span id="yin-guo">因果</span><a href="#yin-guo" class="header-anchor">#</a></h1><h2><span id="fang-jie-yu-nu-xing-lao-dong-can-yu-lu">房价与女性劳动参与率</span><a href="#fang-jie-yu-nu-xing-lao-dong-can-yu-lu" class="header-anchor">#</a></h2><h1><span id="gong-ju-bian-liang">工具变量</span><a href="#gong-ju-bian-liang" class="header-anchor">#</a></h1><h2><span id="gao-zhong-sheng-yi-xing-peng-you-de-duo-shao-dui-xue-xi-cheng-ji-de-ying-xiang">高中生异性朋友的多少对学习成绩的影响</span><a href="#gao-zhong-sheng-yi-xing-peng-you-de-duo-shao-dui-xue-xi-cheng-ji-de-ying-xiang" class="header-anchor">#</a></h2><h2><span id="da-xue-jiao-xue-zhi-liang-ru-he-ying-xiang-xue-sheng-cheng-ji-he-shou-ru">大学教学质量如何影响学生成绩和收入</span><a href="#da-xue-jiao-xue-zhi-liang-ru-he-ying-xiang-xue-sheng-cheng-ji-he-shou-ru" class="header-anchor">#</a></h2><h2><span id="fu-mei-liu-xue-de-zhong-guo-yan-jiu-sheng-ru-he-ying-xiang-ta-men-dao-shi-de-ke-yan-chan-chu">赴美留学的中国研究生如何影响他们导师的科研产出？</span><a href="#fu-mei-liu-xue-de-zhong-guo-yan-jiu-sheng-ru-he-ying-xiang-ta-men-dao-shi-de-ke-yan-chan-chu" class="header-anchor">#</a></h2><h2><span id="ren-li-zi-ben-dui-jing-ji-zeng-chang-you-duo-da-ying-xiang">人力资本对经济增长有多大影响</span><a href="#ren-li-zi-ben-dui-jing-ji-zeng-chang-you-duo-da-ying-xiang" class="header-anchor">#</a></h2><h1><span id="duan-dian-hui-gui">断点回归</span><a href="#duan-dian-hui-gui" class="header-anchor">#</a></h1><p><a href="http://cec.blog.caixin.com/archives/143162">http://cec.blog.caixin.com/archives/143162</a></p>
<h1><span id="shou-ru">收入</span><a href="#shou-ru" class="header-anchor">#</a></h1><h2><span id="zhen-shi-gong-zi-de-bu-ping-deng">真实工资的不平等</span><a href="#zhen-shi-gong-zi-de-bu-ping-deng" class="header-anchor">#</a></h2><h1><span id="cheng-shi-jing-ji">城市经济</span><a href="#cheng-shi-jing-ji" class="header-anchor">#</a></h1><h2><span id="fa-zhan-zhong-guo-jia-de-cheng-shi-sheng-chan-lu">发展中国家的城市生产率</span><a href="#fa-zhan-zhong-guo-jia-de-cheng-shi-sheng-chan-lu" class="header-anchor">#</a></h2><h2><span id="ru-he-gu-suan-1978-nian-jing-ji-gai-ge-dai-lai-de-zeng-chang-xiao-ying">如何估算1978年经济改革带来的增长效应？</span><a href="#ru-he-gu-suan-1978-nian-jing-ji-gai-ge-dai-lai-de-zeng-chang-xiao-ying" class="header-anchor">#</a></h2><p>Lau, L.J. and H. Zheng, 2017, “How much slack was there in the Chinese economy prior to its economic reform of 1978?”, China Economic Review, 45, 124-142.</p>
<h1><span id="xing-bie">性别</span><a href="#xing-bie" class="header-anchor">#</a></h1><h2><span id="nan-nu-sheng-zhi-da-bu-tong-lai-zi-gong-gong-wei-sheng-xing-ye-de-zheng-ju">男女升职大不同？来自公共卫生行业的证据</span><a href="#nan-nu-sheng-zhi-da-bu-tong-lai-zi-gong-gong-wei-sheng-xing-ye-de-zheng-ju" class="header-anchor">#</a></h2><h2><span id="dang-ni-lao-liao-jue-bu-zhi-shi-yan-mei-di-chui-kuo-da-de-xing-bie-gong-zi-chai-ju">当你老了，绝不只是眼眉低垂 | 扩大的性别工资差距</span><a href="#dang-ni-lao-liao-jue-bu-zhi-shi-yan-mei-di-chui-kuo-da-de-xing-bie-gong-zi-chai-ju" class="header-anchor">#</a></h2><p>Claudia Goldin, Sari Pekkala Kerr, Claudia Olivetti, and Erling Barth，The Expanding Gender Earnings Gap:Evidence from the LEHD-2000 Census，American Economic Review: Papers &amp; Proceedings, 2017</p>
<h2><span id="lao-dong-li-zhao-pin-shi-chang-zhong-de-xing-bie-qi-shi-lai-zi-zhao-pin-wang-zhan-de-zheng-ju">劳动力招聘市场中的性别歧视：来自招聘网站的证据</span><a href="#lao-dong-li-zhao-pin-shi-chang-zhong-de-xing-bie-qi-shi-lai-zi-zhao-pin-wang-zhan-de-zheng-ju" class="header-anchor">#</a></h2><p>Kuhn P, Shen K. Gender Discrimination in Job Ads: Evidence from China[J]. Quarterly Journal of Economics, 2013, 128(1):287-336</p>
<h2><span id="some-evidence-of-the-importance-of-sticky-wages">Some evidence of the importance of sticky wages</span><a href="#some-evidence-of-the-importance-of-sticky-wages" class="header-anchor">#</a></h2><h2><span id="yu-er-yu-xing-bie-bu-ping-deng-lai-zi-dan-mai-de-zheng-ju">育儿与性别不平等：来自丹麦的证据</span><a href="#yu-er-yu-xing-bie-bu-ping-deng-lai-zi-dan-mai-de-zheng-ju" class="header-anchor">#</a></h2><p>Kleven, H., Landais, C., &amp; Søgaard, J. E. (2018). Children and gender inequality: Evidence from Denmark (No. w24219). <em>National Bureau of Economic Research</em>.</p>
<h2><span id="hun-yin-hai-zi-he-xing-bie-gong-zi-chai-ju-ji-yu-fen-gong-de-shi-jiao">婚姻、孩子和性别工资差距——基于分工的视角</span><a href="#hun-yin-hai-zi-he-xing-bie-gong-zi-chai-ju-ji-yu-fen-gong-de-shi-jiao" class="header-anchor">#</a></h2><p>“Specialization Then and Now: Marriage, Children, and the Gender Earnings Gap across Cohorts”，The Journal of Economic Perspectives, Vol. 31, No. 1 (Winter 2017), pp. 183-204.</p>
<h1><span id="xue-li">学历</span><a href="#xue-li" class="header-anchor">#</a></h1><h2><span id="zhu-yi-li-qi-shi-shi-yan-yan-jiu-fei-985-da-xue-jian-li-zhi-jie-reng-la-ji-tong">注意力歧视实验研究|非985大学简历直接扔垃圾桶？</span><a href="#zhu-yi-li-qi-shi-shi-yan-yan-jiu-fei-985-da-xue-jian-li-zhi-jie-reng-la-ji-tong" class="header-anchor">#</a></h2><p>Vojteˇch Bartoš, Michal Bauer, Julie Chytilová, and Filip Mateˇjka, Attention Discrimination: Theory and Field Experiments with Monitoring Information Acquisition, American Economic Review 2016, 106(6): 1437–1475.</p>
<h1><span id="she-hui">社会</span><a href="#she-hui" class="header-anchor">#</a></h1><h2><span id="gong-gong-bu-men-de-jin-sheng-ji-li-lai-zi-zhong-guo-xue-xiao-de-zheng-ju">公共部门的晋升激励——来自中国学校的证据</span><a href="#gong-gong-bu-men-de-jin-sheng-ji-li-lai-zi-zhong-guo-xue-xiao-de-zheng-ju" class="header-anchor">#</a></h2><p>Naureen Karachiwalla, Albert Park，Promotionincentive in public sector：evidence from Chiese schools，Jorunal of PublicEconomics，2017，146：109-128.</p>
<h2><span id="xue-qu-fang-wei-shi-me-zhe-me-gui">学区房为什么这么贵？</span><a href="#xue-qu-fang-wei-shi-me-zhe-me-gui" class="header-anchor">#</a></h2><p>Collins, Courtney A，Kaplan, Erin K (2017). ‘Capitalization of School Quality in Housing Prices: Evidence from Boundary Changes in Shelby County, Tennessee’, American Economic Review, vol. 107(5), pp. 628-632.</p>
<h2><span id="tie-lu-yong-du-dui-qi-ye-sheng-chan-lu-you-he-ying-xiang">铁路拥堵对企业生产率有何影响？</span><a href="#tie-lu-yong-du-dui-qi-ye-sheng-chan-lu-you-he-ying-xiang" class="header-anchor">#</a></h2><p>I’ve Been Waiting on the Railroad: The Effects of Congestion on Firm Production, Job Market Paper</p>
<h3><span id="wai-mian">外面</span><a href="#wai-mian" class="header-anchor">#</a></h3><p>文分析了中国劳动力市场中的美貌溢价及其来源，即研究身高以及其他外貌特征对劳动工资的影响。工资模型的回归结果表明，在控制了社交网络，人力资本和其他禀赋特征之后，外观特征的影响降低并且在统计上不再显着。外貌-工资差异的分解结果表明，长相好的劳动者其工资较高主要归因于个人特征差异；其中，男性较矮者的工资较低，而女性较瘦者的工资较高，而这部分差异则是主要来源于无法解释的歧视部分；男性更可能遭受“矮个惩罚”，而女性则更可能享受“可爱奖励”。进一步的交叉分析表明，身高可能会通过影响体力而影响蓝领工人的工资；其他的经验证据还表明，外表与工作能力（社会网络和人力资本）之间存在很强的相关性。综上所述，研究结果证实了中国劳动力市场上美貌溢价的存在，并且这种外貌-工资差异并不主要来源于消费者或雇主的歧视，而是主要与个人禀赋特征差异有关。文章结论对于中国劳动力市场中美貌溢价来源的理解以及外貌歧视行为的辨识具有重要理论价值。</p>
]]></content>
      <tags>
        <tag>高质量</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-分解</title>
    <url>/2020/12/07/%E7%A7%91%E7%A0%94-%E5%88%86%E8%A7%A3/</url>
    <content><![CDATA[<h1><span id="ji-liang-jing-ji-xue-zhuan-ti">计量经济学专题</span><a href="#ji-liang-jing-ji-xue-zhuan-ti" class="header-anchor">#</a></h1><h2><span id="xin-zi-fen-jie-fa">薪资分解法</span><a href="#xin-zi-fen-jie-fa" class="header-anchor">#</a></h2><p>日常资源整理。</p>
<p>就是关于两个组(群体)差异性分析工具</p>
<a id="more"></a>
<h3><span id="summary">Summary</span><a href="#summary" class="header-anchor">#</a></h3><h4><span id="oaxaca-blinder">Oaxaca-Blinder</span><a href="#oaxaca-blinder" class="header-anchor">#</a></h4><p>经典文献：</p>
<p>1、David Neumark 1988  Employers’ Discriminatory Behavior and the Estimation of Wage Discrimination<br>2、Ronald Oaxaca and Michael R Ransom 1994 On discrimination and the decomposition of wage differentials<br><strong>3、Moshe Buchinsky and Jinyong Hahn 1998</strong> An Alternative Estimator for the Censored Quantile Regression Model,<strong>On discrimination and the decomposition of wage differentials</strong></p>
<p>特征效应（可解释部分）和不可解释部分（归结为歧视)</p>
<h5><span id="mo-xing">模型</span><a href="#mo-xing" class="header-anchor">#</a></h5><p>论文： The Blinder–Oaxaca decomposition for linear regression models</p>
<p>The counterfactual decomposition technique popularized by Blinder (1973, Journal of Human Resources, 436–455) and Oaxaca (1973, International Economic Review, 693–709) is widely used to study <strong>mean outcome differences between groups</strong>. 用于研究两个组的平均差异</p>
<p>For example, the technique is often used to analyze wage gaps by  sex or race. This article summarizes the technique and addresses several complications, such as the identification of effects of categorical predictors in the detailed  decomposition or the estimation of standard errors. A new command called oaxaca  is introduced, and examples illustrating its usage are given.</p>
<p>An often used methodology to study labor-market outcomes by groups (sex, race, and  so on) is to decompose mean differences in log wages based on linear regression models  in a counterfactual manner. The procedure is known in the literature as the Blinder–<br>Oaxaca decomposition (Blinder 1973; Oaxaca 1973). It divides the wage differential  between two groups into a part that is “explained” by group differences in productivity characteristics, such as education or work experience, and a residual part that  cannot be accounted for by such differences in wage determinants. This “unexplained”  part is often used as a measure for discrimination, but it also subsumes the effects of  group differences in unobserved predictors.</p>
<h5><span id="gai-jin">改进</span><a href="#gai-jin" class="header-anchor">#</a></h5><h6><span id="cotton-fen-jie">Cotton 分解</span><a href="#cotton-fen-jie" class="header-anchor">#</a></h6><p>Cotton分解方法是针对Oaxaca-Blinder方法分解存在“指数基准”问题，因为Oaxaca-Blinder分解未考虑到“选择差异效应”,如男女之间选择工作类型的机会不相等。Cotton认为在无歧视状态下，两个组的工资结构会收敛于无歧视的工资结构，</p>
<h6><span id="neumark-fen-jie">Neumark分解</span><a href="#neumark-fen-jie" class="header-anchor">#</a></h6><p>Neumark将工资歧视和雇主歧视理论相结合，Neumark也认为雇主对某个群体有偏袒。</p>
<p>提出了没有歧视的（反事实）薪资结构</p>
<h4><span id="stata">stata</span><a href="#stata" class="header-anchor">#</a></h4><p><img src="/2020/12/07/%E7%A7%91%E7%A0%94-%E5%88%86%E8%A7%A3/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201217094849728.png" alt="image-20201217094849728"></p>
<p> Neumark  </p>
<p><a href="https://journals.sagepub.com/doi/pdf/10.1177/1536867X0800800401">https://journals.sagepub.com/doi/pdf/10.1177/1536867X0800800401</a></p>
<p>oaxaca lnwage educ exper tenure, by(female) pooled  fixed() vce(robust)</p>
<p>oaxaca, eform</p>
<p><a href="http://econweb.umd.edu/~sarzosa/teach/2/Disc2_Cluster_handout.pdf">http://econweb.umd.edu/~sarzosa/teach/2/Disc2_Cluster_handout.pdf</a></p>
<p>vce(robust)- accounts for hetreoskedasticity in residual distribution,</p>
<p>White (1980) 异方差稳健型标准误 异方差性，</p>
<p>vce(cluster)- accounts for residual autocorrelation</p>
<p><a href="https://bbs.pinggu.org/forum.php?mod=viewthread&amp;action=printable&amp;tid=2151565">https://bbs.pinggu.org/forum.php?mod=viewthread&amp;action=printable&amp;tid=2151565</a></p>
<h4><span id="lun-wen">论文</span><a href="#lun-wen" class="header-anchor">#</a></h4><p>Economic development, human capital, and gender earnings  differentials in China</p>
<p>Economic Reforms and Gender Inequality in Urban China  </p>
<p>Glass Ceiling or Sticky Floor? Examining the Gender Pay Gap across the Wage Distribution in Urban China, 1987-2004  </p>
<p>Decomposition of Changes in Earnings Inequality in China: A Distributional Approach  </p>
<p>布朗分解</p>
<p>布朗等人将职业隔离引入了差异分解，最终将差异分解为职业内和职业间的特征效应和系数效应，职业间的特征效应和系数效应。包含四项。</p>
<h4><span id> </span><a href="#" class="header-anchor">#</a></h4><h5><span id="fen-wei-shu-hui-gui">分位数回归</span><a href="#fen-wei-shu-hui-gui" class="header-anchor">#</a></h5><h5><span id="fen-wei-shu-fen-jie">分位数分解</span><a href="#fen-wei-shu-fen-jie" class="header-anchor">#</a></h5><p>2007 Decomposition of Changes in Earnings Inequality in China: A Distributional Approach</p>
<p>GENDER WAGE DISCRIMINATION IN INDIA: GLASS CEILING OR STICKY FLOOR?  </p>
<p><a href="https://sociologist.cn/2020/08/29/memo-of-Decomposing-causes-of-se-related-health-inequality-urban-and-rural.html">https://sociologist.cn/2020/08/29/memo-of-Decomposing-causes-of-se-related-health-inequality-urban-and-rural.html</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/75401490">https://zhuanlan.zhihu.com/p/75401490</a></p>
<p><a href="https://www.ershicimi.com/p/478172ed5b38ec6c9a996b81124de73e">https://www.ershicimi.com/p/478172ed5b38ec6c9a996b81124de73e</a></p>
<h3><span id="ge-chi">隔离</span><a href="#ge-chi" class="header-anchor">#</a></h3><p>性别隔离，职业隔离，城乡隔离，区域隔离</p>
<p>隔离指数：邓肯指数</p>
<p>Duncan Dissimilarity Index  </p>
<h3><span id="zhong-guo-xiang-guan-wen-xian">中国相关文献</span><a href="#zhong-guo-xiang-guan-wen-xian" class="header-anchor">#</a></h3><p>World Development  </p>
<p>Understanding Urban Wage Inequality in China 1988–2008:<br>Evidence from Quantile Analysis  </p>
<h1><span id="xing-bie-shou-ru-de-bu-ping-deng">性别收入的不平等</span><a href="#xing-bie-shou-ru-de-bu-ping-deng" class="header-anchor">#</a></h1><h2><span id="bu-ping-deng-zhi-shu">不平等指数</span><a href="#bu-ping-deng-zhi-shu" class="header-anchor">#</a></h2><h4><span id="ji-ni-xi-shu-tai-er-zhi-shu-fen-wei-shu">基尼系数、泰尔指数、分位数</span><a href="#ji-ni-xi-shu-tai-er-zhi-shu-fen-wei-shu" class="header-anchor">#</a></h4><h2><span id="yang-ben-xuan-ze-pian-wu">样本选择偏误</span><a href="#yang-ben-xuan-ze-pian-wu" class="header-anchor">#</a></h2><p>Heckman two-step method  </p>
<p>选择的样本非完全随机</p>
<p>我们得到的样本是有偏差的。</p>
<p>被解释变量是缺失的</p>
<h2><span id="xiu-zheng">修正</span><a href="#xiu-zheng" class="header-anchor">#</a></h2><p>哈克曼</p>
<h3><span id="1-bei-jing"><strong>1. 背景</strong></span><a href="#1-bei-jing" class="header-anchor">#</a></h3><p>社会科学数据大部分都是非随机分配，使得选择模型在研究中的作用越来越重要，编辑和审稿人也通常会要求作者控制内生性和选择偏差。但是，学者在使用中也存在一些问题，如忽视了排他性约束变量的重要性。选择模型通常很脆弱，任意或不设排他性约束变量，会使得结论非常不稳健。接下来，将针对该问题予以说明，并提供一些有益的建议。</p>
<h3><span id="2-xuan-ze-xing-pian-chai-xiao-zheng"><strong>2. 选择性偏差校正</strong></span><a href="#2-xuan-ze-xing-pian-chai-xiao-zheng" class="header-anchor">#</a></h3><p><strong>2.1 选择模型</strong></p>
<p><strong>选择模型</strong>有两种主要应用，一是 <strong>处理效应 (treatment effect model)</strong>，即回归模型中包含一个内生的指示变量 (<img src="https://www.zhihu.com/equation?tex=D" alt="[公式]">)。例如，管理层是否发布盈余预测 (<img src="https://www.zhihu.com/equation?tex=D%3D1" alt="[公式]"> 或 0) 对资本成本影响。二是 <strong>样本选择 (sample selection model)</strong>，即回归样本为一个子样本。例如，在管理层发布盈余预测子样本中 (<img src="https://www.zhihu.com/equation?tex=D%3D1" alt="[公式]">)，对管理层盈余预测精确度的影响因素进行分析。在上述模型中，内生的 <img src="https://www.zhihu.com/equation?tex=D" alt="[公式]"> 都会导致有偏估计。</p>
<p>处理效应模型 (treatment effect model) 如下：</p>
<p><img src="https://www.zhihu.com/equation?tex=Y%3D%5Cbeta%5E%7B%5Cprime%7D+X%2B%5Ctheta+D%2Bu+%5Ctag1++" alt="[公式]"></p>
<p>其中，<img src="https://www.zhihu.com/equation?tex=X" alt="[公式]"> 包含截距项和一组影响 <img src="https://www.zhihu.com/equation?tex=Y" alt="[公式]"> 的外生解释变量。指示性变量 <img src="https://www.zhihu.com/equation?tex=D" alt="[公式]"> 可以通过以下二元选择模型进行回归得到：</p>
<p><img src="https://www.zhihu.com/equation?tex=D%5E%7B%2A%7D%3Da_%7B0%7D%5E%7B%5Cprime%7D+Z%2Ba_%7B1%7D%5E%7B%5Cprime%7D+X%2Bv+%5Ctag2++" alt="[公式]"></p>
<p>如果 <img src="https://www.zhihu.com/equation?tex=D%5E%7B%2A%7D%5Cgeq+0" alt="[公式]">，则 <img src="https://www.zhihu.com/equation?tex=D+%3D+1" alt="[公式]">，反之 <img src="https://www.zhihu.com/equation?tex=D%5E%7B%2A%7D+%3C+0" alt="[公式]">，则 <img src="https://www.zhihu.com/equation?tex=D+%3D+0" alt="[公式]">。</p>
<p>通常，式 (1) 和式 (2) 的随机误差项 <img src="https://www.zhihu.com/equation?tex=u" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=v" alt="[公式]"> 服从二元正态分布，其均值为 0，协方差矩阵为：</p>
<p><img src="https://www.zhihu.com/equation?tex=+%5Cleft%5B%5Cbegin%7Barray%7D%7Bcc%7D+%5Csigma%5E%7B2%7D+%26+%5Crho+%5Csigma+%5C%5C+%5Crho+%5Csigma+%26+1+%5Cend%7Barray%7D%5Cright%5D+%5C%5C" alt="[公式]"></p>
<p>如果随机误差项 <img src="https://www.zhihu.com/equation?tex=u" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=v" alt="[公式]"> 相关 (<img src="https://www.zhihu.com/equation?tex=%5Crho+%5Cneq+0" alt="[公式]">)，则 <img src="https://www.zhihu.com/equation?tex=E%28u%7CD%29+%5Cneq+0" alt="[公式]">，使得式 (1) 中的 <strong>OLS</strong> 估计量 <img src="https://www.zhihu.com/equation?tex=%5Ctheta" alt="[公式]"> 有偏。<strong>Heckman</strong> 方法就是通过式 (2) 构造 <strong>逆米尔斯比率</strong> (<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]">) 控制这个偏差。<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 计算如下：</p>
<p><img src="https://www.zhihu.com/equation?tex=+%5Ctext%7BIMR%7D%3DE%28u+%7C+D%29%3D%5Cleft%5C%7B%5Cbegin%7Barray%7D%7Bcc%7D+%5Cvarphi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29+%2F+%5CPhi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29+%26+%5Ctext+%7B+if+%7D+D%3D1+%5C%5C+-%5Cvarphi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29+%2F%5Cleft%281-%5CPhi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29%5Cright%29+%26+%5Ctext+%7B+if+%7D+D%3D0+%5Cend%7Barray%7D%5Cright.+%5C%5C" alt="[公式]"></p>
<p>其中，<img src="https://www.zhihu.com/equation?tex=%5Cvarphi%28.%29" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=%5CPhi%28.%29" alt="[公式]"> 分别为标准正态分布的密度函数和累积分布函数。然后，将计算得到 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 加入式 (1) 进行回归：</p>
<p><img src="https://www.zhihu.com/equation?tex=Y%3D%5Cbeta%5E%7B%5Cprime%7D+X%2B%5Ctheta+D%2B%5Crho+%5Csigma%5Ctext%7BIMR%7D%2B%5Cvarepsilon+%5Ctag3++" alt="[公式]"></p>
<p>此时，式 (3) 中随机误差项 <img src="https://www.zhihu.com/equation?tex=%5Cvarepsilon" alt="[公式]"> 与 <img src="https://www.zhihu.com/equation?tex=D" alt="[公式]"> 不相关，<img src="https://www.zhihu.com/equation?tex=%5Ctheta" alt="[公式]"> 为无偏估计量。并且，可以通过 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 显著性和系数判断选择偏差是否存在以及方向。当然，式 (2) 和 式 (3) 可以用传统两步法或最大似然估计法。</p>
<p>上述为处理效应模型 (treatment effect model)，除式 (3) 是以子样本回归外，样本选择模型与处理效应模型 (sample selection model)类似。例如，对管理层预测精确度 (<img src="https://www.zhihu.com/equation?tex=Y" alt="[公式]">) 分析中，回归样本为发布盈余预测的公司 (<img src="https://www.zhihu.com/equation?tex=D%3D1" alt="[公式]">)。此时，式 (3) 为 <img src="https://www.zhihu.com/equation?tex=Y%3D%5Cbeta%5E%7B%5Cprime%7DX%2B%5Ctheta%2B%5Crho%5Csigma%5Ctext%7BIMR%7D_%7B1%7D%2B%5Cvarepsilon" alt="[公式]">。其中，<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D_%7B1%7D" alt="[公式]"> 计算公式如下：</p>
<p><img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D_%7B1%7D%3D%5Cvarphi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29+%2F+%5CPhi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29++%5C%5C" alt="[公式]"></p>
<p>或者，对于 <img src="https://www.zhihu.com/equation?tex=D%3D0" alt="[公式]"> 的子样本回归中，式 (3) 为 <img src="https://www.zhihu.com/equation?tex=Y%3D%5Cbeta%5E%7B%5Cprime%7DX%2B%5Crho%5Csigma%5Ctext%7BIMR%7D_%7B0%7D%2B%5Cvarepsilon" alt="[公式]">。其中，<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D_%7B0%7D" alt="[公式]"> 计算如下：</p>
<p><img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D_%7B0%7D%3D-%5Cvarphi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29+%2F%5Cleft%281-%5CPhi%5Cleft%28%5Chat%7B%5Calpha%7D_%7B0%7D%5E%7B%5Cprime%7D+Z%2B%5Chat%7B%5Calpha%7D_%7B1%7D%5E%7B%5Cprime%7D+X%5Cright%29%5Cright%29++%5C%5C" alt="[公式]"></p>
<h3><span id="2-2-ying-yong-zhong-cun-zai-de-wen-ti"><strong>2.2 应用中存在的问题</strong></span><a href="#2-2-ying-yong-zhong-cun-zai-de-wen-ti" class="header-anchor">#</a></h3><p>选择模型式 (3) 与 OLS 模型式 (1) 的区别在于前者加入了逆米尔斯比率 (<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]">)。<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 可以识别选择性偏差主要是以下原因：</p>
<ul>
<li><img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 是 <img src="https://www.zhihu.com/equation?tex=X" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量的非线性函数</li>
<li><img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量从式 (3) 中已经排除</li>
</ul>
<p>其中，<img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量被假定为不会对 <img src="https://www.zhihu.com/equation?tex=Y" alt="[公式]"> 变量产生直接的影响，只能通过 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 产生间接影响，因此也被称为<strong>排他性约束 (exclusion restrictions)</strong>。</p>
<p>排他性约束变量，也就是 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量，在控制选择模型内生性问题过程中具有非常重要的作用。首先，<img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量必须是外生的，否则选择模型第一阶段回归 (式 2) 系数以及 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 会产生偏误；其次，<img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量对 <img src="https://www.zhihu.com/equation?tex=D" alt="[公式]"> 具有较强的解释能力，使得 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 能够更好的检测和控制选择偏差；最后，式 (3) 中必须有效排除 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量的影响，即 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量只能通过 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 对 <img src="https://www.zhihu.com/equation?tex=Y" alt="[公式]"> 产生间接影响，否则 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 与随机误差项相关，使得 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 系数估计有偏，不能有效控制 <img src="https://www.zhihu.com/equation?tex=D" alt="[公式]"> 变量的内生性。</p>
<p>找到一个好的 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量是困难的。在没有排他性约束情况下，即没有 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量，仍可以通过 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 的非线性去识别偏差。但可能面临以下两个问题：</p>
<ul>
<li>由于只能通过 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 的非线性识别偏差，非线性模型被错误设定为线性模型会被 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 吸收。</li>
<li>在式 (3) 中，<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 与 <img src="https://www.zhihu.com/equation?tex=X" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=D" alt="[公式]"> 相关，这种相关性在没有排他性约束变量 (<img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]">) 情况下更加严重。</li>
</ul>
<p>进一步，高的共线性会产生以下两个问题：</p>
<ul>
<li>高共线性会使得系数的标准差变大，降低了系数的显著性。<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 系数可能会变得不显著，进而得出错误结论。</li>
<li>在模型被正确设定下，即使存在高的共线性问题，系数也可以被无偏的估计。但是，事实上，选择模型被错误设定概率是很高的。若模型被错误设定，共线性会吸收这种偏差，导致系数估计有偏。</li>
</ul>
<h3><span id="3-xuan-ze-mo-xing-zai-yan-jiu-zhong-ying-yong-qing-kuang"><strong>3. 选择模型在研究中应用情况</strong></span><a href="#3-xuan-ze-mo-xing-zai-yan-jiu-zhong-ying-yong-qing-kuang" class="header-anchor">#</a></h3><p>接下来，以审计机构是否是前 5 大对审计费用的研究为例，说明 <strong>没有排他性约束变量</strong> 和 <strong>任意排他性约束变量</strong> 对结果的影响。为了说明前者，将第一阶段回归中所有自变量都包括在第二阶段回归中。为了说明后者，将第一阶段中企业规模从第二阶段排除。</p>
<p>下表为选择模型第一阶段回归结果，其中被解释变量为是否是前五大审计机构，<strong>Model 1</strong> 是以总资产自然对数衡量公司规模，<strong>Model 2</strong> 是以营业收入自然对数衡量公司规模。</p>
<p><img src="https://pic2.zhimg.com/80/v2-f5bff5b36f25a13c8f690755ccb2bcc9_720w.jpg" alt="img"></p>
<p>下表 (1)-(4)为选择模型第二阶段回归结果，(5) 和 (6) 普通 OLS 回归结果，其中，被解释变量为审计费用自然对数，(1) 和 (2) 中的 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 是根据上表 <strong>Model 1</strong> 计算，(3) 和 (4) 中的 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 是根据上表 <strong>Model 2</strong> 计算，同时，(1)、(4)、(5) 是以总资产自然对数控制公司规模，(2)、(3)、(6) 则是以营业收入自然对数衡量公司规模。由于(1) 和 (3) 在第一阶段和第二阶段都是用相同方式控制公司规模，所以没有排他性约束变量，(2) 和 (4) 排除约束变量分别为总资产自然对数和营业收入自然对数。</p>
<p>从结果可以看出，在选择模型第二阶段，<img src="https://www.zhihu.com/equation?tex=Big_%7Bit%7D" alt="[公式]"> 系数对排他性约束的不同设置较为敏感，同时共线性问题也比较严重，相反，OLS 的回归结果更为稳健和共线性也更小。</p>
<p><img src="https://pic4.zhimg.com/80/v2-ba61406538c27895b4154e683729ecff_720w.jpg" alt="img"></p>
<p>下表为 2000-2009 年会计顶级期刊使用选择模型情况的描述统计。在选择模型第二阶段，有 54 篇具有一个或多个排除约束变量，有 6 篇同时报告了具有和不具有排他性约束变量结果；有 3 篇报告了使用不同排除约束变量的稳健性结果；有3篇报告了排除约束变量经济机制；有3篇报告了内生性变量和 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 的多重共线性。</p>
<p><img src="https://pic4.zhimg.com/80/v2-a2a6bec7f20e75be021c5ea96c891293_720w.jpg" alt="img"></p>
<h3><span id="4-ying-yong-an-li"><strong>4. 应用案例</strong></span><a href="#4-ying-yong-an-li" class="header-anchor">#</a></h3><h5><span id="4-1-yang-ben-xuan-ze-mo-xing"><strong>4.1 样本选择模型</strong></span><a href="#4-1-yang-ben-xuan-ze-mo-xing" class="header-anchor">#</a></h5><p>以工作和教育经历对女性工资影响研究为例，只有参加工作的女性工资数据才能被观察到，而未参加的工作女性工资数据缺失，因此在研究女性工资影响因素时存在偏差。为克服该问题，采用选择模型进行处理。第一阶段，选择女性是否结婚 (<em>married</em>) 和孩子数量 (<em>children</em>) 作为排他性约束 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量，同时控制影响女性工资 (<em>wage</em>) 的工作经历 (<em>age</em>) 和教育程度 (<em>educ</em>) 变量。第二阶段，加入逆米尔斯比率 (<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]">) 进行回归。接下来，将分别以 <strong>OLS</strong>、<strong>Heckman Maximum Likelihood</strong>、<strong>Heckman Two-Step</strong>、以及手工计算两步法进行回归对比。</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">* 下载数据值当前工作路径</span><br><span class="line">* 网址: https://gitee.com/arlionn/data</span><br><span class="line">. copy "https://gitee.com/arlionn/data/raw/master/data01womenwk.dta" womenwk.dta</span><br><span class="line"></span><br><span class="line">*-调入数据</span><br><span class="line">. use womenwk.dta, clear</span><br><span class="line"></span><br><span class="line">/* 也可以在线导入数据</span><br><span class="line">. use "https://gitee.com/arlionn/data/raw/master/data01/womenwk.dta", clear</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">*ols</span><br><span class="line">reg wage educ age</span><br><span class="line">est store OLS</span><br><span class="line"></span><br><span class="line">*heckman maximum likelihood</span><br><span class="line">heckman wage educ age, select(married children educ age) //默认最大似然估计</span><br><span class="line">est store HeckMLE</span><br><span class="line"></span><br><span class="line">*heckman two-step  all-in-one 不可以进行cluster调整</span><br><span class="line">heckman wage educ age, select(married children educ age) twostep</span><br><span class="line">est store Heck2s</span><br><span class="line"></span><br><span class="line">*heckman two-step  step-by-step 可以进行cluster调整</span><br><span class="line">probit work married children educ age</span><br><span class="line">est store First</span><br><span class="line">predict y_hat, xb</span><br><span class="line">gen pdf = normalden(y_hat)  //概率密度函数</span><br><span class="line">gen cdf = normal(y_hat)     //累积分布函数</span><br><span class="line">gen imr = pdf/cdf           //计算逆米尔斯比率</span><br><span class="line">reg  wage educ age imr if work == 1  //女性工作子样本</span><br><span class="line">est store Second</span><br><span class="line">vif  //方差膨胀因子</span><br><span class="line"></span><br><span class="line">*对比结果</span><br><span class="line">local m "OLS HeckMLE Heck2s First Second"</span><br><span class="line">esttab `m', mtitle(`m') nogap compress pr2 ar2</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">                 (1)          (2)          (3)          (4)          (5)   </span><br><span class="line">                 OLS      HeckMLE       Heck2s        First       Second   </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">main                                                                       </span><br><span class="line">education      0.897***     0.990***     0.983***    0.0584***     0.983***</span><br><span class="line">             (18.00)      (18.59)      (18.23)       (5.32)      (19.46)   </span><br><span class="line">age            0.147***     0.213***     0.212***    0.0347***     0.212***</span><br><span class="line">              (7.83)      (10.34)       (9.61)       (8.21)      (10.25)   </span><br><span class="line">married                                               0.431***             </span><br><span class="line">                                                     (5.81)                </span><br><span class="line">children                                              0.447***             </span><br><span class="line">                                                    (15.56)                </span><br><span class="line">imr                                                                4.002***</span><br><span class="line">                                                                  (6.93)   </span><br><span class="line">_cons          6.085***     0.486        0.734       -2.467***     0.734   </span><br><span class="line">              (6.84)       (0.45)       (0.59)     (-12.81)       (0.63)   </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">select                                                                     </span><br><span class="line">married                     0.445***     0.431***                          </span><br><span class="line">                           (6.61)       (5.81)                             </span><br><span class="line">children                    0.439***     0.447***                          </span><br><span class="line">                          (15.79)      (15.56)                             </span><br><span class="line">education                  0.0557***    0.0584***                          </span><br><span class="line">                           (5.19)       (5.32)                             </span><br><span class="line">age                        0.0365***    0.0347***                          </span><br><span class="line">                           (8.79)       (8.21)                             </span><br><span class="line">_cons                      -2.491***    -2.467***                          </span><br><span class="line">                         (-13.16)     (-12.81)                             </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">/                                                                          </span><br><span class="line">athrho                      0.874***                                       </span><br><span class="line">                           (8.62)                                          </span><br><span class="line">lnsigma                     1.793***                                       </span><br><span class="line">                          (64.95)                                          </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">/mills                                                                     </span><br><span class="line">lambda                                   4.002***                          </span><br><span class="line">                                        (6.60)                             </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">N               1343         2000         2000         2000         1343   </span><br><span class="line">adj. R-sq      0.252                                               0.278   </span><br><span class="line">pseudo R~q                                            0.189                </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">t statistics in parentheses</span><br><span class="line">* p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001</span><br><span class="line"></span><br><span class="line">. vif  //方差膨胀因子</span><br><span class="line">    Variable |       VIF       1/VIF  </span><br><span class="line">-------------+----------------------</span><br><span class="line">         imr |      1.39    0.719868</span><br><span class="line">         age |      1.31    0.764000</span><br><span class="line">   education |      1.10    0.906166</span><br><span class="line">-------------+----------------------</span><br><span class="line">    Mean VIF |      1.27</span><br></pre></td></tr></tbody></table></figure>
<h5><span id="4-2-chu-li-xiao-ying-mo-xing"><strong>4.2 处理效应模型</strong></span><a href="#4-2-chu-li-xiao-ying-mo-xing" class="header-anchor">#</a></h5><p>以女性工会成员身份对工资影响研究为例。女性是否加入工会是一种自选择行为，会受到许多因素影响。为克服该问题，采用选择模型进行处理。第一阶段，选择女性是否生活在南方州 (<em>south</em>) 作为排他性约束 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量，同时控制是否非洲裔 (<em>black</em>) 和工作年限 (<em>tenure</em>)。第二阶段，加入逆米尔斯比率 (<img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]">) 进行回归。接下来，将分别以 <strong>OLS</strong>、<strong>etregress Maximum Likelihood</strong>、<strong>etregress Two-Step</strong>、以及手工计算两步法进行回归对比。值得注意的是，逆米尔斯比率要在 <img src="https://www.zhihu.com/equation?tex=D+%3D+1" alt="[公式]"> 和 <img src="https://www.zhihu.com/equation?tex=D+%3D+0" alt="[公式]"> 两种情况下分别计算，正如本文在 <strong><a href="https://zhuanlan.zhihu.com/p/141907939/edit#jump">2.1</a></strong> 部分所列示的 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 计算过程一样。具体可参考 <a href="https://link.zhihu.com/?target=https%3A//www.stata.com/support/faqs/statistics/inverse-mills-ratio/">IMR’ ratios and censoring direction in the Heckman selection model</a>。</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">*--------------处理效应模型-------------</span><br><span class="line">* 下载数据值当前工作路径</span><br><span class="line">* 网址: https://gitee.com/arlionn/data</span><br><span class="line">. copy "https://gitee.com/arlionn/data/raw/master/data01/union3.dta" union3.dta</span><br><span class="line"></span><br><span class="line">*-调入数据</span><br><span class="line">. use union3.dta, clear</span><br><span class="line"></span><br><span class="line">/* 也可以在线导入数据</span><br><span class="line">. use "https://gitee.com/arlionn/data/raw/master/data01/union3.dta", clear</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">*ols</span><br><span class="line">reg wage age grade smsa black tenure union</span><br><span class="line">est store OLS</span><br><span class="line"></span><br><span class="line">*etregress maximum likelihood</span><br><span class="line">etregress wage age grade smsa black tenure,  ///</span><br><span class="line">          treat(union = south black tenure) twostep </span><br><span class="line">est store etrMLE</span><br><span class="line"></span><br><span class="line">*etregress two-step all-in-one  不可以进行cluster调整</span><br><span class="line">etregress wage age grade smsa black tenure,  ///</span><br><span class="line">          treat(union = south black tenure) twostep </span><br><span class="line">est store etr2s	</span><br><span class="line"></span><br><span class="line">*etregress two-step  step-by-step 可以进行cluster调整</span><br><span class="line">probit union south black tenure</span><br><span class="line">est store First</span><br><span class="line">predict y_hat, xb</span><br><span class="line">gen pdf = normalden(y_hat)</span><br><span class="line">gen cdf = normal(y_hat)</span><br><span class="line">gen imr1 = pdf/cdf            //union = 1算法</span><br><span class="line">gen imr2 = (-pdf) / (1 - cdf) //union = 0算法</span><br><span class="line">gen imr = imr1 </span><br><span class="line">replace imr = imr2 if union == 0</span><br><span class="line">reg wage age grade smsa black tenure union imr</span><br><span class="line">est store Second</span><br><span class="line">vif</span><br><span class="line"></span><br><span class="line">*对比结果</span><br><span class="line">local m "OLS etrMLE etr2s First Second"</span><br><span class="line">esttab `m', mtitle(`m') nogap compress pr2 ar2</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">                 (1)          (2)          (3)          (4)          (5)   </span><br><span class="line">                 OLS       etrMLE        etr2s        First       Second   </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">main                                                                       </span><br><span class="line">age            0.148***     0.154***     0.154***                  0.154***</span><br><span class="line">              (7.56)       (7.92)       (7.92)                    (7.94)   </span><br><span class="line">grade          0.437***     0.423***     0.423***                  0.423***</span><br><span class="line">             (14.82)      (14.56)      (14.56)                   (14.35)   </span><br><span class="line">smsa           0.975***     0.863***     0.863***                  0.863***</span><br><span class="line">              (7.79)       (6.71)       (6.71)                    (6.79)   </span><br><span class="line">black         -0.618***    -0.921***    -0.921***     0.440***    -0.921***</span><br><span class="line">             (-4.94)      (-5.19)      (-5.19)       (4.52)      (-6.45)   </span><br><span class="line">tenure         0.212***     0.100        0.100       0.0998***     0.100*  </span><br><span class="line">              (6.26)       (1.93)       (1.93)       (4.22)       (2.37)   </span><br><span class="line">union          1.004***     4.564***     4.564***                  4.564***</span><br><span class="line">              (7.50)       (4.53)       (4.53)                    (5.45)   </span><br><span class="line">south                                                -0.490***             </span><br><span class="line">                                                    (-5.24)                </span><br><span class="line">imr                                                               -2.093***</span><br><span class="line">                                                                 (-4.31)   </span><br><span class="line">_cons         -4.326***    -4.670***    -4.670***    -0.968***    -4.670***</span><br><span class="line">             (-8.14)      (-8.65)      (-8.65)     (-12.97)      (-8.75)   </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">union                                                                      </span><br><span class="line">south                      -0.490***    -0.490***                          </span><br><span class="line">                          (-5.24)      (-5.24)                             </span><br><span class="line">black                       0.440***     0.440***                          </span><br><span class="line">                           (4.52)       (4.52)                             </span><br><span class="line">tenure                     0.0998***    0.0998***                          </span><br><span class="line">                           (4.22)       (4.22)                             </span><br><span class="line">_cons                      -0.968***    -0.968***                          </span><br><span class="line">                         (-12.97)     (-12.97)                             </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">hazard                                                                     </span><br><span class="line">lambda                     -2.093***    -2.093***                          </span><br><span class="line">                          (-3.61)      (-3.61)                             </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">N               1210         1210         1210         1210         1210   </span><br><span class="line">adj. R-sq      0.337                                               0.346   </span><br><span class="line">pseudo R~q                                            0.046                </span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">t statistics in parentheses</span><br><span class="line">* p&lt;0.05, ** p&lt;0.01, *** p&lt;0.001</span><br><span class="line"></span><br><span class="line">. vif</span><br><span class="line">    Variable |       VIF       1/VIF  </span><br><span class="line">-------------+----------------------</span><br><span class="line">       union |     40.76    0.024532</span><br><span class="line">         imr |     39.72    0.025173</span><br><span class="line">      tenure |      1.79    0.558305</span><br><span class="line">       black |      1.37    0.730327</span><br><span class="line">         age |      1.14    0.878075</span><br><span class="line">       grade |      1.08    0.928859</span><br><span class="line">        smsa |      1.06    0.939479</span><br><span class="line">-------------+----------------------</span><br><span class="line">    Mean VIF |     12.42</span><br></pre></td></tr></tbody></table></figure>
<p>关于选择模型 all-in-one 和 step-by-step 两种方法差别，参考 <a href="https://link.zhihu.com/?target=https%3A//www.statalist.org/forums/forum/general-stata-discussion/general/1484793-heckman-two-step-model">Heckman Two-Step Model</a> 和 <a href="https://link.zhihu.com/?target=http%3A//kaichen.work/%3Fp%3D1198">Stata commands to do Heckman two steps</a>。关于选择模型第一阶段是否要包含第二阶段全部外生解释变量，请参考 <a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/pw5lRQxkj20iUntSGltLSw">工具变量法（五）: 为何第一阶段回归应包括所有外生解释变量</a>，值得注意的是，选择模型中 <img src="https://www.zhihu.com/equation?tex=%5Ctext%7BIMR%7D" alt="[公式]"> 是一种非线性，因此不包含第二阶段全部外生解释变量引起的内生性问题可能并没有工具变量法那么严重。</p>
<h3><span id="5-xuan-ze-mo-xing-shi-yong-jian-yi"><strong>5. 选择模型使用建议</strong></span><a href="#5-xuan-ze-mo-xing-shi-yong-jian-yi" class="header-anchor">#</a></h3><ul>
<li>选择模型要有排他性约束变量，即在第一阶段回归中包含，而在第二阶段回归中排除。</li>
<li>选择模型要报告第一阶段回归结果，否则不清楚哪个变量是排他性约束变量或评估排他性约束变量的解释能力。</li>
<li>需要证明为什么排他性约束变量，即 <img src="https://www.zhihu.com/equation?tex=Z" alt="[公式]"> 变量，可以从第二阶段回归中有效排除。</li>
<li>由于选择模型是脆弱的，敏感性分析是必要的，如与不同排他性约束变量结果和OLS 结果对比、以及报告内生性变量和逆米尔斯比率的 VIF 值。</li>
<li>在使用过程中，可以综合借鉴 Lennox and Francis(2012)<a href="https://zhuanlan.zhihu.com/p/141907939/edit#refer-anchor-1">1</a>，Kim and Zhang(2016)<a href="https://zhuanlan.zhihu.com/p/141907939/edit#refer-anchor-2">2</a>，李小荣和刘行 (2012)<a href="https://zhuanlan.zhihu.com/p/141907939/edit#refer-anchor-3">3</a>。</li>
</ul>
<h3><span id="6-jie-lun"><strong>6. 结论</strong></span><a href="#6-jie-lun" class="header-anchor">#</a></h3><p>最后，借用文章作者原话予以总结。</p>
<blockquote>
<p>In short, researchers are faced with the following trade-off. On the one hand, selection models can be fragile and suffer from multicollinearity problems, which hinder their reliability. On the other hand, the selection model potentially provides more reliable inferences by controlling for endogeneity bias if the researcher can find good exclusion restrictions, and if the models are found to be robust to minor specification changes. The importance of these advantages and disadvantages depends on the specific empirical setting, so it would be inappropriate for us to make a general statement about when the selection model should be used. Instead, researchers need to critically appraise the quality of their exclusion restrictions and assess whether there are problems of fragility and multicollinearity in their specific empirical setting that might limit the effectiveness of selection models relative to OLS.</p>
</blockquote>
<h3><span id="7-can-kao-wen-xian"><strong>7. 参考文献</strong></span><a href="#7-can-kao-wen-xian" class="header-anchor">#</a></h3><p>[1] <a href="https://link.zhihu.com/?target=https%3A//doi.org/10.2308/accr-10195">Lennox C S, Francis J R, Wang Z. Selection models in accounting research[J]. The accounting review, 2012, 87(2): 589-616.</a></p>
<p>[2] <a href="https://link.zhihu.com/?target=https%3A//doi.org/10.1111/1911-3846.12150">Kim C, Zhang L. Corporate political connections and tax aggressiveness[J]. Contemporary Accounting Research, 2016, 33(1): 78-114.</a></p>
<p>[3] <a href="https://link.zhihu.com/?target=http%3A//www.cnki.com.cn/Article/CJFDTotal-SJJJ201212009.htm">李小荣, 刘行. CEO vs CFO: 性别与股价崩盘风险[J]. 世界经济, 2012, 12: 102-129.</a></p>
<h2><span id="zi-xuan-ze-pian-wu">自选择偏误</span><a href="#zi-xuan-ze-pian-wu" class="header-anchor">#</a></h2><p>解释变量不是随机的。如参加培训，有人愿意，有的人不愿意</p>
<h3><span id="psm">PSM</span><a href="#psm" class="header-anchor">#</a></h3><h1><span id="nei-sheng-xing-lai-yuan-he-jie-jue-fang-fa">内生性来源和解决方法</span><a href="#nei-sheng-xing-lai-yuan-he-jie-jue-fang-fa" class="header-anchor">#</a></h1><p>PSM</p>
<p>IV</p>
<p>反向因果</p>
<p>遗漏变量</p>
<h1><span id="yang-ben-xuan-ze-pian-wu-de-yuan-yin-he-jie-jue-fang-fa">样本选择偏误的原因和解决方法</span><a href="#yang-ben-xuan-ze-pian-wu-de-yuan-yin-he-jie-jue-fang-fa" class="header-anchor">#</a></h1><p>样本缺失</p>
<p>heckman</p>
<h1><span id="two-stage-models-difference-between-heckman-models-to-deal-with-sample-selection-and-instrumental-variables-to-deal-with-endogenity"></span><a href="#two-stage-models-difference-between-heckman-models-to-deal-with-sample-selection-and-instrumental-variables-to-deal-with-endogenity" class="header-anchor">#</a></h1><p><strong>To answer your first question,</strong> you are correct that sample selection is a specific form of endogeneity (See Antonakis et al. 2010 for a good basic review of endogeneity and common remedies), however you are not correct in saying that the likelihood of being treated is the endogenous variable, as it is the treatment variable itself (“non-random treatment assignment”)—rather than the likelihood of being treated—that is endogenous in sample selection. Recall that endogeneity refers to a situation where you have incorrectly identified a causal relationship between factor X and factor Y, when the observed “relationship” is actually due to another factor Z that affects both X and Y. Put another way, given a regression model:</p>
<p>yi=β0+β1xi+…+ϵiyi=β0+β1xi+…+ϵi</p>
<p>endogeneity occurs when one or more than one of your predictors is related to the error term in the model. That is, when Cov(x,ϵ)≠0Cov(x,ϵ)≠0.</p>
<p>The common causes of endogenity include:</p>
<ol>
<li>Omitted variables</li>
</ol>
<p>   (some things we just can’t measure)</p>
<ul>
<li>Motivation/choice</li>
<li>Ability/talent</li>
<li><strong><em>Self-selection\</em></strong></li>
</ul>
<ol>
<li><p><strong>Measurement error</strong> (we would like to include xjxj, but we only observe xj∗xj∗)</p>
</li>
<li><p><strong>Simultaneity/bidirectionality</strong> (in children under 5, the relationship between the nutritional status indicator “weight for age” and whether the child had a recent illness might be simultaneous.</p>
</li>
</ol>
<p>Different types of problems require slightly different solutions, which is where the difference between IV and Heckman-type corrections lie. Of course there are differences in the underlying mechanics of these methods, but the premise is the same: which is to remove endogeneity, ideally via an exclusion restriction, i.e. one or more instruments in the case of IV or a variable that affects selection but not the outcome in the case of Heckman.</p>
<p><strong>To answer your second question,</strong> you have to think about the differences in the types of data limitations that gave rise to the development of these solutions. I like to think that the instrumental variable (IV) approach is used when one or more variables is endogenous, and there are simply no good proxies to stick in the model to remove the endogeneity, but the covariates and outcomes are observed for all observations. Heckman-type corrections, on the other hand, are used when you have truncation, i.e. the information is not observed for those in sample where the value of the selection variable == 0.</p>
<p><strong>The instrumental variable (IV) approach</strong></p>
<p>Think of the classic econometric example for IV regression with the two-stage least squares (2SLS) estimator: the effect of education on earnings.</p>
<p>Earningsi=β0+β1OwnEdi+ϵiEarningsi=β0+β1OwnEdi+ϵi (1)</p>
<p>Here level of educational achievement is endogenous because it is determined partly by the individual’s motivation and ability, both of which also affect a person’s earnings. Motivation and Ability are not typically measured in household or economic surveys. Equation 1 can therefore be written to explicitly include motivation and ability:</p>
<p>Earningsi=β0+{β1OwnEdi+β2Motivi+β3Abili}+ϵiEarningsi=β0+{β1OwnEdi+β2Motivi+β3Abili}+ϵi (2)</p>
<p>Since MotivMotiv and AbilAbil are not actually observed, Equation 2 can be written as:</p>
<p>Earningsi=β0+β1OwnEdi+uiEarningsi=β0+β1OwnEdi+ui (3),</p>
<p>where ui=β2Motivi+β3Abili+ϵiui=β2Motivi+β3Abili+ϵi (4).</p>
<p>Therefore a naïve estimation of the effect of education on earnings via OLS would be biased. This part you already know.</p>
<p>In the past, people have used parents’ education as instruments for the subject’s own level of education, as they fit the 3 requirements for a valid instrument (zz):</p>
<ol>
<li>zz must be related to the endogenous predictor – Cov(z,x)≠0𝐶𝑜𝑣(𝑧,𝑥)≠0,</li>
<li>zz cannot be directly related to the outcome – Cov(z,y)=0𝐶𝑜𝑣(𝑧,𝑦)=0, and</li>
<li>zz cannot be related to the unobservable (u) characteristic (that is, zz is exogenous) – Cov(z,u)=0𝐶𝑜𝑣(𝑧,𝑢)=0</li>
</ol>
<p>When you estimate the subject’s education (OwnEdOwnEd) using parents’ education (MomEdMomEd and DadEdDadEd) at first stage and use the predicted value of education (OwnEdˆOwnEd^) to estimate EarningsEarnings at second stage, you are (in very simplistic terms), estimating EarningsEarnings based on the portion of OwnEdOwnEd that is not determined by motivation/ability.</p>
<p><strong>Heckman-type corrections</strong></p>
<p>As we have established before, non-random sample selection is a specific type of endogeneity. In this case, the omitted variable is how people were selected into the sample. Typically, when you have a sample selection problem, your outcome is observed only for those for whom the sample selection <code>variable == 1</code>. This problem is also known as “incidental truncation,” and the solution is commonly known as a Heckman correction. The classic example in econometrics is the wage offer of married women:</p>
<p>Wagei=β0+β1Educi+β2Experiencei+β3Experience2i+ϵiWagei=β0+β1Educi+β2Experiencei+β3Experiencei2+ϵi (5)</p>
<p>The problem here is that Wage is only observed for women who worked for wages, so a naïve estimator would be biased, as we do not know what the wage offer is for those who do not participate in the labor force, the selection variable ss. Equation 5 can be rewritten to show that it is jointly determined by two latent models:</p>
<p>Wage∗i=Xβ′+ϵiWagei∗=Xβ′+ϵi (6)</p>
<p>LaborForce∗i=Zγ′+νiLaborForcei∗=Zγ′+νi (7)</p>
<p>That is, Wage=Wage∗iWage=Wagei∗ IFF LaborForce∗i&gt;0LaborForcei∗&gt;0 and Wage=.Wage=. IFF LaborForce∗i≤0LaborForcei∗≤0</p>
<p>The solution here is therefore to predict the likelihood of participation in the labor force at first stage using a probit model and the exclusion restriction (the same criteria （条件）for valid instruments apply here), calculate the predicted inverse Mills ratio (λ^λ^) for each observation, and in second stage, estimate the wage offer using the λ^λ^ as a predictor in the model (Wooldridge 2009). If the coefficient on λ^λ^ is statistically equal to zero, there is no evidence of sample selection (endogeneity), and OLS results are consistent and can be presented. If the coefficient on λ^λ^ is statistically significantly different from zero, you will need to report the coefficients from the corrected model.</p>
<p><strong>References</strong></p>
<ol>
<li>Antonakis, John, Samuel Bendahan, Philippe Jacquart, and Rafael Lalive. 2010. “On Making Causal Claims: A Review and Recommendations.” <em>The Leadership Quarterly</em> 21 (6): 1086–1120. doi:10.1016/j.leaqua.2010.10.010.</li>
<li>Wooldridge, Jeffrey M. 2009. Introductory Econometrics: A Modern Approach. 4th ed. Mason, OH, USA: South-Western, Cengage Learning.</li>
</ol>
<p><a href="https://stats.stackexchange.com/a/172524">Share</a></p>
<p>Cite</p>
<p><a href="https://stats.stackexchange.com/posts/172524/edit">Improve this answer</a></p>
<p>Follow</p>
<p><a href="https://stats.stackexchange.com/posts/172524/revisions">edited Jul 16 ‘17 at 18:27</a></p>
<p><a href="https://stats.stackexchange.com/users/-1/community"><img src="https://www.gravatar.com/avatar/a007be5a61f6aa8f3e85ae2fc18dd66e?s=32&amp;d=identicon&amp;r=PG" alt="img"></a></p>
<p><a href="https://stats.stackexchange.com/users/-1/community">Community</a><strong>♦</strong></p>
<p><strong>1</strong></p>
<p>answered Sep 14 ‘15 at 23:37</p>
<p><a href="https://stats.stackexchange.com/users/40230/marquis-de-carabas"><img src="https://i.stack.imgur.com/pnvqN.png?s=32&amp;g=1" alt="img"></a></p>
<p><a href="https://stats.stackexchange.com/users/40230/marquis-de-carabas">Marquis de Carabas</a></p>
<p><strong>1,572</strong>1818 silver badges3030 bronze badges</p>
<ul>
<li><p>1</p>
<p>In Heckman-type correction, how to interprete inverse Mills ratio values for each observation? Does it says the number of people who will work from the non-working population at a given moment? – <a href="https://stats.stackexchange.com/users/43204/quirik">Quirik</a> <a href="https://stats.stackexchange.com/questions/172508/two-stage-models-difference-between-heckman-models-to-deal-with-sample-selecti#comment397107_172524">Apr 23 ‘16 at 20:34</a></p>
</li>
</ul>
<p><a href="https://stats.stackexchange.com/questions/172508/two-stage-models-difference-between-heckman-models-to-deal-with-sample-selecti#">Add a comment</a></p>
<p>6</p>
<p>One should make a distinction between the specific <strong>Heckman sample selection</strong> model (where only one sample is observed) and <strong>Heckman-type corrections</strong> for self-selection, which can also work for the case where the two samples are observed. The latter is referred to as <em>control function</em> approach, and amounts to include into your second stage a term controlling for the endogeneity.</p>
<p>Let us have a standard case with an endogeneous dummy variable D, an instrument Z:</p>
<p>Y=β+β1D+ϵY=β+β1D+ϵ</p>
<p>D=γ+γ1Z+uD=γ+γ1Z+u</p>
<p>Both approaches run a first stage (D on Z). IV uses a standard OLS (even if D is a dummy) Heckman uses a probit. But besides this, the main difference is on the way they use this first stage into the main equation:</p>
<ul>
<li><strong>IV</strong>: break the endogeneity by decomposing D into parts uncorrelated with ϵϵ, given by the prediction of D: Y=β+β1D^+ϵY=β+β1D^+ϵ</li>
<li><strong>Heckman</strong>: model the endogeneity: keep the endogenous D, but add a function of the predicted values of the first stage. For this case, it is a pretty complicated function: Y=β+β1D+β2[λ(D^)−λ(−D^)]+ϵY=β+β1D+β2[λ(D^)−λ(−D^)]+ϵ where λ()λ() is the inverse <a href="https://en.wikipedia.org/wiki/Mills_ratio">Mills ratio</a></li>
</ul>
<p>The advantage of the Heckman procedure is that it provides a direct test for endogeneity: the coefficient β2β2. On the other side, the Heckman procedure relies on the assumption of joint normality of the errors, while the IV does not make any such assumption.</p>
<p>So you have the standard story that with normal errors, the control function will be more efficient (especially if ones uses the MLE instead of the two-step shown here) than the IV, but that if the assumption does not hold, IV would be better. As researchers have become more suspicious about the assumption of normality, the IV is used more often.</p>
]]></content>
      <tags>
        <tag>工资分解</tag>
      </tags>
  </entry>
  <entry>
    <title>因果分析</title>
    <url>/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>不知道因果分析方法</p>
<a id="more"></a>
<h1><span id="yin-guo-guan-xi-yin-guo-tui-duan">因果关系，因果推断</span><a href="#yin-guo-guan-xi-yin-guo-tui-duan" class="header-anchor">#</a></h1><p>原因和结果，如何分析原因和结果</p>
<h3><span id="fang-fa">方法</span><a href="#fang-fa" class="header-anchor">#</a></h3><h1><span id="granger-yin-guo-guan-xi">Granger 因果关系</span><a href="#granger-yin-guo-guan-xi" class="header-anchor">#</a></h1><p>经济变量之间存在领先和滞后关系，可看做变量之间存在Granger因果关系</p>
<p>如果广告与销售额，期货收益与现货收益</p>
<p><a href="https://dango.rocks/blog/2018/11/04/Causality0-Collection-of-Study-Materials/">https://dango.rocks/blog/2018/11/04/Causality0-Collection-of-Study-Materials/</a></p>
<p> 原因先于结果</p>
<h2><span id="shu-ji">书籍</span><a href="#shu-ji" class="header-anchor">#</a></h2><p><a href="http://bayes.cs.ucla.edu/PRIMER/">http://bayes.cs.ucla.edu/PRIMER/</a></p>
<h3><span id="fang-fa">方法</span><a href="#fang-fa" class="header-anchor">#</a></h3><h4><span id="gan-yu">干预</span><a href="#gan-yu" class="header-anchor">#</a></h4><p>实验</p>
<h3><span id="tong-ji-xiang-guan-xing-bu-deng-yu-yin-guo-xing">统计相关性不等于因果性</span><a href="#tong-ji-xiang-guan-xing-bu-deng-yu-yin-guo-xing" class="header-anchor">#</a></h3><h2><span id="xin-pu-sen-bei-lun">辛普森悖论</span><a href="#xin-pu-sen-bei-lun" class="header-anchor">#</a></h2><h4><span id="hun-yao-bian-liang">混淆变量</span><a href="#hun-yao-bian-liang" class="header-anchor">#</a></h4><p>剔除变量：分组看。</p>
<p>如果是一个混淆变量，分组看，在混淆变量上看，</p>
<p>第三方的影响，让结果反转。</p>
<p>总体数据还是子集（分类）看</p>
<p>胆固醇与锻炼的关系</p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201203200533949.png" alt="image-20201203200533949"></p>
<p>年龄因素</p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201203200808892.png" alt="image-20201203200808892"></p>
<p>性别:药物影响</p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201203201040778.png" alt="image-20201203201040778"></p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201203202151899.png" alt="image-20201203202151899"></p>
<h4><span id="yin-guo-guan-xi">因果关系</span><a href="#yin-guo-guan-xi" class="header-anchor">#</a></h4><p>副作用和正作用</p>
<p>不能分类看</p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201203202600529.png" alt="image-20201203202600529"></p>
<h1><span id="wei-zhi-shi-jie">未知世界</span><a href="#wei-zhi-shi-jie" class="header-anchor">#</a></h1><p>已知世界到未知数据</p>
<p>社会科学和自然科学</p>
<p>描述性推论</p>
<p>​    </p>
<p>因果性推论</p>
<h3><span id="fan-shi-shi">反事实</span><a href="#fan-shi-shi" class="header-anchor">#</a></h3><p>治疗组和控制组（得不到啊）</p>
<p>无法避免，只能减少推论</p>
<p>（DID,RD,Matching)</p>
<p>随机赋值实验：实验，困难</p>
<p>多元回归：控制变量</p>
<p>随机项：强假设</p>
<p>有偏性和一致性，有效性。</p>
<p>遗漏变量</p>
<p>随机误差项：随机的</p>
<p>遗漏变量：X影响其他自变量，这个和重要。</p>
<p>互为因果关系：Y影响X，</p>
<p>Y滞后：上一年影响下一年（自相关性）</p>
<p>测量误差：</p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201203211525572.png" alt="image-20201203211525572"></p>
<p>寻找IV： </p>
<h1><span id="yin-guo-tui-duan">因果推断</span><a href="#yin-guo-tui-duan" class="header-anchor">#</a></h1><p><a href="https://mp.weixin.qq.com/s/ZF0O1xkbDdMRhwIP9ihPXA">00、『为什么』关于因果关系的新科学</a><br>《The Book of Why: The New Science of Cause and Effect》<br><a href="https://mp.weixin.qq.com/s/2AK8UsyIGILdb0Mn6ArclQ">01、案例研究与因果推断</a><br>《Case Studies and Causal Inference：An Integrative Framework 》<br><a href="https://mp.weixin.qq.com/s/QRltRGdXG2mXALFoXD7DfA">02、计量经济学中的因果推断</a><br>《 Causal Inference in Econometrics 》<br><a href="https://mp.weixin.qq.com/s/WoYo5hEefx6JPOZF2ftjuQ">03、因果关系-模型 论证与推断</a><br>《Causality : Models, Reasoning and Inference》（第二版）<br><a href="https://mp.weixin.qq.com/s/TyJp4gq0QzZDQFxJObDTNg">04、反事实与因果推断-社会研究的方法和原则</a><br>《Counterfactuals and Causal Inference : Methods and Principles for Social Research》（第二版）<br><a href="https://mp.weixin.qq.com/s/fvIrVRFhANxWNDtQmKcD6g">05、因果推断要素-基础和学习算法</a><br>《Elements of Causal Inference : Foundations and Learning Algorithms》<br><a href="https://mp.weixin.qq.com/s/VW0HLxv1xGbTn-5aZiN3EA">06、因果推断解释-中介和交互方法</a><br>《Explanation in Causal Inference: Methods for Mediation and Interaction 》<br><a href="https://mp.weixin.qq.com/s/pgtboXoZWLyZXJcLTR-Cwg">07、因果推断概论-观察和实验</a><br>《Observation and experiment: An introduction to causal inference 》<br><a href="https://mp.weixin.qq.com/s/k-AN1y-HDM5qupPJHJOj8A">08、牛津因果推断手册</a><br>《The Oxford Handbook of Causal Reasoning》<br><a href="https://mp.weixin.qq.com/s/NKQKCxzPYzUO6WT_vQOmPA">09、统计学、社会学和生物医学的因果推断导论</a><br>《Causal Inference for Statistics, Social, and Biomedical Sciences An Introduction》</p>
<p><a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;album_id=1406705666328313858&amp;__biz=MzI2MTE4NzU5OQ==&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&amp;album_id=1406705666328313858&amp;__biz=MzI2MTE4NzU5OQ==&amp;scene=21#wechat_redirect</a></p>
<p><a href="http://sk.sagepub.com/reference/the-sage-handbook-of-regression-analysis-and-causal-inference/n14.xml">http://sk.sagepub.com/reference/the-sage-handbook-of-regression-analysis-and-causal-inference/n14.xml</a></p>
<h2><span id="propensity-modeling-qing-xiang-jian-mo"><strong><em>\</em>Propensity Modeling（倾向建模）**</strong></span><a href="#propensity-modeling-qing-xiang-jian-mo" class="header-anchor">#</a></h2><ol>
<li>选择一些变量作为(特征)</li>
<li>建立概率模型，预测是否会喝，概率作为倾向得分</li>
<li>根据倾向得分划分桶：</li>
<li>然后在某个子集里面，比较差异性。估计因果效应</li>
</ol>
<p>Group </p>
<h2><span id="regression-discontinuity-duan-dian-hui-gui-fa"><strong><em>\</em>Regression Discontinuity（断点回归法）**</strong></span><a href="#regression-discontinuity-duan-dian-hui-gui-fa" class="header-anchor">#</a></h2><h2><span id="fan-shi-shi-yan-zheng">反事实验证</span><a href="#fan-shi-shi-yan-zheng" class="header-anchor">#</a></h2><h2><span id="yin-guo-fen-xi-fang-fa">因果分析方法</span><a href="#yin-guo-fen-xi-fang-fa" class="header-anchor">#</a></h2><p>granger causality.<br>instrumental variable.<br>diff in diff.<br>regression discontinuity.</p>
<p>随机化实验，可比性，</p>
<p>反事实结果（估计，看不到的反事实结果）</p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201204203044648.png" alt="image-20201204203044648"></p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201204203246739.png" alt="image-20201204203246739"></p>
<p>满足独立性原则</p>
<p><img src="/2020/12/03/%E5%9B%A0%E6%9E%9C%E5%88%86%E6%9E%90/image-20201204203325426.png" alt="image-20201204203325426"></p>
<h1><span id="dan-ge-yin-su-de-fen-xi">单个因素的分析</span><a href="#dan-ge-yin-su-de-fen-xi" class="header-anchor">#</a></h1>]]></content>
  </entry>
  <entry>
    <title>科研之Latex</title>
    <url>/2020/11/22/%E7%A7%91%E7%A0%94%E4%B9%8BLatex/</url>
    <content><![CDATA[<p>Latex</p>
<a id="more"></a>
<h1><span id="wen-xian-ge-shi">文献格式</span><a href="#wen-xian-ge-shi" class="header-anchor">#</a></h1><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">一：专著、论文集、报告</span><br><span class="line">[序号]主要责任者.文献题名[文献类型标识].出版地:出版者,出版年:起止页码(可选).</span><br><span class="line">例如：[1]刘国钧,陈绍业.图书目录[M].北京:高等教育出版社,1957:15-18.</span><br><span class="line">[22] 李燕.学前儿童发展心理学[M].上海:华东师范大学出版社,2009:166.</span><br><span class="line">[15] 苏珊·纽曼.学前教育改革与国家反贫困战略[M].李敏谊,霍力岩,译.北京:教育科学出版社,2011:10.</span><br><span class="line">[10] 方富熹,方格.儿童发展心理学[M].北京:人民教育出版社,2005:333.</span><br><span class="line"></span><br><span class="line">[7]国家体育总局.2014年国民体质监测公报[EB/OL].(2015-11-25)[2019-11-18].http://www.sport.gov.cn/n315/n329/c216784/content.html.</span><br><span class="line"></span><br><span class="line">[11] 杰克·肖克夫.从神经细胞到社会成员:早期儿童发展的科学[M].方俊明,李伟亚译.南京:南京师范大学出版社,2007.</span><br><span class="line"></span><br><span class="line">期刊文章：</span><br><span class="line"></span><br><span class="line">[序号]主要责任者.文献题名[J].刊名,年,卷(期):起止页码.</span><br><span class="line">参考文献类型及辨别符号：专著[M]，论文集[C]，报纸文章[N]，期刊文章[J]，学位论文[D]，报告[R]，标准[S]，专利[P]，论文集中的析出文献[A]；</span><br><span class="line">四：学位论文</span><br><span class="line">[序号]主要责任者.文献题名[D].出版地:出版单位,出版年:起止页码(可选).</span><br><span class="line">例如：[4]赵天书.诺西肽分阶段补料分批发酵过程优化研究[D].沈阳:东北大学,2013.</span><br><span class="line">六：电子文献</span><br><span class="line">[文献类型/载体类型标识]：[J/OL]网上期刊、[EB/OL]网上电子公告、</span><br><span class="line">[M/CD]光盘图书、[DB/OL]网上数据库、[DB/MT]磁带数据库</span><br><span class="line">[序号]主要责任者.电子文献题名[电子文献及载体类型标识].电子文献的出版或获得地址,发表更新日期/引用日期.</span><br><span class="line">例如：[12]王明亮.关于中国学术期刊标准化数据库系统工程的进展[EB/OL].1998-08-16/1998-10-01.</span><br><span class="line">[8]万锦.中国大学学报文摘(1983-1993).英文版[DB/CD].北京:中国大百科全书出版社,1996.</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2><span id="can-kao-wen-xian">参考文献</span><a href="#can-kao-wen-xian" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">usepackage{natbib}</span><br><span class="line">引入 natbib 包</span><br><span class="line"></span><br><span class="line">\bibliographystyle{unsrtnat}</span><br><span class="line">将参考文献的格式设置为unsrtnat。参考文献样式这篇文章介绍了更多信息。</span><br><span class="line"></span><br><span class="line">\cite{labelcompanion}</span><br><span class="line">在文档中打印出一个参考文献，其样式取决于引用的样式。大括号中的参数对应于参考文献源文件中一个特定的记录。</span><br><span class="line"></span><br><span class="line">bibliography{sample}</span><br><span class="line">引入sample.bib文件，其中包含了参考文献的所有信息。</span><br><span class="line">参考格式</span><br><span class="line">\usepackage[authoryear,sort&amp;compress,round]{natbib}</span><br><span class="line"></span><br><span class="line">c参考文献列表格式</span><br><span class="line">\bibliographystyle{plain}</span><br><span class="line">%\bibliography{ref}</span><br><span class="line">\bibliography{refer}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h1><span id="xue-zhu-ppt">学术PPT</span><a href="#xue-zhu-ppt" class="header-anchor">#</a></h1><p>标题推荐：华康丽金黑、方正粗宋简体、方正北魏楷简体<br>正文推荐：微软雅黑、微软雅黑light、华文细黑</p>
<p>（5）<strong>字体、字号明晰</strong>：中文字体可优先使用华文中宋、宋体、楷体, 黑体, 等；英文字体可视情况使用Times New Roman，Arial, Tahoma等；字号一般不应小于24号（重要说明或文献信息可用稍小字号）；大小标题、正文的字号应依次减小；英文单词尽量采用首单词的首字母大写，其余均小写的形式，以方便听众快速浏览；</p>
<h1><span id="biao-ge-ji-zhun-kong-zhi">表格基准控制</span><a href="#biao-ge-ji-zhun-kong-zhi" class="header-anchor">#</a></h1><h3><span id="chang-biao-ge">长表格</span><a href="#chang-biao-ge" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">\begin{center}</span><br><span class="line"></span><br><span class="line">  {</span><br><span class="line">\def\sym#1{\ifmmode^{#1}\else\(^{#1}\)\fi}</span><br><span class="line">  \begin{longtable}{p{0.1\textwidth}&lt;{\centering}p{0.1\textwidth}&lt;{\centering}p{0.1\textwidth}&lt;{\centering}p{0.1\textwidth}&lt;{\centering}p{0.1\textwidth}&lt;{\centering}p{0.1\textwidth}&lt;{\centering}p{0.1\textwidth}&lt;{\centering}}</span><br><span class="line">	\caption{The effects of child care provision on wage by year}\label{t:year}\\</span><br><span class="line">\toprule</span><br><span class="line"></span><br><span class="line">\endhead, specify rows (比如表头) to appear at the top of every page (under the headline, but before the other lines of the table)</span><br><span class="line">\endfoot, specify rows (比如水平线\hline) to appear at the bottom of each page.</span><br><span class="line">\endfirsthead，只作用于表格的第一页。</span><br><span class="line">\endlastfoot，只作用于表格的第一页。</span><br><span class="line"></span><br><span class="line">\bottomrule</span><br><span class="line">  \end{longtable}</span><br><span class="line">  }</span><br><span class="line">\end{center}</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="ye-mian-fang-xiang-kong-zhi">页面方向控制</span><a href="#ye-mian-fang-xiang-kong-zhi" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">\usepackage{lscape}</span><br><span class="line"></span><br><span class="line">\begin{landscape}</span><br><span class="line">large table or figure</span><br><span class="line">\end{landscape}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2><span id="xian-he-zi-dong-huan-xing">线和自动换行</span><a href="#xian-he-zi-dong-huan-xing" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">\begin{table}[!htbp]</span><br><span class="line">\begin{tabular}{|p{0.3\textwidth}&lt;{\centering}|p{0.3\textwidth}&lt;{\centering}|p{0.3\textwidth}&lt;{\centering}}</span><br><span class="line">\toprule</span><br><span class="line">\midrule</span><br><span class="line">\bottomrule</span><br><span class="line">\end{tabular}</span><br><span class="line">\end{table}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h1><span id="can-kao-wen-xian">参考文献</span><a href="#can-kao-wen-xian" class="header-anchor">#</a></h1><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">T + B +T +T</span><br><span class="line">要把文献打开</span><br><span class="line"></span><br><span class="line">%\usepackage{cite}</span><br><span class="line">\usepackage[comma, sort&amp;compress]{natbib}</span><br><span class="line">%\usepackage[style=alphabetic,maxnames=4,minnames=3,maxbibnames=99]{biblatex}</span><br><span class="line">%\usepackage[square,sort,comma,numbers]{natbib}</span><br><span class="line">%\usepackage[authoryear,round,longnamesfirst]{natbib}</span><br><span class="line">\bibliographystyle{plainnat}</span><br><span class="line">\bibliography{refer}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. plain，按字母的顺序排列，比较次序为作者、年度和标题；</span><br><span class="line">2. unsrt，样式同plain，只是按照引用的先后排序；</span><br><span class="line">3. alpha，用作者名首字母+年份后两位作标号，以字母顺序排序；</span><br><span class="line">4. abbrv，类似plain，将月份全拼改为缩写，更显紧凑；</span><br><span class="line">5. ieeetr，国际电气电子工程师协会期刊样式；</span><br><span class="line">6. acm，美国计算机学会期刊样式；</span><br><span class="line">7. siam，美国工业和应用数学学会期刊样式；</span><br><span class="line">8. apalike，美国心理学学会期刊样式；</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Step6:生成PDF的过程；</span><br><span class="line">1.用Latex编译Latex文档；</span><br><span class="line">2.用BibTex编译bib文档；</span><br><span class="line">3.在用Latex编译Latex文档；</span><br><span class="line">4.通过dviPDF查看PDF。</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">@article{rogers1978model,</span><br><span class="line">  title={Model migration schedules and their applications},</span><br><span class="line">  author={Rogers, Andrei and Raquillet, Richard and Castro, Luis J},</span><br><span class="line">  journal={Environment and Planning A},</span><br><span class="line">  volume={10},</span><br><span class="line">  number={5},</span><br><span class="line">  pages={475--502},</span><br><span class="line">  year={1978},</span><br><span class="line">  publisher={SAGE Publications Sage UK: London, England}</span><br><span class="line">}</span><br><span class="line">@book{rogers1984migration,</span><br><span class="line">  title={Migration, urbanization, and spatial population dynamics},</span><br><span class="line">  author={Rogers, Andrei and Castro, Luis J},</span><br><span class="line">  year={1984},</span><br><span class="line">  publisher={Westview Press}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">\usepackage[super]{gbt7714}</span><br><span class="line">中文参考文献格式</span><br><span class="line">%\bibliographystyle{unsrt}</span><br><span class="line">\bibliography{ref}</span><br><span class="line">GB</span><br><span class="line"></span><br><span class="line">标准的参考文献风格</span><br></pre></td></tr></tbody></table></figure>
<h1><span id="zuo-zhe">作者</span><a href="#zuo-zhe" class="header-anchor">#</a></h1><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">\usepackage{authblk}</span><br><span class="line"></span><br><span class="line">\documentclass[11pt,a4paper]{article}</span><br><span class="line">\usepackage[T1]{fontenc}</span><br><span class="line">\usepackage[utf8]{inputenc}</span><br><span class="line">\usepackage{authblk}</span><br><span class="line"></span><br><span class="line">\title{More than one Author with different Affiliations}</span><br><span class="line">\author[a]{Author A}</span><br><span class="line">\author[a]{Author B}</span><br><span class="line">\author[a]{Author C \thanks{Corresponding author: email@mail.com}}</span><br><span class="line">\author[b]{Author D}</span><br><span class="line">\author[b]{Author E}</span><br><span class="line">\affil[a]{Department of Computer Science, \LaTeX\ University}</span><br><span class="line">\affil[b]{Department of Mechanical Engineering, \LaTeX\ University}</span><br><span class="line"></span><br><span class="line">% 使用 \thanks 定义通讯作者</span><br><span class="line"></span><br><span class="line">\renewcommand*{\Affilfont}{\small\it} % 修改机构名称的字体与大小</span><br><span class="line">\renewcommand\Authands{ and } % 去掉 and 前的逗号</span><br><span class="line">\date{} % 去掉日期</span><br><span class="line"></span><br><span class="line">\begin{document}</span><br><span class="line">  \maketitle</span><br><span class="line">\end{document}</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「心态与做事习惯决定人生高度」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https://blog.csdn.net/robert_chen1988/article/details/79187224</span><br></pre></td></tr></tbody></table></figure>
<h1><span id="latex-elsevier">latex elsevier</span><a href="#latex-elsevier" class="header-anchor">#</a></h1><p>% Numbered list<br>% Use the style of numbering in square brackets.<br>% If nothing is used, default style will be taken.<br>%\begin{enumerate}[a)]<br>%\item<br>%\item<br>%\item<br>%\end{enumerate}</p>
<p>% Unnumbered list<br>%\begin{itemize}<br>%\item<br>%\item<br>%\item<br>%\end{itemize}</p>
<p>% Description list<br>%\begin{description}<br>%\item[]<br>%\item[]<br>%\item[]<br>%\end{description}</p>
<p>% Figure<br>\begin{figure}[<options>]<br>    \centering<br>        \includegraphics[<options>]{}<br>      \caption{}\label{fig1}<br>\end{figure}</options></options></p>
<p>\begin{table}[<options>]<br>\caption{}\label{tbl1}<br>\begin{tabular<em>}{\tblwidth}{@{}LL@{}}<br>\toprule<br>  &amp;  \\ % Table header row<br>\midrule<br> &amp; \\<br> &amp; \\<br> &amp; \\<br> &amp; \\<br>\bottomrule<br>\end{tabular</em>}<br>\end{table}</options></p>
]]></content>
  </entry>
  <entry>
    <title>数据分析-数据归一化和标准化</title>
    <url>/2020/11/15/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E6%95%B0%E6%8D%AE%E5%BD%92%E4%B8%80%E5%8C%96%E5%92%8C%E6%A0%87%E5%87%86%E5%8C%96/</url>
    <content><![CDATA[<p>ss数据标准的方法</p>
<a id="more"></a>
<h1><span id="shu-ju-biao-zhun-hua-he-gui-yi-hua-normalization">数据标准化和归一化(Normalization)</span><a href="#shu-ju-biao-zhun-hua-he-gui-yi-hua-normalization" class="header-anchor">#</a></h1><p>归一化Normalization： 属性放缩到指定的最大和最小值（0-1)</p>
<p>标准化<strong>Standardization</strong>：将数据按比例缩放，使之落入一个小的特定区间内，标准化后的数据可正可负，一般绝对值不会太大。</p>
<p>归一化包括标准化</p>
<p>归一化：一种是把数变为（0，1）之间的小数，一种是把有量纲表达式变为无量纲表达式。</p>
<p>min-max标准化（Min-Max Normalization）</p>
<script type="math/tex; mode=display">
\hat{x} = \frac{x-min{x}}{max{x}-min{x}}</script><p>也称为离差标准化，是对原始数据的线性变换，使结果值映射到[0 - 1]之间。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">df_norm = (df - df.min()) / (df.max() - df.min())</span><br></pre></td></tr></tbody></table></figure>
<p>Z-score标准化方法</p>
<p>这个方式最常用（归一化），改变了分布。</p>
<p>这种方法给予原始数据的均值（mean）和标准差（standard deviation）进行数据的标准化。经过处理的数据符合标准正态分布，即均值为0，标准差为1</p>
<script type="math/tex; mode=display">
\hat{x}= \frac{x-u}{\delta}</script><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">df_norm = (df - df.mean()) / (df.std())</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">简单点说np.std(）计算的是标准差，df.std()计算的是标准差的无偏估计</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="xian-xing-hui-gui-de-bian-liang">线性回归的变量</span><a href="#xian-xing-hui-gui-de-bian-liang" class="header-anchor">#</a></h2><h3><span id="duo-chong-gong-xian-xing">多重共线性</span><a href="#duo-chong-gong-xian-xing" class="header-anchor">#</a></h3><p>在多元线性回归模型经典假设中，其重要假定之一是回归模型的解释变量之间不存在线性关系，也就是说，解释变量X1，X2，……，Xk中的任何一个都不能是其他解释变量的线性组合。如果违背这一假定，即线性回归模型中某一个解释变量与其他解释变量间存在线性关系，就称线性回归模型中存在多重共线性。多重共线性违背了解释变量间不相关的古典假设，将给普通最小二乘法带来严重后果。</p>
<p>response variables with no significant</p>
<p>explanatory variables with high significant</p>
<ol>
<li><p>自变量的选择(literature review)</p>
</li>
<li><p>自变量多重共线性的去除 no redundant </p>
<p>​    VIF</p>
</li>
<li><p>因变量和自变量的高度相关性 uncorrelated problem</p>
<p> Pearson coefficient matrix</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>归一化</tag>
        <tag>标准化</tag>
      </tags>
  </entry>
  <entry>
    <title>回归分析说明</title>
    <url>/2020/11/14/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h1><span id="theory">Theory</span><a href="#theory" class="header-anchor">#</a></h1><p>为了理解、解释、预测某个问题，我们会进行回归分析。</p>
<h1><span id="explaining">Explaining</span><a href="#explaining" class="header-anchor">#</a></h1><h2><span id="adjusted-r-squared-xiao-zheng-ke-jue-xi-shu">Adjusted R-Squared(校正可决系数)</span><a href="#adjusted-r-squared-xiao-zheng-ke-jue-xi-shu" class="header-anchor">#</a></h2><p>range from 0 to 1</p>
<ol>
<li>bad or suitable model</li>
<li>explanatory(expreesion) ability</li>
</ol>
<p>如果“校正可决系数”的值为 0.39，则表示您的模型（解释变量使用线性回归建模）可解释因变量中大约 39% 的变化。换句话说，该模型表达了大约 39% 的入室盗窃案件。</p>
<h2><span id="coefficient">Coefficient</span><a href="#coefficient" class="header-anchor">#</a></h2><p>评估模型中的每一个解释变量：系数、概率或稳健概率和方差膨胀因子 (VIF)。</p>
<h3><span id="coefficient">Coefficient</span><a href="#coefficient" class="header-anchor">#</a></h3><p>每个解释变量的<a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/regression-analysis-basics.htm#GUID-E5E0B4A5-55B5-49F1-BE02-F1E4A1BFC641">系数</a>既反映它与因变量之间的关系强度，也反映它与因变量之间的关系类型。当与系数关联的符号为负时，该系数与因变量为负向关系.系数反映了所有其他解释变量保持不变时，关联的解释变量的每单位变化导致其因变量发生的预期变化量。例如，保持其他解释变量不变的情况下，人口普查区块每增加1人，入室盗窃系数就会增加 0.005。</p>
<h3><span id="t-jian-ce">T检测</span><a href="#t-jian-ce" class="header-anchor">#</a></h3><p> 检验用来评估某个解释变量是否具有统计显著性。</p>
<h3><span id="vif">VIF</span><a href="#vif" class="header-anchor">#</a></h3><p>通常，与大于 7.5 的 VIF 值关联的解释变量应逐一从回归模型中移除。例如，如果某回归模型中同时含有人口变量（人数）和就业变量（就业人数），那么，您会发现，这些变量很可能与较大的 VIF 值关联，从而表明这些变量讲述的是同一个故事，因此，您应将人口变量或就业变量从该模型中移除。</p>
<h2><span id="mo-xing-xian-zhu-xing">模型显著性</span><a href="#mo-xing-xian-zhu-xing" class="header-anchor">#</a></h2><p>联合 F 统计量和联合卡方统计量均用于检验整个模型的统计显著性。只有在 Koenker (BP) 统计量（见下图）不具有统计显著性时，“联合 F 统计量”才可信。如果 Koenker (BP) 统计量具有显著性，应参考“联合卡方统计量”来确定整个模型的显著性。这两种检验的零假设均为模型中的解释变量不起作用。对于大小为 95% 的置信度，p 值（概率）小于 0.05 表示模型具有统计显著性。</p>
<h2><span id="ping-gu-wen-tai">评估稳态。</span><a href="#ping-gu-wen-tai" class="header-anchor">#</a></h2><p>Koenker (BP) 统计量（Koenker 的标准化 Breusch-Pagan 统计量）是一种检验方法，用于确定模型的解释变量是否在地理空间和数据空间中都与因变量具有一致的关系。如果模型在地理空间中一致，由解释变量表示的空间进程在研究区（进程稳态）各位置处的行为也将一致。如果模型在数据空间中一致，则预测值与每个解释变量之间关系的变化不会随解释变量值的变化而变化（模型不存在异方差性）。</p>
<p>该检验的零假设为所检验的模型是稳态的。对于大小为 95% 的置信度，p 值（概率）小于 0.05 表示模型具有统计学上的显著异方差性和/或非稳态。如果该检验的结果具有统计显著性，则需参考稳健系数标准差和概率来评估每个解释变量的效果。具有统计显著性非稳态的回归模型通常很适合进行<a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/geographically-weighted-regression.htm">地理加权回归</a> (GWR) 分析。</p>
<h2><span id="ping-gu-mo-xing-pian-chai">评估模型偏差。</span><a href="#ping-gu-mo-xing-pian-chai" class="header-anchor">#</a></h2><p>arque-Bera 统计量用于指示<a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/regression-analysis-basics.htm#GUID-A90B0519-36FF-42AF-A6BF-D09E2C9C317C">残差</a>（已观测或已知的因变量值减去预测或估计值）是否呈正态分布。该检验的零假设为残差呈正态分布</p>
<p>当该检验的 p 值（概率）较小（例如，对于大小为 95% 的置信度，其值小于 0.05）时，回归不会呈正态分布，并指示您的模型有偏差。</p>
<p>如果残差还存在统计学上显著的空间自相关（请参阅下文），则偏差可能是<a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/regression-analysis-basics.htm#GUID-9916D83D-2334-499B-87A6-FA9F697DFD5D">模型指定错误</a>（该模型的某个关键变量缺失）的结果。从错误指定的 OLS 模型得到的结果是不可信的。如果尝试构建非线性关系模型、数据的某些异常值存在影响或者存在很强的<a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/h-heteroskedasticity.htm">异方差性</a>（请参阅上文），也可进行统计学上显著的 Jarque-Bera 检验。</p>
<h2><span id="ping-gu-can-chai-kong-jian-zi-xiang-guan">评估残差空间自相关。</span><a href="#ping-gu-can-chai-kong-jian-zi-xiang-guan" class="header-anchor">#</a></h2><p>始终对回归残差运行<a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/spatial-autocorrelation.htm">空间自相关(Moran’s I)</a> 工具可确保回归残差在空间上随机分布。高残差和低残差（模型偏高预计值和偏低预计值）的统计显著性聚集表明模型（指定错误）中的某个关键变量缺失了。当模型错误设定时，OLS 结果不可信。</p>
<h2><span id="six-list-of-check">six list of Check</span><a href="#six-list-of-check" class="header-anchor">#</a></h2><h3><span id="check-1-jie-shi-bian-liang-yu-yin-bian-liang-ju-you-yu-qi-de-guan-xi-fou">Check #1 解释变量与因变量具有预期的关系否？</span><a href="#check-1-jie-shi-bian-liang-yu-yin-bian-liang-ju-you-yu-qi-de-guan-xi-fou" class="header-anchor">#</a></h3><p>数具有+/-号</p>
<h3><span id="check-2-jie-shi-bian-liang-dui-mo-xing-you-bang-zhu-fou">Check #2 解释变量对模型有帮助否？</span><a href="#check-2-jie-shi-bian-liang-dui-mo-xing-you-bang-zhu-fou" class="header-anchor">#</a></h3><p>显著性</p>
<h3><span id="check-3-can-chai-shi-fou-you-kong-jian-ju-lei">Check #3 残差是否有空间聚类？</span><a href="#check-3-can-chai-shi-fou-you-kong-jian-ju-lei" class="header-anchor">#</a></h3><p><strong>空间自相关工具（Spatial Autocorrelation Tool）</strong></p>
<h3><span id="check-4-mo-xing-shi-fou-chu-xian-liao-qing-xiang-xing">Check #4 模型是否出现了倾向性？</span><a href="#check-4-mo-xing-shi-fou-chu-xian-liao-qing-xiang-xing" class="header-anchor">#</a></h3><p>如果我们正确的构建了回归分析模型，那么模型的残差会符合完美的正态分布，其图形为钟形曲线。</p>
<p>在 OLS 汇总报告中，有一个具有统计显著性的 Jarque-Bera 诊断表示模型是否出现偏差。如下图中是没有偏差的模型，如果有偏差，在篮框中会出现星号。</p>
<h3><span id="check-5-jie-shi-bian-liang-zhong-cun-zai-rong-yu-ma">Check #5 解释变量中存在冗余吗？</span><a href="#check-5-jie-shi-bian-liang-zhong-cun-zai-rong-yu-ma" class="header-anchor">#</a></h3><p>OLS工具会为每个变量计算膨胀因子（Variance Inflation Factor，VIF），VIF 值是对变量冗余度的一种度量，可辅助决定在不削弱模型解释能力的情况下可从中移除哪些变量。根据经验，<strong>VIF 值超过 *7.5* 就有问题</strong>。</p>
<h3><span id="check-6-ping-gu-mo-xing-de-xing-neng">Check #6 评估模型的性能</span><a href="#check-6-ping-gu-mo-xing-de-xing-neng" class="header-anchor">#</a></h3><p> <strong>矫正R2值</strong> 是评估解释变量对因变量建模的重要度量。</p>
<h1><span id="gwr">GWR</span><a href="#gwr" class="header-anchor">#</a></h1><p>消息中提供了分析的详细信息，包括分析的要素数目、因变量和解释变量以及指定的相邻要素数。</p>
<h2><span id="dignoe">Dignoe</span><a href="#dignoe" class="header-anchor">#</a></h2><p><img src="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/GUID-E38EDD69-6061-4DE4-AC6A-73304CDCE7CD-web.png" alt="连续模型类型的模型诊断"></p>
<ul>
<li>R2 - R 平方可用于检验拟合度。其值在 0.0 到 1.0 范围内变化，值越大越好。此值可解释为回归模型所涵盖的因变量方差的比例。R2 计算的分母为因变量值平方和。向模型中再添加一个解释变量不会更改分母但会更改分子；这将出现改善模型拟合的情况（但可能为假象）。请参阅下文中的“校正的 R2”。</li>
<li>AdjR2 - 由于上述 R2 值问题，校正的 R 平方值的计算将按分子和分母的自由度对它们进行正规化。这具有对模型中变量数进行补偿的效果，因此校正的 R2 值通常小于 R2 值。但是，执行此校正时，无法将该值的解释作为所解释方差的比例。在 GWR 中，自由度的有效值是所使用邻域的函数，因此与全局模型（如<a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-statistics/generalized-linear-regression.htm">广义线性回归 (GLR)</a>）相比，校正程度可能非常明显。因此，AICc 是对模型进行比较的首选方式。</li>
<li>AICc - 可用于检验模型性能并比较回归模型。考虑到模型复杂性，具有较低 AICc 值的模型将更好地拟合观测数据。AICc 不是拟合度的绝对度量，但对于比较适用于同一因变量且具有不同解释变量的模型非常有用。如果两个模型的 AICc 值相差大于 3，具有较低 AICc 值的模型将被视为更佳的模型。将 GWR AICc 值与 GLR AICc 值进行比较是评估从全局模型 (GLR) 移动到局部回归模型 (GWR) 的优势的一种方法。</li>
<li>Sigma 平方 - 此值为残差方差（标准差的平方）的最小二乘估计值。此统计值越小越好。此值为正规化残差平方和（残差平方和除以残差的有效自由度）。Sigma 平方用于 AICc 计算。</li>
<li>Sigma 平方 MLE - 此值为残差方差（标准差的平方）的最大似然估计值 (MLE)。此统计值越小越好。可通过将残差平方和除以输入要素数量来计算该值。</li>
<li>有效自由度 - 此值反映了拟合值的方差与系数估计值的偏差之间的折衷，与邻域大小的选择有关。邻域接近无穷大时，每个要素的地理权重都将接近 1，系数估计值与全局 GLR 模型的相应值将非常接近。对于较大的邻域，系数的有效数量将接近实际数量；局部系数估计值将具有较小的方差，但偏差将非常大。相反，邻域变小并接近零时，每个要素的地理权重都将接近零（回归点本身除外）。对于非常小的邻域，系数的有效数量为观测值的数量，局部系数估计值将具有较大方差但偏差较低。该有效数量用于计算多个其他诊断测量值。</li>
</ul>
<h3><span id="local-r2">Local R2</span><a href="#local-r2" class="header-anchor">#</a></h3><p>局部的R2，与全局R2的意义是一样的，范围在 0.0 与 1.0 之间，表示局部回归模型与观测所得 y 值的拟合程度。如果值非常低，则表示局部模型性能不佳。对 Local R2进行地图可视化，可以查看哪些位置 GWR 预测较准确和哪些位置不准确。以便为获知可能在回归模型中丢失的重要变量提供相关线索。</p>
<h3><span id="coefficient">Coefficient</span><a href="#coefficient" class="header-anchor">#</a></h3><h1><span id="stata">Stata</span><a href="#stata" class="header-anchor">#</a></h1><h1><span id="duo-chong-gong-xian-xing">多重共线性</span><a href="#duo-chong-gong-xian-xing" class="header-anchor">#</a></h1><p>两个方法和策略</p>
<h4><span id="yao-jian-ce">要检测</span><a href="#yao-jian-ce" class="header-anchor">#</a></h4><p>关心变量与多重共线性有关系，关注系数大小</p>
<p>多重共线性并不会改变OLS估计量BULE的性质，但会使得对系数的估计变得不准确。<br>Stata检查是否存在多重共线的方法：<br>estat vif<br>VIF值越大说明多重共线性问题越严重。一般认为，最大的VIF不超过10，则不存在明显的多重共线性。<br>解决办法：<br>1.如果只关心方程的预测能力，则在整个方程显著的条件下，可以不必关心具体的回归系数。<br>2.增加样本容量，剔除导致多重共线性的变量或者修改模型设定形式。<br>3.对于时间序列样本，通过使用差分模型可以一定程度上消除原模型中的多重共线性。<br>4.岭回归方法。</p>
<h3><span id="stepwise">stepwise</span><a href="#stepwise" class="header-anchor">#</a></h3><p><strong>regress 因变量 变量1变量2**</strong>…<strong><strong>变量m，beta</strong></strong>stepwise 因变量 变量1变量2<strong><strong>…</strong></strong>变量m，ba forwstfe(#)fs(#)<strong><strong>test表达式</strong></strong>predict 新变量<strong><strong>predict  新变量，resi</strong></strong>predict  新变量，stdp<strong>**predict  新变量，stdr</strong></p>
<p> <strong>regress</strong>命令表示作线性回归，其子命令beta表示得到的回归系数为标化的回归系数(即：无量纲)。<strong>stepwise</strong>命令表示作逐步线性回归，其子命令：ba表示后退法筛选自变量；form表示向前法筛选自变量；st表示前进后退法筛选变量；fe(#)表示在筛选变量中， 变量选入模型的F统计量的临界值(#)，在STATA中，其缺省值为0.5，最大设置值不要大于4；fs(#)表示在筛选变量中， 变量 从模型中剔除的F统计量的临界值(#)，在STATA中，其缺省值为0.1，最大设置值不要大于4。<strong>test</strong>用于检验回归系数的表达式，如：某两个回归系数是否相等。<strong>predict新变量</strong> 是根据线性回归方程计算每个自变量记录所对应的y值(一些文献上称预测值和期望估计值)。<strong>predict 新变量，resi</strong> 计算残差值。<strong>predict 新变量，stdp</strong></p>
<p> 是计算因变量y的总体均数估计的标准误(不同的自变量值，该标准误也不同)。<strong>predict 新变量,stdr</strong>  是计算 因变量y的预测值的标准误。</p>
<p>stepwise y x1 x2 x3, fe(1.5) fs(1.5)</p>
<p>estat vif<br>stepwise,pr(0.05): reg lnallration hsr  lnpop_x lnpop_y lndis  lnpgdp_x lnpgdp_y  lnfaxi_x lnfaxi_y  lnprgp_x lnprgp_y  lnpwage_x  lnpwage_y  lnmobile_x lnmobile_y lnunemply_x lnunemply_y lnhealth_x lnhealth_y lnedu_x lnedu_y lninfr_x lninfr_y</p>
<p>指定显著性水平，剔除变量</p>
<h3><span id="jian-ce">检测</span><a href="#jian-ce" class="header-anchor">#</a></h3><p>1· 相关性分析 自变量的相关系数矩阵R</p>
<ol>
<li>vif检测</li>
</ol>
<p>　　2.方差膨胀因子（the variance inflation factor，VIF)诊断法：方差膨胀因子表达式为：VIFi=1/（1-R2i)。其中Ri为自变量xi对其余自变量作回归分析的复相关系数。当VIFi很大时，表明自变量间存在多重共线性。该诊断方法也存在临界值不易确定的问题，在应用时须慎重。</p>
<p>判断：VIFj&gt;10时，说明自变量x与其余自变量之间存在严重的多重共线关系，这种多重共线性可能会过度地影响最小二乘估计值</p>
<p>　3.容忍值（Tolerance，简记为Tol）法：容忍值实际上是VIF的倒数，即Tol＝1/VIF。其取值在0～1之间，Tol越接近1，说明自变量间的共线性越弱。在应用时一般先预先指定一个Tol值，容忍值小于指定值的变量不能进入方程，从而保证进入方程的变量的相关系数矩阵为非奇异阵，计算结果具有稳定性。但是，有的自变量即使通过了容忍性检验进入方程，仍可导致结果的不稳定。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">estat vif</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="yi-fang-chai-wen-ti">异方差问题</span><a href="#yi-fang-chai-wen-ti" class="header-anchor">#</a></h2><p>Stata检查是否存在异方差的方法：<br>1.看残差图 【 模型回归之后使用即可】<br>rvfplot（残差与拟合值的散点图）<br>rvpplot（残差与解释变量的的散点图）<br>2.怀特(White,1980）检验【 模型回归之后使用即可】<br>estat imtest,white（怀特检验）whitetst（外源程序，需下载）<br>3.BP(Breusch and Pagan,1979)检验【 模型回归之后使用即可】<br>estat hettest（默认设置使用拟合值y_hat）<br>estat hettest（使用方程邮编的解释变量，而不是y_hat）<br>estat hettest varlist（指定使用某些解释变量）<br>解决办法：<br>1.WLS加权最小二乘法<br>reg y x1 x2 x3 [aw=1/var]<br>eg: reg y x1 x2 x3<br>predict e1,res<br>g e2=e1^2<br>g lne2=log(e2)<br>reg lne2 y,noc<br>predict lne2f<br>g e2f=exp(lne2f)<br>reg y x1 x2 x3 [aw=1/e2f]<br>2.White（1980）<br>eg: reg y x1 x2 x3,robust3. wls0命令、</p>
<p>第一个问题：使用怀特异方差检验</p>
<p>第二个问题：使用异方差稳健标准误</p>
<p>ps：不管有没有异方差，使用异方差稳健标准误总不会有坏处</p>
<p>检测</p>
<p><strong>estat imtest,white</strong></p>
<p>对于线性模型来说，异方差也不算什么大问题。</p>
<p>主要有两种处理方法：<strong><em>①“OLS+异方差稳健标准误”②加权最小二乘法（WLS）与可行加权最小二乘法（FWLS）\</em></strong></p>
<p>大多情况下可以直接用“OLS+异方差稳健标准误”来解决，Stata里在回归语句后面加 ,robust即可。</p>
<p><strong><em>常规OLS的命令为：\</em></strong></p>
<p><strong><em>reg y A B C（ABC为三个解释变量）\</em></strong></p>
<p><strong><em>“异方差稳健标准误OLS”的命令为：\</em></strong></p>
<p><strong><em>reg y A B C,robust\</em></strong></p>
<h2><span id="xu-lie-xiang-guan-wen-ti">序列相关问题</span><a href="#xu-lie-xiang-guan-wen-ti" class="header-anchor">#</a></h2><p>Stata检查是否存在序列相关的方法：<br>1.画图<br>在做完回归之后，先生成残差项e<br>scatter e L.e<br>2.BG检验<br>estat bgodfrey（默认滞后阶数为1）<br>3.Ljung-Box Q检验<br>eg: reg y x1 x2 x3<br>predict e,res<br>wntestq e<br>3.DW检验<br>estat dwatson解决办法：<br>1.Newey稳健性标准差<br>newey y x,lag(p) (滞后阶数必选)<br>2.可行广义最小二乘法（FGLS）<br>prais y x<br>prais y x,corc</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>回归分析</tag>
      </tags>
  </entry>
  <entry>
    <title>科研之社交网络分析</title>
    <url>/2020/11/12/%E7%A7%91%E7%A0%94%E4%B9%8B%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h1><span id="she-jiao-wang-luo-fen-xi">社交网络分析</span><a href="#she-jiao-wang-luo-fen-xi" class="header-anchor">#</a></h1><p><strong>中心性（Centrality）</strong>是社交网络分析（Social network analysis, SNA）中常用的一个概念，用以表达社交网络中一个点或者一个人在整个网络中所在中心的程度，这个程度用数字来表示就被称作为<strong>中心度</strong>（也就是通过知道一个节点的中心性来了解判断这个节点在这个网络中所占据的重要性的概念）</p>
<p>测定中心度方法的不同，可以分为度中心度（Degree centrality），接近中心度（或紧密中心度，Closeness centrality），中介中心度（或间距中心度，Betweenness centrality）等。</p>
<p>更改arcgis图层的坐标系</p>
<p> 下面写一下更改坐标系的方法。分两种：</p>
<p>​    （一）更改整个arcmap平台的坐标</p>
<p>在内容列表中，图层右键-&gt;属性-》坐标系-》，，，然后根据需要更改即可。</p>
<p>​    （二）更改单个图层的坐标</p>
<p>打开工具盒(ArcToolBox)，-》数据管理工具-》投影和转换(Projections and Transformatins Raster Define projectin-》定义投影</p>
<p>（一）更改整个arcmap平台的坐标</p>
<p>  将该坐标改为指定坐标系</p>
<a id="more"></a>
<h1><span id="python-networkx-tu-lun">Python - networkx(图论)</span><a href="#python-networkx-tu-lun" class="header-anchor">#</a></h1><p><a href="https://networkx.org/documentation/stable/reference/introduction.html">https://networkx.org/documentation/stable/reference/introduction.html</a></p>
<h2><span id="tu-chuang-jian">图创建</span><a href="#tu-chuang-jian" class="header-anchor">#</a></h2><h2><span id="tu-ke-shi-hua">图可视化</span><a href="#tu-ke-shi-hua" class="header-anchor">#</a></h2><h2><span id="tu-zhi-biao-ji-suan">图指标计算</span><a href="#tu-zhi-biao-ji-suan" class="header-anchor">#</a></h2><p>网络结构识别</p>
<p>Impacts of high-speed rail lines on the city network in China  </p>
<h2><span id="she-jiao-wang-luo-fen-xi">社交网络分析</span><a href="#she-jiao-wang-luo-fen-xi" class="header-anchor">#</a></h2><ul>
<li><p><strong> 社交网络的结构特性与演化机理</strong></p>
<p><strong>1. 社交网络结构分析与建模</strong></p>
<p><strong>1.1 统计特性</strong></p>
<p>社交网络模型许多概念来自于图论，因为社交网络模型本质上是一个由节点（人）和边（社交关系）组成的图。笔者将简要介绍社交网络模型中常用的统计概念。</p>
<ul>
<li><strong>度（Degree）：</strong>节点的度定义为与该节点相连的边的数目。在有向图中，所有指向某节点的边的数量叫作该节点的入度，所有从该节点出发指向别的节点的边的数量叫作该节点的出度。网络平均度反应了网络的疏密程度，而通过度分布则可以刻画不同节点的重要性。</li>
<li><strong>网络密度（Density）：</strong>网络密度可以用于刻画节点间相互连边的密集程度，定义为网络中实际存在边数与可容纳边数上限的比值，常用来测量社交网络中社交关系的密集程度及演化趋势。</li>
<li><strong>聚类系数（Clustering Coefficient）：</strong>用于描述网络中与同一节点相连的节点间也互为相邻节点的程度。其用于刻画社交网络中一个人朋友们之间也互相是朋友的概率，反应了社交网络中的聚集性。</li>
<li><strong>介数（Betweeness）：</strong>为图中某节点承载整个图所有最短路径的数量，通常用来评价节点的重要程度，比如在连接不同社群之间的中介节点的介数相对于其他节点来说会非常大，也体现了其在社交网络信息传递中的重要程度。</li>
</ul>
</li>
</ul>
<p><strong>度中心性（Degree Centrality）</strong><br>是在网络分析中刻画节点中心性（Centrality）的最直接度量指标。一个节点的节点度越大就意味着这个节点的度中心性越高，该节点在网络中就越重要。</p>
<p><strong>接近中心性（Closeness Centrality）</strong><br>反映在网络中某一节点与其他节点之间的接近程度。将一个节点到所有其他节点的最短路径距离的累加起来的倒数表示接近性中心性。即对于一个节点，它距离其他节点越近，那么它的接近性中心性越大。</p>
<p><strong>中介中心性/中间中心性(Between Centrality)</strong><br>以经过某个节点的最短路径数目来刻画节点重要性的指标。</p>
<p><strong>特征向量中心性（Eigenvector Centrality）</strong><br>一个节点的重要性既取决于其邻居节点的数量（即该节点的度），也取决于其邻居节点的重要性。</p>
<h3><span id="du-zhong-xin-xing-degree">度中心性（degree）</span><a href="#du-zhong-xin-xing-degree" class="header-anchor">#</a></h3><p>设想一下，你在微信上有个账号，那么是不是意味着微信好友数量越多，那么你的社交圈子越广？（假设都是真实好友，不考虑微商神马的奇葩情况）比如我有20个好友，那么意味着20个结点与我相连。如果你有50个好友，那么意味着你的点度中心度比我高，社交圈子比我广。这个就是点度中心性的概念。 当然，刚才这个情况是无向图的情形，如果是有向图，需要考虑的出度和入度的问题。 在刚才的基础上拓展一下，假如我们要比较你在微博和微信上的点度中心度，刚才的方法是否适用？如果说使用微信与微博的人数差不多，那么的确可以。但是如果说用户数量不一样呢？那么我们需要考虑到去规模化的问题，这就是标准化的点度中心性的理念。</p>
<p>这种情况下，就给连接加入了向量的概念，也就是说<strong>连接是有方向的</strong>。于是便有了<strong>点入中心度（或入度，in-degree）</strong>和<strong>点出中心度（或出度，out-degree）。</strong></p>
<p>（1）入度表现一个人的被关注程度。点入中心度高的人（B）是其他人都想与其形成关联的对象，也就是在这个网络中，B被很多人认为很有必要与其取得关联，也就可以理解成B在这个网络中具有很高的声望（prestige），体现了一个人的吸引力。入度高的人有可能会引导这个网络圈交流的内容、视角、深度、广度等问题。</p>
<p>（2）出度表现一个人关注他人的程度。点出中心度高的人（A）是在这个网络中，很努力并活跃地与他人取得关联的人，可以理解成A在这个网络中具有较强的交际性，体现了一个人的积极性。出度高的人，在网络中能够从很多的其他成员那里获得丰富的信息information。在学习网络中可能就是知识、方法等；在娱乐圈中或许就是八卦新闻。</p>
<h3><span id="jie-jin-zhong-xin-xing-closeness">接近中心性（closeness）</span><a href="#jie-jin-zhong-xin-xing-closeness" class="header-anchor">#</a></h3><p>对于了解图论的朋友而言，最短路这个概念一定不陌生。我们设想一个实际生活中的场景，比如你要建一个大型的娱乐商场，你可能会希望周围的顾客到达这个商场的距离都可以尽可能地短。这个就涉及到接近中心性的概念，接近中心性的值为路径长度的倒数。 接近中心性需要考量每个结点到其它结点的最短路的平均长度。也就是说，对于一个结点而言，它距离其它结点越近，那么它的中心度越高。一般来说，那种需要让尽可能多的人使用的设施，它的接近中心度一般是比较高的。</p>
<p>但是对中心性进行分析的时候，在有方向的社交网络（directional social networking）中对接近中心度（Closeness centrality）的分析结果，会得出<strong>入接近中心度（In-closeness centrality）</strong>和<strong>出接近中心度（Out-closeness centrality）</strong>，</p>
<p>（1） 入接近中心度（In-closeness centrality）</p>
<p>入接近中心度是通过计算走向一个点的边来测量出其他点（nodes）到达这个点（node）的容易程度，一个点的入接近中心度越高，说明其他点到这个点越容易。</p>
<p>（2） 出接近中心度（Out-closeness centrality）</p>
<p>出接近中心度指的是一个点到达其他点的容易程度，通过一个点到其他点的最短距离的和的倒数，接近中心度越大，这个点到其他点越容易。</p>
<p>因此入接近中心度表达的是整合力（integration），出接近中心度表达的是辐射力（radiality）。</p>
<h3><span id="jin-mi-zhong-xin-xing-closness-centrality"><strong>紧密中心性（closness centrality）</strong></span><a href="#jin-mi-zhong-xin-xing-closness-centrality" class="header-anchor">#</a></h3><p>节点V到达其他节点的难易程度，也就是到其他所有节点距离的平均值的倒数。</p>
<script type="math/tex; mode=display">
C_{v}=\frac{|V|-1}{\sum_{i \neq v} d_{v i}}</script><h3><span id="zhong-jie-zhong-xin-xing-du-betweenness">中介中心性(度)（betweenness）</span><a href="#zhong-jie-zhong-xin-xing-du-betweenness" class="header-anchor">#</a></h3><p>这个度量很有意思。这个有点像是我们身边那种社交达人，我们认识的不少朋友可能都是通过他/她认识的，这个人起到了中介的作用。 中介中心性指的是一个结点担任其它两个结点之间最短路的桥梁的次数。一个结点充当“中介”的次数越高，它的中介中心度就越大。如果要考虑标准化的问题，可以用一个结点承担最短路桥梁的次数除以所有的路径数量。</p>
<p><strong>介数中心性（betweenness centrality）</strong><br>核心思想是两个非邻接成员间的相互作用依赖于网络中的其他成员，特别是两成员间路径上的成员，它们对两非邻接成员间起着某种控制或依赖关系。如果一个成员A位于其他成员的多条最短路径上，那么成员A的作用就比较大，也具有较大的介数中心性。<br>本质：网络中包含成员B的所有最短路径条数占所有最短路径条数的百分比。</p>
<h5><span id="jie-shu-zhong-xin-xing-betweenness-centrality">介数中心性(betweenness centrality)</span><a href="#jie-shu-zhong-xin-xing-betweenness-centrality" class="header-anchor">#</a></h5><ul>
<li><p>计算每对节点(i,j)之间的最短路径,当然需要得到具体路径</p>
</li>
<li><p>对哥哥节点判断该节点是否在最短路径上</p>
</li>
<li><p>最后将刚刚的判断进行累加得到从i到j的最短路径经过该节点的数量</p>
</li>
</ul>
<script type="math/tex; mode=display">
B_{v}=\sum_{i \neq j, i \neq v, j \neq v} g_{i v j} / g_{i j}</script><h3><span id="guan-xi">关系</span><a href="#guan-xi" class="header-anchor">#</a></h3><h1><span id="san-ji-suan-gong-shi-hui-zong">三 计算公式汇总</span><a href="#san-ji-suan-gong-shi-hui-zong" class="header-anchor">#</a></h1><p><strong>I. 概念梳理</strong></p>
<p><strong>中心性（Centrality）</strong>是社交网络分析（Social network analysis, SNA）中常用的一个概念，用以表达社交网络中一个点或者一个人在整个网络中所在中心的程度，这个程度用数字来表示就被称作为<strong>中心度</strong>（也就是通过知道一个节点的中心性来了解判断这个节点在这个网络中所占据的重要性的概念）</p>
<p>测定中心度方法的不同，可以分为度中心度（Degree centrality），接近中心度（或紧密中心度，Closeness centrality），中介中心度（或间距中心度，Betweenness centrality）等。</p>
<p><a href="https://en.wikipedia.org/wiki/Centrality">https://en.wikipedia.org/wiki/Centrality</a></p>
<h3><span id="ji-suan-gong-shi">计算公式</span><a href="#ji-suan-gong-shi" class="header-anchor">#</a></h3><p><img src="/2020/11/12/%E7%A7%91%E7%A0%94%E4%B9%8B%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201112084359057.png" alt="image-20201112084359057"></p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>度数中心性</th>
<th>中间中心性</th>
<th>接近中心性</th>
</tr>
</thead>
<tbody>
<tr>
<td>绝对点度中心度</td>
<td><img src="https://img-blog.csdn.net/20171111172619952?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
<td><img src="https://img-blog.csdn.net/20171111172917899?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
<td><img src="https://img-blog.csdn.net/20171111173147584?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
</tr>
<tr>
<td>相对点度中心度（标准化）</td>
<td><img src="https://img-blog.csdn.net/20171111172647964?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
<td><img src="https://img-blog.csdn.net/20171111172930283?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
<td><img src="https://img-blog.csdn.net/20171111173159554?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
</tr>
<tr>
<td>图的中心势</td>
<td><img src="https://img-blog.csdn.net/20171111172701584?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
<td><img src="https://img-blog.csdn.net/20171111172941926?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
<td><img src="https://img-blog.csdn.net/20171111173208729?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbHlhbmRnaA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></td>
</tr>
</tbody>
</table>
</div>
<h3><span id="jie-shi">解释</span><a href="#jie-shi" class="header-anchor">#</a></h3><p><img src="/2020/11/12/%E7%A7%91%E7%A0%94%E4%B9%8B%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201112125940316.png" alt="image-20201112125940316"></p>
<p><img src="/2020/11/12/%E7%A7%91%E7%A0%94%E4%B9%8B%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E5%88%86%E6%9E%90/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201112130145971.png" alt="image-20201112130145971"></p>
<h3><span id="networkx-python-ji-suan">NetworkX Python计算</span><a href="#networkx-python-ji-suan" class="header-anchor">#</a></h3><h3><span id="zhong-xin-xing">中心性</span><a href="#zhong-xin-xing" class="header-anchor">#</a></h3><p>python提供的都被标准化了</p>
<p><a href="http://jonathenzc.github.io/2015/03/16/%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E4%B8%AD%E5%BF%83%E6%80%A7/#%E5%BA%A6%E4%B8%AD%E5%BF%83%E6%80%A7">http://jonathenzc.github.io/2015/03/16/%E7%A4%BE%E4%BA%A4%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E4%B8%AD%E5%BF%83%E6%80%A7/#%E5%BA%A6%E4%B8%AD%E5%BF%83%E6%80%A7</a></p>
<p><a href="https://networkx.org/documentation/stable/reference/classes/generated/networkx.DiGraph.in_degree.html#networkx.DiGraph.in_degree">https://networkx.org/documentation/stable/reference/classes/generated/networkx.DiGraph.in_degree.html#networkx.DiGraph.in_degree</a></p>
<p><a href="https://networkx.org/documentation/stable/reference/algorithms/centrality.html">https://networkx.org/documentation/stable/reference/algorithms/centrality.html</a></p>
<p>有向图和权重</p>
<h3><span id="ju-li-zi">举例子</span><a href="#ju-li-zi" class="header-anchor">#</a></h3><p><a href="https://www.cnblogs.com/baiyunwanglai/p/13228813.html">https://www.cnblogs.com/baiyunwanglai/p/13228813.html</a></p>
<h1><span id="matlab">Matlab</span><a href="#matlab" class="header-anchor">#</a></h1><p><a href="https://ww2.mathworks.cn/help/matlab/ref/graph.centrality.html#bu4486d-type">https://ww2.mathworks.cn/help/matlab/ref/graph.centrality.html#bu4486d-type</a></p>
<h1><span id="reference">Reference</span><a href="#reference" class="header-anchor">#</a></h1><p>Impacts of high-speed rail lines on the city network in China  </p>
<p>estimation of Regional economic Development indicator from transportation network Analytics</p>
]]></content>
  </entry>
  <entry>
    <title>科研之材料清单</title>
    <url>/2020/10/30/%E7%A7%91%E7%A0%94%E4%B9%8B%E6%9D%90%E6%96%99%E6%B8%85%E5%8D%95/</url>
    <content><![CDATA[<h1><span id="zi-yuan">资源</span><a href="#zi-yuan" class="header-anchor">#</a></h1><h2><span id="cheng-shi-she-hui-jing-ji-she-hui">城市社会经济社会</span><a href="#cheng-shi-she-hui-jing-ji-she-hui" class="header-anchor">#</a></h2><ol>
<li>知网免费下载</li>
</ol>
<h2><span id="di-tu-shp">地图shp</span><a href="#di-tu-shp" class="header-anchor">#</a></h2>]]></content>
      <tags>
        <tag>清单</tag>
      </tags>
  </entry>
  <entry>
    <title>科研绘图之拼接和组合</title>
    <url>/2020/10/18/%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE%E4%B9%8B%E6%8B%BC%E6%8E%A5%E5%92%8C%E7%BB%84%E5%90%88/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="9a88fb39de339e4cbfbe6daee89f2fe27eea59905458fb132de41fab8605087c"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>可视化</tag>
      </tags>
  </entry>
  <entry>
    <title>可视化之pyecharts</title>
    <url>/2020/10/12/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Bpyecharts/</url>
    <content><![CDATA[<h1><span id="pyecharts">PyEcharts</span><a href="#pyecharts" class="header-anchor">#</a></h1><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. 确定图类型</span><br><span class="line">	调用类，或者函数</span><br><span class="line">	确定参数</span><br><span class="line">2. 导入数据</span><br></pre></td></tr></tbody></table></figure>
<p><a href="https://www.bilibili.com/video/BV1E7411w7Zq?p=17">https://www.bilibili.com/video/BV1E7411w7Zq?p=17</a></p>
<p>流向图不能显示数值大小，是个大问题</p>
<h2><span id="sheng-fen">省份</span><a href="#sheng-fen" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Map  <span class="comment"># 注意这里与老版本pyecharts调用的区别</span></span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">province_distribution = {<span class="string">'河南'</span>: <span class="number">45.23</span>, <span class="string">'北京'</span>: <span class="number">37.56</span>, <span class="string">'河北'</span>: <span class="number">21</span>, <span class="string">'辽宁'</span>: <span class="number">12</span>, <span class="string">'江西'</span>: <span class="number">6</span>, <span class="string">'上海'</span>: <span class="number">20</span>, <span class="string">'安徽'</span>: <span class="number">10</span>, <span class="string">'江苏'</span>: <span class="number">16</span>, <span class="string">'湖南'</span>: <span class="number">9</span>,</span><br><span class="line">                         <span class="string">'浙江'</span>: <span class="number">13</span>, <span class="string">'海南'</span>: <span class="number">2</span>, <span class="string">'广东'</span>: <span class="number">22</span>, <span class="string">'湖北'</span>: <span class="number">8</span>, <span class="string">'黑龙江'</span>: <span class="number">11</span>, <span class="string">'澳门'</span>: <span class="number">1</span>, <span class="string">'陕西'</span>: <span class="number">11</span>, <span class="string">'四川'</span>: <span class="number">7</span>, </span><br><span class="line">                         <span class="string">'内蒙古'</span>: <span class="number">3</span>, <span class="string">'重庆'</span>: <span class="number">3</span>,<span class="string">'云南'</span>: <span class="number">6</span>, <span class="string">'贵州'</span>: <span class="number">2</span>, <span class="string">'吉林'</span>: <span class="number">3</span>, <span class="string">'山西'</span>: <span class="number">12</span>, <span class="string">'山东'</span>: <span class="number">11</span>, <span class="string">'福建'</span>: <span class="number">4</span>, <span class="string">'青海'</span>: <span class="number">1</span>, </span><br><span class="line">                         <span class="string">'天津'</span>: <span class="number">1</span>,<span class="string">'其他'</span>: <span class="number">1</span>}</span><br><span class="line">provice = list(province_distribution.keys())</span><br><span class="line">values = list(province_distribution.values())</span><br><span class="line">province = [<span class="string">'广东'</span>, <span class="string">'湖北'</span>, <span class="string">'湖南'</span>, <span class="string">'四川'</span>, <span class="string">'重庆'</span>, <span class="string">'黑龙江'</span>, <span class="string">'浙江'</span>, <span class="string">'山西'</span>]</span><br><span class="line">data_province = [(i, random.randint(<span class="number">100</span>, <span class="number">200</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> province]</span><br><span class="line"></span><br><span class="line">china_province = (</span><br><span class="line">    Map()</span><br><span class="line">    .add(<span class="string">''</span>, data_province, <span class="string">'china'</span>)</span><br><span class="line">    .set_global_opts(</span><br><span class="line">        title_opts=opts.TitleOpts(title=<span class="string">'Provinces of China'</span>),</span><br><span class="line">        visualmap_opts=opts.VisualMapOpts(</span><br><span class="line">            min_=<span class="number">100</span>,</span><br><span class="line">            max_=<span class="number">200</span>,</span><br><span class="line">            is_piecewise=<span class="literal">True</span>)</span><br><span class="line">    )</span><br><span class="line">    .render(path=<span class="string">'中国省级地图.html'</span>)</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="cheng-shi">城市</span><a href="#cheng-shi" class="header-anchor">#</a></h2><h2><span id="map">Map</span><a href="#map" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Map</span><br><span class="line"><span class="keyword">from</span> pyecharts.faker <span class="keyword">import</span> Faker</span><br><span class="line"></span><br><span class="line"><span class="comment"># map 函数 地图主要用于地理区域数据的可视化。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># map.add(name, attr, value, maptype='china', is_roam=True, is_map_symbol_show=True, **kwargs)</span></span><br><span class="line"></span><br><span class="line">c = (</span><br><span class="line">    Map()</span><br><span class="line">    .add(</span><br><span class="line">        <span class="string">"商家A"</span>,</span><br><span class="line">        [list(z) <span class="keyword">for</span> z <span class="keyword">in</span> zip(Faker.guangdong_city, Faker.values())],</span><br><span class="line">        value,maptype = <span class="string">"china-cities"</span>,</span><br><span class="line">        label_opts=opts.LabelOpts(is_show=<span class="literal">False</span>),</span><br><span class="line">        is_label_show=<span class="literal">True</span> , //显示文本吗</span><br><span class="line">    )</span><br><span class="line">    .set_global_opts(</span><br><span class="line">        title_opts=opts.TitleOpts(title=<span class="string">"Map-中国地图（带城市）"</span>),</span><br><span class="line">        visualmap_opts=opts.VisualMapOpts(),</span><br><span class="line">        is_piecewise=<span class="literal">True</span>,//是否分段</span><br><span class="line">    )</span><br><span class="line">    .render(<span class="string">"map_china_cities.html"</span>)</span><br><span class="line">)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="geo">Geo</span><a href="#geo" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> options <span class="keyword">as</span> opts</span><br><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Geo</span><br><span class="line"><span class="keyword">from</span> pyecharts .globals <span class="keyword">import</span> ChartType, SymbolType, GeoType</span><br><span class="line"><span class="keyword">from</span> snapshot_selenium <span class="keyword">import</span> snapshot <span class="keyword">as</span> driver</span><br><span class="line"><span class="keyword">from</span> pyecharts.render <span class="keyword">import</span> make_snapshot</span><br><span class="line">geo = Geo()</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新增坐标点，添加名称跟经纬度</span></span><br><span class="line">geo.add_coordinate(name=<span class="string">"China"</span>,longitude=<span class="number">104.195</span>,latitude=<span class="number">35.675</span>)</span><br><span class="line">geo.add_coordinate(name=<span class="string">"Australia"</span>,longitude=<span class="number">100.195</span>,latitude=<span class="number">35.675</span>)</span><br><span class="line"><span class="comment"># 添加数据项</span></span><br><span class="line">geo.add_schema(maptype=<span class="string">"china"</span>)</span><br><span class="line">geo.add(<span class="string">""</span>,[(<span class="string">"Australia"</span>,<span class="number">128326</span>),</span><br><span class="line">(<span class="string">"China"</span>,<span class="number">109</span>),</span><br><span class="line">],type_=ChartType.EFFECT_SCATTER)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 绘制流向</span></span><br><span class="line">geo.add(<span class="string">"流向图"</span>,[</span><br><span class="line">(<span class="string">"Australia"</span>,<span class="string">"China"</span>),</span><br><span class="line">],</span><br><span class="line">type_= GeoType.LINES,</span><br><span class="line">effect_opts=opts.EffectOpts(symbol=SymbolType.ARROW,symbol_size=<span class="number">5</span>,color=<span class="string">"yellow"</span>),</span><br><span class="line">linestyle_opts=opts.LineStyleOpts(curve=<span class="number">0.2</span>),</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line">geo.set_series_opts(label_opts=opts.LabelOpts(is_show=<span class="literal">False</span>))</span><br><span class="line">geo.set_global_opts(visualmap_opts=opts.VisualMapOpts(max_=<span class="number">130000</span>),title_opts=opts.TitleOpts(title=<span class="string">"mygeo"</span>))</span><br><span class="line">geo.render(<span class="string">'test.html'</span>)</span><br><span class="line">geo.render(<span class="string">'test.png'</span>)</span><br><span class="line"><span class="comment">#make_snapshot(driver,geo.render(), "bar.png")</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> pyecharts <span class="keyword">import</span> Geo</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment"># geo.add(name, attr, value, type="scatter", maptype='china', coordinate_region='中国', symbol_size=12, border_color="#111", geo_normal_color="#323c48", geo_emphasis_color="#2a333d", geo_cities_coords=None, is_roam=True, **kwargs)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 常用参数说明：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数	接收值	说明</span></span><br><span class="line"><span class="comment"># name	str	图例名称</span></span><br><span class="line"><span class="comment"># attr	list	属性名称</span></span><br><span class="line"><span class="comment"># value	list	属性所对应的值</span></span><br><span class="line"><span class="comment"># type	str	图例类型，有'scatter','effectScatter','heatmap'可选。默认为'scatter'</span></span><br><span class="line"><span class="comment"># maptype	str	地图类型</span></span><br><span class="line"><span class="comment"># coordinate_region	str	城市坐标所属国家</span></span><br><span class="line"><span class="comment"># symbol_size	int	标记图形大小。默认为12</span></span><br><span class="line"><span class="comment"># border_color	str	地图边界颜色。默认为'#111'</span></span><br><span class="line"><span class="comment"># geo_normal_color	str	正常状态下地图区域的颜色。默认为'#323c48'</span></span><br><span class="line"><span class="comment"># geo_emphasis_color	str	高亮状态下地图区域的颜色。默认为'#2a333d'</span></span><br><span class="line"><span class="comment"># geo_cities_coords	dict	用户自定义地区经纬度，类似如{'阿城':[126.58,45.32],}这样的字典。</span></span><br><span class="line"><span class="comment"># is_roam	bool	是否开启鼠标缩放和平移漫游。'scale'缩放、'move'平移、'True'都开启；默认为True。</span></span><br><span class="line"><span class="comment"># Geo 函数的使用：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#读取数据</span></span><br><span class="line">datafile = <span class="string">u'D:\\pythondata\\travel\\travel_data.xlsx'</span></span><br><span class="line">data = pd.read_excel(datafile)</span><br><span class="line">attr = data[<span class="string">'City'</span>]</span><br><span class="line">value = data[<span class="string">'Score'</span>]</span><br><span class="line"> </span><br><span class="line">geo = Geo(<span class="string">"♡♡♡  往后余生，踏遍山河  ♡♡♡"</span>, title_color=<span class="string">"#2E2E2E"</span>,</span><br><span class="line">          title_text_size=<span class="number">24</span>,title_top=<span class="number">20</span>,title_pos=<span class="string">"center"</span>, width=<span class="number">1300</span>,height=<span class="number">600</span>, </span><br><span class="line">          background_color=<span class="string">'#F6CEF5'</span>)</span><br><span class="line">geo.add(<span class="string">""</span>, attr, value, type=<span class="string">"effectScatter"</span>, is_random=<span class="literal">True</span>, visual_range=[<span class="number">0</span>, <span class="number">100</span>], </span><br><span class="line">        maptype=<span class="string">'china'</span>,visual_text_color=<span class="string">"#FF0000"</span>, geo_normal_color=<span class="string">"#6E6E6E"</span>,geo_emphasis_color=<span class="string">'#F5D0A9'</span>,</span><br><span class="line">        symbol_size=<span class="number">8</span>, effect_scale=<span class="number">5</span>, is_visualmap=<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># Geo 图类型，有 scatter, effectScatter, heatmap, lines 4 种，建议使用 </span></span><br><span class="line">        <span class="comment"># GeoType.GeoType.EFFECT_SCATTER，GeoType.HEATMAP，GeoType.LINES</span></span><br><span class="line">geo.render(path=<span class="string">u'D:\\pythondata\\travel\\往后余生.html'</span>)<span class="comment">#生成html文件</span></span><br></pre></td></tr></tbody></table></figure>
<h1><span id="geppandas">Geppandas</span><a href="#geppandas" class="header-anchor">#</a></h1><p>shp文件的处理</p>
<h1><span id="arcgis">ArcGIS</span><a href="#arcgis" class="header-anchor">#</a></h1><p>这个傻瓜式软件好啊。不管了，以后就用这个了。</p>
<p>尺寸，标记，流向图和散点图</p>
<h1><span id="r">R</span><a href="#r" class="header-anchor">#</a></h1>]]></content>
      <tags>
        <tag>Pyecharts</tag>
        <tag>Geopandas</tag>
      </tags>
  </entry>
  <entry>
    <title>科研之材料收集</title>
    <url>/2020/10/12/%E7%A7%91%E7%A0%94%E4%B9%8B%E6%9D%90%E6%96%99%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="6d68026e797ef6d64da02da4be82e8e478e2865154ff86de9f8c276404d3b5d1">f0440f666ae4b82c507b32b491fe6f668cd85cd868cb57bdc8d0092829a3b891ea174423ac701c8b9e50f162e3e80d6639a0656b3f890e0e6c8ca52dc5c8e1752e6045e0653e17011c87ef12db05a7aa538e3e218e157fc952830a082b4baf6cc4f986366012f4fdbe1dca9c5ea0cac66e2700f0b43cedb27bf7c1d27168d732e0173e2ce1e13e7ca72e27880aa5dc2241aeb479e216598bc8c7c1a691a34bb80a89adaabe354acf04e4f255504d26bd6ea9bbdeeb42fb8ce99459f150d9d929d161373281e612b1cf680e4cb4895f910baaae8bb7032de58d60333905924464a8f82818d22e43e39b9ad7e1f7051b22eb72046d5892cef53ef505be2318028626311fcf606fca8f7332ff0994970215b401fdd67a8c98a64a6c470fd1299796339e115ac2a6c0603b9e3e729bd9daf526eae643efd9bff3cd77cb586485e3a6df084c211e4d1c53f463628940070fa4f1d4a3ebe919769dd0584162f959b757544b2e7d6d62f989868b58daae1b85a71b5dadd1f29ba90b2673cf28303a361d1b1a526afc7fc65215d72a5c3ea694a0c9e6f2644d9a2fa1aa31077525cdcc5a05703f1bd2d72896fadb04bb2f6c8cdd8608d64bb98ab4aa84c4567565ef6e61f50e4275cdf57c329d3089e0db5c2742d69cb4209a2aa804431dbb3b773c6235faeb0f2b513ae86140d69b1c47ad663745f48a01db99a476812f34bff2dbc1d5db663f77dcab3a49b5590e8b46f0ff3f0e50a4969d4d31d592465f3a4a3d65d0b015023c985016188c7b5cce47806572d18145e400eee749a0e928cf962ae45ea5c0b0d28d9b68d344e00b5501abece9b44be9c5bfb18f46dd8c787cea0316dcf8761c84a11847460d3aa80898f7be216e2db08745a1cdf610b3f46e4f73184547387df2376ea5506b7203fe368c1ac0cf6990d05394e3fa1af5ac8cd286c5836a3f9383f99d4aacb19530683b2d8894744351c48af325ac3a63c46d0b1a7ffd9fefc53f7ca953ad8eedcd7eb230f1202745f8c95bb858f217329d498cf39ec125bf7ac40361cab3c79cf8784bb0c3c4532936b9c5cf85d3c1e1841a5523a25b7f961f47b88001b4d62d3e839505847b8e3067e60a9f28999f495a5d9c8cd11581d005ae6ef66b7808595b369ccb7f08f0f2fb9433707978b739ac90bd578cdc0e8a978b9ed924b47649e8a2f97fbeb97246f8a11f0d01590525e808fdade7acc80ae74a69b5485e91bbd409df1db531c1710716bef46439f50464448c8b21cf3d41650eceed68bf15f6b4998ea307f4bdfcfa1327eb023c11d61d83ff8dbd9d96b5d7f73a1bfd1a1a4df139c853d9f0397c1759e27706da1a906ffadeb83dfd0314d5960ac5146a83f17abc51dd5884aa71381266a2a5e4b5743f06bfe7725bb9ff3a09440c96d43749533aede1d395034ede72916e9310634297c07b709a073543198787ddd3af7b11b085b5179c665c929dfc4242f2287c490f35139428cbe80a8d8dc5fb892d4af6bfb746d3aae689b6979c9cdb72794a965c8bffa8ba5eb1aac1aea0ff754f3a786cdf6db16fe8fcdf2297aae94b63ed3bc084f5fff9a767fd26872385f07d8fa3f0efe2633f3430354ad7981f8a8388d10aed35acbcbbff235598d39f9266f1bc9f1b0cf30f3836c03a840ec025c7c5f70442a237b3a0c4415a202cc1f2861b2889875bfe83dedf850b4358200e1cd7e46921fc4b87922f8b500a884063977d00e9bb5e34341c3f1ae63931d67518050fc5f86ea7f5df1f71f0b75ef07f3c3328051ccce1650649e54091f88c27f7bb183a12a2d24772ba232a57ac9cfc59d2d3905b63a7b48bd5e7ae2b64e712601caf3e3ba6559b13e680e0d32d0ac28af2e7dcb4bde3b409434773741a1474422010191f1184173d0e3901125d9aab96c0585e572097751dd2e1e993e39744a08c8b8e1a501cba168db64df0c448272818019f0e0e3b2f3d56fa61f0768530f5599763809f623423b44d540ec47c9afd67ebad508c172eb9b0ecaa52dd840d32158583801b18ab011fe6667f3c8b82e7ea0a5ef17b2cd2f169b7ba8f6545f3d1fbf885c8966499debcbc0f6e89faa06fc3cf49c753a39998811d88d931894903820ca37ff5e9adcce3fda64a6c7148581d0015f855831d6bb01ea1e3ada2f3c0110d91f22afbc3c5a89ad0b69fee37bd31d866f65ca73de8ba40f17e1213613a173ad7a288c44bba1b6d2ee2765e4ece90d5259b16a0435896ccce0eb7669eecb72340ecdfdab8147c7902a12bc3ec488dba091755cc18c4a486e3e3eac5694d791b9fa8f7647384fcfd49bfd8428edb1cd69faa38c5ee0151798ad51c2a51c7be6353f79d4bc3013b4784a952590726c94604220cce940eb8b2442a5c50dc26c98a585c87e3aea4c6e703d3c75c8847179f5b36ba34796f74589b5d3294607995091265a71a173b3047329d538fa176b6bf01edfebf070971704d270713345e7e486aa3fcc30943b51ac83a11268950456952858b1f3e8eb858cd9b08d97a73406cf4caf2ecda46d3fe3649d96c75596ed24aab8422374cf82880bfc582975926fbcb8b0983c65d332ce320579386b05bbf7ca4c47b8a1af7fcc0d2c27e747ab6e1f6677af58ba73c1e9778a71bcbdd6191d4f6687ae327f3e74e4f8583780a647c1561e986c11b00d5c9de13269af6599e761a3595e8bf9e83115533e854c0f0f3c467b5906452dcf613658ff5932fb328fb0964afdda8143f320b42804f609a65ea4095996cdb05ae69c6d62e373f286e213b69a9b32044f61bf71e31b52cc872408f8265f414f50e4b9a6ec1c8a764540d43868125c47d4b271baeb340be46af2818699ae7c3d02301a0ea7e3dca8289fa3477d8c03bd56dbc9635f3bda2172dab7f0b93724831804f47a02bba5cf4c4034cf41595e61eff0dc6b9f05a3ec5085d7b9b7f2e4ecc9d555fd23b71468558773d1fd853e83e10867dc99f0dafc888bb0d846c2350dd4b792fd98556bf9c7918d2367fa3af9b3c1c1c9bf3abf483cf5207c95da2773a83514d71a092179cb3e121a1282907605465c4c7c3fb2305ba1e819c52b9c60dffca39098b6f1ff4bdf20af70abf52cbbac730c3fcd1ee50575e8a3cb8ef08791b55020ce9f83fa7655da9985d0132eb81bafcd6ae27de734d571975564d9eaae7f9e88ca0a67f31a352453188cfa0e4080be18ba6f987c9b177b2286d737b2f9b9d0c1e241f5db3c9c39a823e97433d720cfa20db89f224dad1fe28c04c15c4f7787da0fe863dbbc8bbc338cfb3cd1f9111be52addf3a9fd29143cea10690c349ea968136a5dad6e0a005bdeaa02895d12b69eec4347ece469bc8a91882f4c7a477262a700cdf9f49d62aaac6c3884148a9f0de5809c3dd2124f2f0a71ee1d9a7d6259e5fd0036248b90fa3dea1336045c43a0a317953fca5354f5a6944389bd42e7790aedc0f38f22417ce828cfd987806bd689256802b227445db091716ffb4401dfca1a3a2a5d65410771d99836de0845136b20fa16c43e97bcb40644d95d1ebedd00b025f7491e2f8d20bacd210116bccb4fe335b9b7e921ebb9802f77713746b4a876933d32d900c10786ac3453038d461674b073d12c1387c0aab6e950fa518b8ba41fb775594afbbe140a0eb563d87fb240f94c9888e3be6c84219b92b3731a88519413c8d6165944a905d3ccc504633fcdd9bf80a7322f1c6221565d01f7f44d1573ff2571fbfe3cf0e629b9a509a015ee5aeca8463a70ae68a54df3e0d397e6e0550385220812e588ab4772609526d5c3c510c7de82c96e4588fa6a300ba07f1bd6c8fbd2482ae00cf157f83a3aa0bb44437bcd338d43120c9f35a107d9ac0fb377ffaeeb1e477dc70574ba69f1833c6f36096731794fcd60a45e97261a6944045933e3c3a3e9798177d8502def9109c06f1756f4a63b664273d53f593a8c9fef476bd269821898fbae8d2bb9e800fbafb74c4398634aa54cdf9bf9706cdda3060299804f888d115df2bf352ec1e3e8f3f4cb523b8b697d0ed76d9764b7bada22403a190801369365f1807862d3f9e5c95f4ba712674841f83d4581304fa2c3052403d03821e8ddb32d8df54cbec52f9355fc09b6272400e1dcfdd991b22ce9b6446379754f8b9728c0246be15ad37143c882683da129b974d41da9ddbc26287bf0219a1737f0e6053f430a3ba8dda50ecdb721b66a30a974a9a5f25d85a6c9702b1fc69eab8a5e18773d0e008e854248003fc4ed02d2a9adffc88e62b3b7ed426d51e90b6b7ca493191262e0804e860a76c160afd79416ead66ac087be1aa57d5148540cbfce1fa28960d756434feb0be2e210893d30d4b622690a6023ef8a3c49f2af67f5f66b3af400d82496413d0cfd754cc86fd0f756e1a70fa0e4928ef8826d86b7d2ca3c6fc716c897631b4c49a8a46c8be2d6627eb8169272e4b575e90910d8ab1715010cf0dab0b3c862235635da87fe661f40104f07c909e0c02ad1b7a62eb811b71a84e02eebf3ae7e5511873783c465d6fcf1cb7c09552b920b797c31d47299c8337ebde59d80bb787cb2a2d0e9e268ae7f511ba3b4bb622068d6f69bdc3391c19f0ab064159c7d9d025b01a445dfae3c9aba38bcb12ffe5efd8a3d65150111f2b7adb6af575c77fb6c2e0e49fdf1121d6cfaa9c2e84cec845b969b28e588d0858338777548f9037bc02881c7958a42e8051277e6aa40f6e74284318243ee84a02f1bc92ffe346695b2d868a5bbc3f1803f3c3437726a20501c9559b31dcfd5c71396f55db6d911bba62aa8c9143bbeaabc9f1414251d01bb2ebaef8ff2c3299bc425661e73671b610826d2a67cee223deb62190dc7f27362c26677bd5f42be75d5f0d2b855e5623d527c8365edbfaedcd9658b2998dd845f707f5b404b62240466090784ba8edd4432b11bb6c34755c82301e7891b09e0c600d76db68a19a13788ff3079a6c9ed14731db54548741c55df295d190d56a6b28f8a62e46e921bd58efde44</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>科研材料</tag>
      </tags>
  </entry>
  <entry>
    <title>可视化之Geopandas</title>
    <url>/2020/10/12/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BGeopandas/</url>
    <content><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/141729108">https://zhuanlan.zhihu.com/p/141729108</a></p>
]]></content>
  </entry>
  <entry>
    <title>可视化之Matplotlib</title>
    <url>/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BMatplotlib/</url>
    <content><![CDATA[<p>此篇博客针对matplotlib库进行全面的讲解，以原代码展示为主，辅以动态图片。 matplotlib库绘制图的大致可分为五大步骤：</p>
<ol>
<li><p>导入模块（from matplotlib.pyplot as plt)</p>
</li>
<li><p>创建画布 (fig = plt.figure()) </p>
</li>
<li>创建坐标系(ax = fig.add_axes())</li>
<li>绘制图片(ax.类型)</li>
<li>美化和规范性(ax.set_(参数))</li>
</ol>
<a id="more"></a>
<h2><span id="matplotlib">Matplotlib</span><a href="#matplotlib" class="header-anchor">#</a></h2><p><img src="/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BMatplotlib/Users\ADMIN\Documents\Apowersoft\ApowerREC\20201011_195152.gif" alt="20201011_195152"></p>
<h2><span id="chuang-jian-hua-bu">创建画布</span><a href="#chuang-jian-hua-bu" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line">fig = plt.figure()</span><br><span class="line"><span class="comment"># 导入matplotlib的pyplot模块</span></span><br><span class="line"><span class="comment"># 创建类的实例: plt.pie plt.bar etc</span></span><br><span class="line"><span class="comment"># figure(num=None, figsize=None(inches,width,height), dpi=None（分辨率:单位像素点), facecolor=None, edgecolor=None, frameon=True)</span></span><br></pre></td></tr></tbody></table></figure>
<p><a href="https://matplotlib.org/api/_as_gen/matplotlib.pyplot.html#module-matplotlib.pyplot">pyplot模块里面的方法和类</a></p>
<p>可以调用函数获取figur(gcf())和Axes(gca())；</p>
<p>创建类实例，绘制图</p>
<p>厘米和英寸的换算关系：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1 inchs = 2.54 cm</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="chuang-jian-zuo-biao-xi">创建坐标系</span><a href="#chuang-jian-zuo-biao-xi" class="header-anchor">#</a></h2><h3><span id="fig-add-axes-wei-zhi-zi-ding-yi">fig.add_axes() 位置自定义</span><a href="#fig-add-axes-wei-zhi-zi-ding-yi" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig = plt.figure()  <span class="comment"># 新建图形对象</span></span><br><span class="line">axes = fig.add_axes([<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.8</span>, <span class="number">0.8</span>])  <span class="comment"># 控制画布的左，下，宽度，高度（是长宽的百分比)</span></span><br><span class="line">axes.plot(x, y, <span class="string">'r'</span>)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">fig = plt.figure()  # 新建画板</span><br><span class="line">axes1 = fig.add_axes([0.1, 0.1, 0.8, 0.8])  # 大画布</span><br><span class="line">axes2 = fig.add_axes([0.2, 0.5, 0.4, 0.3])  # 小画布</span><br><span class="line"></span><br><span class="line">axes1.plot(x, y, 'r')  # 大画布</span><br><span class="line">axes2.plot(y, x, 'g')  # 小画布</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="fig-add-suplots-zi-tu">fig.add_suplots()子图</span><a href="#fig-add-suplots-zi-tu" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">fig, axes = plt.subplots(nrows=<span class="number">1</span>, ncols=<span class="number">2</span>)  <span class="comment"># 子图为 1 行，2 列</span></span><br><span class="line"><span class="keyword">for</span> ax <span class="keyword">in</span> axes:</span><br><span class="line">    ax.plot(x, y, <span class="string">'r'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>fig.add_suplot()每一个子图</p>
<p>顺序很重要</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 向画布添加子图 1</span></span><br><span class="line">ax1 = fig.add_subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>, projection=<span class="string">'3d'</span>)</span><br><span class="line"><span class="comment"># 向画布添加子图 2</span></span><br><span class="line">ax2 = fig.add_subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, projection=<span class="string">'3d'</span>)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="xi-jie-zhi-ding">细节制定</span><a href="#xi-jie-zhi-ding" class="header-anchor">#</a></h3><p>通过创建坐标系，返回坐标系对象(Axes)Axes是类。然后利用axes类，对图片细节就像美化。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">matplotlib</span>.<span class="title">axes</span>.<span class="title">Axes</span>(<span class="params">fig, rect, facecolor=None, frameon=True, sharex=None, sharey=None, label=<span class="string">''</span>, xscale=None, yscale=None, box_aspect=None, **kwargs</span>)</span></span><br></pre></td></tr></tbody></table></figure>
<h2><span id="plottingp"></span><a href="#plottingp" class="header-anchor">#</a></h2><h3><span id="basic"></span><a href="#basic" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.plot.html#matplotlib.axes.Axes.plot"><code>Axes.plot</code></a></th>
<th>Plot y versus x as lines and/or markers.</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.errorbar.html#matplotlib.axes.Axes.errorbar"><code>Axes.errorbar</code></a></td>
<td>Plot y versus x as lines and/or markers with attached errorbars.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.scatter.html#matplotlib.axes.Axes.scatter"><code>Axes.scatter</code></a></td>
<td>A scatter plot of <em>y</em> vs.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.plot_date.html#matplotlib.axes.Axes.plot_date"><code>Axes.plot_date</code></a></td>
<td>Plot data that contains dates.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.step.html#matplotlib.axes.Axes.step"><code>Axes.step</code></a></td>
<td>Make a step plot.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.loglog.html#matplotlib.axes.Axes.loglog"><code>Axes.loglog</code></a></td>
<td>Make a plot with log scaling on both the x and y axis.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.semilogx.html#matplotlib.axes.Axes.semilogx"><code>Axes.semilogx</code></a></td>
<td>Make a plot with log scaling on the x axis.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.semilogy.html#matplotlib.axes.Axes.semilogy"><code>Axes.semilogy</code></a></td>
<td>Make a plot with log scaling on the y axis.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.fill_between.html#matplotlib.axes.Axes.fill_between"><code>Axes.fill_between</code></a></td>
<td>Fill the area between two horizontal curves.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.fill_betweenx.html#matplotlib.axes.Axes.fill_betweenx"><code>Axes.fill_betweenx</code></a></td>
<td>Fill the area between two vertical curves.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.bar.html#matplotlib.axes.Axes.bar"><code>Axes.bar</code></a></td>
<td>Make a bar plot.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.barh.html#matplotlib.axes.Axes.barh"><code>Axes.barh</code></a></td>
<td>Make a horizontal bar plot.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.stem.html#matplotlib.axes.Axes.stem"><code>Axes.stem</code></a></td>
<td>Create a stem plot.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.eventplot.html#matplotlib.axes.Axes.eventplot"><code>Axes.eventplot</code></a></td>
<td>Plot identical parallel lines at the given positions.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.pie.html#matplotlib.axes.Axes.pie"><code>Axes.pie</code></a></td>
<td>Plot a pie chart.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.stackplot.html#matplotlib.axes.Axes.stackplot"><code>Axes.stackplot</code></a></td>
<td>Draw a stacked area plot.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.broken_barh.html#matplotlib.axes.Axes.broken_barh"><code>Axes.broken_barh</code></a></td>
<td>Plot a horizontal sequence of rectangles.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.vlines.html#matplotlib.axes.Axes.vlines"><code>Axes.vlines</code></a></td>
<td>Plot vertical lines.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.hlines.html#matplotlib.axes.Axes.hlines"><code>Axes.hlines</code></a></td>
<td>Plot horizontal lines at each <em>y</em> from <em>xmin</em> to <em>xmax</em>.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.fill.html#matplotlib.axes.Axes.fill"><code>Axes.fill</code></a></td>
<td>Plot filled polygons.</td>
</tr>
</tbody>
</table>
</div>
<h3><span id="appearance"></span><a href="#appearance" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.axis.html#matplotlib.axes.Axes.axis"><code>Axes.axis</code></a></th>
<th>Convenience method to get or set some axis properties.</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.set_axis_off.html#matplotlib.axes.Axes.set_axis_off"><code>Axes.set_axis_off</code></a></td>
<td>Turn the x- and y-axis off.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.set_axis_on.html#matplotlib.axes.Axes.set_axis_on"><code>Axes.set_axis_on</code></a></td>
<td>Turn the x- and y-axis on.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.set_frame_on.html#matplotlib.axes.Axes.set_frame_on"><code>Axes.set_frame_on</code></a></td>
<td>Set whether the axes rectangle patch is drawn.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.get_frame_on.html#matplotlib.axes.Axes.get_frame_on"><code>Axes.get_frame_on</code></a></td>
<td>Get whether the axes rectangle patch is drawn.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.set_axisbelow.html#matplotlib.axes.Axes.set_axisbelow"><code>Axes.set_axisbelow</code></a></td>
<td>Set whether axis ticks and gridlines are above or below most artists.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.get_axisbelow.html#matplotlib.axes.Axes.get_axisbelow"><code>Axes.get_axisbelow</code></a></td>
<td>Get whether axis ticks and gridlines are above or below most artists.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.grid.html#matplotlib.axes.Axes.grid"><code>Axes.grid</code></a></td>
<td>Configure the grid lines.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.get_facecolor.html#matplotlib.axes.Axes.get_facecolor"><code>Axes.get_facecolor</code></a></td>
<td>Get the facecolor of the Axes.</td>
</tr>
<tr>
<td><a href="https://matplotlib.org/api/_as_gen/matplotlib.axes.Axes.set_facecolor.html#matplotlib.axes.Axes.set_facecolor"><code>Axes.set_facecolor</code></a></td>
<td>Set the facecolor of the Axes.</td>
</tr>
</tbody>
</table>
</div>
<p><a href="https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes">参考这里</a></p>
<h2><span id="ke-du">刻度</span><a href="#ke-du" class="header-anchor">#</a></h2><p>from pylab import *<br>from matplotlib.ticker import MultipleLocator, FormatStrFormatter</p>
<p>xmajorLocator   = MultipleLocator(20) #将x主刻度标签设置为20的倍数<br>xmajorFormatter = FormatStrFormatter(‘%1.1f’) #设置x轴标签文本的格式<br>xminorLocator   = MultipleLocator(5) #将x轴次刻度标签设置为5的倍数</p>
<p>ymajorLocator   = MultipleLocator(0.5) #将y轴主刻度标签设置为0.5的倍数<br>ymajorFormatter = FormatStrFormatter(‘%1.1f’) #设置y轴标签文本的格式<br>yminorLocator   = MultipleLocator(0.1) #将此y轴次刻度标签设置为0.1的倍数</p>
<p>t = arange(0.0, 100.0, 1)<br>s = sin(0.1<em>pi</em>t)<em>exp(-t</em>0.01)</p>
<p>ax = subplot(111) #注意:一般都在ax中设置,不再plot中设置<br>plot(t,s,’—b*’)</p>
<h1><span id="she-zhi-zhu-ke-du-biao-qian-de-wei-zhi-biao-qian-wen-ben-de-ge-shi">设置主刻度标签的位置,标签文本的格式</span><a href="#she-zhi-zhu-ke-du-biao-qian-de-wei-zhi-biao-qian-wen-ben-de-ge-shi" class="header-anchor">#</a></h1><p>ax.xaxis.set_major_locator(xmajorLocator)<br>ax.xaxis.set_major_formatter(xmajorFormatter)</p>
<p>ax.yaxis.set_major_locator(ymajorLocator)<br>ax.yaxis.set_major_formatter(ymajorFormatter)</p>
<h1><span id="xian-shi-ci-ke-du-biao-qian-de-wei-zhi-mei-you-biao-qian-wen-ben">显示次刻度标签的位置,没有标签文本</span><a href="#xian-shi-ci-ke-du-biao-qian-de-wei-zhi-mei-you-biao-qian-wen-ben" class="header-anchor">#</a></h1><p>ax.xaxis.set_minor_locator(xminorLocator)<br>ax.yaxis.set_minor_locator(yminorLocator)</p>
<p>ax.xaxis.grid(True, which=’major’) #x坐标轴的网格使用主刻度<br>ax.yaxis.grid(True, which=’minor’) #y坐标轴的网格使用次刻度</p>
<p>show()</p>
<h2><span id="hui-tu">绘图</span><a href="#hui-tu" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>  窗口：figure: 一个窗口，plt.figure(num=,figsize=(h,w))下面数据都属于当前的figure,有一定的顺序喔</span><br><span class="line"><span class="number">2.</span>  画图：plt.plot(x,y,color=,linewidth=,linestyle,label=)</span><br><span class="line"><span class="number">3.</span>  标注信息： plt.xlim((,)), plt.yxlim((,)),plt.xlabel(),plt.ylabel(),ticks:图像的小标，plt.xticks(),plt.yticks([值<span class="number">1</span>，值<span class="number">2</span>],[<span class="string">r'$值1\ 对应的文字$'</span>,<span class="string">r'值2的文字 \alpha])</span></span><br><span class="line"><span class="string">4.  坐标轴：axis gac='</span>get current axis<span class="string">'</span></span><br><span class="line"><span class="string">    ax = plt.gca() # 轴</span></span><br><span class="line"><span class="string">    \# 获取四个轴</span></span><br><span class="line"><span class="string">    ax.spines['</span>right|left|top|<span class="string">'].set_color('</span>none<span class="string">') </span></span><br><span class="line"><span class="string">    ax.xaxis.set_ticks_position('</span>bottom<span class="string">')</span></span><br><span class="line"><span class="string">    ax.spines['</span>bottom<span class="string">'].set_position(('</span>data<span class="string">',-1))</span></span><br><span class="line"><span class="string">5.  图例：legend: </span></span><br><span class="line"><span class="string">    a. plt.plot(,label=), plt.legend()</span></span><br><span class="line"><span class="string">    b. l1, = plt.plot() plt.legend(handles=[l1,],labels=[,],loc='</span>best|upper right|<span class="string">')</span></span><br><span class="line"><span class="string">6.  注解 annotation </span></span><br><span class="line"><span class="string">    a. 点的位置(x0，y0) plt.scatter(). plt.plot([x0,y0],[y0,0],'</span>k--<span class="string">',lw=)</span></span><br><span class="line"><span class="string">    b . method 1:</span></span><br><span class="line">    plt.annotate(r'name',xy=(,)起始点，xycoords='data'//基于xy,xytext=(+30,30),textcoords='offseet points'//文本基于xy,arrowprops=dict(arrowstyle='-&gt;'箭头,connectionstyle='arc3,rad=.2')弧度)</span><br><span class="line"><span class="number">7.</span>  Bar 柱状图</span><br><span class="line">    plt.bar(x,+|-y,facecolor=<span class="string">""</span>,edgecolor,)</span><br><span class="line">    |<span class="comment"># ha horizontal alignment 对齐方式</span></span><br><span class="line">    <span class="keyword">for</span> x,y <span class="keyword">in</span> zip(x,y):</span><br><span class="line">     plt.text(x+<span class="number">0</span>,<span class="number">4</span>,y+<span class="number">0.05</span>,<span class="string">'%.2f'</span>%y,ha=<span class="string">'center'</span>,va=<span class="string">'bottom'</span>)</span><br><span class="line"><span class="number">8.</span>  很多自动 subplot(总行，当前行的列，总的按最小分的第几个)</span><br><span class="line">    subplot(,,)</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>数据可视化</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>绘图</tag>
        <tag>Matplotlib</tag>
      </tags>
  </entry>
  <entry>
    <title>可视化之Python高级进阶篇</title>
    <url>/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BPython%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6%E7%AF%87/</url>
    <content><![CDATA[<p>绘图</p>
<a id="more"></a>
<h1><span id="figure-vs-subplot-vs-axes">figure vs.  subplot vs. axes</span><a href="#figure-vs-subplot-vs-axes" class="header-anchor">#</a></h1><h2><span id="figure-tu-xiang">figure 图像</span><a href="#figure-tu-xiang" class="header-anchor">#</a></h2><p>figure是图像的载体,使用pyplot.figure()创建, 一个程序可以创建多个画布, 画图操作作用于最近创建的画布上, 多个画布顺序显示.</p>
<h2><span id="axes-subplot-zuo-biao-xi">axes(subplot) 坐标系</span><a href="#axes-subplot-zuo-biao-xi" class="header-anchor">#</a></h2><p>坐标系,可理解为画布上的一个区域, 一个figure上可以有多个axes，被分成多个区域， 可用pyplot.axes和pyplot.subplots/pyplot.subplot来创建. pyplot画图操作本质就是操作axes对象。</p>
<p><a href="https://matplotlib.org/api/axes_api.html">相关属性(调用函数)</a></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">fig, axess = plt.subplots(2,2)</span><br><span class="line">ax1 = axess[0,0]</span><br><span class="line">ax2 = axess[0,1]</span><br><span class="line">ax3 = axess[1,0]</span><br><span class="line">ax4 = axess[1,1]</span><br><span class="line">ax2.plot(np.arange(4),np.arange(4))</span><br><span class="line">plt.scatter(np.arange(4), np.arange(4))</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">plt.subplot(2,2,1) </span><br><span class="line">plt.subplot(2,2,2) </span><br><span class="line">plt.plot(np.arange(4),np.arange(4))</span><br><span class="line">plt.subplot(2,2,3)</span><br><span class="line">plt.subplot(2,2,4)</span><br><span class="line">plt.scatter(np.arange(4), np.arange(4))</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax1 = fig.add_subplot(211)</span><br><span class="line"> </span><br><span class="line">ax2 = fig.add_subplot(212)</span><br><span class="line"> </span><br><span class="line">print(type(ax1))</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax3 = fig.add_axes([0.1, 0.1, 0.8, 0.8])</span><br><span class="line">#0.1,0.1为距离画布左下角figure画布的距离</span><br><span class="line">ax4 = fig.add_axes([0.72, 0.72, 0.16, 0.13])</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="she-zhi-zu-jian-de-shu-xing">设置组件的属性</span><a href="#she-zhi-zu-jian-de-shu-xing" class="header-anchor">#</a></h3><p>规律可行</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">axes.set_xlim() .set_ylim() .set.xticks() .set_ylabel() set_xlabel()</span><br><span class="line">xx_kws = {} color, lw = '' </span><br><span class="line">line_kws</span><br><span class="line">scatter_kws</span><br><span class="line">hist_kws</span><br><span class="line">kde_kws</span><br><span class="line">命名很规律</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="axis-zuo-biao-zhou">axis 坐标轴</span><a href="#axis-zuo-biao-zhou" class="header-anchor">#</a></h2><p><img src="/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BPython%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6%E7%AF%87/20200311202147484.png" alt="在这里插入图片描述"></p>
<p><img src="/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BPython%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6%E7%AF%87/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxMzQ3ODY5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述" style="zoom:50%;"></p>
<h1><span id="han-shu-diao-yong-guan-xi">函数调用关系</span><a href="#han-shu-diao-yong-guan-xi" class="header-anchor">#</a></h1><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure()</span><br><span class="line">plt.gcf().subplots(2,2)\</span><br><span class="line">其中 .gcf() 的作用是获取当前 figure，即 get current figure。另外对应的 .gca() 就是获取当前 axes，即 get current axes</span><br></pre></td></tr></tbody></table></figure>
<h1><span id="hui-tu-yuan-li">绘图原理</span><a href="#hui-tu-yuan-li" class="header-anchor">#</a></h1><p>创建画布(figure)—&gt;添加axes-&gt;修改属性(调用函数绘图)-&gt;爆操</p>
<h2><span id="shu-xing-she-zhi">属性设置</span><a href="#shu-xing-she-zhi" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">g.map_lower(sns.regplot, lowess=False, ci=None, line_kws={'color': 'black','lw':0.3},scatter_kws={ 'alpha': 0.3,'color':"b",'sizes':(15,),</span><br><span class="line">   'linewidths':0.3,'edgecolor':'r','facecolor':'red'})</span><br><span class="line">   g.map_diag(sns.distplot, kde_kws={'color': 'black','lw':0.3},hist_kws = {"color": "g",'lw':0.3})</span><br></pre></td></tr></tbody></table></figure>
]]></content>
  </entry>
  <entry>
    <title>可视化之Seaborn</title>
    <url>/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BSeaborn/</url>
    <content><![CDATA[<p>[导读]此篇Blog将简单呈现从入门到精通再到升仙的学习路径。本着通俗易懂的原则，面向新手的打怪升级套路，重量级的推出不仅仅适用于工程、竞赛的绘图标准，更是满足科研绘图的高水准的教程。(先定制出目标，能不能到达效果就看下文了)</p>
<ol>
<li>导入模块</li>
<li>设置风格</li>
<li>设置环境</li>
<li>选择想要绘制的图形</li>
<li>规范化(调色板等等)</li>
</ol>
<a id="more"></a>
<h1><span id="wu-jia-you-nu-chu-chang-cheng-seaborn">吾家有女初长成— seaborn</span><a href="#wu-jia-you-nu-chu-chang-cheng-seaborn" class="header-anchor">#</a></h1><p>seaborn是基于matplotlib库进行封装和集成的一个Python的可视化库。</p>
<p><a href="http://seaborn.pydata.org/api.html#">官方文档</a></p>
<h3><span id="step1-feng-ge-she-zhi">Step1 风格设置</span><a href="#step1-feng-ge-she-zhi" class="header-anchor">#</a></h3><h3><span id="method-1-set-tong-yong-she-zhi">Method 1: set() 通用设置</span><a href="#method-1-set-tong-yong-she-zhi" class="header-anchor">#</a></h3><p>通过set()函数可进行风格(style)，和环境（context）设置</p>
<p><a href="http://seaborn.pydata.org/generated/seaborn.set_theme.html#seaborn.set_theme">详情</a></p>
<p><a href="https://github.com/mwaskom/seaborn/blob/master/seaborn/rcmod.py">详情</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set()  <span class="comment">#默认风格为darkgrid</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_theme</span>(<span class="params">context=<span class="string">"notebook"</span>, style=<span class="string">"darkgrid"</span>, palette=<span class="string">"deep"</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">              font=<span class="string">"sans-serif"</span>, font_scale=<span class="number">1</span>, color_codes=True, rc=None</span>):</span></span><br><span class="line">    <span class="string">"""Set multiple theme parameters in one step.</span></span><br><span class="line"><span class="string">    Each set of parameters can be set directly or temporarily, see the</span></span><br><span class="line"><span class="string">    referenced functions below for more information.</span></span><br><span class="line"><span class="string">    Parameters</span></span><br><span class="line"><span class="string">    ----------</span></span><br><span class="line"><span class="string">    context : string or dict</span></span><br><span class="line"><span class="string">        Plotting context parameters, see :func:`plotting_context`.</span></span><br><span class="line"><span class="string">    style : string or dict</span></span><br><span class="line"><span class="string">        Axes style parameters, see :func:`axes_style`.</span></span><br><span class="line"><span class="string">    palette : string or sequence</span></span><br><span class="line"><span class="string">        Color palette, see :func:`color_palette`.</span></span><br><span class="line"><span class="string">    font : string</span></span><br><span class="line"><span class="string">        Font family, see matplotlib font manager.</span></span><br><span class="line"><span class="string">    font_scale : float, optional</span></span><br><span class="line"><span class="string">        Separate scaling factor to independently scale the size of the</span></span><br><span class="line"><span class="string">        font elements.</span></span><br><span class="line"><span class="string">    color_codes : bool</span></span><br><span class="line"><span class="string">        If ``True`` and ``palette`` is a seaborn palette, remap the shorthand</span></span><br><span class="line"><span class="string">        color codes (e.g. "b", "g", "r", etc.) to the colors from this palette.</span></span><br><span class="line"><span class="string">    rc : dict or None</span></span><br><span class="line"><span class="string">        Dictionary of rc parameter mappings to override the above.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    set_context(context, font_scale)</span><br><span class="line">    set_style(style, rc={<span class="string">"font.family"</span>: font})</span><br><span class="line">    set_palette(palette, color_codes=color_codes)</span><br><span class="line">    <span class="keyword">if</span> rc <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        mpl.rcParams.update(rc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set</span>(<span class="params">*args, **kwargs</span>):</span></span><br><span class="line">    <span class="string">"""Alias for :func:`set_theme`, which is the preferred interface."""</span></span><br><span class="line">    set_theme(*args, **kwargs)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="set-style-feng-ge-she-zhi">set_style()风格设置</span><a href="#set-style-feng-ge-she-zhi" class="header-anchor">#</a></h3><h4><span id="quan-ju-feng-ge">全局风格</span><a href="#quan-ju-feng-ge" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">2.set_style(style=None, rc=None)，自定义整体风格</span><br><span class="line">style: 参数为"white"、"dark"、 "whitegrid"、 "darkgrid"、 "ticks"或者None，默认为darkgrid</span><br><span class="line">rc: rcdict, optional</span><br><span class="line">Parameter mappings to override the values in the preset seaborn style dictionaries. This only updates parameters that are considered part of the style definition.</span><br><span class="line"></span><br><span class="line">set_style("whitegrid")</span><br><span class="line">set_style("ticks", {"xtick.major.size": 8, "ytick.major.size": 8})</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p><a href="http://seaborn.pydata.org/generated/seaborn.set_style.html?highlight=set_style#seaborn.set_style">详情</a></p>
<h4><span id="dang-qian-tu-axes-de-feng-ge">当前图(axes)的风格</span><a href="#dang-qian-tu-axes-de-feng-ge" class="header-anchor">#</a></h4><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="number">3.</span>axes_style()，设置子图风格</span><br><span class="line">可与<span class="keyword">with</span>搭配使用，设置<span class="keyword">with</span>代码块内的图表风格，不影响整体图表风格。</span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">15</span>,<span class="number">6</span>))</span><br><span class="line"><span class="keyword">with</span> sns.axes_style(<span class="string">"dark"</span>,rc = ): <span class="comment">#只对with代码块内的图表风格生效，即只对第一个子图生效</span></span><br><span class="line">    plt.subplot(<span class="number">121</span>)       </span><br><span class="line">    sinplot()</span><br><span class="line"></span><br><span class="line">sns.set_style(<span class="string">"white"</span>)       <span class="comment">#整体风格为white</span></span><br><span class="line">plt.subplot(<span class="number">122</span>)</span><br><span class="line">sinplot()</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="rc">rc</span><a href="#rc" class="header-anchor">#</a></h4><p>_style_keys = [</p>
<pre><code>"axes.facecolor",
"axes.edgecolor",
"axes.grid",
"axes.axisbelow",
"axes.labelcolor",

"figure.facecolor",

"grid.color",
"grid.linestyle",

"text.color",

"xtick.color",
"ytick.color",
"xtick.direction",
"ytick.direction",
"lines.solid_capstyle",

"patch.edgecolor",
"patch.force_edgecolor",

"image.cmap",
"font.family",
"font.sans-serif",

"xtick.bottom",
"xtick.top",
"ytick.left",
"ytick.right",

"axes.spines.left",
"axes.spines.bottom",
"axes.spines.right",
"axes.spines.top",
</code></pre><h3><span id="step2-huan-jing-she-zhi-context">Step2 环境设置context</span><a href="#step2-huan-jing-she-zhi-context" class="header-anchor">#</a></h3><h5><span id="5-set-context-xian-shi-bi-li">5.set_context()显示比例</span><a href="#5-set-context-xian-shi-bi-li" class="header-anchor">#</a></h5><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">sns.set() //重设默认参数</span><br><span class="line">sns.set_context(<span class="string">"paper"</span>,rc)</span><br><span class="line">sinplot()</span><br><span class="line">可选参数为<span class="string">'paper'</span>、 <span class="string">'notebook'</span>、<span class="string">'talk'</span>、<span class="string">'poster'</span>，默认为notebook，设置标签、线等的大小。</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="ju-bu-axes">局部axes</span><a href="#ju-bu-axes" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"> // 自定义图形规模</span><br><span class="line">sns.set_context("notebook", font_scale=1.5, rc={"lines.linewidth": 2.5})</span><br><span class="line">sinplot()</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="rc">rc</span><a href="#rc" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">// 可设置的选择项 rc</span><br><span class="line">_context_keys = [</span><br><span class="line"></span><br><span class="line">    "font.size",</span><br><span class="line">    "axes.labelsize",</span><br><span class="line">    "axes.titlesize",</span><br><span class="line">    "xtick.labelsize",</span><br><span class="line">    "ytick.labelsize",</span><br><span class="line">    "legend.fontsize",</span><br><span class="line"></span><br><span class="line">    "axes.linewidth",</span><br><span class="line">    "grid.linewidth",</span><br><span class="line">    "lines.linewidth",</span><br><span class="line">    "lines.markersize",</span><br><span class="line">    "patch.linewidth",</span><br><span class="line"></span><br><span class="line">    "xtick.major.width",</span><br><span class="line">    "ytick.major.width",</span><br><span class="line">    "xtick.minor.width",</span><br><span class="line">    "ytick.minor.width",</span><br><span class="line"></span><br><span class="line">    "xtick.major.size",</span><br><span class="line">    "ytick.major.size",</span><br><span class="line">    "xtick.minor.size",</span><br><span class="line">    "ytick.minor.size",</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="step-3-diao-se-ban">Step 3 调色板</span><a href="#step-3-diao-se-ban" class="header-anchor">#</a></h3><p>就是对图片的颜色进行配置。选择指定的颜色风格。通过color_palette()对颜色板进行处理，返回颜色，并对图片进行上色。</p>
<h4><span id="diao-se-ban">调色板</span><a href="#diao-se-ban" class="header-anchor">#</a></h4><p>主要使用以下几个函数设置颜色：<br>color_palette() 能传入任何Matplotlib所有支持的颜色<br>color_palette() 不写参数则默认颜色<br>set_palette() 设置所有图的颜色</p>
<p>主要使用以下几个函数设置颜色：</p>
<h5><span id="color-palette-ji-yu-rgb-she-zhi-yan-se-de-jie-kou">color_palette() 基于RGB设置颜色的接口</span><a href="#color-palette-ji-yu-rgb-she-zhi-yan-se-de-jie-kou" class="header-anchor">#</a></h5><p> 能传入任何Matplotlib所有支持的颜色。基于RGB原理设置颜色的接口，可接收一个调色板对象作为参数，同时可以设置颜色数量</p>
<p>Returns:<br>palette : list of RGB tuples. 返回一个颜色三元组列表（默认是6个）</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">seaborn.color_palette(palette=<span class="literal">None</span>, n_colors=<span class="literal">None</span>, desat=<span class="literal">None</span>, as_cmap=<span class="literal">False</span>)</span><br><span class="line">Return a list of colors <span class="keyword">or</span> continuous colormap defining a palette.</span><br><span class="line"></span><br><span class="line">Possible palette values include:</span><br><span class="line">Name of a seaborn palette (deep, muted, bright, pastel, dark, colorblind)</span><br><span class="line"></span><br><span class="line">Name of matplotlib colormap</span><br><span class="line"></span><br><span class="line">‘husl’ <span class="keyword">or</span> ‘hsl’</span><br><span class="line"></span><br><span class="line">‘ch:&lt;cubehelix arguments&gt;’</span><br><span class="line"></span><br><span class="line">‘light:&lt;color&gt;’, ‘dark:&lt;color&gt;’, ‘blend:&lt;color&gt;,&lt;color&gt;’,</span><br><span class="line"></span><br><span class="line">A sequence of colors <span class="keyword">in</span> any format matplotlib accepts</span><br></pre></td></tr></tbody></table></figure>
<h5><span id="chang-jian-de-yan-se-ban">常见的颜色板</span><a href="#chang-jian-de-yan-se-ban" class="header-anchor">#</a></h5><div class="table-container">
<table>
<thead>
<tr>
<th>颜色组合名称(首字母大写)</th>
<th>调色显示</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>1.Accent</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705221558317.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>2.Accent_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705221700433.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>3.Blues</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705221906969.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>4.Blues_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705221930868.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>5.BrBG</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705221956955.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>6.BrBG_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705222053250.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><em>相信聪明的你们发现了颜色名称的某个规律 XXX_r 与 XXX 大多只是颜色顺序相反，故以下只显示 XXX</em></td>
<td></td>
</tr>
<tr>
<td><strong>7.BuGn</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705222450188.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>8.BuPu</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705222523230.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>9.CMRmap</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705222545523.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>10.Dark2</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705222706888.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>11.Dark2_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705222739608.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>12.GnBu</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705222816501.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>13.Greens</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705223538747.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>14.Greys</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705223715276.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>15.OrRd</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705223759570.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>16.Oranges</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705223840601.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>17.PRGn</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705223911555.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>18.Paired</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705223939745.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>19.Paired_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224011917.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>20.Pastel1</strong></td>
<td><img src="https://img-blog.csdnimg.cn/2020070522410197.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>21.Pastel1_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224133734.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>22.Pastel2</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224206318.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>23.Pastel2_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224252881.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>24.PiYG</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224320624.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>25.PuBu</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224348864.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>26.PuBuGn</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224418436.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>27.PuOr</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224447620.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>28.PuRd</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224518127.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>29.Purples</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224642465.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>30.RdBu</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224707150.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>31.RdYlBu</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224740421.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>32.RdYlGn</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224902910.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>33.Reds</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705224923484.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>34.Set1</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225047406.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>35.Set1_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225105357.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>36.Set2</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225142778.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>37.Set2_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225116145.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>38.Set3</strong></td>
<td><img src="https://img-blog.csdnimg.cn/2020070522513594.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>39.Set3_r</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225125876.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>40.Spectral</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225230345.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>41.Wistia</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225253431.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>42.YlGn</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225317456.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>43.YlGnBu</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225342903.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>44.YlOrBr</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225414861.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td><strong>45.YlOrRd</strong></td>
<td><img src="https://img-blog.csdnimg.cn/20200705225438445.png" alt="在这里插入图片描述"></td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>颜色组合名称(首字母小写)</th>
<th>调色板显示</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.afmhot</td>
<td><img src="https://img-blog.csdnimg.cn/20200705225833490.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>2.autumn</td>
<td><img src="https://img-blog.csdnimg.cn/20200705225923448.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>3.binary</td>
<td><img src="https://img-blog.csdnimg.cn/20200705225946512.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>4.bone</td>
<td><img src="https://img-blog.csdnimg.cn/20200711222858478.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>5.brg</td>
<td><img src="https://img-blog.csdnimg.cn/20200711222917515.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>6.bwr</td>
<td><img src="https://img-blog.csdnimg.cn/20200711222937493.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>7.cividis</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223007874.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>8.cool</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223026393.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>9.coolwarm</td>
<td><img src="https://img-blog.csdnimg.cn/2020071122305035.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>10.copper</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223107272.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>11.cubehelix</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223136492.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>12.flag</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223207310.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>13.gist_earth</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223248722.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>14.gist_gray</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223337835.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>15.gist_heat</td>
<td><img src="https://img-blog.csdnimg.cn/2020071122360377.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>16.gist_ncar</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223633135.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>17.gist_rainbow</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223650940.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>18.gist_stern</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223708961.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>19.gist_yarg</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223726672.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>20.gnuplot</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223742799.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>21.gnuplot2</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223751528.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>22.gray</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223807222.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>23.hot</td>
<td><img src="https://img-blog.csdnimg.cn/20200711223830254.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>24.hsv</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224238846.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>25.icefire</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224251307.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>26.inferno</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224310304.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>27.jet</td>
<td><code>ValueError: No.</code></td>
</tr>
<tr>
<td>28.magma</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224519925.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>29.mako</td>
<td><img src="https://img-blog.csdnimg.cn/2020071122453289.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>30.nipy_spectral</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224547445.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>31.ocean</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224600931.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>32.pink</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224611215.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>33.plasma</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224621593.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>34.prism</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224634866.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>35.rainbow</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224649463.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>36.rocket</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224700998.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>37.seismic</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224712787.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>38.spring</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224722695.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>39.summer</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224734854.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>40.1.tab10</td>
<td><img src="https://img-blog.csdnimg.cn/20200711224957282.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>40.2.tab10_r</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225029402.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>41.1.tab20</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225054379.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>41.2.tab20_r</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225125799.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>42.1.tab20c</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225136691.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>42.2.tab20c_r</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225201378.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>43.terrain</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225233217.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>44.twilight</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225246534.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>45.twilight_shifted</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225257688.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>46.viridis</td>
<td><img src="https://img-blog.csdnimg.cn/2020071122531496.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>47.vlag</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225326549.png" alt="在这里插入图片描述"></td>
</tr>
<tr>
<td>48.winter</td>
<td><img src="https://img-blog.csdnimg.cn/20200711225346625.png" alt="在这里插入图片描述"></td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">color_palette() 不写参数则默认颜色</span><br><span class="line"></span><br><span class="line">current_palette = sns.color_palette() </span><br><span class="line"></span><br><span class="line">sns.palplot(current_palette)</span><br><span class="line"></span><br><span class="line"> plt.show()</span><br><span class="line"></span><br><span class="line">set_palette() 设置所有图的颜色</span><br><span class="line"></span><br><span class="line">sns.palplot(sns.color_palette("hls",8))</span><br><span class="line"></span><br><span class="line"> plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h5><span id="hls-palette-ji-yu-hls">hls_palette 基于hls</span><a href="#hls-palette-ji-yu-hls" class="header-anchor">#</a></h5><h5><span id="yan-se-de-hue-se-xiang-luminance-liang-du-ji-saturation-bao-he-du">颜色的hue(色相),Luminance(亮度)及Saturation(饱和度)</span><a href="#yan-se-de-hue-se-xiang-luminance-liang-du-ji-saturation-bao-he-du" class="header-anchor">#</a></h5><p>l-光度 lightness<br>s-饱和 saturation</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">sns.palplot(sns.hls_palette(8,l=.7,s=.9)) </span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="xkcd-xuan-qu-yan-se">xkcd选取颜色</span><a href="#xkcd-xuan-qu-yan-se" class="header-anchor">#</a></h4><p>xkcd包含了一套众包努力的针对随机RGB色的命名。产生了954个可以随时通过xkcd_rgb字典中调用的命名颜色</p>
<p>plt.plot([0,1],[0,1],sns.xkcd_rgb[‘pale red’],lw = 3) #lw = 线宽度<br>plt.plot([0,1],[0,2],sns.xkcd_rgb[‘medium green’],lw = 3)<br>plt.plot([0,1],[0,3],sns.xkcd_rgb[‘denim blue’],lw = 3)<br>plt.show()</p>
<p><img src="https://img-blog.csdnimg.cn/20190216223007343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Ryb2tlX1pob3U=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h5><span id="se-xi-dui-bi">色系对比</span><a href="#se-xi-dui-bi" class="header-anchor">#</a></h5><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">plt.figure(figsize=(12,8))</span><br><span class="line"></span><br><span class="line">#默认</span><br><span class="line">plt.subplot(231)</span><br><span class="line">palette=sns.color_palette()</span><br><span class="line">sns.boxplot(data=data,palette=palette)</span><br><span class="line"></span><br><span class="line">#设置饱和度；l-亮度 lightness；s-饱和 saturation</span><br><span class="line">plt.subplot(232)</span><br><span class="line">palette=sns.hls_palette(6, l=.7, s=.9)</span><br><span class="line">sns.boxplot(data=data,palette=palette)</span><br><span class="line"></span><br><span class="line">#配对对比</span><br><span class="line">plt.subplot(233)</span><br><span class="line">palette=sns.color_palette("Paired",6)</span><br><span class="line">sns.boxplot(data=data,palette=palette)</span><br><span class="line"></span><br><span class="line">#使用xkcd颜色来命名颜色</span><br><span class="line">plt.subplot(234)</span><br><span class="line">colors = ["pale red","windows blue", "amber", "greyish", "faded green", "dusty purple"]</span><br><span class="line">palette=sns.xkcd_palette(colors)</span><br><span class="line">sns.boxplot(data=data,palette=palette)</span><br><span class="line"></span><br><span class="line">#渐变色</span><br><span class="line">plt.subplot(235)</span><br><span class="line">palette=sns.color_palette("Blues")#想要翻转渐变，可以在面板名称中添加一个_r后缀</span><br><span class="line">sns.boxplot(data=data,palette=palette)</span><br><span class="line"></span><br><span class="line">#色调线性变换</span><br><span class="line">plt.subplot(236)</span><br><span class="line">palette=sns.cubehelix_palette(6, start=.75, rot=-.75)</span><br><span class="line">sns.boxplot(data=data,palette=palette)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200701142050146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0FuZHlfc2hlbnps,size_16,color_FFFFFF,t_70" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Uwr86onk-1593584425956)(evernotecid://DD492144-9AFF-43C1-9BC0-5A625709FC62/appyinxiangcom/28357599/ENResource/p129)]"></p>
<h3><span id="step4-zi-ti">Step4 字体</span><a href="#step4-zi-ti" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">from matplotlib import rcParams</span><br><span class="line">font1 = {</span><br><span class="line">        'font.family':'serif',</span><br><span class="line">        'font.serif': 'Times New Roman',</span><br><span class="line">         'font.style': 'normal',</span><br><span class="line">         'font.size': 12,</span><br><span class="line">         }</span><br><span class="line">rcParams.update(font1)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">from matplotlib import rcParams</span><br><span class="line">font1 = {</span><br><span class="line">        'font.family':'serif',</span><br><span class="line">        'font.serif': 'Times New Roman',</span><br><span class="line">         'font.style': 'normal',</span><br><span class="line">         'font.size': 12,</span><br><span class="line">         }</span><br><span class="line">rcParams.update(font1)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="step5-an-ding-zhi-xu-qiu-tu">Step5 按定制需求图</span><a href="#step5-an-ding-zhi-xu-qiu-tu" class="header-anchor">#</a></h3><p>Seaborn 一共拥有 50 多个 API 类，相比于 Matplotlib 数千个的规模，可以算作是短小精悍了。其中，根据图形的适应场景，Seaborn 的绘图方法大致分类 6 类，分别是：关联图、类别图、分布图、回归图、矩阵图和组合图。而这 6 大类下面又包含不同数量的绘图函数。</p>
<h5><span id="guan-lian-tu-api-lei">关联图：API类</span><a href="#guan-lian-tu-api-lei" class="header-anchor">#</a></h5><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">关联性分析</th>
<th style="text-align:center">介绍</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">relplot</td>
<td style="text-align:center">绘制关系图</td>
</tr>
<tr>
<td style="text-align:center">scatterplot</td>
<td style="text-align:center">多维度分析散点图</td>
</tr>
<tr>
<td style="text-align:center">lineplot</td>
<td style="text-align:center">多维度分析线形图</td>
</tr>
</tbody>
</table>
</div>
<h5><span id="lei-bie-tu">类别图</span><a href="#lei-bie-tu" class="header-anchor">#</a></h5><ul>
<li>分类散点图：<a href="https://seaborn.pydata.org/generated/seaborn.stripplot.html"><code>stripplot()</code></a> (<code>kind="strip"</code>)<a href="https://seaborn.pydata.org/generated/seaborn.swarmplot.html"><code>swarmplot()</code></a> (<code>kind="swarm"</code>)</li>
<li>分类分布图：<a href="https://seaborn.pydata.org/generated/seaborn.boxplot.html"><code>boxplot()</code></a> (<code>kind="box"</code>)<a href="https://seaborn.pydata.org/generated/seaborn.violinplot.html"><code>violinplot()</code></a> (<code>kind="violin"</code>)<a href="https://seaborn.pydata.org/generated/seaborn.boxenplot.html"><code>boxenplot()</code></a> (<code>kind="boxen"</code>)</li>
<li>分类估计图：<a href="https://seaborn.pydata.org/generated/seaborn.pointplot.html"><code>pointplot()</code></a> (<code>kind="point"</code>)<a href="https://seaborn.pydata.org/generated/seaborn.barplot.html"><code>barplot()</code></a> (<code>kind="bar"</code>)<a href="https://seaborn.pydata.org/generated/seaborn.countplot.html"><code>countplot()</code></a> (<code>kind="count"</code>)</li>
</ul>
<p>seaborn作为一个库，里面包含了很多类，如PairGrid类。创造相应类的实例（传参)，就可以调用类里面的函数，参数，进行个性化设置。</p>
<ol>
<li><p>导入库 2. 创造类实例 3. 调用实例的参数和方法 4. show()</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">g = sns.FacetGrid(tips, col=<span class="string">"time"</span>)</span><br><span class="line"><span class="comment"># 创造了FaceGrid的实例。下面给出了FaceGrid的初始化方法。通过g可以调用类里面的函数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FacetGrid</span>(<span class="params">Grid</span>):</span></span><br><span class="line">    <span class="string">"""Multi-plot grid for plotting conditional relationships."""</span></span><br><span class="line"><span class="meta">    @_deprecate_positional_args</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">        self, data, *,</span></span></span><br><span class="line"><span class="function"><span class="params">        row=None, col=None, hue=None, col_wrap=None,</span></span></span><br><span class="line"><span class="function"><span class="params">        sharex=True, sharey=True, height=<span class="number">3</span>, aspect=<span class="number">1</span>, palette=None,</span></span></span><br><span class="line"><span class="function"><span class="params">        row_order=None, col_order=None, hue_order=None, hue_kws=None,</span></span></span><br><span class="line"><span class="function"><span class="params">        dropna=False, legend_out=True, despine=True,</span></span></span><br><span class="line"><span class="function"><span class="params">        margin_titles=False, xlim=None, ylim=None, subplot_kws=None,</span></span></span><br><span class="line"><span class="function"><span class="params">        gridspec_kws=None, size=None</span></span></span><br><span class="line"><span class="function"><span class="params">    </span>):</span></span><br></pre></td></tr></tbody></table></figure>
</li>
</ol>
<h4><span id="fen-bu-tu">分布图</span><a href="#fen-bu-tu" class="header-anchor">#</a></h4><p>   分布图主要是用于可视化变量的分布情况，一般分为单变量分布和多变量分布。当然这里的多变量多指二元变量，更多的变量无法绘制出直观的可视化图形。</p>
<p>   单变量分布</p>
<p>   <a href="https://seaborn.pydata.org/generated/seaborn.distplot.html"><code>distplot</code></a>，<a href="https://seaborn.pydata.org/generated/seaborn.kdeplot.html"><code>kdeplot</code></a></p>
<p>   多变量分布图</p>
<p>   <a href="https://seaborn.pydata.org/generated/seaborn.jointplot.html"><code>jointplot</code></a>，<a href="https://seaborn.pydata.org/generated/seaborn.pairplot.html"><code>pairplot</code></a></p>
<h5><span id="hui-gui-tu">回归图</span><a href="#hui-gui-tu" class="header-anchor">#</a></h5><p>   回归图的绘制函数主要有：<a href="https://seaborn.pydata.org/generated/seaborn.lmplot.html"><code>lmplot</code></a> 和 <a href="https://seaborn.pydata.org/generated/seaborn.regplot.html"><code>regplot</code></a>。</p>
<h5><span id="ju-zhen-tu">矩阵图</span><a href="#ju-zhen-tu" class="header-anchor">#</a></h5><p>   <a href="https://seaborn.pydata.org/generated/seaborn.heatmap.html"><code>heatmap</code></a> 和 <a href="https://seaborn.pydata.org/generated/seaborn.clustermap.html"><code>clustermap</code></a></p>
<p>   <a href="https://github.com/mwaskom/seaborn/tree/master/seaborn">官方文档</a></p>
<h4><span id="duo-hui-tu-wang-ge">多绘图网格</span><a href="#duo-hui-tu-wang-ge" class="header-anchor">#</a></h4><h2><span id="1-xiao-ping-mian-wang-ge">1.小平面网格</span><a href="#1-xiao-ping-mian-wang-ge" class="header-anchor">#</a></h2><p>1.1 FaceGrid</p>
<p>1.2 FacetGrid.map</p>
<p>1.3 FacetGrid.map_dataframe</p>
<h2><span id="2-pei-dui-wang-ge">2.配对网格</span><a href="#2-pei-dui-wang-ge" class="header-anchor">#</a></h2><p>2.1 PairGrid</p>
<p>2.2 PairGrid.map</p>
<p>2.3 PairGrid.map_diag</p>
<p>2.4 PairGrid.map_offdiag</p>
<p>2.5 PairGrid.map_lower</p>
<p>2.6 PairGrid.map_upper</p>
<h2><span id="3-lian-he-wang-ge">3.联合网格</span><a href="#3-lian-he-wang-ge" class="header-anchor">#</a></h2><p>3.1 JointGrid</p>
<p>3.2 JointGrid.plot</p>
<p>3.3 JointGrid.plot_joint</p>
<p>3.4 JointGrid.plot_marginals</p>
<h5><span id="pairgrid">PairGrid</span><a href="#pairgrid" class="header-anchor">#</a></h5><p>可绘制两种类型的图，一种是指定<strong>{x, y}_vars</strong>；另一类：x和y轴相同。可以调用方法进行绘图。</p>
<p><img src="/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BSeaborn/Users\ADMIN\Documents\Apowersoft\Apowersoft Online Screen Recorder\20201010_211035.gif" alt="20201010_211035"></p>
<p>二类：x,y轴相同</p>
<p><img src="/2020/10/11/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8BSeaborn/Users\ADMIN\Documents\Apowersoft\Apowersoft Online Screen Recorder\20201010_211219.gif" alt="20201010_211219"></p>
<h2><span id="zu-he-tu">组合图</span><a href="#zu-he-tu" class="header-anchor">#</a></h2><h2><span id="cuo-wu">错误</span><a href="#cuo-wu" class="header-anchor">#</a></h2><p>如果利用pairGrig，pairplot画回归图，似乎有的回归曲线加不上。其他的图没有问题</p>
<h2><span id="ke-yi-jiang-dan-ge-tu-zu-he">可以将单个图组合</span><a href="#ke-yi-jiang-dan-ge-tu-zu-he" class="header-anchor">#</a></h2><p>主要网格不行</p>
<p>支出ax参数的可以</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">fig, (ax1, ax2, ax3) = plt.subplots(1,3, figsize=(15,5))</span><br><span class="line">#我们在这里生成一个fig和三个axes，在下面绘图的时候只需要用ax参数来指定特定的axes就可以了</span><br><span class="line">sns.barplot(x='class', y='age', data=titanic, ax=ax1)</span><br><span class="line">sns.countplot(x='sex', data=titanic, ax=ax2)</span><br><span class="line">sns.distplot(titanic['age'], ax=ax3)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="hui-zong">汇总</span><a href="#hui-zong" class="header-anchor">#</a></h3><p><a href="http://seaborn.pydata.org/api.html#">http://seaborn.pydata.org/api.html#</a></p>
<p><a href="https://github.com/mwaskom/seaborn/blob/master/seaborn/rcmod.py">https://github.com/mwaskom/seaborn/blob/master/seaborn/rcmod.py</a></p>
<p><a href="https://xkcd.com/color/rgb/">https://xkcd.com/color/rgb/</a></p>
]]></content>
      <categories>
        <category>数据可视化</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>绘图</tag>
        <tag>Seaborn</tag>
      </tags>
  </entry>
  <entry>
    <title>Social-and-Economic-Data-Set</title>
    <url>/2020/10/04/Social-and-Economic-Data-Set/</url>
    <content><![CDATA[<p>经济学数据</p>
<a id="more"></a>
<h1><span id="tong-ji-nian-jian">统计年鉴</span><a href="#tong-ji-nian-jian" class="header-anchor">#</a></h1><p>知网：<a href="https://data.cnki.net/Yearbook/Navi?type=type&amp;code=A">中国经济社会大数据研究平台</a></p>
<p>统计局：<a href="http://www.stats.gov.cn/tjsj/">国家统计局</a></p>
<h1><span id="di-tu">地图</span><a href="#di-tu" class="header-anchor">#</a></h1><ul>
<li>全国基础地理数据库：<a href="http://www.webmap.cn/">http://www.webmap.cn</a></li>
</ul>
<h1><span id="xing-zheng-qu">行政区</span><a href="#xing-zheng-qu" class="header-anchor">#</a></h1><h2><span id="xing-zheng-qu-hua-fen">行政区划分</span><a href="#xing-zheng-qu-hua-fen" class="header-anchor">#</a></h2><p>民政部发布的行政区划代码： <a href="http://www.mca.gov.cn/article/sj/xzqh/">http://www.mca.gov.cn/article/sj/xzqh/</a></p>
<p>统计用区划代码和城乡划分代码编制规则 <a href="http://www.stats.gov.cn/tjsj/tjbz/200911/t20091125_8667.html">http://www.stats.gov.cn/tjsj/tjbz/200911/t20091125_8667.html</a></p>
<p><a href="http://lbsyun.baidu.com/index.php?title=open/dev-res">http://lbsyun.baidu.com/index.php?title=open/dev-res</a></p>
<p><strong>国民经济和社会发展统计公报</strong></p>
<p><a href="https://www.cnstats.org/tjgb/201605/gddws-2015-qdc.html">中国统计信息网</a></p>
]]></content>
      <categories>
        <category>economy</category>
      </categories>
      <tags>
        <tag>economy</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习-k近邻法</title>
    <url>/2020/09/29/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-k%E8%BF%91%E9%82%BB%E6%B3%95/</url>
    <content><![CDATA[<p>K近邻(k-nearest neighbor, KNN)是一种基于相似的算法，既适用于分类也适用于回归，是属于监督学习算法。</p>
<p>KDD is a simple but most used algorithm in classification which belongs to supervised learning</p>
<a id="more"></a>
<h1><span id="k-jin-lin-fa-de-jiang-jie">k近邻发的讲解</span><a href="#k-jin-lin-fa-de-jiang-jie" class="header-anchor">#</a></h1><p>一句话就是：物以类聚，人以群分。</p>
<p>假定有一个带标签的测试集，基于某种距离度量，然后找到每个训练集与其最靠近的k个训练样本，并在基于此k个‘邻居’的信息来预测。</p>
<h2><span id="you-dian">优点</span><a href="#you-dian" class="header-anchor">#</a></h2><ol>
<li>思想简单，易于实现，无需估计参数，无需训练</li>
<li>适合对稀有事物进行分类</li>
<li>适合多分类</li>
</ol>
<h2><span id="que-dian">缺点</span><a href="#que-dian" class="header-anchor">#</a></h2><ol>
<li>内存开销大，因为要计算每个样本的距离</li>
<li>如果样本不平衡，如果每个样本异常，容易造成分类效果差</li>
<li>解释性差</li>
</ol>
<h1><span id="k-jin-lin-mo-xing">k近邻模型</span><a href="#k-jin-lin-mo-xing" class="header-anchor">#</a></h1><h2><span id="mo-xing">模型</span><a href="#mo-xing" class="header-anchor">#</a></h2><p>确定训练集</p>
<p>距离度量</p>
<p>k值</p>
<p>分类决策规则</p>
<h2><span id="ju-chi-du-liang">距离度量</span><a href="#ju-chi-du-liang" class="header-anchor">#</a></h2><p>研究的是特征空间($R^n$)，$x_i,x_j$的$L_p$距离定义为</p>
<script type="math/tex; mode=display">
L_p(x_i,x_j) = (\sum_{l = 1}^n|x_i^{(l)}-x_j^{(l)}|^p)^\frac{1}{p}</script><p>欧式距离</p>
<script type="math/tex; mode=display">
L_2(x_i,x_j) = (\sum_{l=1}^n|x_i^{(l)}-x_j^{(l)}|^2)^{\frac{1}{2}}</script><p>曼哈顿距离</p>
<script type="math/tex; mode=display">
L_1(x_i,x_j) = (\sum_{l=1}^n|x_i^{(l)}-x_j^{(l)}|)</script><p>切比雪夫距离</p>
<script type="math/tex; mode=display">
L_1(x_i,x_j) = max(|x_i^{(l)}-x_j^{(l)}|)</script><h2><span id="k-zhi-de-xuan-ze">k值的选择</span><a href="#k-zhi-de-xuan-ze" class="header-anchor">#</a></h2><p>k太小，容易过拟合</p>
<p>k太大，容易欠拟合</p>
<h1><span id="kd-shu">KD树</span><a href="#kd-shu" class="header-anchor">#</a></h1><p>KD树是一种二叉树，其中每个节点都是一个k维数值点，每个节点都表示一个与当前划分维度的坐标轴垂直的超平面。</p>
<p><img src="/2020/09/29/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-k%E8%BF%91%E9%82%BB%E6%B3%95/MyBlog\MyBlog\hexo\source\_posts\机器学习-k近邻法\image-20200929203239695.png" alt="image-20200929203239695"></p>
<ol>
<li>根节点。取中位数。</li>
<li>然后在划分</li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20190421162333605.png#pic_center" alt="在这里插入图片描述"></p>
<p><strong>kd树的最近邻搜索算法：</strong></p>
<ol>
<li>从根节点出发，递归的向下访问kd树，若目标点x x<em>x</em>当前维的坐标小于切分点的坐标，则向左子树移动，否则向右子树移动。直到子结点为叶结点为止。</li>
<li>以此叶结点为“当前最近点”，此时以目标点为圆心（球心），目标点到此叶结点距离为半径，能够得到一个圆（球体）。</li>
<li>从叶结点向上回退到该叶节点的父节点：<br>（a）计算目标点和父节点的距离，如果距离目标点更近，则以该父节点为“当前最近点”，距离为“当前最近距离”。<br>（b）检查该父结点是否在（2）中的球体内（检查的方法见下面例子中红色字体），如若不在球内，则说明该父节点的另外一边子树区域不可能存在比当前点距离目标点更近的点，继续向上回退，继续判断。<br>如若在球内，则说明该父结点另外子树对应的区域中可能存在距离目标点更近的点，则执行以该结点的兄弟结点（比如该结点为左节点，则兄弟为右结点）为根节点再次执行最近邻搜索算法 <strong>敲黑板：</strong> 这个红字部分是很多自称熟悉了kd树算法的人都会搞错的一个细节，李航的书中只说了 “递归的执行最近邻搜索” 这么一句话，但是可能很难深入理解到我上面说的。</li>
<li>当回退到根节点时，搜索结束。</li>
</ol>
<p>划分了区域，检查父结点的分支的区域是否有更近的结点。</p>
<p>先到叶子结点。计算当前的最小距离。然后反向回溯。判断是否跳到另外一个空间去搜索。（当前最小距离）</p>
<p>圆心：节点。然后计算距离，是否搜索节点的另外一个空间。如果要，需要加入新的搜索路径。</p>
<h2><span id="sou-suo">搜索</span><a href="#sou-suo" class="header-anchor">#</a></h2><p>找到当前最近邻</p>
<p>然后回溯</p>
<p>检测：更新‘当前最近’</p>
<p>回溯</p>
<p>检查：</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>k近邻法</tag>
        <tag>分类</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之Excel</title>
    <url>/2020/09/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel/</url>
    <content><![CDATA[<p>此篇Blog本着详细总结关于利用Excel这一工具处理，分析小规模数据集的相关内容。下面将从五个篇章展开，分别是基础篇、数据清洗篇、统计函数篇、关联匹配类篇、数据分析篇、数据可视化篇</p>
<p><img src="/2020/09/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel/Excel工具进行数据分析-提纲.svg" alt></p>
<a id="more"></a>
<h1><span id="xue-xi-zi-liao">学习资料</span><a href="#xue-xi-zi-liao" class="header-anchor">#</a></h1><p><a href="https://www.zhihu.com/question/26069349/answer/1885394078">https://www.zhihu.com/question/26069349/answer/1885394078</a></p>
<h1><span id="ji-chu-pian">基础篇</span><a href="#ji-chu-pian" class="header-anchor">#</a></h1><h2><span id="zi-ti-he-zi-hao">字体和字号</span><a href="#zi-ti-he-zi-hao" class="header-anchor">#</a></h2><h3><span id="zi-ti">字体</span><a href="#zi-ti" class="header-anchor">#</a></h3><p>如果是word,中文：宋体；英文：新罗马字体</p>
<p>如果是PPT，就要按场景更换了</p>
<h3><span id="zi-hao">字号</span><a href="#zi-hao" class="header-anchor">#</a></h3><p><strong>汉字：号数制。</strong>汉字大小定为七个号数等级——按，1号、2号、3号、4号、5号、6号、7号由大至小排列。在字号等级之间又增加一些字号，并取名为“小几号字”，如“小4号””、“小5号”等等。</p>
<p><strong>国际：点数制。</strong>国际上最通行的印刷字体的计量方法，“点”是国际上计量字体大小的基本单位，从英文“Point’，译音而来，一般用小写‘p’来表示，俗称“磅”。磅值(pt)</p>
<p>两者的对于关系：</p>
<ol>
<li><p>字号‘八号’对应磅值5</p>
</li>
<li><p>字号‘七号’对应磅值5.5</p>
</li>
<li><p>字号‘小六’对应磅值6.5</p>
</li>
<li><p>字号‘六号’对应磅值7.5</p>
</li>
<li><p>字号‘小五’对应磅值9</p>
</li>
<li><p>字号‘五号’对应磅值10.5</p>
</li>
<li><p>字号‘小四’对应磅值12</p>
</li>
<li><p>字号‘四号’对应磅值14</p>
</li>
<li><p>字号‘小三’对应磅值15</p>
</li>
<li><p>字号‘三号’对应磅值16</p>
</li>
<li><p>字号‘小二’对应磅值18</p>
</li>
<li><p>字号‘二号’对应磅值22</p>
</li>
<li><p>字号‘小一’对应磅值24</p>
</li>
<li><p>字号‘一号’对应磅值26</p>
</li>
<li><p>字号‘小初’对应磅值36</p>
</li>
<li><p>字号‘初号’对应磅值42</p>
</li>
</ol>
<h2><span id="jian-ju">间距</span><a href="#jian-ju" class="header-anchor">#</a></h2><p>行间距</p>
<p>标题，段前段后</p>
<h2><span id="yin-yong">引用</span><a href="#yin-yong" class="header-anchor">#</a></h2><p>绝对引用和相对引用。绝对引用$</p>
<h1><span id="shu-ju-qing-xi-pian">数据清洗篇</span><a href="#shu-ju-qing-xi-pian" class="header-anchor">#</a></h1><p>在数据清洗的过程中，涉及的操作可能有：字符串含空格；提取字符；时间格式设置；标准化；</p>
<p><strong>数据去重</strong></p>
<p><strong>数据缺失值</strong></p>
<p><strong>异常值</strong></p>
<p><strong>噪音处理</strong></p>
<p>噪音，是被测量变量的随机误差或方差。我们在上文中提到过异常点（离群点），那么离群点和噪音是不是一回事呢？我们知道，观测量(Measurement) = 真实数据(True Data) + 噪声 (Noise)。离群点(Outlier)属于观测量，既有可能是真实数据产生的，也有可能是噪声带来的，但是总的来说是和大部分观测量之间有明显不同的观测值。</p>
<p><img src="/2020/09/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel/清洗处理类.svg" alt="清洗处理类"></p>
<h1><span id="tong-ji-han-shu-pian">统计函数篇</span><a href="#tong-ji-han-shu-pian" class="header-anchor">#</a></h1><p>统计类函数</p>
<h1><span id="guan-lian-pi-pei-lei-pian">关联匹配类篇</span><a href="#guan-lian-pi-pei-lei-pian" class="header-anchor">#</a></h1><p><img src="/2020/09/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BExcel/关联匹配类.png" alt="关联匹配类"></p>
<h1><span id="shu-ju-fen-xi-pian">数据分析篇</span><a href="#shu-ju-fen-xi-pian" class="header-anchor">#</a></h1><p>数据透析表</p>
<p>分类汇总</p>
<h1><span id="shu-ju-ke-shi-hua-pian">数据可视化篇</span><a href="#shu-ju-ke-shi-hua-pian" class="header-anchor">#</a></h1><p><a href="https://zhuanlan.zhihu.com/p/110389312">https://zhuanlan.zhihu.com/p/110389312</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/97316717">https://zhuanlan.zhihu.com/p/97316717</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/74625617">https://zhuanlan.zhihu.com/p/74625617</a></p>
<h1><span id="ji-chu-xue-xi">基础学习</span><a href="#ji-chu-xue-xi" class="header-anchor">#</a></h1><p><a href="https://www.bilibili.com/video/BV1yJ411s7wS?p=3&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV1yJ411s7wS?p=3&amp;spm_id_from=pageDriver</a></p>
<h2><span id="day1">day1</span><a href="#day1" class="header-anchor">#</a></h2><ol>
<li><p>excel的基本概念</p>
</li>
<li><p>excel行列</p>
<p>行列交换（shift,选中，边缘线，四个箭头)</p>
</li>
</ol>
<ol>
<li><p>表格（鼠标移动到单元格边缘线，出现四个箭头，双击，（上下，左右）找边界线。</p>
</li>
<li><p>填充</p>
<p> ctrl:拖拽</p>
<p>鼠标右键+左键</p>
<p>填充方式（日期）</p>
<p>编辑自定义列表：文件-&gt;选项-&gt;高级（自定义选项） 自定义序列</p>
</li>
</ol>
<h2><span id="day-2">day 2</span><a href="#day-2" class="header-anchor">#</a></h2><p>文本，常规</p>
<p>单元格格式（斜线）</p>
<p>数据格式（日期：周，日，）</p>
<p><strong>单元格格式</strong></p>
<p>表格边框线:灰色是没有的</p>
<p>合并</p>
<p>alt:空格内部换行+回车</p>
<p>表格斜线：单元格格式画斜线+然后换行，对齐，加空格</p>
<p>​                三条线：只能自己画插入形状</p>
<p>格式刷</p>
<p><strong>数据格式设置</strong></p>
<p>​         数值依然是数据，不管显示格式是什么，本质就是数值。</p>
<p>​            日期格式：mmm(月份英文简写) mmmm(月份大写) d dd ddd dddd </p>
<p>​          aaa(一，二) aaaa(中文星期)  （星期）</p>
<p>​         显示和编辑栏是不同的，自定义格式（灵活）</p>
<p>​       文本类型不同：文本不能和其他格式不能通过单元格格式进行修改，文本不能转数字</p>
<pre><code>             1. 选择*1 进行转换
</code></pre><p>数据导入和导出（csv,txt)</p>
<p><strong>分列工具（文本日期) 常规+日期</strong></p>
<p>文本日期：转日期格式（通过分列）</p>
<h2><span id="day-3">day 3</span><a href="#day-3" class="header-anchor">#</a></h2><p>查找和替换</p>
<p>​    格式（颜色，匹配）</p>
<p>​    通配符: * 多个 ？一个</p>
<p>​    ~*：转义字符</p>
<p>​    Ctrl +F</p>
<p>  Ctrl+H</p>
<p>定位工具</p>
<ol>
<li><p>单元格选中</p>
<p>：</p>
<p>900:900</p>
<p>A100:B200</p>
<p>常用区域（去名字）</p>
</li>
<li><p>填充</p>
<ol>
<li>定位空格（按条件填充）合并单元格</li>
<li>定位</li>
<li>ctrl+回车（填充）</li>
</ol>
</li>
</ol>
<h2><span id="day-4">day 4</span><a href="#day-4" class="header-anchor">#</a></h2><p>a. 分类汇总</p>
<p>​    先排序</p>
<p>b.多级分类汇总（原来的基础再进行分类汇总）</p>
<p>c.复制结果</p>
<p>​    定位可见单元格</p>
<p>d. 利用分类汇总，合并相同单元格</p>
<p> ALT+;</p>
<p>e. 数据验证</p>
<p>一、    分类汇总工具        </p>
<pre><code>1、认识分类汇总        

2、使用分类汇总前先排序        

3、分类汇总的嵌套        

4、复制分类汇总的结果区域        

5、使用分类汇总批量合并内容相同的单元格        
</code></pre><p>二、    设置数据有效性        </p>
<pre><code>1、设置整数数据有效性        

2、设置文本长度数据有效性        

3、设置序列数据有效性        

4、数据有效性的其他设置        
    a、输入法切换    
    b、单元格信息    
    c、单元格信息保护    
</code></pre><h2><span id="day-5-hui-zong">day 5 汇总</span><a href="#day-5-hui-zong" class="header-anchor">#</a></h2><p>数据透视表</p>
<p>字段</p>
<p>经典模式</p>
<p>组合(字段过多了)</p>
<p>多个列</p>
<p>计算字段：项目合集</p>
<p>数据透视表    </p>
<p>1、创建数据透视表    </p>
<p>2、更改数据透视表汇总方式    </p>
<p>3、数据透视表中的组合    </p>
<p>4、汇总多列数据    </p>
<p>5、在透视表中使用计算    </p>
<p>6、利用筛选字段自动创建工作表    </p>
<h2><span id="day-6-yun-suan">day 6 运算</span><a href="#day-6-yun-suan" class="header-anchor">#</a></h2><p>文本连接 &amp;</p>
<p>1、运算符<br>    算术运算符+ - * / % &amp; ^<br>    比较运算符= &gt; &lt; &gt;= &lt;= &lt;&gt;    </p>
<p>2、公式中的比较判断<br>    比较运算符的结果：TRUE  FALSE    </p>
<p>3、运算符优先级<br>－        负号<br>%        百分比<br>^        求幂</p>
<ul>
<li>/        乘和除</li>
</ul>
<ul>
<li><ul>
<li><p>加和减<br>&amp;        文本连接<br>=,&lt;,&gt;,&lt;=,&gt;=,&lt;&gt;        比较</p>
<p>​    </p>
</li>
</ul>
</li>
</ul>
<p>4、单元格引用<br>    相对引用：A1<br>    绝对引用：$A$1<br>    混合引用：$A1   A$1    </p>
<h2><span id="day-7-pi-pei-cha-xun-han-shu-zhao-shui-zai-na-li-zhao-zhao-shi-me-xin-xi-pi-pei-if-count-sum-average-std">day 7 匹配 查询函数（找谁，在哪里找，找什么信息，匹配) if count ,sum ,average, std</span><a href="#day-7-pi-pei-cha-xun-han-shu-zhao-shui-zai-na-li-zhao-zhao-shi-me-xin-xi-pi-pei-if-count-sum-average-std" class="header-anchor">#</a></h2><p>注意：被查找对象一定是第二参数（选择区域）的第一列，默认，在里面匹配，然后返回信息。</p>
<p>一、    使用Vlookup函数                    </p>
<pre><code>1、Vlookup函数语法                    
    VLOOKUP(lookup_value,table_array,col_index_num,[range_lookup])    
    查找函数

2、vlookup中使用通配符        
A2&amp;“*”:通配符

3、vlookup模糊查找        
第四参数（1,）：返回临界更近更小的
除了数值区间，一般都是精确

4、使用isna函数处理数字格式引起的错误
&amp;“”变成文本
文本*1；文本+1：变成数值
    第一个参数可以修改啊        
isna()判断函数的计算结果，如果没有结果，
if(isna(),正确语句，错误语句)结合函数vlookup

5、Hlookup函数                    
</code></pre><p>​                        </p>
<p>summary:文本、数值转化；if(,,),函数，isna(), &amp; “”</p>
<h2><span id="day-8-pi-pei-suo-yin-index-match">day 8 匹配 索引 index match</span><a href="#day-8-pi-pei-suo-yin-index-match" class="header-anchor">#</a></h2><p>选区（两列）</p>
<p>match(A2,找的A2,0|1) 定位位置（哪一行） 查找（查找什么，在哪里查找，怎么查）</p>
<p>index(在哪里拿，低几个) 拿去（拿什么，在哪里）</p>
<p>index(取那一列，mathch(查什么，在那一列找，1|0))</p>
<p>vlookup也可以第三个参数（match，</p>
<h2><span id="day9-tu-biao">day9 图表</span><a href="#day9-tu-biao" class="header-anchor">#</a></h2><p>就是类型，属性设置</p>
<h2><span id="day10-yi-biao-ban">day10 仪表板</span><a href="#day10-yi-biao-ban" class="header-anchor">#</a></h2><p>切片器</p>
<p>打印</p>
<p>赋值</p>
<p>颜色</p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析-七周</title>
    <url>/2020/09/24/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E4%B8%83%E5%91%A8/</url>
    <content><![CDATA[<p>以业务为核心目的的数据分析。</p>
<a id="more"></a>
<p>数据分析： 数据+统计分析+洞察/洞见（商业价值)</p>
<p>路径：数据清洗+数据探索+数据分析+结果检验+数据可视化</p>
<h1><span id="shu-ju-fen-xi-di-yi-zhou">数据分析-第一周</span><a href="#shu-ju-fen-xi-di-yi-zhou" class="header-anchor">#</a></h1><h2><span id="step1-ming-que-mu-de">Step1: 明确目的</span><a href="#step1-ming-que-mu-de" class="header-anchor">#</a></h2><h2><span id="step2-guan-cha-shu-ju">Step2: 观察数据</span><a href="#step2-guan-cha-shu-ju" class="header-anchor">#</a></h2><h3><span id="shu-ju-you-wu-que-shi-zhi"><strong>数据有无缺失值</strong></span><a href="#shu-ju-you-wu-que-shi-zhi" class="header-anchor">#</a></h3><h3><span id="shu-ju-shi-fou-yi-zhi-hua"><strong>数据是否一致化</strong></span><a href="#shu-ju-shi-fou-yi-zhi-hua" class="header-anchor">#</a></h3><h3><span id="shu-ju-shi-fou-you-zang-shu-ju"><strong>数据是否有脏数据</strong></span><a href="#shu-ju-shi-fou-you-zang-shu-ju" class="header-anchor">#</a></h3><p>乱码，错位，重复值，未匹配数据，加密数据等。能影响到分析的都算脏数据，没有一致化也可以算。</p>
<h3><span id="shu-ju-biao-zhun-jie-gou">数据标准结构</span><a href="#shu-ju-biao-zhun-jie-gou" class="header-anchor">#</a></h3><h2><span id="step-3-shu-ju-qing-xi">Step 3: 数据清洗</span><a href="#step-3-shu-ju-qing-xi" class="header-anchor">#</a></h2><p><img src="/2020/09/24/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-%E4%B8%83%E5%91%A8/MyBlog\MyBlog\hexo\source\_posts\数据分析-七周\Excwel.png" alt></p>
<p>百度一些你就知道</p>
<h3><span id="qing-xi-chu-li-lei">清洗处理类</span><a href="#qing-xi-chu-li-lei" class="header-anchor">#</a></h3><h1><span id="shu-ju-fen-xi-si-wei">数据分析思维</span><a href="#shu-ju-fen-xi-si-wei" class="header-anchor">#</a></h1>]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>科研之分析方法论</title>
    <url>/2020/09/16/%E7%A7%91%E7%A0%94%E4%B9%8B%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95%E8%AE%BA/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="47d61b7c0fdd35807f27a7ac0ae2c0d44673ab80856a52c81165b432277cefd5"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>科研</tag>
      </tags>
  </entry>
  <entry>
    <title>计量经济学</title>
    <url>/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/</url>
    <content><![CDATA[<p>就是呈现一些关于计量经济学的相关实践方法</p>
<a id="more"></a>
<h1><span id="gai-nian">概念</span><a href="#gai-nian" class="header-anchor">#</a></h1><ol>
<li><p>标准误差</p>
<p>标准误STANDARD ERRORS</p>
<p>调整方差：稳健标准误（“Robust” standard errors）把误差项聚类了。</p>
<pre><code>1. 异方差~（T)
 2. 聚类~(at level)
</code></pre><p>Robust standard errors in parentheses</p>
</li>
<li><p>固定效应</p>
<ol>
<li><p>非常重要</p>
</li>
<li><p>时间和个人，城市上固定效应，控制不可观测因素的影响</p>
</li>
</ol>
</li>
</ol>
<h1><span id="ji-liang-jing-ji-xue">计量经济学</span><a href="#ji-liang-jing-ji-xue" class="header-anchor">#</a></h1><p>计量经济学的模型估计的含义，不是确定的值，而是随机变量，反映了平均影响（期望)。还有随机误差项和普通方程的区别</p>
<p>面板模型bai引入固定时间效应stata操作方法：<br>xi: xtreg y x1 x2 x3 i.year,fe 双向固定du效应，既可以控制年度效zhi应，又可以用固dao定效应消除部分内生性<br>xi: xtreg y x1 x2 x3 i.year LSDV法 就是虚拟变量最小二乘回归<br>另外，建议用聚类稳健标准差,这是解决异方差的良药<br>xi: xtreg y x1 x2 x3 i.year,fe vce(cluster.个体变量)<br>xi: xtreg y x1 x2 x3 i.year ，vce(cluster.个体变量)</p>
<p><a href="https://www.jianshu.com/p/baef9e9bc75d">https://www.jianshu.com/p/baef9e9bc75d</a></p>
<p><a href="https://wenku.baidu.com/view/6cd81d7be518964bcf847c75.html">https://wenku.baidu.com/view/6cd81d7be518964bcf847c75.html</a></p>
<p><a href="https://www.stata.com/manuals13/xtxtreg.pdf">https://www.stata.com/manuals13/xtxtreg.pdf</a></p>
<p><a href="https://stata-club.github.io/stata_article/2017-06-02.html">https://stata-club.github.io/stata_article/2017-06-02.html</a></p>
<h1><span id="san-da-mo-xing">三大模型</span><a href="#san-da-mo-xing" class="header-anchor">#</a></h1><p>固定效应模型，随机效应模型和混合效应模型</p>
<h2><span id="hun-he-gu-ji-mo-xing">混合估计模型</span><a href="#hun-he-gu-ji-mo-xing" class="header-anchor">#</a></h2><p>reg cp ip</p>
<h2><span id="gu-ding-xiao-ying-mo-xing">固定效应模型</span><a href="#gu-ding-xiao-ying-mo-xing" class="header-anchor">#</a></h2><p>个体，时间，时间和个体</p>
<h2><span id="sui-ji-xiao-ying-mo-xing">随机效应模型</span><a href="#sui-ji-xiao-ying-mo-xing" class="header-anchor">#</a></h2><p>tsset id year<br>xtreg cp ip,re</p>
<p>五、针对固定效应和随机效应模型选择主要根据Hausman检验结果判定：　　　<br>xtreg cp ip, fe<br>est store FE<br>xtreg cp ip, re<br>est store RE<br>hausman FE RE　由于原假设是随机效应和固定效应无差异，如果拒绝原假设，则采用固定效应模型，否则随机效应模型。</p>
<p><a href="http://www.jeepxie.net/article/928076.html">http://www.jeepxie.net/article/928076.html</a></p>
<p>Three econometric models—a pooled model, a fixed-effect<br>8 model, and a random-effect model  </p>
<p>方差分析主要有三种模型：即固定效应模型（fixed effects model），随机效应模型（random effects model），混合效应模型（mixed effects model）。</p>
<p>所谓的固定、随机、混合，主要是针对分组变量而言的。</p>
<p>固定效应模型，表示你打算比较的就是你现在选中的这几组。例如，我想比较3种药物的疗效，我的目的就是为了比较这三种药的差别，不想往外推广。这三种药不是从很多种药中抽样出来的，不想推广到其他的药物，结论仅限于这三种药。“固定”的含义正在于此，这三种药是固定的，不是随机选择的。</p>
<p>随机效应模型，表示你打算比较的不仅是你的设计中的这几组，而是想通过对这几组的比较，推广到他们所能代表的总体中去。例如，你想知道是否名牌大学的就业率高于普通大学，你选择了北大、清华、北京工商大学、北京科技大学4所学校进行比较，你的目的不是为了比较这4所学校之间的就业率差异，而是为了说明他们所代表的名牌和普通大学之间的差异。你的结论不会仅限于这4所大学，而是要推广到名牌和普通这样的一个更广泛的范围。“随机”的含义就在于此，这4所学校是从名牌和普通大学中随机挑选出来的。混合效应模型就比较好理解了，就是既有固定的因素，也有随机的因素。</p>
<p>一般来说，只有固定效应模型，才有必要进行两两比较，随机效应模型没有必要进行两两比较，因为研究的目的不是为了比较随机选中的这些组别。</p>
<p>固定效应和随机效应的选择是大家做面板数据常常要遇到的问题，一个常见的方法是做huasman检验，即先估计一个随机效应，然后做检验，如果拒绝零假设，则可以使用固定效应，反之如果接受零假设，则使用随机效应。但这种方法往往得到事与愿违的结果。另一个想法是在建立模型前根据数据性质确定使用那种模型，比如数据是从总体中抽样得到的，则可以使用随机效应，比如从N个家庭中抽出了M个样本，则由于存在随机抽样，则建议使用随机效应，反之如果数据是总体数据，比如31个省市的Gdp，则不存在随机抽样问题，可以使用固定效应。同时，从估计自由度角度看，由于固定效应模型要估计每个截面的参数，因此随机效应比固定效应有较大的自由度.</p>
<p>固定效应模型<br>　　固定效应模型（fixed effects model）的应用前提是假定全部研究结果的方向与效应大小基本相同，即各独立研究的结果趋于一致，一致性检验差异无显著性。因此固定效应模型适用于各独立研究间无差异，或差异较小的研究。<br>　　固定效应模型是指实验结果只想比较每一自变项之特定类目或类别间的差异及其与其他自变项之特定类目或类别间交互作用效果，而不想依此推论到同一自变项未包含在内的其他类目或类别的实验设计。例如：研究者想知道教师的认知类型在不同教学方法情境中，对儿童学习数学的效果有何不同，其中教师和学生的认知类型，均指场地依赖型和场地独立型，而不同的教学方法，则指启发式、讲演式、编序式。当实验结束时，研究者仅就两种类型间的交互作用效果及类型间的差异进行说明，而未推论到其他认知类型，或第四种教学方法。象此种实验研究模式，即称为固定效果模式。与本词相对者是随机效应模型（random effect model）、混合效应模型（mixed effect model）。</p>
<p>随机效应模型 random effects models<br>　　随机效应模型(random effects models)是经典的线性模型的一种推广，就是把原来（固定）的回归系数看作是随机变量，一般都是假设是来自正态分布。如果模型里一部分系数是随机的，另外一些是固定的，一般就叫做混合模型（mixed models）。<br>　　虽然定义很简单，对线性混合模型的研究与应用也已经比较成熟了，但是如果从不同的侧面来看，可以把很多的统计思想方法综合联系起来。概括地来说，这个模型是频率派和贝叶斯模型的结合，是经典的参数统计到高维数据分析的先驱，是拟合具有一定相关结构的观测的典型工具。<br>　　随机效应最直观的用处就是把固定效应推广到随机效应。注意，这时随机效应是一个群体概念，代表了一个分布的信息 or 特征，而对固定效应而言，我们所做的推断仅限于那几个固定的（未知的）参数。例如，如果要研究一些水稻的品种是否与产量有影响，如果用于分析的品种是从一个很大的品种集合里随机选取的，那么这时用随机效应模型分析就可以推断所有品种构成的整体的一些信息。这里，就体现了经典的频率派的思想-任何样本都来源于一个无限的群体(population)。<br>同时，引入随机效应就可以使个体观测之间就有一定的相关性，所以就可以用来拟合非独立观测的数据。经典的就有重复观测的数据，多时间点的记录等等，很多时候就叫做纵向数据(longitudinal data)，已经成为很大的一个统计分支。</p>
<p>随机效应模型(random effects models)，简称REM，是经典的线性模型的一种推广，就是把原来（<a href="https://baike.baidu.com/item/固定效应模型/628635">固定效应模型</a>）的回归系数看作是随机变量，一般都是假设是来自正态分布。如果模型里一部分系数是随机的，另外一些是固定的，一般就叫做<a href="https://baike.baidu.com/item/混合模型/6048939">混合模型</a>（mixed models）</p>
<h2><span id="xtref">xtref</span><a href="#xtref" class="header-anchor">#</a></h2><h2><span id="reg">reg</span><a href="#reg" class="header-anchor">#</a></h2><h2><span id="gu-ding-xiao-ying-hui-gui">固定效应回归</span><a href="#gu-ding-xiao-ying-hui-gui" class="header-anchor">#</a></h2><p>实际上是个体效应</p>
<p>如果要时间效应，效应自己添加时间固定效应</p>
<p><img src="file:///C:\Users\ADMIN\AppData\Roaming\Tencent\Users\2323020965\QQ\WinTemp\RichOle\%RD8D0A3HLYAMXPV831`S}X.png" alt="img"></p>
<p> 最后一个可以添加很多个虚拟变量</p>
<h1><span id="stata-mian-ban-shu-ju-mo-xing-jin-xing-hausman-jian-yan"><strong>STATA面板数据模型进行Hausman检验</strong></span><a href="#stata-mian-ban-shu-ju-mo-xing-jin-xing-hausman-jian-yan" class="header-anchor">#</a></h1><h2><span id="shi-jian-gu-ding-xiao-ying-he-ge-ti-xiao-ying-mo-xing-he-sui-ji-xiao-ying-mo-xing">时间固定效应和个体效应模型和随机效应模型</span><a href="#shi-jian-gu-ding-xiao-ying-he-ge-ti-xiao-ying-mo-xing-he-sui-ji-xiao-ying-mo-xing" class="header-anchor">#</a></h2><p>二、固定效应模型<br>1.个体固定效应模型：<br> tsset id year　　　　<br> xtreg Y X, fe 或者xtreg Y X , fe i(id)　　　　<br> 针对个体固定效应（H0：不存在个体固定效应）的F检验自动生成，如果p&lt;=10%则应该选择个体固定效应。　　<br>2.时刻固定效应模型：<br>（1）麻烦的间接方法<br> tsset id year　　　　<br> xi:reg Y X i.year<br>  对于时间固定效应模型的检验不是很直接，要用wald检验，相应的命令为：<br>  建设是四年数据，时间虚变量为_Iyear_2、 _Iyear_3、 _Iyear_4，那么wald检验<br>  test _Iyear_2=_Iyear_3= _Iyear_4<br>  test _Iyear_2=_Iyear_3= _Iyear_4=0<br>（2）巧妙的方法<br>   这个方法有点麻烦，后来论坛中有人聪明的提出一种方法，让人眼前一亮，就是将时间和截面变量交换位置，之前得到的是个体固定效应，之后就是时间固定效应，具体如下：<br> tsset year id<br> xtreg Y X,fe<br>  针对时期固定效应（H0：不存在时期固定效应）的F检验自动生成。<br>我刚开始对此方法不是很有信心，最后自己将其与第一种方法做了对比发觉，估计的参数值和其他统计量均为一致性，因此推荐后面这种方法。　<br>（3）直接的方法<br>  参照个体固定效应的方法，我们再推荐一种简便直接方法：<br>  tsset id year　　　　<br>  xtreg Y X ,fe i(year)</p>
<p>  针对时期固定效应（H0：不存在时期固定效应）的F检验自动生成。<br>  比较三种方法，第二、三种方法更为直接和有效，第一种与他们的区别还有一点就是常数项估计值不同，而第二种方法缺乏理论依据和现实做的人比较少，因此综合来看，第三种方法最为有效和直接。　　　<br>3.时刻个体双固定效应模型　<br>  实际上连玉君讲义中的时间效应（人大经济论坛出的stata论文专题讲义的p230）是时间个体双固定效应，可以这样理解fe只是固定个体效应，比如在个体固定效应模型中，输入fe和输入fe i(id)，得到的F值和p值均一致，另外从stata命令的中看sigma_u：panel-level standard deviation，F_f：F for u_i=0，均在说个体效应问题而时间效应已经通过设置时间虚拟变量进行了控制。具体方法如下：<br>　<br>  xtset id year<br>  xi:xtreg y x1 x2 i.year,fe<br>  这种方法有个问题是，估计的时候可能会出现：<br>“independent variables are collinear with the panel variable year”<br>解决的办法是从新生成一个panel varible比如code，此code是id和year的综合,前提是提前设置了<br>tsset id year。然后按照如下命令进行：<br>  gen code =year+id<br>  tsset code year<br>xi:xtreg y x1 x2 i.year,fe<br>针对时期固定效应（H0：不存在时期固定效应）的F检验自动生成。<br>最后在三种模型中到底选择哪个，主要根据F检验值是否显著进行判断，第一个显著后面不显著就选个体固定效应模型，第 二个显著其他不显著选择时间固定效应模型，第 三个显著意味着前两个均显著，那么选择个体时间双固定模型。<br>三、随机效应模型　　　　<br>tsset id year　<br> xtreg cp ip,re　　　　<br>　　　<br>四、回归系数不同的面板数据模型<br>by id: reg cp ip　　　　<br>然后把斜率＆截距整理合成一下就ok。</p>
<p>五、针对固定效应和随机效应模型选择主要根据Hausman检验结果判定：　　　<br>  xtreg cp ip, fe　　<br>  est store FE 　<br>  xtreg cp ip, re<br>　　est store RE　<br>  hausman FE  RE　由于原假设是随机效应和固定效应无差异，如果拒绝原假设，则采用固定效应模型，否则随机效应模型。　</p>
<h2><span id="sui-ji-xiao-ying-he-gu-ding-xiao-ying-de-xuan-ze">随机效应和固定效应的选择</span><a href="#sui-ji-xiao-ying-he-gu-ding-xiao-ying-de-xuan-ze" class="header-anchor">#</a></h2><p>tsset id year　 </p>
<p>  xtreg cp ip, fe　　<br>  est store FE 　<br>  xtreg cp ip, re<br>　　est store RE　<br>  hausman FE  RE</p>
<p><img src="https://upload-images.jianshu.io/upload_images/1045132-24aa6e61e9ea3868.png?imageMogr2/auto-orient/strip|imageView2/2/w/873/format/webp" alt="img"></p>
<p>这里最重要的还是检验P值，P&lt;0.05说明可以拒绝原假设（随机效应回归模型），因此我们的模型采用固定效应回归模型更为合适。</p>
<h1><span id="did">DID</span><a href="#did" class="header-anchor">#</a></h1><p>政策前后，时间前，时间后，至少要知道两期</p>
<p>处理组和对照组：受不受影响。</p>
<p>截面数据：设置的方法</p>
<p>面板数据</p>
<p>**PSM-DID方法———————————————-</p>
<p>** PSM的部分<br>set seed 0001 //定义种子<br>gen tmp = runiform() //生成随机数<br>sort tmp //把数据库随机整理<br>psmatch2 treated $xlist, out(ln_w) logit ate neighbor(1) common caliper(.05) ties //通过近邻匹配，这里可以要outcome，也可以不要它</p>
<p>pstest $xlist, both graph //检验协变量在处理组与控制组之间是否平衡<br>gen common=_support<br>drop if common == 0 //去掉不满足共同区域假定的观测值</p>
<p>** DID的部分，根据上面匹配好的数据<br>reg ln_w did time treated $xlist </p>
<p>xtreg ln_w did time treated $xlist i.year, fe</p>
<p>**PSM-DID部分结束———————————————————</p>
<p><a href="https://mp.weixin.qq.com/s/yNZ95g8poUzyDGin7JMalA">https://mp.weixin.qq.com/s/yNZ95g8poUzyDGin7JMalA</a></p>
<p>控制组和对照组受政策影响的时间是否一致</p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006161241325.png" alt="image-20201006161241325"></p>
<h1><span id="yi-fang-chai">异方差</span><a href="#yi-fang-chai" class="header-anchor">#</a></h1><p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006110349569.png" alt="image-20201006110349569"></p>
<p>对于每一个X,对应一个相同的分布。但实际上，可能不是。</p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006110508755.png" alt="image-20201006110508755"></p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006110654746.png" alt="image-20201006110654746"></p>
<p>WLS: 加权最小二乘法(WLS)</p>
<p>white调整（最大)</p>
<p>截面数据</p>
<p>异方差检验：方法</p>
<p>如果存在：怀特调整； 变换方程的形式；重新定义变量；</p>
<p>纯异方差：</p>
<p>非纯异方差:</p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006111253388.png" alt="image-20201006111253388"></p>
<p><a href="https://mlln.cn/2018/12/11/stata%E6%95%99%E7%A8%8B03-%E5%BC%82%E6%96%B9%E5%B7%AE%E7%9A%84%E6%A3%80%E9%AA%8C%E5%92%8C%E5%A4%84%E7%90%86/">https://mlln.cn/2018/12/11/stata%E6%95%99%E7%A8%8B03-%E5%BC%82%E6%96%B9%E5%B7%AE%E7%9A%84%E6%A3%80%E9%AA%8C%E5%92%8C%E5%A4%84%E7%90%86/</a></p>
<p>为了减少异方差和使结果更加稳健，我们使用“OLS+稳健标准误”的办法，通过加robust选项来求稳健标准误。使用“OLS+稳健标准误”的好处是，它对回归系数及标准误的估计都是一致的，并不需要知道条件方差函数的形式，更适用于一般的情形。</p>
<p>线性模型的基本假设中有Var(μ|x1,x2,⋯,xk)=dVar(μ|x1,x2,⋯,xk)=d，即<strong>随机干扰项的方差不因自变量的不同而不同</strong>。表现在现实的经济生活中，以消费水平受到收入水平的影响为例。C=b0+b1∗Y+μC=b0+b1∗Y+μ,对于收入水平Y较低的群众而言，消费情况的变化是比较小的，但是对于收入水平较大的群体而言，其消费水平的变化差异可能就非常大了。用公式表示，即为var(μ|x1,x2,⋯,xk)=f(xi,d)</p>
<h1><span id="xu-lie-xiang-guan-xing">序列相关性</span><a href="#xu-lie-xiang-guan-xing" class="header-anchor">#</a></h1><p>什么是？</p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006124927754.png" alt="image-20201006124927754"></p>
<p>检测</p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006125117457.png" alt="image-20201006125117457"></p>
<p>补救措施</p>
<p>GLS: </p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006125335017.png" alt="image-20201006125335017"></p>
<h1><span id="yi-lou-bian-liang">遗漏变量</span><a href="#yi-lou-bian-liang" class="header-anchor">#</a></h1><h1><span id="xu-ni-bian-liang">虚拟变量</span><a href="#xu-ni-bian-liang" class="header-anchor">#</a></h1><h2><span id="zheng-ce-bian-liang">政策变量</span><a href="#zheng-ce-bian-liang" class="header-anchor">#</a></h2><p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006112428053.png" alt="image-20201006112428053"></p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006112510991.png" alt="image-20201006112510991"></p>
<h2><span id="xu-ni-bian-liang-de-yin-ru">虚拟变量的引入</span><a href="#xu-ni-bian-liang-de-yin-ru" class="header-anchor">#</a></h2><p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006111902652.png" alt="image-20201006111902652"></p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006112111251.png" alt="image-20201006112111251"></p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006112012221.png" alt="image-20201006112012221"></p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006112035220.png" alt="image-20201006112035220"></p>
<h1><span id="mian-ban-shu-ju">面板数据</span><a href="#mian-ban-shu-ju" class="header-anchor">#</a></h1><ol>
<li><p>不变参数模型和变截距模型</p>
<p>混合回归模型与截面固定效应（P&lt;5%,拒绝混合回归模型）</p>
<p>混合回归模型与时间固定效应模型的检测</p>
<p>不变参数模型与截面和时间的联合检测</p>
</li>
<li><p>变截距模型是固定还是随机效应模型</p>
<p>Wald统计量</p>
<p>显著：固定效应</p>
<p>截面上检验</p>
<p>时间上检验</p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006131019054.png" alt="image-20201006131019054"></p>
</li>
</ol>
<p>   混合回归模型：</p>
<p>   变截距模型</p>
<p>   <img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006131522580.png" alt="image-20201006131522580"></p>
<p>   混合回归模型</p>
<p>   变截距模型</p>
<p>   ​    固定效应模型</p>
<p>   ​    随机效应模型</p>
<p>   变系数模型（不考虑</p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006132238571.png" alt="image-20201006132238571"></p>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201006132615287.png" alt="image-20201006132615287"></p>
<p>OLS的假设。如果不满足相应的假设，则需要补救。</p>
<p>常用的三大问题。</p>
<p>面板数据的模型设置和检测。有哪些类别。</p>
<h1><span id="zong-jie">总结</span><a href="#zong-jie" class="header-anchor">#</a></h1><ol>
<li><p>截面数据</p>
<ol>
<li>异方差</li>
</ol>
</li>
<li><p>面板数据</p>
<ol>
<li>模型设置的形式</li>
<li>检测方法</li>
</ol>
</li>
<li><p>虚拟变量</p>
<ol>
<li><p>应用</p>
<ol>
<li>双重差分模型(原理)</li>
<li>基本</li>
<li>固定的</li>
</ol>
</li>
<li><p>虚拟变量设置方法</p>
<p>n-1</p>
</li>
</ol>
</li>
<li><p>普通最小二乘法的假设</p>
<ol>
<li>三大问题的检测方法和补救措施</li>
</ol>
</li>
</ol>
<h1><span id="ke-cheng-da-gang">课程大纲</span><a href="#ke-cheng-da-gang" class="header-anchor">#</a></h1><p>01</p>
<p>回归分析概述</p>
<p>课时</p>
<p>1.1 计量经济学引论</p>
<p>1.2 回归分析的基本概念</p>
<p>1.3 回归方程的设定与估计</p>
<p>02</p>
<p>普通最小二乘法</p>
<p>课时</p>
<p>2.1 一元回归模型的OLS估计</p>
<p>2.2 多元回归模型的OLS估计</p>
<p>2.3 OLS估计量的性质</p>
<p>2.4 多元回归模型实例</p>
<p>2.5 回归模型的拟合优度</p>
<p>03</p>
<p>假设检验</p>
<p>课时</p>
<p>3.1 假设检验的基本原理</p>
<p>3.2 假设检验的方法</p>
<p>3.3 F检验及其应用</p>
<p>3.4 正态性检验</p>
<p>04</p>
<p>模型设定</p>
<p>课时</p>
<p>4.1 选择解释变量</p>
<p>4.2 选择函数形式</p>
<p>05</p>
<p>多重共线性</p>
<p>课时</p>
<p>5.1 多重共线性的定义和后果</p>
<p>5.2 多重共线性的诊断与补救</p>
<p>5.3 多重共线性的案例</p>
<p>06</p>
<p>序列相关性</p>
<p>课时</p>
<p>6.1 序列相关性的概念与类型</p>
<p><strong>随机误差项之间是相关的，OLS的假定是不相关。</strong></p>
<p>时间序列上的</p>
<p>6.2 序列相关性的后果和检验</p>
<p>6.3 序列相关性的补救措施</p>
<p>07</p>
<p>异方差性</p>
<p>课时</p>
<p>7.1 异方差性的概念和后果</p>
<p><strong>随机误差项的方差相同了</strong></p>
<p>7.2 异方差性的检验</p>
<p>7.3 异方差性的补救措施</p>
<p>7.4 异方差性的案例</p>
<h4><span id="yi-fang-chai">异方差</span><a href="#yi-fang-chai" class="header-anchor">#</a></h4><script type="math/tex; mode=display">
Var(u_i) = \delta^2</script><p><strong>聚类调整标准误</strong></p>
<p>即<strong>对于不同的样本点</strong>，<strong>随机误差项的方差不再是常数</strong>，<strong>而互不相同</strong>，<strong>则认为出现了异方差性(Heteroskedasticity)</strong>。</p>
<p>标准误在统计推断中发挥着至关重要的作用，直接影响着系数的显著性和置信区间，并最终影响到假设检验的结论。因此，正确地估计标准误在实证分析的过程中显得尤为重要。当干扰项满足「独立同分布 (iid)」 条件时， OLS 所估计的标准误是无偏的。但是当误差项之间存在相关性时，OLS 所估计的标准误是有偏的，不能很好地反映估计系数的真实变异性 (Petersen, 2009)，故需要对标准误进行调整。在多种调整标准误的方式中，「聚类调整标准误 (cluster)」是一种有效的方法 (Petersen, 2009)。</p>
<p>随机误差项的方差是常数。稳健标准误修正异方差</p>
<p>到底在什么级别上进行聚类，即如何获得合理的聚类稳健标准误—clustered robust standard errors。 到底是在个体、县、市、省还是行业、时间聚类？有没有一个统一的标准或者指导准则？看一下这下面的黄色标注，即采取保守策略，先倾向于在一个更大层面进行聚类，然后比较聚类稳健标准误和原始的标准误的差异，可以在进一步的聚类稳健标准误变化很小的时候停止。</p>
<p>聚类标准误</p>
<p><strong>聚类稳健的标准误&gt;异方差稳健的标准误&gt;普通标准误</strong></p>
<p>聚类的方法有两种：</p>
<pre><code> 1. **异方差—稳健标准误**（Heteroskedasticity-Robust+Standard+Error）是指其标准差对于模型中可能存在的异方差或自相关问题不敏感，基于稳健 标准差计算的稳健t统计量仍然渐进分布t分布。 因此，在Stata中利用**robust**选项可以得到异方差—稳健标准误（Heteroskedasticity-Robust+Standard+Error）估计量。标准误
</code></pre><ol>
<li><p>聚类稳健标准误：reg y x ,vce(cluster xxx)</p>
<p>聚类稳健标准误实质上是<strong>允许组内自相关</strong>，所以如果你假定一个企业的观测值在不同时间内存在相关性，但是不同的企业之间是独立的，就聚类到企业层面；如果你假定一个企业的观测值在不同的时间内存在相关性，且一个城市内的所有企业也存在相关性（即一个城市内的所有观测值中，任意两个都存在相关性），但不同城市之间的观测值是独立的，就聚类到城市层面。</p>
<p>​     <strong>standard errors clustered at the xx level</strong></p>
<p>提问1：老师，您好！请问一下在使用面板数据回归时，一般控制聚类稳健标准误应该聚类到哪个层面，具体代表哪些含义？具体来说，比如我现在的数据是地级市层面的面板数据，我控制了时间和地级市固定效应，进一步我想在模型中控制聚类稳健标准误，那么我可以选择聚类到地级市层面，也可以选择聚类到省级层面，想请问有一下这两者之间有什么区别，他们分别表示模型控制了哪些干扰因素（他们具体的经济含义是什么）？</p>
<p>解答1：聚类标准误反映了不同观测值之间是如何关联的。在你的例子中，如果聚类到地级市层面，就相当于假设同一个地级市在不同时间上的观测值之间是相互关联的，但是不同地级市的观测值之间是没有关联的。如果聚类到省级层面，要求就更严格——同一个省内任何两个观测值之间都是相互关联的（不管是不是在同一个地级市），而不同省的观测值之间是没有关联的。一般来说，你的研究情形可以聚类到地级市层面，此时等价于面板数据回归在控制地级市固定效应之后计算常规的稳健标准误。</p>
</li>
</ol>
<p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/MyBlog\MyBlog\hexo\source\_posts\计量经济学\image-20210405131646510.png" alt="image-20210405131646510"></p>
<p>08</p>
<p>虚拟变量</p>
<p>课时</p>
<p>8.1 虚拟变量的含义</p>
<p>8.2 虚拟变量的设置与引入</p>
<p>8.3 虚拟变量的应用</p>
<p>09</p>
<p>虚拟应变量</p>
<p>课时</p>
<p>9.1 虚拟应变量的概念</p>
<p>9.2 线性概率模型</p>
<p>9.3 Logit模型和Probit模型</p>
<p>10</p>
<p>预测</p>
<p>课时</p>
<p>10.1 预测及其步骤</p>
<p>10.2 精度指标</p>
<p>10.3 时间序列模型预测</p>
<p>11</p>
<p>时间序列模型</p>
<p>课时</p>
<p>11.1 分布滞后模型及其估计</p>
<p>11.2 Granger因果关系</p>
<p>11.3 平稳性与单位根检验</p>
<p>11.4 协整与误差修正模型</p>
<p>12</p>
<p>面板数据模型</p>
<p>课时</p>
<p>12.1 认识面板数据</p>
<p>12.2 面板数据模型的设定</p>
<p>12.3 面板数据模型的参数估计</p>
<p>12.4 面板数据模型的设定检验</p>
<h1><span id="fen-zu-hui-gui-he-jiao-hu-xing-qu-bie">分组回归和交互性区别</span><a href="#fen-zu-hui-gui-he-jiao-hu-xing-qu-bie" class="header-anchor">#</a></h1><p>分组回归：控制变量系数不一样，样本量少了，估计不太好</p>
<p>稳健性检测</p>
<h1><span id="summary">summary</span><a href="#summary" class="header-anchor">#</a></h1><p>截面数据</p>
<p>面板数据</p>
<p>时间序列</p>
<p>DID的特殊性（两种形式)</p>
<p>模型的形式</p>
<p>估计方法（OLS,GLS)</p>
<p>标准稳健性偏误</p>
<h2><span id="duo-chong-gong-xian-xing">多重共线性</span><a href="#duo-chong-gong-xian-xing" class="header-anchor">#</a></h2><p>0.8 </p>
<h2><span id="xiang-guan-xing-xi-shu">相关性系数</span><a href="#xiang-guan-xing-xi-shu" class="header-anchor">#</a></h2><h2><span id="hui-gui-jie-guo-fen-xi">回归结果分析</span><a href="#hui-gui-jie-guo-fen-xi" class="header-anchor">#</a></h2><h2><span id="fang-chai-peng-zhang-yin-zi-vif">方差膨胀因子 VIF</span><a href="#fang-chai-peng-zhang-yin-zi-vif" class="header-anchor">#</a></h2><p><img src="/2020/09/13/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201121093752887.png" alt="image-20201121093752887"></p>
<ol>
<li>删除支配变量</li>
<li>增加样本容量</li>
<li><p>删除多余变量</p>
</li>
<li><p>主成分分析</p>
</li>
<li>因子分析</li>
<li>如果不严重，可以不处理。除非是出现了严重的问题（符号问题)</li>
<li></li>
</ol>
<p><a href="http://ulsonhu.cn/%E6%9C%AC%E7%A7%91%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6%E4%B9%8B%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0%E7%AF%87.html">http://ulsonhu.cn/%E6%9C%AC%E7%A7%91%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6%E4%B9%8B%E5%9B%9E%E7%82%89%E9%87%8D%E9%80%A0%E7%AF%87.html</a></p>
<h1><span id="nei-sheng-xing-wen-ti">内生性问题</span><a href="#nei-sheng-xing-wen-ti" class="header-anchor">#</a></h1><h2><span id="yi-lou-bian-liang">遗漏变量</span><a href="#yi-lou-bian-liang" class="header-anchor">#</a></h2><h2><span id="hu-wei-yin-guo">互为因果</span><a href="#hu-wei-yin-guo" class="header-anchor">#</a></h2><h2><span id="xuan-ze-xing-pian-chai">选择性偏差</span><a href="#xuan-ze-xing-pian-chai" class="header-anchor">#</a></h2><h2><span id="jie-jue-fang-fa">解决方法</span><a href="#jie-jue-fang-fa" class="header-anchor">#</a></h2><h3><span id="did">DID</span><a href="#did" class="header-anchor">#</a></h3><h3><span id="duan-dian-hui-gui">断点回归</span><a href="#duan-dian-hui-gui" class="header-anchor">#</a></h3><h3><span id="mian-ban-shu-ju-gu-ding-xiao-ying-mo-xing">面板数据固定效应模型</span><a href="#mian-ban-shu-ju-gu-ding-xiao-ying-mo-xing" class="header-anchor">#</a></h3><h4><span id="iv">IV</span><a href="#iv" class="header-anchor">#</a></h4><h4><span id="psm">PSM</span><a href="#psm" class="header-anchor">#</a></h4><p>豪斯曼检验：是否是内生变量</p>
<p>内生变量：与随机误差项相关</p>
<p>heckman </p>
<h2><span id="hui-gui-mo-xing-yao-jian-ce-de-zhi-biao-yi-ji-xiu-zheng-fang-fa">回归模型要检测的指标以及修正方法</span><a href="#hui-gui-mo-xing-yao-jian-ce-de-zhi-biao-yi-ji-xiu-zheng-fang-fa" class="header-anchor">#</a></h2><p>内生检测</p>
<p>异方差检测</p>
<p>诊断：</p>
<p>补救措施：</p>
<p>多重共线性</p>
<h1><span id="yin-guo-fen-xi">因果分析</span><a href="#yin-guo-fen-xi" class="header-anchor">#</a></h1>]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>计量经济学</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-科研tool</title>
    <url>/2020/09/11/%E7%A7%91%E7%A0%94-%E7%A7%91%E7%A0%94tool/</url>
    <content><![CDATA[<p>总结绘图</p>
<a id="more"></a>
<h1><span id="hui-tu">绘图</span><a href="#hui-tu" class="header-anchor">#</a></h1><h2><span id="di-tu">地图</span><a href="#di-tu" class="header-anchor">#</a></h2><h3><span id="arcgis">ArcGis</span><a href="#arcgis" class="header-anchor">#</a></h3><p>在要素图层中，经常会出现点要素重叠的情况，对于少量数据，我们可以使用手动删除，但对于大量数据，手动删除不够现实，可万一使用ArcToolBox来批量删除。</p>
<h3><span id="1-wei-yao-su-tian-jia-xy-zuo-biao">1）为要素添加XY坐标</span><a href="#1-wei-yao-su-tian-jia-xy-zuo-biao" class="header-anchor">#</a></h3><p>打开【数据管理工具】|【要素】|【添加 XY 坐标】工具，输入要素 为“pts”；</p>
<p>之后要素属性表中增加了POINT_X，POINT_Y字段。</p>
<h3><span id="2-shan-chu-zuo-biao-xiang-tong-dian">2）删除坐标相同点</span><a href="#2-shan-chu-zuo-biao-xiang-tong-dian" class="header-anchor">#</a></h3><p>打开【数据管理工具】|【常规】|【删除相同的】工具，输入要素设置为“pts”，字 段勾选“POINT_X”和“POINT_Y”。</p>
<p>重叠的要素会只保留一个。</p>
<h1><span id="tu-pian-da-xiao">图片大小</span><a href="#tu-pian-da-xiao" class="header-anchor">#</a></h1><div class="table-container">
<table>
<thead>
<tr>
<th>类型</th>
<th>要求</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>分辨率</td>
<td>线图</td>
<td>&gt;  1000dpi</td>
</tr>
<tr>
<td>彩/灰图</td>
<td>&gt;  300dpi</td>
<td></td>
</tr>
<tr>
<td>组合图</td>
<td>&gt;  500dpi</td>
<td></td>
</tr>
<tr>
<td>图片尺寸</td>
<td>单栏</td>
<td>8-9  cm</td>
</tr>
<tr>
<td>1.5栏</td>
<td>12-15  cm</td>
<td></td>
</tr>
<tr>
<td>双栏</td>
<td>17-19  cm</td>
<td></td>
</tr>
<tr>
<td>图片格式</td>
<td>TIFF（位图）、EPS（矢量图）</td>
<td></td>
</tr>
<tr>
<td>字体</td>
<td>Arial、Times New Roman</td>
<td></td>
</tr>
<tr>
<td>文字大小</td>
<td>推荐6-12号</td>
<td></td>
</tr>
<tr>
<td>线条粗细</td>
<td>0.2-1.5pt</td>
<td></td>
</tr>
<tr>
<td>色彩模式</td>
<td>CMYK（印刷版）、RGB（数码版）</td>
<td></td>
</tr>
<tr>
<td>文件大小</td>
<td>&lt;10M</td>
</tr>
</tbody>
</table>
</div>
<p><img src="/2020/09/11/%E7%A7%91%E7%A0%94-%E7%A7%91%E7%A0%94tool/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201017212356513.png" alt="image-20201017212356513"></p>
<h2><span id="dan-wei">单位</span><a href="#dan-wei" class="header-anchor">#</a></h2><p>1 inch = 2.54cm</p>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>科研工具</tag>
      </tags>
  </entry>
  <entry>
    <title>科研-文献阅读</title>
    <url>/2020/09/11/%E7%A7%91%E7%A0%94-%E6%96%87%E7%8C%AE%E9%98%85%E8%AF%BB/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Hey, password is required here.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="a98edad065216d9b5f31801cf61bb53352eb5db026c84f094fbcf612e8e7f655"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>科研笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>可视化</title>
    <url>/2020/09/04/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Borigin/</url>
    <content><![CDATA[<p>此篇将详细给出如何利用origin绘制常用的图，包括单变量，双变量，以及多变量相关的图。同时，也要讲解如何配色，字体设置，子图设置等等技巧。</p>
<a id="more"></a>
<p>[TOC]</p>
<h1><span id="ke-shi-hua">可视化</span><a href="#ke-shi-hua" class="header-anchor">#</a></h1><h2><span id="ji-ben-yao-su">基本要素</span><a href="#ji-ben-yao-su" class="header-anchor">#</a></h2><p><img src="https://picb.zhimg.com/v2-57401ff1fa2474eebebbdb4cd88730d1_r.jpg" alt="img"></p>
<p>线条：标记符，线性（实线，双划线，虚线，点），粗细，颜色</p>
<h2><span id="lei-xing">类型</span><a href="#lei-xing" class="header-anchor">#</a></h2><p>数据间的关系大致可以分为：构成；比较；趋势；分布；联系。</p>
<p><img src="https://pic3.zhimg.com/v2-1464719076c4c95e903e67d54ea60e98_r.jpg" alt="img"></p>
<p>数据间的流向：和弦图和桑基图</p>
<p><a href="https://zhuanlan.zhihu.com/p/27746129">https://zhuanlan.zhihu.com/p/27746129</a></p>
<p><a href="https://echarts.apache.org/examples/zh/index.html#chart-type-graphGL">https://echarts.apache.org/examples/zh/index.html#chart-type-graphGL</a></p>
<h1><span id="origin">Origin</span><a href="#origin" class="header-anchor">#</a></h1><h2><span id="origin-hui-zhi-bian-ji-zhi-fang-tu">Origin绘制边际直方图</span><a href="#origin-hui-zhi-bian-ji-zhi-fang-tu" class="header-anchor">#</a></h2><p>plot-statistics-边际直方图</p>
<h2><span id="origin-hui-zhi-xiang-guan-xing-tu">Origin绘制相关性图</span><a href="#origin-hui-zhi-xiang-guan-xing-tu" class="header-anchor">#</a></h2><p>Step1: 绘制散点图</p>
<p>Step2：analysis 增加线性回归</p>
<p>可以得到回归曲线，回归系数和相关性系数</p>
<p>当然也可以通过计算，直接添加到图里面</p>
<p>注意：回归分析+图形是通过多部完成的。先绘制你需要的图形，在加入统计分析，以及一些计算数据。</p>
<h2><span id="origin-zhi-zuo-xiang-guan-xi-shu-ju-zhen-tu">Origin制作相关系数矩阵图</span><a href="#origin-zhi-zuo-xiang-guan-xi-shu-ju-zhen-tu" class="header-anchor">#</a></h2><h1><span id="python">Python</span><a href="#python" class="header-anchor">#</a></h1><h2><span id="jian-jie-python-de-hui-tu-ku">简介Python的绘图库</span><a href="#jian-jie-python-de-hui-tu-ku" class="header-anchor">#</a></h2><h4><span id="linestyle">linestyle</span><a href="#linestyle" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">'-'       solid line style  </span><br><span class="line">'--'      dashed line style  </span><br><span class="line">'-.'      dash-dot line style  </span><br><span class="line">':'       dotted line style  </span><br></pre></td></tr></tbody></table></figure>
<h4><span id="marker">marker</span><a href="#marker" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">'.'       point marker  </span><br><span class="line">','       pixel marker  </span><br><span class="line">'o'       circle marker  </span><br><span class="line">'v'       triangle_down marker  </span><br><span class="line">'^'       triangle_up marker  </span><br><span class="line">'&lt;'       triangle_left marker  </span><br><span class="line">'&gt;'       triangle_right marker  </span><br><span class="line">'1'       tri_down marker  </span><br><span class="line">'2'       tri_up marker  </span><br><span class="line">'3'       tri_left marker  </span><br><span class="line">'4'       tri_right marker  </span><br><span class="line">'s'       square marker  </span><br><span class="line">'p'       pentagon marker  </span><br><span class="line">'*'       star marker  </span><br><span class="line">'h'       hexagon1 marker  </span><br><span class="line">'H'       hexagon2 marker  </span><br><span class="line">'+'       plus marker  </span><br><span class="line">'x'       x marker  </span><br><span class="line">'D'       diamond marker  </span><br><span class="line">'d'       thin_diamond marker  </span><br><span class="line">'|'       vline marker  </span><br><span class="line">'_'       hline marker  </span><br></pre></td></tr></tbody></table></figure>
<h2><span id="yao-su-cao-zuo">要素操作</span><a href="#yao-su-cao-zuo" class="header-anchor">#</a></h2><p><img src="https://img-blog.csdn.net/20180514122113530?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d1emx1bg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<h3><span id="xian-tiao-lei-xing-yan-se-he-san-dian-lei-xing">线条类型，颜色和散点类型</span><a href="#xian-tiao-lei-xing-yan-se-he-san-dian-lei-xing" class="header-anchor">#</a></h3><h3><span id="tu-li">图例</span><a href="#tu-li" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">font1 = {'family' : 'Times New Roman',</span><br><span class="line">'weight' : 'normal',</span><br><span class="line">'size'   : 23,</span><br><span class="line">}</span><br><span class="line">A,=plt.plot(x1,y1,'-r',label='A',linewidth=5.0,ms=10)</span><br><span class="line">legend = plt.legend(handles=[A,B],prop=font1)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="zuo-biao-zhou-ke-du">坐标轴刻度</span><a href="#zuo-biao-zhou-ke-du" class="header-anchor">#</a></h3><p>方法一：利用matplotlib库</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">plt.rc("legend", fontsize=15)</span><br><span class="line">plt.xlabel('Longitude', fontsize=15)</span><br><span class="line">plt.ylabel('Latitude', fontsize=15)</span><br><span class="line">plt.title('Spatial Location Plot', fontsize=15 )</span><br><span class="line">plt.tick_params(axis="both", labelsize=15)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="zuo-biao-zhou-biao-qian">坐标轴标签</span><a href="#zuo-biao-zhou-biao-qian" class="header-anchor">#</a></h3><h2><span id="seaborn">Seaborn</span><a href="#seaborn" class="header-anchor">#</a></h2><h2><span id="ju-zhen-tu">矩阵图</span><a href="#ju-zhen-tu" class="header-anchor">#</a></h2><h4><span id="v1">v1</span><a href="#v1" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from scipy import stats</span><br><span class="line">import seaborn as sns</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">def corrdot(*args, **kwargs):</span><br><span class="line">    corr_r = args[0].corr(args[1], 'pearson')</span><br><span class="line">    corr_text = round(corr_r, 2)</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    font_size = abs(corr_r) * 80 + 5</span><br><span class="line">    ax.annotate(corr_text, [.5, .5,],  xycoords="axes fraction",</span><br><span class="line">                ha='center', va='center', fontsize=font_size)</span><br><span class="line"></span><br><span class="line">def corrfunc(x, y, **kws):</span><br><span class="line">    r, p = stats.pearsonr(x, y)</span><br><span class="line">    p_stars = ''</span><br><span class="line">    if p &lt;= 0.05:</span><br><span class="line">        p_stars = '*'</span><br><span class="line">    if p &lt;= 0.01:</span><br><span class="line">        p_stars = '**'</span><br><span class="line">    if p &lt;= 0.001:</span><br><span class="line">        p_stars = '***'</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    ax.annotate(p_stars, xy=(0.65, 0.6), xycoords=ax.transAxes,</span><br><span class="line">                color='red', fontsize=70)</span><br><span class="line"></span><br><span class="line">sns.set(style='white', font_scale=1.6)</span><br><span class="line">iris = sns.load_dataset('iris')</span><br><span class="line">g = sns.PairGrid(iris, aspect=1.5, diag_sharey=False, despine=False)</span><br><span class="line">g.map_lower(sns.regplot, lowess=True, ci=False,</span><br><span class="line">            line_kws={'color': 'red', 'lw': 1},</span><br><span class="line">            scatter_kws={'color': 'black', 's': 20})</span><br><span class="line">g.map_diag(sns.distplot, color='black',</span><br><span class="line">           kde_kws={'color': 'red', 'cut': 0.7, 'lw': 1},</span><br><span class="line">           hist_kws={'histtype': 'bar', 'lw': 2,</span><br><span class="line">                     'edgecolor': 'k', 'facecolor':'grey'})</span><br><span class="line">g.map_diag(sns.rugplot, color='black')</span><br><span class="line">g.map_upper(corrdot)</span><br><span class="line">g.map_upper(corrfunc)</span><br><span class="line">g.fig.subplots_adjust(wspace=0, hspace=0)</span><br><span class="line"></span><br><span class="line"># Remove axis labels</span><br><span class="line">for ax in g.axes.flatten():</span><br><span class="line">    ax.set_ylabel('')</span><br><span class="line">    ax.set_xlabel('')</span><br><span class="line"></span><br><span class="line"># Add titles to the diagonal axes/subplots</span><br><span class="line">for ax, col in zip(np.diag(g.axes), iris.columns):</span><br><span class="line">    ax.set_title(col, y=0.82, fontsize=26)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://i.stack.imgur.com/F1LYt.png" alt="enter image description here"></p>
<h4><span id="zi-ding-yi">自定义</span><a href="#zi-ding-yi" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import seaborn as sns</span><br><span class="line"></span><br><span class="line">def corrdot(*args, **kwargs):</span><br><span class="line">    corr_r = args[0].corr(args[1], 'pearson')</span><br><span class="line">    corr_text = f"{corr_r:2.2f}".replace("0.", ".")</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    ax.set_axis_off()</span><br><span class="line">    marker_size = abs(corr_r) * 10000</span><br><span class="line">    ax.scatter([.5], [.5], marker_size, [corr_r], alpha=0.6, cmap="coolwarm",</span><br><span class="line">               vmin=-1, vmax=1, transform=ax.transAxes)</span><br><span class="line">    font_size = abs(corr_r) * 40 + 5</span><br><span class="line">    ax.annotate(corr_text, [.5, .5,],  xycoords="axes fraction",</span><br><span class="line">                ha='center', va='center', fontsize=font_size)</span><br><span class="line"></span><br><span class="line">sns.set(style='white', font_scale=1.6)</span><br><span class="line">iris = sns.load_dataset('iris')</span><br><span class="line">g = sns.PairGrid(iris, aspect=1.4, diag_sharey=False)</span><br><span class="line">g.map_lower(sns.regplot, lowess=True, ci=False, line_kws={'color': 'black'})</span><br><span class="line">g.map_diag(sns.distplot, kde_kws={'color': 'black'})</span><br><span class="line">g.map_upper(corrdot)</span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://qph.fs.quoracdn.net/main-qimg-36b54c8efc0221302924e558384bdfdd" alt="img"></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">import seaborn as sns</span><br><span class="line">from scipy import stats</span><br><span class="line">i = 0</span><br><span class="line">j =0 </span><br><span class="line">def corrfunc(x, y, **kws):</span><br><span class="line">    # global j</span><br><span class="line">    # j = j+1</span><br><span class="line">    # print(j)</span><br><span class="line">    r, p = stats.pearsonr(x, y)</span><br><span class="line">    p_stars = ''</span><br><span class="line">    if p &lt;= 0.05:</span><br><span class="line">        p_stars = '*'</span><br><span class="line">    if p &lt;= 0.01:</span><br><span class="line">        p_stars = '**'</span><br><span class="line">    if p &lt;= 0.001:</span><br><span class="line">        p_stars = '***'</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    if i%3==0:</span><br><span class="line">        ax.annotate(p_stars, xy=(0.2, 0.2), xycoords=ax.transAxes,</span><br><span class="line">                color='red', fontsize=20)</span><br><span class="line">    if i%3==1:</span><br><span class="line">        ax.annotate(p_stars, xy=(0.65, 0.6), xycoords=ax.transAxes,</span><br><span class="line">                color='red', fontsize=40)</span><br><span class="line"></span><br><span class="line">def corrdot(*args, **kwargs):</span><br><span class="line">    global i</span><br><span class="line">    # print(args[0])</span><br><span class="line">    corr_r = args[0].corr(args[1], 'pearson')</span><br><span class="line">    # print('r',corr_r)</span><br><span class="line">    </span><br><span class="line">    corr_text = f"{corr_r:2.2f}"</span><br><span class="line">    #.replace("0.", ".")</span><br><span class="line">    ax = plt.gca()</span><br><span class="line">    # ax.set_axis_off()</span><br><span class="line">    marker_size = abs(corr_r) * 1000</span><br><span class="line">    if i%3==0:</span><br><span class="line">        ax.scatter([.2], [.2], marker_size, [corr_r], alpha=0.6, cmap="coolwarm",</span><br><span class="line">               vmin=-1, vmax=1, transform=ax.transAxes)</span><br><span class="line">        font_size = abs(corr_r) * 20 + 5</span><br><span class="line">        ax.annotate(corr_text, [.2, .2,],  xycoords="axes fraction",</span><br><span class="line">                ha='center', va='center', fontsize=font_size)</span><br><span class="line">    if i%3==1:</span><br><span class="line">        ax.scatter([.5], [.5], marker_size, [corr_r], alpha=0.6, cmap="coolwarm",</span><br><span class="line">               vmin=-1, vmax=1, transform=ax.transAxes)</span><br><span class="line">        font_size = abs(corr_r) * 20 + 5</span><br><span class="line">        ax.annotate(corr_text, [.5, .5,],  xycoords="axes fraction",</span><br><span class="line">                ha='center', va='center', fontsize=font_size)</span><br><span class="line"></span><br><span class="line">    i = i+1</span><br><span class="line">    # font_size = abs(corr_r) * 40 + 5</span><br><span class="line">    # ax.annotate(corr_text, [.5, .5,],  xycoords="axes fraction",</span><br><span class="line">    #             ha='center', va='center', fontsize=font_size)</span><br><span class="line"></span><br><span class="line">sns.set(style='white', font_scale=1.6)</span><br><span class="line">iris = sns.load_dataset('iris')</span><br><span class="line">g = sns.PairGrid(iris,hue="species", aspect=1.4, diag_sharey=False)</span><br><span class="line">g.map_lower(sns.regplot)</span><br><span class="line"># , lowess=True, ci=False, line_kws={'color': 'black'}</span><br><span class="line">g.map_diag(sns.distplot, kde_kws={'color': 'black'})</span><br><span class="line">g.map_upper(corrdot)</span><br><span class="line">g.map_upper(corrfunc)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/2020/09/04/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Borigin/MyBlog\MyBlog\hexo\source\_posts\可视化之origin\Figure_1.svg" alt></p>
<h2><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h2><p><a href="https://www.coder.work/article/383225">https://www.coder.work/article/383225</a></p>
<h1><span id="r">R</span><a href="#r" class="header-anchor">#</a></h1><h2><span id="r-hui-zhi-xiang-guan-xi-shu-ju-zhen">R绘制相关系数矩阵</span><a href="#r-hui-zhi-xiang-guan-xi-shu-ju-zhen" class="header-anchor">#</a></h2><p><code>PerformanceAnalytics</code>r包的相关矩阵：<br><a href="https://www.rdocumentation.org/packages/PerformanceAnalytics/versions/1.4.3541/topics/chart.Correlation"><code>chart.Correlation</code> function</a></p>
<p><img src="https://i.stack.imgur.com/WTQV2.png" alt="PerformanceAnalytics chart.Correlation result"></p>
<p>Pairwise scatter plot matrix, histogram and correlation coefficients of all related variables for the microinverters connected with different brands of PV module. Pairwise scatter plots are in lower triangle boxes, histograms are in the diagonal boxes, and upper triangle boxes give the correlation coefficients between variables. Brand, Ambient. T, Wind speed, Module. T, Power and Micro. T denote PV module brand, ambient temperature, 5 point moving average wind speed, PV module temperature, AC power output and microinverter temperature respectively.</p>
<p><a href="https://ask.hellobi.com/blog/R_shequ/18431">https://ask.hellobi.com/blog/R_shequ/18431</a></p>
<h2><span id="r-hui-zhi-sang-ji-tu">R绘制桑基图</span><a href="#r-hui-zhi-sang-ji-tu" class="header-anchor">#</a></h2><h1><span id="arcgis">Arcgis</span><a href="#arcgis" class="header-anchor">#</a></h1><p>感觉Arcgis 是专门针对地理信息绘图的，明显使用起来方便很多。</p>
<h2><span id="arcgis-hui-zhi-di-tu">Arcgis绘制地图</span><a href="#arcgis-hui-zhi-di-tu" class="header-anchor">#</a></h2><h2><span id="arcgis-hui-zhi-jing-xiang-tu">Arcgis绘制径向图</span><a href="#arcgis-hui-zhi-jing-xiang-tu" class="header-anchor">#</a></h2><h2><span id="global-mapper">Global Mapper</span><a href="#global-mapper" class="header-anchor">#</a></h2><h1><span id="ai">AI</span><a href="#ai" class="header-anchor">#</a></h1><p>origin对eps编辑会出问题。最好是对wmf文件进行修改。</p>
<h2><span id="tu-pian-yan-se-xiu-gai">图片颜色修改</span><a href="#tu-pian-yan-se-xiu-gai" class="header-anchor">#</a></h2><p><a href="https://www.bilibili.com/video/BV1D4411P7s2?p=9">https://www.bilibili.com/video/BV1D4411P7s2?p=9</a></p>
<p>编辑-&gt;编辑颜色-&gt;重新着色图稿。在此界面，可以建立自己的颜色面板，可以调整颜色，调节饱和度等等。</p>
<p><img src="/2020/09/04/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Borigin/image-20200909143450645.png" alt="image-20200909143450645" style="zoom: 50%;"></p>
<p><img src="/2020/09/04/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Borigin/image-20200909143444890.png" alt="image-20200909143444890" style="zoom:50%;"></p>
<h2><span id="tu-xing-xiu-gai">图形修改</span><a href="#tu-xing-xiu-gai" class="header-anchor">#</a></h2><p>图片填色和描边设置：shift选择区域内的内容</p>
<h3><span id="fang-suo">放缩</span><a href="#fang-suo" class="header-anchor">#</a></h3><p>alt+鼠标</p>
<p>放缩shift等比例</p>
<h1><span id="echart">Echart</span><a href="#echart" class="header-anchor">#</a></h1><p><a href="https://echarts.apache.org/examples/zh/index.html#chart-type-map">https://echarts.apache.org/examples/zh/index.html#chart-type-map</a></p>
<h2><span id="shang-shou-di-yi-ge">上手第一个</span><a href="#shang-shou-di-yi-ge" class="header-anchor">#</a></h2><figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;ECharts&lt;/title&gt;</span><br><span class="line">    &lt;!-- 引入 echarts.js --&gt;</span><br><span class="line">    &lt;script src=<span class="string">"echarts.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 为ECharts准备一个具备大小（宽高）的Dom --&gt;</span><br><span class="line">    &lt;div id=<span class="string">"main"</span> style=<span class="string">"width: 600px;height:400px;"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="comment">// 基于准备好的dom，初始化echarts实例</span></span><br><span class="line">        <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定图表的配置项和数据</span></span><br><span class="line">        <span class="keyword">var</span> option = {</span><br><span class="line">            title: {</span><br><span class="line">                text: <span class="string">'ECharts 入门示例'</span></span><br><span class="line">            },</span><br><span class="line">            tooltip: {},</span><br><span class="line">            legend: {</span><br><span class="line">                data:[<span class="string">'销量'</span>]</span><br><span class="line">            },</span><br><span class="line">            xAxis: {</span><br><span class="line">                data: [<span class="string">"衬衫"</span>,<span class="string">"羊毛衫"</span>,<span class="string">"雪纺衫"</span>,<span class="string">"裤子"</span>,<span class="string">"高跟鞋"</span>,<span class="string">"袜子"</span>]</span><br><span class="line">            },</span><br><span class="line">            yAxis: {},</span><br><span class="line">            series: [{</span><br><span class="line">                name: <span class="string">'销量'</span>,</span><br><span class="line">                type: <span class="string">'bar'</span>,</span><br><span class="line">                data: [<span class="number">5</span>, <span class="number">20</span>, <span class="number">36</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">20</span>]</span><br><span class="line">            }]</span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用刚指定的配置项和数据显示图表。</span></span><br><span class="line">        myChart.setOption(option);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="pei-zhi">配置</span><a href="#pei-zhi" class="header-anchor">#</a></h3><p>需要配置什么找到需要的标签，然后设置成对应的值就好了！</p>
<h1><span id="stata">Stata</span><a href="#stata" class="header-anchor">#</a></h1><h1><span id="matlab">Matlab</span><a href="#matlab" class="header-anchor">#</a></h1><p><a href="https://ww2.mathworks.cn/help/matlab/creating_plots/types-of-matlab-plots.html">https://ww2.mathworks.cn/help/matlab/creating_plots/types-of-matlab-plots.html</a></p>
<h1><span id="delphi">Delphi</span><a href="#delphi" class="header-anchor">#</a></h1><h1><span id="liu-cheng-tu">流程图</span><a href="#liu-cheng-tu" class="header-anchor">#</a></h1><h2><span id="visio">Visio</span><a href="#visio" class="header-anchor">#</a></h2><h2><span id="yi-tu">亿图</span><a href="#yi-tu" class="header-anchor">#</a></h2><h1><span id="origin-lab-2020-amp-python">Origin lab 2020 &amp; python</span><a href="#origin-lab-2020-amp-python" class="header-anchor">#</a></h1><h1><span id="se-cai-da-pei">色彩搭配</span><a href="#se-cai-da-pei" class="header-anchor">#</a></h1><h2><span id="se-xiang-liang-du-bao-he-du">色相，亮度，饱和度</span><a href="#se-xiang-liang-du-bao-he-du" class="header-anchor">#</a></h2><p>从可视化编码的角度对颜色进行分析，可以将颜色分为色相、亮度和饱和度三个视觉通道。</p>
<p><strong>色相</strong> 即色彩的相貌和特征。自然界中色彩的种类很多，色相指色彩的种类和名称。如；红、橙、黄、绿、青、蓝、紫等等颜色的种类变化就叫色相。</p>
<p><strong>明度</strong> 指色彩的亮度。颜色有深浅、明暗的变化。比如，深黄、中黄、淡黄、柠檬黄等黄色在明度上就不一样，紫红、深红、玫瑰红、大红、朱红、桔红等红颜色在亮度上也不尽相同。这些颜色在明暗、深浅上的不同变化，也就是色彩的又一重要特征一一明度变化。</p>
<p><strong>饱和度</strong> 色彩的鲜艳程度，饱和度越高,表现越鲜明,饱和度较低,表现则较黯淡。</p>
<p><a href="https://vis.baidu.com/chartcolor/color/">https://vis.baidu.com/chartcolor/color/</a></p>
<p><a href="https://antv.vision/zh/docs/specification/principles/visual">https://antv.vision/zh/docs/specification/principles/visual</a></p>
<p><a href="https://flourish.studio/2019/03/18/pokemon-go/">https://flourish.studio/2019/03/18/pokemon-go/</a></p>
<p><a href="https://www.webdesignrankings.com/resources/lolcolors/">https://www.webdesignrankings.com/resources/lolcolors/</a></p>
<p><a href="https://nipponcolors.com/#sodenkaracha">https://nipponcolors.com/#sodenkaracha</a></p>
<h1><span id="zi-ti-he-zi-hao-chu-li">字体和字号处理</span><a href="#zi-ti-he-zi-hao-chu-li" class="header-anchor">#</a></h1><h1><span id="ai-xuan-ran-hou-qi-chu-li">AI渲染——后期处理</span><a href="#ai-xuan-ran-hou-qi-chu-li" class="header-anchor">#</a></h1><ol>
<li>可以自备一些搭配较好的颜色方案。</li>
</ol>
<h2><span id="sci">SCI</span><a href="#sci" class="header-anchor">#</a></h2><h3><span id="ban-mian">版面</span><a href="#ban-mian" class="header-anchor">#</a></h3><p>一般占半个版面宽度，是8cm。高度不限但不能太高。</p>
<p>2/3版图</p>
<p>一般占2/3个版面宽度，是12-15cm，高度不限，但不能太高。</p>
<p>全版图</p>
<p>总宽度是17cm，占两栏，高度不限，但不能太高。</p>
<p>A4 21cm * 29.7cm</p>
<p><img src="/2020/09/04/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Borigin/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201017151830388.png" alt="image-20201017151830388"></p>
<p><img src="https://pic1.zhimg.com/d7fc70f4a60ffc10c495167b494e72d4_r.jpg" alt="preview"></p>
<p><img src="/2020/09/04/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Borigin/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201017154840184.png" alt="image-20201017154840184"></p>
<p><img src="/2020/09/04/%E5%8F%AF%E8%A7%86%E5%8C%96%E4%B9%8Borigin/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20201017160310517.png" alt="image-20201017160310517"></p>
<p><a href="http://abacus.bates.edu/~ganderso/biology/resources/writing/HTWtablefigs.html">http://abacus.bates.edu/~ganderso/biology/resources/writing/HTWtablefigs.html</a></p>
<p>字号的对应关系 复制图形时，会根据Preferences-Options菜单下Page选项卡中Ratio进行缩放，在默认设置下，Ratio为40%，则字号的对应关系就是： 复制到Word中的字号 = Origin中的字号 <em> Ratio 简单的说，Origin中设置字号30，复制到Word就是30</em>40%=12磅。线宽同理计算。 导出图形时，默认比例为100%，则相应的字号为30磅。  重要提示！重要提示：以上字号对应关系成立的重要前提是： ①Scale Factor = 1，如图5所示。（否则在Origin中字形的大小会随着图层大小而变化，但字号显示却不会变） ②复制到Word之后不要缩放图形！！！但是有时候图形尺寸（Page或Layer的尺寸）过大，Word会自动适应宽度，等于是压缩了图形大小，这个也一定要注意！！ Tips：我的Ratio习惯设为50%，是由于旧版本Origin字号不支持10.5号的输入，所以输入21复制到Word中就是10.5，但Origin2017及之后的版本可以直接输入10.5号字。</p>
]]></content>
      <categories>
        <category>数据可视化</category>
      </categories>
      <tags>
        <tag>绘图</tag>
        <tag>origin</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之业务分析</title>
    <url>/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8B%E4%B8%9A%E5%8A%A1%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>业务能力</p>
<a id="more"></a>
<h1><span id="ye-wu-neng-li">业务能力</span><a href="#ye-wu-neng-li" class="header-anchor">#</a></h1><h2><span id="ru-he-li-jie-ye-wu-shu-ju">如何理解业务数据</span><a href="#ru-he-li-jie-ye-wu-shu-ju" class="header-anchor">#</a></h2><ol>
<li>每列的含义</li>
<li>数据分析<ol>
<li>用户数据<ol>
<li>主要是指用户的基本信息（性别，年龄)</li>
</ol>
</li>
<li>行为数据<ol>
<li>指用户做了什么（停留时间)</li>
<li>做了什么，时长，点击次数等等</li>
</ol>
</li>
<li>产品数据<ol>
<li>产品名称，类别等等</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2><span id="chang-jian-de-ye-wu-zhi-biao">常见的业务指标</span><a href="#chang-jian-de-ye-wu-zhi-biao" class="header-anchor">#</a></h2><ol>
<li><p>指标的含义？维度的含义？如果你不能衡量就不能增长</p>
</li>
<li><p>用户的相关的指标</p>
<ol>
<li><p>活跃用户</p>
<ol>
<li>定义：时间：日DAU(Daily Active User)；周WAU(Weekly Active User)；月MAU(Monthly Active User)；</li>
<li>动作：打开；支付；</li>
<li>活跃率：活跃用户/总人数</li>
<li>去重用户(统计，至少)</li>
<li>是否与用户保持粘性</li>
</ol>
</li>
<li><p>留存</p>
<ol>
<li><p>定义：如关注公众号；取消关注；</p>
</li>
<li><p>相反：流失</p>
</li>
<li><p>第一天新增用户，在第N天使用过产业的用户数/第一天新增用户数</p>
<p>次日留存率；第N日留存率。</p>
</li>
<li><p>不同时期的流失情况，找流失原因</p>
</li>
</ol>
</li>
<li><p>新增</p>
<ol>
<li>日新增用户</li>
<li>通过不同渠道的分析，可以判断不同渠道的推广效果</li>
</ol>
</li>
</ol>
</li>
<li><p>行为数据</p>
<ol>
<li><p>PV：访问次数 Page View；页面浏览的字数；看了几个页面</p>
<p>看用户的喜好</p>
</li>
<li><p>UV: 访问人数 Unique Visitor；</p>
</li>
</ol>
</li>
</ol>
<ol>
<li><p>转发率</p>
<ol>
<li>转化率：转发某功能的用户数/看见该功能的用户数</li>
</ol>
</li>
<li><p>转化率</p>
<ol>
<li>如店铺转化率</li>
<li>广告转化率</li>
</ol>
</li>
<li><p>K因子</p>
<ol>
<li>衡量推荐效果</li>
<li>=平均某个用户向多少人发出邀请/接受到邀请的人转化为新用户的转化率</li>
</ol>
</li>
</ol>
<ol>
<li><p>产品指标</p>
<ol>
<li>总量：成交额；成交量；访问时长</li>
<li>人均：人均付费；付费用户；人均访问时长</li>
<li>付费：付费率（付费人数）；复购率（消费两次以上的人数)；</li>
<li>产品：热销；好评；差评产；</li>
</ol>
</li>
</ol>
<h2><span id="ru-he-xuan-ze-zhi-biao">如何选择指标</span><a href="#ru-he-xuan-ze-zhi-biao" class="header-anchor">#</a></h2><ol>
<li>好的指标是比率</li>
<li>北极星指标：核心指标</li>
</ol>
<p><img src="/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8B%E4%B8%9A%E5%8A%A1%E5%88%86%E6%9E%90/MyBlog/MyBlog/hexo/source/_posts/数据分析技能/image-20200904160525186.png" alt="image-20200904160525186" style="zoom:25%;"></p>
<hr>
<p><img src="/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8B%E4%B8%9A%E5%8A%A1%E5%88%86%E6%9E%90/MyBlog/MyBlog/hexo/source/_posts/数据分析技能/image-20200904160536010.png" alt="image-20200904160536010" style="zoom: 25%;"></p>
<h1><span id="shu-ju-fen-xi">数据分析</span><a href="#shu-ju-fen-xi" class="header-anchor">#</a></h1><h2><span id="si-wei">思维</span><a href="#si-wei" class="header-anchor">#</a></h2><h3><span id="jie-gou-hua-si-wei">结构化思维</span><a href="#jie-gou-hua-si-wei" class="header-anchor">#</a></h3><p>金字塔原理：</p>
<pre><code>   1. 核心论点
              1. 假设
              2. 问题
              3. 原因
              4. 预测
            2. 结构拆解
                     1. 
         3. MECE
                4. 验证
</code></pre><p>层层拆解</p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析技能</title>
    <url>/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8A%80%E8%83%BD/</url>
    <content><![CDATA[<p><img src="/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%8A%80%E8%83%BD/数据分析的职业规划.png" alt="数据分析的职业规划"></p>
<p><a href="https://ask.hellobi.com/blog/qinlu/sitemap/">https://ask.hellobi.com/blog/qinlu/sitemap/</a></p>
<p><a href="https://www.bilibili.com/video/BV1a7411f7Vi?from=search&amp;seid=11027433631041028142">https://www.bilibili.com/video/BV1a7411f7Vi?from=search&amp;seid=11027433631041028142</a></p>
<h1><span id="sql">SQL</span><a href="#sql" class="header-anchor">#</a></h1><p>视频</p>
<p>练习</p>
<h1><span id="tong-ji-xue">统计学</span><a href="#tong-ji-xue" class="header-anchor">#</a></h1><p><a href="https://cloud.tencent.com/developer/article/1586506">https://cloud.tencent.com/developer/article/1586506</a></p>
<p><a href="https://www.cnblogs.com/pandaboy1123/p/14020953.html">https://www.cnblogs.com/pandaboy1123/p/14020953.html</a></p>
<p><a href="http://webdataanalysis.net/data-analysis-method/t-test-and-chi-square-test/">http://webdataanalysis.net/data-analysis-method/t-test-and-chi-square-test/</a></p>
<h1><span id="ye-wu-neng-li">业务能力</span><a href="#ye-wu-neng-li" class="header-anchor">#</a></h1><p><a href="https://www.bilibili.com/video/BV1a7411f7Vi?from=search&amp;seid=11027433631041028142">https://www.bilibili.com/video/BV1a7411f7Vi?from=search&amp;seid=11027433631041028142</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=Mzg4OTUyMzY4OQ==&amp;mid=2247490150&amp;idx=1&amp;sn=60a9012fc82a63950f44dbe71cc68683&amp;source=41#wechat_redirect">https://mp.weixin.qq.com/s?__biz=Mzg4OTUyMzY4OQ==&amp;mid=2247490150&amp;idx=1&amp;sn=60a9012fc82a63950f44dbe71cc68683&amp;source=41#wechat_redirect</a></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析技能</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之SQL</title>
    <url>/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BSQL/</url>
    <content><![CDATA[<h1><span id="sql">SQL</span><a href="#sql" class="header-anchor">#</a></h1><p><img src="/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BSQL/MyBlog/MyBlog/hexo/source/_posts/数据分析技能/数据分析——SQL.png" alt></p>
<a id="more"></a>
<h2><span id="xue-hui-zhi-jie-ba-bie-ren-de-zhi-shi-zhuang-jin-zi-ji-de-nao-zi-li">学会直接把别人的知识装进自己的脑子里</span><a href="#xue-hui-zhi-jie-ba-bie-ren-de-zhi-shi-zhuang-jin-zi-ji-de-nao-zi-li" class="header-anchor">#</a></h2><p><a href="https://www.zhihu.com/xen/market/personal-works-all/houziliaorenwu?zh_hide_tab_bar=true">https://www.zhihu.com/xen/market/personal-works-all/houziliaorenwu?zh_hide_tab_bar=true</a></p>
<h2><span id="leetcode-amp-nowcoder">LeetCode &amp; NowCoder</span><a href="#leetcode-amp-nowcoder" class="header-anchor">#</a></h2><p><a href="https://leetcode.com/problemset/database/">https://leetcode.com/problemset/database/</a></p>
<p><a href="https://www.nowcoder.com/ta/sql">https://www.nowcoder.com/ta/sql</a></p>
<h2><span id="guan-xi-xing-shu-ju-ku">关系型数据库</span><a href="#guan-xi-xing-shu-ju-ku" class="header-anchor">#</a></h2><h3><span id="mysql-shu-ju-lei-xing">MySQL数据类型</span><a href="#mysql-shu-ju-lei-xing" class="header-anchor">#</a></h3><p>主要提供了三种类型，分别是文本，数字和日期。</p>
<h2><span id="mysql-shu-ju-lei-xing">MySQL 数据类型</span><a href="#mysql-shu-ju-lei-xing" class="header-anchor">#</a></h2><p>在 MySQL 中，有三种主要的类型：文本、数字和日期/时间类型。</p>
<h3><span id="text-lei-xing">Text 类型：</span><a href="#text-lei-xing" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">数据类型</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">CHAR(size)</td>
<td style="text-align:left">保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度。最多 255 个字符。</td>
</tr>
<tr>
<td style="text-align:left">VARCHAR(size)</td>
<td style="text-align:left">保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度。最多 255 个字符。注释：如果值的长度大于 255，则被转换为 TEXT 类型。</td>
</tr>
<tr>
<td style="text-align:left">TINYTEXT</td>
<td style="text-align:left">存放最大长度为 255 个字符的字符串。</td>
</tr>
<tr>
<td style="text-align:left">TEXT</td>
<td style="text-align:left">存放最大长度为 65,535 个字符的字符串。</td>
</tr>
<tr>
<td style="text-align:left">BLOB</td>
<td style="text-align:left">用于 BLOBs (Binary Large OBjects)。存放最多 65,535 字节的数据。</td>
</tr>
<tr>
<td style="text-align:left">MEDIUMTEXT</td>
<td style="text-align:left">存放最大长度为 16,777,215 个字符的字符串。</td>
</tr>
<tr>
<td style="text-align:left">MEDIUMBLOB</td>
<td style="text-align:left">用于 BLOBs (Binary Large OBjects)。存放最多 16,777,215 字节的数据。</td>
</tr>
<tr>
<td style="text-align:left">LONGTEXT</td>
<td style="text-align:left">存放最大长度为 4,294,967,295 个字符的字符串。</td>
</tr>
<tr>
<td style="text-align:left">LONGBLOB</td>
<td style="text-align:left">用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。</td>
</tr>
<tr>
<td style="text-align:left">ENUM(x,y,z,etc.)</td>
<td style="text-align:left">允许你输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。注释：这些值是按照你输入的顺序存储的。可以按照此格式输入可能的值：ENUM(‘X’,’Y’,’Z’)</td>
</tr>
<tr>
<td style="text-align:left">SET</td>
<td style="text-align:left">与 ENUM 类似，SET 最多只能包含 64 个列表项，不过 SET 可存储一个以上的值。</td>
</tr>
</tbody>
</table>
</div>
<h3><span id="number-lei-xing">Number 类型：</span><a href="#number-lei-xing" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">数据类型</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">TINYINT(size)</td>
<td style="text-align:left">-128 到 127 常规。0 到 255 无符号*。在括号中规定最大位数。</td>
</tr>
<tr>
<td style="text-align:left">SMALLINT(size)</td>
<td style="text-align:left">-32768 到 32767 常规。0 到 65535 无符号*。在括号中规定最大位数。</td>
</tr>
<tr>
<td style="text-align:left">MEDIUMINT(size)</td>
<td style="text-align:left">-8388608 到 8388607 普通。0 to 16777215 无符号*。在括号中规定最大位数。</td>
</tr>
<tr>
<td style="text-align:left">INT(size)</td>
<td style="text-align:left">-2147483648 到 2147483647 常规。0 到 4294967295 无符号*。在括号中规定最大位数。</td>
</tr>
<tr>
<td style="text-align:left">BIGINT(size)</td>
<td style="text-align:left">-9223372036854775808 到 9223372036854775807 常规。0 到 18446744073709551615 无符号*。在括号中规定最大位数。</td>
</tr>
<tr>
<td style="text-align:left">FLOAT(size,d)</td>
<td style="text-align:left">带有浮动小数点的小数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>
</tr>
<tr>
<td style="text-align:left">DOUBLE(size,d)</td>
<td style="text-align:left">带有浮动小数点的大数字。在括号中规定最大位数。在 d 参数中规定小数点右侧的最大位数。</td>
</tr>
<tr>
<td style="text-align:left">DECIMAL(size,d)</td>
<td style="text-align:left">作为字符串存储的 DOUBLE 类型，允许固定的小数点。</td>
</tr>
</tbody>
</table>
</div>
<p>* 这些整数类型拥有额外的选项 UNSIGNED。通常，整数可以是负数或正数。如果添加 UNSIGNED 属性，那么范围将从 0 开始，而不是某个负数。</p>
<h3><span id="date-lei-xing">Date 类型：</span><a href="#date-lei-xing" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">数据类型</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">DATE()</td>
<td style="text-align:left">日期。格式：YYYY-MM-DD注释：支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’</td>
</tr>
<tr>
<td style="text-align:left">DATETIME()</td>
<td style="text-align:left">*日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS注释：支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’</td>
</tr>
<tr>
<td style="text-align:left">TIMESTAMP()</td>
<td style="text-align:left">*时间戳。TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的描述来存储。格式：YYYY-MM-DD HH:MM:SS注释：支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC</td>
</tr>
<tr>
<td style="text-align:left">TIME()</td>
<td style="text-align:left">时间。格式：HH:MM:SS 注释：支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’</td>
</tr>
<tr>
<td style="text-align:left">YEAR()</td>
<td style="text-align:left">2 位或 4 位格式的年。注释：4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。</td>
</tr>
</tbody>
</table>
</div>
<p>* 即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE 查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 YYYYMMDDHHMMSS、YYMMDDHHMMSS、YYYYMMDD 或 YYMMDD。</p>
<h2><span id="day-ox00-ru-men">Day Ox00 入门：</span><a href="#day-ox00-ru-men" class="header-anchor">#</a></h2><p><a href="https://www.w3school.com.cn/sql/sql_syntax.asp">https://www.w3school.com.cn/sql/sql_syntax.asp</a></p>
<p>通过SQL使得数据操作员有能力查询，修改数据库。</p>
<h3><span id="what">What</span><a href="#what" class="header-anchor">#</a></h3><p>SQL：结构化查询语言。SQL对大小写不敏感。</p>
<p>SQL语句后面的分号？有些数据库系统要求每条SQL命令的末端使用分号，来表示语句的结束。</p>
<p>分类：</p>
<ol>
<li><p>数据操作语言（DML)</p>
<p>这部分包括查询和更新指令。</p>
<ul>
<li>SELECT - 从数据库表中获取数据</li>
<li>UPDATE - 更新数据库表中的数据</li>
<li>DELETE - 从数据库表中删除数据</li>
<li>INSERT INTO - 向数据库表中插入数据</li>
</ul>
</li>
<li><p>数据定义语言 (DDL)</p>
<p>这部分包括创建和删除表格，还有定义索引(键)，规定表之间的链接，和表间的约束。</p>
<p>SQL 中最重要的 DDL 语句:</p>
<p>​        CREATE DATABASE - 创建新数据库</p>
<p>​        ALTER DATABASE - 修改数据库</p>
<p>​        CREATE TABLE - 创建新表</p>
<p>​        ALTER TABLE - 变更（改变）数据库表</p>
<p>​        DROP TABLE - 删除表</p>
<p>​        CREATE INDEX - 创建索引（搜索键）</p>
<p>​        DROP INDEX - 删除索引</p>
</li>
</ol>
<h2><span id="day-ox00-jian-dan-cha-xun">Day Ox00 简单查询：</span><a href="#day-ox00-jian-dan-cha-xun" class="header-anchor">#</a></h2><h3><span id="select-cha-xun-yu-ju">SELECT : 查询语句</span><a href="#select-cha-xun-yu-ju" class="header-anchor">#</a></h3><p>不带条件查询语句</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT 列名称1, 列名称2 FROM 表名称</span><br><span class="line">SELECT * FROM 表名称</span><br><span class="line">SELECT DISTINCT 列名称 FROM 表名称 //去除重复值</span><br></pre></td></tr></tbody></table></figure>
<p>有条件查询语句</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT 列名称 FROM 表名称 WHERE 列 运算符 值</span><br></pre></td></tr></tbody></table></figure>
<p>WHERE 过滤单条记录</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">操作符	描述</span><br><span class="line">=	等于</span><br><span class="line">&lt;&gt;	不等于</span><br><span class="line">&gt;	大于</span><br><span class="line">&lt;	小于</span><br><span class="line">&gt;=	大于等于</span><br><span class="line">&lt;=	小于等于</span><br><span class="line">BETWEEN	在某个范围内</span><br><span class="line">LIKE	搜索某种模式</span><br><span class="line">注释：在某些版本的 SQL 中，操作符 &lt;&gt; 可以写为 !=。</span><br></pre></td></tr></tbody></table></figure>
<p>WHERE 过滤两个以上的条件记录</p>
<p> AND / OR </p>
<p>select 查询出来的结果相当于一个表：结果表</p>
<h3><span id="qu-chong-distinct">去重 distinct</span><a href="#qu-chong-distinct" class="header-anchor">#</a></h3><p>select distinct</p>
<p>select count(distinct )</p>
<h3><span id="cha-ru-geng-xin-shan-chu">插入、更新、删除</span><a href="#cha-ru-geng-xin-shan-chu" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">INSERT INTO table_name (列1, 列2,...) VALUES (值1, 值2,....)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">UPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">DELETE 语句</span><br><span class="line">DELETE 语句用于删除表中的行。</span><br><span class="line">DELETE FROM 表名称 WHERE 列名称 = 值</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="lian-jie">连接</span><a href="#lian-jie" class="header-anchor">#</a></h2><p>在使用 <strong>join</strong> 时，<strong>on</strong> 和 <strong>where</strong> 条件的区别如下：</p>
<ul>
<li>1、 <strong>on</strong> 条件是在生成临时表时使用的条件，它不管 <strong>on</strong> 中的条件是否为真，都会返回左边表中的记录。</li>
<li>2、<strong>where</strong> 条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有 <strong>left join</strong> 的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</li>
<li>on是筛选调节</li>
</ul>
<p>交叉连接</p>
<p>左</p>
<p>右</p>
<p>全</p>
<p>内</p>
<h4><span id="cross-join">cross join</span><a href="#cross-join" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select *from 日销 as a cross join 日销 as b      on datediff(a.日期, b.日期) = 1;</span><br></pre></td></tr></tbody></table></figure>
<h1><span id="mian-shi-ti">面试题</span><a href="#mian-shi-ti" class="header-anchor">#</a></h1><h3><span id="na-xie-wei-zhi-ke-yi-shi-yong-cha-xun-select-de-jie-guo-zuo-wei-biao-ge">那些位置可以使用查询select的结果作为表格</span><a href="#na-xie-wei-zhi-ke-yi-shi-yong-cha-xun-select-de-jie-guo-zuo-wei-biao-ge" class="header-anchor">#</a></h3><h2><span id="ji-shu">计数</span><a href="#ji-shu" class="header-anchor">#</a></h2><h3><span id="if">if</span><a href="#if" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT IF(sva=1,"男","女") AS s FROM table_name </span><br><span class="line">WHERE sva != '';</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="case-when">case when</span><a href="#case-when" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT CASE sva</span><br><span class="line">WHEN 1 THEN '男' </span><br><span class="line">　　ELSE '女' END AS s FROM table_name</span><br><span class="line">WHERE sva != '';</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT CASE 1 </span><br><span class="line">WHEN 1 THEN 'one'</span><br><span class="line">WHEN 2 THEN 'two' </span><br><span class="line">   ELSE 'more' END AS test</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="tong-ji">统计</span><a href="#tong-ji" class="header-anchor">#</a></h2><h2><span id="shi-jian">时间</span><a href="#shi-jian" class="header-anchor">#</a></h2><h3><span id="ge-shi">格式</span><a href="#ge-shi" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SQL Date 数据类型</span><br><span class="line">MySQL 使用下列数据类型在数据库中存储日期或日期/时间值：</span><br><span class="line"></span><br><span class="line">DATE - 格式 YYYY-MM-DD</span><br><span class="line">DATETIME - 格式: YYYY-MM-DD HH:MM:SS</span><br><span class="line">TIMESTAMP - 格式: YYYY-MM-DD HH:MM:SS</span><br><span class="line">YEAR - 格式 YYYY 或 YY</span><br><span class="line">SQL Server 使用下列数据类型在数据库中存储日期或日期/时间值：</span><br><span class="line"></span><br><span class="line">DATE - 格式 YYYY-MM-DD</span><br><span class="line">DATETIME - 格式: YYYY-MM-DD HH:MM:SS</span><br><span class="line">SMALLDATETIME - 格式: YYYY-MM-DD HH:MM:SS</span><br><span class="line">TIMESTAMP - 格式: 唯一的数字</span><br></pre></td></tr></tbody></table></figure>
<p>DATEDIFF ( datepart , startdate , enddate )</p>
<p><img src="https://iknow-pic.cdn.bcebos.com/eaf81a4c510fd9f9d19723c3202dd42a2934a493?x-bce-process%3Dimage%2Fresize%2Cm_lfit%2Cw_600%2Ch_800%2Climit_1%2Fquality%2Cq_85%2Fformat%2Cf_jpg" alt="img"></p>
<h3><span id="wen-ben-he-ri-qi-zhuan-hua">文本和日期转化</span><a href="#wen-ben-he-ri-qi-zhuan-hua" class="header-anchor">#</a></h3><h4><span id="to-date-to-char">to_date,to_char</span><a href="#to-date-to-char" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select to_char(to_date('2002-08-26','yyyy-mm-dd'),'day') from dual;&nbsp;&nbsp;&nbsp;&nbsp; //星期一&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</span><br><span class="line">select to_char(to_date('2002-08-26','yyyy-mm-dd'),'day',</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「天堂地址不详Y」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https://blog.csdn.net/tiantangdizhibuxiang/article/details/81035305</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="ri-qi-bi-jiao">日期比较</span><a href="#ri-qi-bi-jiao" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line"> b_table.career_level,</span><br><span class="line"> COUNT (a_table.uid ) </span><br><span class="line">FROM</span><br><span class="line"> "и߼data1" AS a_table</span><br><span class="line"> INNER JOIN "и߼data2" AS b_table ON a_table.uid = b_table.uid </span><br><span class="line">WHERE</span><br><span class="line"> a_table.d &gt;= to_date('2021-01-01', 'YYYY-MM-DD') </span><br><span class="line"> AND a_table.d &lt;= to_date('2021-01-31', 'YYYY-MM-DD') </span><br><span class="line">GROUP BY</span><br><span class="line"> b_table.career_level;</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="geng-gai-shu-ju-lei-xing">更改数据类型</span><a href="#geng-gai-shu-ju-lei-xing" class="header-anchor">#</a></h3><h4><span id="cast-expression-as-type-han-shu-ke-yi-jiang-ren-he-lei-xing-de-zhi-zhuan-huan-wei-ju-you-zhi-ding-lei-xing-de-zhi-li-yong-gai-han-shu-ke-yi-zhi-jie-zai-shu-ju-ku-ceng-chu-li-bu-fen-yin-shu-ju-lei-xing-yin-qi-de-wen-ti">CAST(expression AS TYPE) 函数可以将任何类型的值转换为具有指定类型的值,利用该函数可以直接在数据库层处理部分因数据类型引起的问题。</span><a href="#cast-expression-as-type-han-shu-ke-yi-jiang-ren-he-lei-xing-de-zhi-zhuan-huan-wei-ju-you-zhi-ding-lei-xing-de-zhi-li-yong-gai-han-shu-ke-yi-zhi-jie-zai-shu-ju-ku-ceng-chu-li-bu-fen-yin-shu-ju-lei-xing-yin-qi-de-wen-ti" class="header-anchor">#</a></h4><p>SELECT CAST( 1231 AS BINARY ) AS result </p>
<p>SELECT CAST(1995 AS CHAR) as result</p>
<p>SELECT CAST(‘2019-08-29 16:50:21’ as date) as result</p>
<h3><span id="data-cao-zuo-han-shu">Data 操作函数</span><a href="#data-cao-zuo-han-shu" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">函数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_now.asp">NOW()</a></td>
<td style="text-align:left">返回当前的日期和时间</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_curdate.asp">CURDATE()</a></td>
<td style="text-align:left">返回当前的日期</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_curtime.asp">CURTIME()</a></td>
<td style="text-align:left">返回当前的时间</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_date.asp">DATE()</a></td>
<td style="text-align:left">提取日期或日期/时间表达式的日期部分</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_extract.asp">EXTRACT()</a></td>
<td style="text-align:left">返回日期/时间按的单独部分</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_date_add.asp">DATE_ADD()</a></td>
<td style="text-align:left">给日期添加指定的时间间隔</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_date_sub.asp">DATE_SUB()</a></td>
<td style="text-align:left">从日期减去指定的时间间隔</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_datediff_mysql.asp">DATEDIFF()</a></td>
<td style="text-align:left">返回两个日期之间的天数</td>
</tr>
<tr>
<td style="text-align:left"><a href="https://www.w3school.com.cn/sql/func_date_format.asp">DATE_FORMAT()</a></td>
<td style="text-align:left">用不同的格式显示日期/时间</td>
</tr>
</tbody>
</table>
</div>
<h4><span id="datediff-ri-qi-chai">datediff 日期差</span><a href="#datediff-ri-qi-chai" class="header-anchor">#</a></h4><ol>
<li>datediff 返回跨两个指定日期的日期和时间边界数。<br>select datediff(day,’2004-09-01’,’2004-09-18’)   —返回：17</li>
</ol>
<p>datediff(日期1, 日期2)：</p>
<p>得到的结果是日期1与日期2相差的天数。</p>
<p>如果日期1比日期2大，结果为正；如果日期1比日期2小，结果为负。</p>
<p>timestampdiff(时间类型, 日期1, 日期2)</p>
<p>这个函数和上面diffdate的正、负号规则刚好相反。</p>
<p>日期1大于日期2，结果为负，日期1小于日期2，结果为正。</p>
<h4><span id="dateadd-ri-qi-jia-jian-dateadd-type-zeng-jia-zhi-ri-qi-ji-chu">dateadd 日期加减 dateadd(type, 增加值，日期基础)</span><a href="#dateadd-ri-qi-jia-jian-dateadd-type-zeng-jia-zhi-ri-qi-ji-chu" class="header-anchor">#</a></h4><p>DATEADD(datepart,number,date)</p>
<p>datepart：y-年份，m-月份，d-日期<br>date 参数是合法的日期表达式。number 是您希望添加的间隔数；对于未来的时间，此数是正数，对于过去的时间，此数是负数。</p>
<p>例：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select DATEADD(m,1,getdate()),DATEADD(m,1,CONVERT(datetime,'08/01/2019',101))</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="datepart-ti-qu-ri-qi-zhong-de-nian-yue-ri-datepart-m-y-d-ri-qi"><strong>datepart 提取日期中的年月日</strong>(datepart(m/y/d), 日期)</span><a href="#datepart-ti-qu-ri-qi-zhong-de-nian-yue-ri-datepart-m-y-d-ri-qi" class="header-anchor">#</a></h4><h4><span id="day-month-year-ke-yi-yu-datepart-dui-zhao-yi-xia">day(), month(),year() —可以与datepart对照一下</span><a href="#day-month-year-ke-yi-yu-datepart-dui-zhao-yi-xia" class="header-anchor">#</a></h4><ol>
<li>datepart 返回代表指定日期的指定日期部分的整数。<br> SELECT DATEPART(month, ‘2004-10-15’)  —返回 10</li>
</ol>
<p><strong>DATEPART(param,date)</strong></p>
<p><img src="https://img2018.cnblogs.com/blog/1206977/201911/1206977-20191101141406910-243495753.png" alt="img"></p>
<h4><span id="ti-qu-zi-fu-chuan">提取字符串</span><a href="#ti-qu-zi-fu-chuan" class="header-anchor">#</a></h4><ol>
<li>datename 返回代表指定日期的指定日期部分的字符串<br>SELECT datename(weekday, ‘2004-10-15’)  —返回：星期五</li>
</ol>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">在SQL数据库中，有一类函数是不得不提的，那就是Sql Server日期时间函数，这是Sql Server处理日期和时间最常用的函数，下面就将为介绍这类函数。</span><br><span class="line"></span><br><span class="line">Sql Server日期与时间函数:</span><br><span class="line">.&nbsp; 当前系统日期、时间</span><br><span class="line">&nbsp;&nbsp;&nbsp; select getdate()&nbsp;</span><br><span class="line"></span><br><span class="line">2. dateadd&nbsp; 在向指定日期加上一段时间的基础上，返回新的 datetime 值</span><br><span class="line">&nbsp;&nbsp; 例如：向日期加上2天</span><br><span class="line">&nbsp;&nbsp; select dateadd(day,2,'2004-10-15')&nbsp; --返回：2004-10-17 00:00:00.000</span><br><span class="line"></span><br><span class="line">3. datediff 返回跨两个指定日期的日期和时间边界数。</span><br><span class="line">&nbsp;&nbsp; select datediff(day,'2004-09-01','2004-09-18')&nbsp;&nbsp; --返回：17</span><br><span class="line"></span><br><span class="line">4. datepart 返回代表指定日期的指定日期部分的整数。</span><br><span class="line">&nbsp; SELECT DATEPART(month, '2004-10-15')&nbsp; --返回 10</span><br><span class="line"></span><br><span class="line">5. datename 返回代表指定日期的指定日期部分的字符串</span><br><span class="line">&nbsp;&nbsp; SELECT datename(weekday, '2004-10-15')&nbsp; --返回：星期五</span><br><span class="line"></span><br><span class="line">6. day(), month(),year() --可以与datepart对照一下</span><br><span class="line"></span><br><span class="line">select 当前日期=convert(varchar(10),getdate(),120)</span><br><span class="line">,当前时间=convert(varchar(8),getdate(),114)</span><br><span class="line"></span><br><span class="line">select datename(dw,'2004-10-15')</span><br><span class="line"></span><br><span class="line">select 本年第多少周=datename(week,'2004-10-15')</span><br><span class="line">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,今天是周几=datename(weekday,'2004-10-15')#p#</span><br><span class="line"></span><br><span class="line">Sql Server日期函数 参数/功能</span><br><span class="line">GetDate( )&nbsp; 返回系统目前的日期与时间</span><br><span class="line">DateDiff (interval,date1,date2) 以interval 指定的方式，返回date2 与date1两个日期之间的差值 date2-date1</span><br><span class="line">DateAdd (interval,number,date) 以interval指定的方式，加上number之后的日期</span><br><span class="line">DatePart (interval,date) 返回日期date中，interval指定部分所对应的整数值</span><br><span class="line">DateName (interval,date) 返回日期date中，interval指定部分所对应的字符串名称</span><br><span class="line"></span><br><span class="line">参数 interval的设定值如下：</span><br><span class="line"></span><br><span class="line">值 缩 写（Sql Server） (Access 和 ASP) 说明</span><br><span class="line">Year Yy yyyy 年 1753 ~ 9999</span><br><span class="line">Quarter Qq q&nbsp;&nbsp; 季 1 ~ 4</span><br><span class="line">Month Mm m&nbsp;&nbsp; 月1 ~ 12</span><br><span class="line">Day of year Dy y&nbsp; 一年的日数,一年中的第几日 1-366</span><br><span class="line">Day Dd d&nbsp;&nbsp; 日，1-31</span><br><span class="line">Weekday Dw w 一周的日数，一周中的第几日 1-7</span><br><span class="line">Week Wk ww&nbsp; 周，一年中的第几周 0 ~ 51</span><br><span class="line">Hour Hh h&nbsp;&nbsp; 时0 ~ 23</span><br><span class="line">Minute Mi n&nbsp; 分钟0 ~ 59</span><br><span class="line">Second Ss s 秒 0 ~ 59</span><br><span class="line">Millisecond Ms - 毫秒 0 ~ 999</span><br><span class="line"></span><br><span class="line">access 和 asp 中用date()和now()取得系统日期时间；其中DateDiff,DateAdd,DatePart也同是能用于Access和asp中，这些函数的用法也类似</span><br><span class="line"></span><br><span class="line">Sql Server日期函数举例：</span><br><span class="line">1.GetDate() 用于sql server :select GetDate()</span><br><span class="line"></span><br><span class="line">2.DateDiff('s','2005-07-20','2005-7-25 22:56:32')返回值为 514592 秒</span><br><span class="line">DateDiff('d','2005-07-20','2005-7-25 22:56:32')返回值为 5 天</span><br><span class="line"></span><br><span class="line">3.DatePart('w','2005-7-25 22:56:32')返回值为 2 即星期一(周日为1，周六为7)</span><br><span class="line">DatePart('d','2005-7-25 22:56:32')返回值为 25即25号</span><br><span class="line">DatePart('y','2005-7-25 22:56:32')返回值为 206即这一年中第206天</span><br><span class="line">DatePart('yyyy','2005-7-25 22:56:32')返回值为 2005即2005年</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="lian-xu">连续</span><a href="#lian-xu" class="header-anchor">#</a></h2><p><strong>连续3天登录用户</strong></p>
<h4><span id="guan-jian-xing-si-lu">关键性思路</span><a href="#guan-jian-xing-si-lu" class="header-anchor">#</a></h4><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. 窗口函数排序，rank()</span><br><span class="line">2. 相减（新变量）</span><br><span class="line">3. 分组新变量</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://mmbiz.qpic.cn/mmbiz/1OYP1AZw0W3tSUvjyS5cAyXmHujLfFa9Nx5d8OQokkByCJDol5JspFxKsbia9FRJ8ANcHFqcdPI2bdLVSpODPGw/640?wx_fmt=other&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz/1OYP1AZw0W3tSUvjyS5cAyXmHujLfFa97gYf9gzDQG7UiczUibHqbo8tnvODSkEuXBPybu4PTeHA1DR5u1080PfQ/640?wx_fmt=other&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<h3><span id="kuo-zhan">扩展</span><a href="#kuo-zhan" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2><span id="pai-xu">排序</span><a href="#pai-xu" class="header-anchor">#</a></h2><h2><span id="ji-qiao">技巧</span><a href="#ji-qiao" class="header-anchor">#</a></h2><h3><span id="qu-chong">去重</span><a href="#qu-chong" class="header-anchor">#</a></h3><p>distinct</p>
<h3><span id="limit">limit</span><a href="#limit" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">limit子句用于限制查询结果返回的数量。</span><br><span class="line"></span><br><span class="line">用法：【select * from tableName limit i,n 】</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line"></span><br><span class="line">tableName : 为数据表；</span><br><span class="line">i : 为查询结果的索引值（默认从0开始）；下标是0</span><br><span class="line">n : 为查询结果返回的数量</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="bian-liang">变量</span><a href="#bian-liang" class="header-anchor">#</a></h2><h2><span id="chuang-kou-han-shu">窗口函数</span><a href="#chuang-kou-han-shu" class="header-anchor">#</a></h2><h3><span id="xu-qiu">需求</span><a href="#xu-qiu" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">排名问题：每个部门按业绩来排名</span><br><span class="line">topN问题：找出每个部门排名前N的员工进行奖励</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;窗口函数&gt; over (partition by &lt;用于分组的列名&gt;</span><br><span class="line">                order by &lt;用于排序的列名&gt;)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="shi-yong-fang-fa">使用方法</span><a href="#shi-yong-fang-fa" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">窗口函数的基本语法如下：</span><br><span class="line"></span><br><span class="line">&lt;窗口函数&gt; over (partition by &lt;用于分组的列名&gt;</span><br><span class="line">                order by &lt;用于排序的列名&gt;)</span><br><span class="line">那么语法中的&lt;窗口函数&gt;都有哪些呢？</span><br><span class="line"></span><br><span class="line">&lt;窗口函数&gt;的位置，可以放以下两种函数：</span><br><span class="line"></span><br><span class="line">1） 专用窗口函数，包括后面要讲到的rank, dense_rank, row_number等专用窗口函数。</span><br><span class="line"></span><br><span class="line">2） 聚合函数，如sum. avg, count, max, min等</span><br><span class="line"></span><br><span class="line">因为窗口函数是对where或者group by子句处理后的结果进行操作，所以窗口函数原则上只能写在select子句中。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">简单来说，窗口函数有以下功能：</span><br><span class="line"></span><br><span class="line">1）同时具有分组和排序的功能</span><br><span class="line"></span><br><span class="line">2）不减少原表的行数</span><br><span class="line"></span><br><span class="line">3）语法如下：</span><br><span class="line"></span><br><span class="line">&lt;窗口函数&gt; over (partition by &lt;用于分组的列名&gt;</span><br><span class="line">                order by &lt;用于排序的列名&gt;)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="an-li">案例</span><a href="#an-li" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select *,</span><br><span class="line">   rank() over (partition by 班级</span><br><span class="line">                 order by 成绩 desc) as ranking</span><br><span class="line">from 班级表</span><br></pre></td></tr></tbody></table></figure>
<p>我们来解释下这个sql语句里的select子句。rank是排序的函数。要求是“每个班级内按成绩排名”，这句话可以分为两部分：</p>
<p>1）每个班级内：按班级分组</p>
<p><strong>partition by用来对表分组</strong>。在这个例子中，所以我们指定了按“班级”分组（partition by 班级）<br>2）按成绩排名</p>
<p><strong>order by子句的功能是对分组后的结果进行排序</strong>，默认是按照升序（asc）排列。在本例中（order by 成绩 desc）是按成绩这一列排序，加了desc关键词表示降序排列。</p>
<p>通过下图，我们就可以理解partiition by（分组）和order by（在组内排序）的作用了。</p>
<p>窗口函数具备了我们之前学过的group by子句分组的功能和order by子句排序的功能。那么，为什么还要用窗口函数呢？</p>
<p>这是因为，<strong>group by分组汇总后改变了表的行数，一行只有一个类别。而partiition by和rank函数不会减少原表中的行数</strong>。例如下面统计每个班级的人数。</p>
<h3><span id="zhuan-yong-chuang-kou-han-shu-rank-dense-rank-row-number">专用窗口函数rank, dense_rank, row_number</span><a href="#zhuan-yong-chuang-kou-han-shu-rank-dense-rank-row-number" class="header-anchor">#</a></h3><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">select *,</span><br><span class="line">   rank() over (order by 成绩 desc) as ranking,</span><br><span class="line">   dense_rank() over (order by 成绩 desc) as dese_rank,</span><br><span class="line">   row_number() over (order by 成绩 desc) as row_num</span><br><span class="line">from 班级表</span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://pic2.zhimg.com/80/v2-ad1d86f5a5b9f0ef684907b20b341099_720w.jpg" alt="img"></p>
<p><img src="https://pic3.zhimg.com/80/v2-7b63c571dfa285c0aa0c8f944ca89482_720w.jpg" alt="img"></p>
<h3><span id="geng-chang-jian-de-fang-fa">更常见的方法</span><a href="#geng-chang-jian-de-fang-fa" class="header-anchor">#</a></h3><h5><span id="lead-he-lag-zhe-liang-ge-han-shu-du-shi-yong-lai-ji-suan-pian-yi-liang-de-fen-xi-han-shu-zhe-liang-ge-han-shu-de-yong-fa-xiang-tong">LEAD和LAG，这两个函数都是用来计算偏移量的分析函数，这两个函数的用法相同。</span><a href="#lead-he-lag-zhe-liang-ge-han-shu-du-shi-yong-lai-ji-suan-pian-yi-liang-de-fen-xi-han-shu-zhe-liang-ge-han-shu-de-yong-fa-xiang-tong" class="header-anchor">#</a></h5><p>LEAD函数是一个分析函数，它可以在不用自连接的情况下，同时访问一个表的多行数据。查询返回的一系列的数据行和游标，LEAD函数在当前位置上根据偏移量访问该表中的另一行数据。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">lead(e.hiredate,1(偏移量，默认1）,null（如果超过了）) over(partition by e.deptno order by e.hiredate) as next_hiredate  </span><br><span class="line"></span><br><span class="line">--5、lead函数的default参数  </span><br><span class="line">select e.empno,  </span><br><span class="line">       e.ename,  </span><br><span class="line">       e.deptno,  </span><br><span class="line">       e.hiredate,  </span><br><span class="line">       lead(e.hiredate,1,to_date('2013-01-01','yyyy-MM-dd')) over(partition by e.deptno order by e.hiredate) as next_hiredate  </span><br><span class="line">from emp e  </span><br><span class="line">where deptno=30;  </span><br></pre></td></tr></tbody></table></figure>
<p><img src="https://mmbiz.qpic.cn/mmbiz/1OYP1AZw0W3tSUvjyS5cAyXmHujLfFa93MKeQLibXS0JeqQP7GoTE5Z9L5AyCJoptyZsewuKciaXMibmz2OSYP3Og/640?wx_fmt=other&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>
<h4><span id="chang-jian-chuang-kou-han-shu">常见窗口函数</span><a href="#chang-jian-chuang-kou-han-shu" class="header-anchor">#</a></h4><p><img src="https://mmbiz.qpic.cn/mmbiz_png/rfaNuFeWzwDHicVppcn3zqs3KdvibEXJW7plQCCOZzNDxoSs1luiafuTqA4kkiaGk8DoP5MlQDib9GS29DvHsTaIIaw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:33%;"></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/rfaNuFeWzwDHicVppcn3zqs3KdvibEXJW7TXfSLE4UOhfch0DgHlHInViaVsMsyYvzGS4cUWGnfgk0LAOPUpWb6jg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:50%;"></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/rfaNuFeWzwDHicVppcn3zqs3KdvibEXJW7hkXZFfUHia6uia0OvoI2tZ3N87UTqVLWz6EfXHZ8dMwudXHNIxtA5yFQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:50%;"></p>
<h2><span id="lian-jie">连接</span><a href="#lian-jie" class="header-anchor">#</a></h2><h3><span id="nei-lian-jie">内连接</span><a href="#nei-lian-jie" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT Persons.LastName, Persons.FirstName, Orders.OrderNo</span><br><span class="line">FROM Persons, Orders</span><br><span class="line">WHERE Persons.Id_P = Orders.Id_P </span><br></pre></td></tr></tbody></table></figure>
<h3><span id="wai-lian-jie">外连接</span><a href="#wai-lian-jie" class="header-anchor">#</a></h3><h3><span id="zi-lian-jie">自连接</span><a href="#zi-lian-jie" class="header-anchor">#</a></h3><h3><span id="jiao-cha-lian-jie">交叉连接</span><a href="#jiao-cha-lian-jie" class="header-anchor">#</a></h3><p>交叉联结（corss join）</p>
<h2><span id="case-when">case when</span><a href="#case-when" class="header-anchor">#</a></h2><h1><span id="ti-ku">题库</span><a href="#ti-ku" class="header-anchor">#</a></h1><h2><span id="select">select</span><a href="#select" class="header-anchor">#</a></h2><h3><span id="where">where</span><a href="#where" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select emp_no </span><br><span class="line">from employees</span><br><span class="line">where emp_no not in (select distinct emp_no from dept_manager)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="pai-ming-chuang-kou-han-shu-xin-zeng-yi-lie">排名(窗口函数新增一列)</span><a href="#pai-ming-chuang-kou-han-shu-xin-zeng-yi-lie" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select dept_no, emp_no, salary </span><br><span class="line">from </span><br><span class="line">(</span><br><span class="line">select  </span><br><span class="line">    dept_no, </span><br><span class="line">    a.emp_no,</span><br><span class="line">    salary,</span><br><span class="line">    row_number()  over( partition  by  dept_no order by salary desc) as ranking</span><br><span class="line">from (</span><br><span class="line">    salaries as a </span><br><span class="line">    inner join </span><br><span class="line">    dept_emp as b </span><br><span class="line">    on a.emp_no = b.emp_no</span><br><span class="line">    )</span><br><span class="line"> )</span><br><span class="line">where ranking =1 </span><br><span class="line">group by dept_no</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="ji-chu-yu-fa">基础语法</span><a href="#ji-chu-yu-fa" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">CASE input_expression</span><br><span class="line">WHEN when_expression THEN</span><br><span class="line">    result_expression [...n ] [</span><br><span class="line">ELSE</span><br><span class="line">    else_result_expression</span><br><span class="line">END</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CASE</span><br><span class="line">WHEN Boolean_expression THEN</span><br><span class="line">    result_expression [...n ] [</span><br><span class="line">ELSE</span><br><span class="line">    else_result_expression</span><br><span class="line">END</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="pei-he-count-sum">配合 count sum</span><a href="#pei-he-count-sum" class="header-anchor">#</a></h3><p>行列互换</p>
<p>group by 行</p>
<p>count/sum列统计</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">COUNT(DISTINCT CASE phoneType WHEN 'iOS' THEN id END) AS iOSPush,</span><br><span class="line">COUNT(DISTINCT CASE phoneType WHEN 'WeChat' THEN id END) AS weChatPush,</span><br><span class="line">COUNT(DISTINCT CASE phoneType WHEN 'Android' THEN id END) AS androidPush,</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="lian-xu-ji-tian-zi-lian-jie-tong-yi-lie-xiang-hu">连续几天+自连接（同一列相互)</span><a href="#lian-xu-ji-tian-zi-lian-jie-tong-yi-lie-xiang-hu" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">select *</span><br><span class="line">from score as a,</span><br><span class="line">   score as b,</span><br><span class="line">   score as c;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">select distinct a.成绩 as 最终答案</span><br><span class="line">from score as a,</span><br><span class="line">   score as b,</span><br><span class="line">   score as c;</span><br><span class="line"> where a.学号 = b.学号 - 1</span><br><span class="line">   and b.学号 = c.学号 - 1</span><br><span class="line">   and a.成绩 = b.成绩</span><br><span class="line">   and b.成绩 = c.成绩;</span><br></pre></td></tr></tbody></table></figure>
<p><strong>【本题考点】</strong></p>
<p>• 本题考察的是连续出现，会有同学忽略“连续”二字</p>
<p>• 考察对自关联的灵活应用</p>
<p>• 从题目连续3次成绩相等，判断出“成绩相等”和“学号连续”这2个条件。考察构建“连续学号成绩相等”的思维构建能力</p>
<p><strong>【举一反三】</strong></p>
<p>遇到类似“连续出N次的问题”可以回想本题的解答思路，如：查询至少连续3天没有出勤的员工。</p>
<h3><span id="xing-lie-hu-huan">行列互换</span><a href="#xing-lie-hu-huan" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select 学号,-- 第2步，在行列互换结果表中，其他列里的值分别使用case和max来获取max(case 课程 when '语文' then 成绩 else 0 end) as 语文成绩,max(case 课程 when '数学' then 成绩 else 0 end) as 数学成绩from 成绩表-- 第1步，在行列互换结果表中按第1列分组group by 学号;</span><br></pre></td></tr></tbody></table></figure>
<p>1.考查用case语句进行数据替换，和条件判断</p>
<p>2.遇到行列互换的问题，可以用下面的万能模版来解决。</p>
<h3><span id="zui-da-zui-xiao-de-n-ge-shu">最大最小的N个数</span><a href="#zui-da-zui-xiao-de-n-ge-shu" class="header-anchor">#</a></h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649248455&amp;idx=1&amp;sn=57539b783e2f4a0bdc54c7ca63e162a6&amp;chksm=835fdaf7b42853e19fea0c1ecdf2e62dc70591c37129e3fd53193773ca372c7958b5b450f4b7&amp;cur_album_id=1398781984763428865&amp;scene=189#rd">https://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649248455&amp;idx=1&amp;sn=57539b783e2f4a0bdc54c7ca63e162a6&amp;chksm=835fdaf7b42853e19fea0c1ecdf2e62dc70591c37129e3fd53193773ca372c7958b5b450f4b7&amp;cur_album_id=1398781984763428865&amp;scene=189#rd</a></p>
<p><strong>【本题考点】</strong></p>
<p>1.使用<a href="http://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649246563&amp;idx=2&amp;sn=3ffe509999d144d23dec5acc101fc2ef&amp;chksm=835fc353b4284a45ce01391453fe2fec1b225bbd6bbdb67dd7f304aacdd4f21f60d0b27ba309&amp;scene=21#wechat_redirect">逻辑树分析方法</a>将复杂问题变成简单问题的能力</p>
<p>2.当遇到“每个”问题的时候，要想到用分组汇总</p>
<p>3.查询最小n个数据的问题：先排序（order by），然后使用limit取出前n行数据</p>
<p>4.遇到有筛选条件的统计数量问题时，使用case表达式筛选出符合条件的行为1，否则为0。然后用汇总函数（sum）对case表达式输出列求和。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select a.班级,人数,人数占比from 学生表 as a left join 临时表 as bon a.学号=b.学号group by 班级;</span><br></pre></td></tr></tbody></table></figure>
<h1><span id="zhu-yi-dian">注意点</span><a href="#zhu-yi-dian" class="header-anchor">#</a></h1><h2><span id="group-by">group by</span><a href="#group-by" class="header-anchor">#</a></h2><p>简而言之：使用GROUP BY子句时，SELECT子句中只能有聚合键、聚合函数、常数。</p>
<h2><span id="zi-cha-xun-yao-qu-ming-zi">子查询要取名字</span><a href="#zi-cha-xun-yao-qu-ming-zi" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">select emp_no, max(salary), last_name, first_name</span><br><span class="line">from </span><br><span class="line">   </span><br><span class="line">    (select * from </span><br><span class="line">           employees  as a inner join salaries as b </span><br><span class="line">           on a.emp_no = b.emp_no</span><br><span class="line">   ) as c</span><br><span class="line"> where salary&lt; (select max(salary) from salaries)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="qian-tao-cha-xun-he-cha-xun-zi-ji">嵌套查询和查询子集</span><a href="#qian-tao-cha-xun-he-cha-xun-zi-ji" class="header-anchor">#</a></h3><h3><span id="tong-ji-mei-nian-mei-yue-mei-nian-de-shu-ju">统计每年，每月，每年的数据</span><a href="#tong-ji-mei-nian-mei-yue-mei-nian-de-shu-ju" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1、每年</span><br><span class="line">select year(ordertime) 年，</span><br><span class="line">sum(Total) 销售合计</span><br><span class="line">from 订单表</span><br><span class="line">group by year(ordertime)</span><br><span class="line"> </span><br><span class="line">2、每月</span><br><span class="line">select year(ordertime) 年，</span><br><span class="line">month(ordertime) 月,</span><br><span class="line">sum(Total) 销售合计</span><br><span class="line">from 订单表</span><br><span class="line">group by year(ordertime)，</span><br><span class="line">month(ordertime</span><br><span class="line"> </span><br><span class="line">3、每日</span><br><span class="line">select year(ordertime) 年，</span><br><span class="line">month(ordertime) 月,</span><br><span class="line">day(ordertime) 日，</span><br><span class="line">sum(Total) 销售合计</span><br><span class="line">from 订单表</span><br><span class="line">group by year(ordertime)，</span><br><span class="line">month(ordertime),</span><br><span class="line">day(ordertime)</span><br><span class="line"> </span><br><span class="line">另外每日也可以这样:</span><br><span class="line">select convert(char(8),ordertime,112) dt，</span><br><span class="line">sum(Total) 销售合计</span><br><span class="line">from 订单表</span><br><span class="line">group by convert(char(8),ordertime,112)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="ji-shu-chong-xin-ying-she-zhi">计数重新映射值</span><a href="#ji-shu-chong-xin-ying-she-zhi" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT IF(sva=1,"男","女") AS s FROM table_name </span><br><span class="line">WHERE sva != '';</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">SELECT CASE sva</span><br><span class="line">WHEN 1 THEN '男' </span><br><span class="line">　　ELSE '女' END AS s FROM table_name</span><br><span class="line">WHERE sva != '';</span><br></pre></td></tr></tbody></table></figure>
<p>可以在count, sum中select 中使用</p>
<p>1.考查用case语句进行数据替换，和条件判断</p>
<h2><span id="sql-zhi-xing-shun-xu">sql执行顺序</span><a href="#sql-zhi-xing-shun-xu" class="header-anchor">#</a></h2><p><img src="/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BSQL/MyBlog\MyBlog\hexo\source\_posts\数据分析之SQL\image-20210601135359672.png" alt="image-20210601135359672"></p>
<p>where:顾虑</p>
<p>group by</p>
<p>having:分组筛选</p>
<p><img src="/2020/08/25/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BSQL/MyBlog\MyBlog\hexo\source\_posts\数据分析之SQL\FN9$IYZ7_T}`54_@5_YEAF1.png" alt="img"></p>
<p>执行顺序：from join where group by  haveing: 中  select distinct; order by limit</p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习之模型性能</title>
    <url>/2020/08/11/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%A8%A1%E5%9E%8B%E6%80%A7%E8%83%BD/</url>
    <content><![CDATA[<p><img src="/2020/08/11/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%A8%A1%E5%9E%8B%E6%80%A7%E8%83%BD/模型性能.png" alt="模型性能"></p>
<h1><span id="ji-qi-xue-xi-mo-xing-de-xing-neng-ping-jie">机器学习模型的性能评价</span><a href="#ji-qi-xue-xi-mo-xing-de-xing-neng-ping-jie" class="header-anchor">#</a></h1><h2><span id="xun-lian-wu-chai-he-fan-hua-wu-chai">训练误差和泛化误差</span><a href="#xun-lian-wu-chai-he-fan-hua-wu-chai" class="header-anchor">#</a></h2><p>训练误差即经验误差；学习器在新样本上的误差称为泛化误差。</p>
<a id="more"></a>
<h2><span id="mo-xing-ping-gu-de-fang-fa">模型评估的方法</span><a href="#mo-xing-ping-gu-de-fang-fa" class="header-anchor">#</a></h2><p>留出法</p>
<p>交叉验证法</p>
<h2><span id="xing-neng-du-liang">性能度量</span><a href="#xing-neng-du-liang" class="header-anchor">#</a></h2><h3><span id="yu-ce">预测</span><a href="#yu-ce" class="header-anchor">#</a></h3><h3><span id="fen-lei">分类</span><a href="#fen-lei" class="header-anchor">#</a></h3><h3><span id="zhun-que-du-he-cuo-wu-lu">准确度和错误率</span><a href="#zhun-que-du-he-cuo-wu-lu" class="header-anchor">#</a></h3><p><strong>准确率</strong>：指的是分类正确的样本数量占样本总数的比例</p>
<p><strong>错误率</strong>：指分类错误的样本占样本总数的比例</p>
<h2><span id="zhun-que-lu-he-zhao-hui-lu">准确率和召回率</span><a href="#zhun-que-lu-he-zhao-hui-lu" class="header-anchor">#</a></h2><p>精确率，也被称作查准率，是指<strong>所有预测为正类的结果中，真正的正类的比例</strong>。</p>
<p>召回率，也被称作查全率，是指所有正类中，被分类器找出来的比例。</p>
<h2><span id="guo-ni-he">过拟合</span><a href="#guo-ni-he" class="header-anchor">#</a></h2><p>学习器在未知数据上的表现差</p>
<h3><span id="yuan-yin">原因</span><a href="#yuan-yin" class="header-anchor">#</a></h3><ol>
<li>数据上<ol>
<li>建模样本。样本数量少；</li>
<li>噪音干扰大</li>
</ol>
</li>
<li>模型<ol>
<li>参数过得，模型太复杂</li>
</ol>
</li>
</ol>
<h3><span id="jie-jue-fang-an">解决方案</span><a href="#jie-jue-fang-an" class="header-anchor">#</a></h3><ol>
<li>交叉验证</li>
<li>添加正则项<ol>
<li>范数；</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>正则化</tag>
        <tag>交叉验证</tag>
        <tag>特征工程</tag>
      </tags>
  </entry>
  <entry>
    <title>Book-Learning</title>
    <url>/2020/07/29/Book-Learning/</url>
    <content><![CDATA[<p>分享看书笔记</p>
<a id="more"></a>
<h1><span id="shu-ju-wa-jue-gai-nian-yu-ji-zhu">数据挖掘——概念与技术</span><a href="#shu-ju-wa-jue-gai-nian-yu-ji-zhu" class="header-anchor">#</a></h1><h2><span id="shu-ju-wa-jue-de-gai-nian">数据挖掘的概念</span><a href="#shu-ju-wa-jue-de-gai-nian" class="header-anchor">#</a></h2><p>数据挖掘是从大量数据中提取或挖掘知识。强调：从大量的，未加工的材料中发现少量金块这一过程。</p>
<p>基本过程：</p>
<ol>
<li>数据清理。(消除噪音或者不一致的数据)</li>
<li>数据集成（多种数据集成可以组合在一起）</li>
<li>数据选择（从数据库中提取与分析任务相关的数据)</li>
<li>数据变换。(数据变换或统一成适合挖掘形式)</li>
<li>数据挖掘(使用智能方法提取数据)</li>
<li>模式评估</li>
<li>知识表示（可视化等手段，展示挖掘的知识)</li>
</ol>
<h2><span id="shu-ju-yu-chu-li">数据预处理</span><a href="#shu-ju-yu-chu-li" class="header-anchor">#</a></h2><p>问题：现实中数据极易受噪音数据、遗漏数据和不一致性数据的干扰。</p>
<p>不完整（属性值缺失）</p>
<p>噪音(错误属性值，离群值)</p>
<p>不一致性（编码)</p>
<ol>
<li>数据清理。包括填写遗漏值，平滑噪音数据，识别、删除局外者，并解决不一致来“清理数据”。脏数据转化为干净数据。</li>
<li>数据集成。不同数据源的数据集成。</li>
</ol>
<p><img src="/2020/07/29/Book-Learning/image-20200729213701724.png" alt="image-20200729213701724"></p>
<h3><span id="shu-ju-qing-xi">数据清洗</span><a href="#shu-ju-qing-xi" class="header-anchor">#</a></h3><h4><span id="yi-lou-zhi">遗漏值</span><a href="#yi-lou-zhi" class="header-anchor">#</a></h4><ol>
<li>忽略</li>
<li>人工填写</li>
<li>全局变量</li>
<li>平均值</li>
<li>分组填充</li>
</ol>
<h4><span id="zao-yin-shu-ju">噪音数据</span><a href="#zao-yin-shu-ju" class="header-anchor">#</a></h4><p>噪音是指测量变量的随机误差或偏差。平滑数据。</p>
<ol>
<li>分箱。存储值被分布到一些箱子中，然后局部平滑。按平均值平滑。按中值平滑。按边界平滑。</li>
<li><p>聚类。</p>
</li>
<li><p>回归</p>
</li>
</ol>
<h4><span id="bu-yi-zhi-shu-ju">不一致数据</span><a href="#bu-yi-zhi-shu-ju" class="header-anchor">#</a></h4><h3><span id="shu-ju-ji-cheng">数据集成</span><a href="#shu-ju-ji-cheng" class="header-anchor">#</a></h3><p>实体识别。</p>
<p>冗余。</p>
<h3><span id="shu-ju-bian-huan">数据变换</span><a href="#shu-ju-bian-huan" class="header-anchor">#</a></h3><p>将数据转换成适用于挖掘的形式</p>
<p>平滑。</p>
<p>聚集。对数据进行汇总和聚集。日、月和年销售额。多粒度数据分析构造数据方</p>
<p>数据泛化。street-&gt;city; age—&gt;young, middle-age,senior</p>
<p>规范化。 属性数据按比例缩放，缩放到特定区间。</p>
<p>属性构造。</p>
<p>最小-最大规范化</p>
<script type="math/tex; mode=display">
v = \frac{v-min}{max-min}(new_max-new_min)+new_min</script><p>z-score规范化</p>
<script type="math/tex; mode=display">
v = \frac{v-mean}{\delta}</script><h3><span id="shu-ju-gui-yue">数据归约</span><a href="#shu-ju-gui-yue" class="header-anchor">#</a></h3><p>数据方聚集</p>
<p>维归约</p>
<p>数据压缩</p>
<p>数值压缩</p>
<h1><span id="gai-nian-miao-shu-te-zheng-yu-bi-jiao">概念描述：特征与比较</span><a href="#gai-nian-miao-shu-te-zheng-yu-bi-jiao" class="header-anchor">#</a></h1><p>数据挖掘分为两类: 描述式和预测式挖掘。描述式提供数据的有趣的一般性质。建立一个或一组模型，并试图预测新数据集的行为。</p>
<p>描述式数据挖掘称为概念描述。不同的粒度和角度描述数据集。</p>
<p>度量可以根据其所用的聚集函数分成三类：</p>
<p>分布的：一个聚集函数是分布的，如果它能以如下分布方式进行计算：设数据被划分为 n 个集合，函数在每一部分上的计算得到一个聚集值。如果将函数用于 n 个聚集值得到的结果，与将函数<br>用于所有数据得到的结果一样，则该函数可以用分布方式计算。  </p>
<p>代数的：ave(); </p>
<p>整体的：rank(),median()</p>
<h3><span id="miao-shu-xing-tong-ji-du-liang">描述性统计度量</span><a href="#miao-shu-xing-tong-ji-du-liang" class="header-anchor">#</a></h3><h4><span id="du-liang-zhong-xin-qu-shi">度量中心趋势</span><a href="#du-liang-zhong-xin-qu-shi" class="header-anchor">#</a></h4><p>平均值</p>
<p>加权算术平均（加权平均)</p>
<p>中位数</p>
<p>分位数</p>
<h1><span id="wa-jue-da-xing-shu-ju-ku-zhong-de-guan-lian-gui-ze">挖掘大型数据库中的关联规则</span><a href="#wa-jue-da-xing-shu-ju-ku-zhong-de-guan-lian-gui-ze" class="header-anchor">#</a></h1><p>关联规则挖掘发现大量数据中项集的关联或者相关联系。可用于于分类设计，交叉购物和贱卖分析。</p>
<p>购买计算机也趋向于同时购买财务管理软件的关联规则</p>
<script type="math/tex; mode=display">
computer => finanical_management_software\\
[support = 2\%, confidence = 60\%]</script><p>支持度：有用性。同时购买计算机和财务管理软件。</p>
<p>置信度：确定性。购买计算机的顾客有多少购买财务管理软件。</p>
<p>可最小支持度阙值和最小置信度阙值。</p>
<h3><span id="apriori-suan-fa-shi-yong-hou-xuan-xiang-ji-zhao-pin-fan-xiang-ji">Apriori 算法： 使用候选项集找频繁项集</span><a href="#apriori-suan-fa-shi-yong-hou-xuan-xiang-ji-zhao-pin-fan-xiang-ji" class="header-anchor">#</a></h3><h1><span id="fen-lei-he-yu-ce">分类和预测</span><a href="#fen-lei-he-yu-ce" class="header-anchor">#</a></h1><p>分类和预测是数据分析的两种形式，可以用于提取描述重要数据类的模型或预测未来的数据趋势。 分类预测分类标号（类），而预测建立连续值函数模型。  </p>
<p>预测的准确率、计算速度、鲁棒性、可规模性和可解释性是评估分类和预测方法的五条标准。  </p>
<h1><span id="ju-lei-fen-xi">聚类分析</span><a href="#ju-lei-fen-xi" class="header-anchor">#</a></h1><p>数据对象的集合进行分析，但与分类不同的是，聚类分析 (clustering) 属于非监督学习，也就是不知道要划分类是未知的。聚类分析就是要将数据对象分组成为多个类或簇(cluster)。每一个簇中的对象之间具有较高的相似度，而不同簇对象差别较大。常常采用距离作为相异度的衡量。</p>
]]></content>
      <categories>
        <category>Book</category>
      </categories>
      <tags>
        <tag>数据挖掘</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之Python</title>
    <url>/2020/07/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BPython/</url>
    <content><![CDATA[<p>Python</p>
<a id="more"></a>
<h1><span id="di-yi-zhou-python-ji-chu-zhi-shi">第一周：Python基础知识</span><a href="#di-yi-zhou-python-ji-chu-zhi-shi" class="header-anchor">#</a></h1><p><a href="https://github.com/jackfrued/Python-100-Days/tree/master/Day01-15">https://github.com/jackfrued/Python-100-Days/tree/master/Day01-15</a></p>
<h2><span id="day-ox00">Day Ox00</span><a href="#day-ox00" class="header-anchor">#</a></h2><ol>
<li>基本的数据结构类型，以及提供的常用方法。</li>
<li>编码的风格和规范性</li>
</ol>
<h3><span id="chu-shi-python">初识python</span><a href="#chu-shi-python" class="header-anchor">#</a></h3><ul>
<li>Python简介 - Python的历史 / Python的优缺点 / Python的应用领域</li>
<li>搭建编程环境 - Windows环境 / Linux环境 / MacOS环境</li>
<li>从终端运行Python程序 - Hello, world / print函数 / 运行程序</li>
<li>使用IDLE - 交互式环境(REPL) / 编写多行代码 / 运行程序 / 退出IDLE</li>
<li>注释 - 注释的作用 / 单行注释 / 多行注释</li>
</ul>
<p>代码注释风格</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">def func(arg1, arg2):</span><br><span class="line">    """在这里写函数的一句话总结(如: 计算平均值).</span><br><span class="line"></span><br><span class="line">    这里是具体描述.</span><br><span class="line"></span><br><span class="line">    参数</span><br><span class="line">    ----------</span><br><span class="line">    arg1 : int</span><br><span class="line">        arg1的具体描述</span><br><span class="line">    arg2 : int</span><br><span class="line">        arg2的具体描述</span><br><span class="line"></span><br><span class="line">    返回值</span><br><span class="line">    -------</span><br><span class="line">    int</span><br><span class="line">        返回值的具体描述</span><br></pre></td></tr></tbody></table></figure>
<p>变量的定义</p>
<p>模块尽量使用小写命名，首字母保持小写，尽量不要用下划线(除非多个单词，且数量不多的情况)</p>
<p>类名使用驼峰(CamelCase)命名风格，首字母大写，私有类可用一个下划线开头</p>
<p>函数名一律小写，如有多个单词，用下划线隔开</p>
<p>变量名尽量小写, 如有多个单词，用下划线隔开</p>
<p>常量采用全大写，如有多个单词，使用下划线隔开</p>
<h3><span id="yu-yan-yuan-su">语言元素</span><a href="#yu-yan-yuan-su" class="header-anchor">#</a></h3><ul>
<li>程序和进制 - 指令和程序 / 冯诺依曼机 / 二进制和十进制 / 八进制和十六进制</li>
<li>变量和类型 - 变量的命名 / 变量的使用 / input函数 / 检查变量类型 / 类型转换</li>
<li>数字和字符串 - 整数 / 浮点数 / 复数 / 字符串 / 字符串基本操作 / 字符编码</li>
<li>运算符 - 数学运算符 / 赋值运算符 / 比较运算符 / 逻辑运算符 / 身份运算符 / 运算符的优先级</li>
</ul>
<h3><span id="fen-zhi-jie-gou">分支结构</span><a href="#fen-zhi-jie-gou" class="header-anchor">#</a></h3><ul>
<li>分支结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</li>
<li>if语句 - 简单的if / if-else结构 / if-elif-else结构 / 嵌套的if</li>
</ul>
<h3><span id="xun-huan-jie-gou">循环结构</span><a href="#xun-huan-jie-gou" class="header-anchor">#</a></h3><ul>
<li>循环结构的应用场景 - 条件 / 缩进 / 代码块 / 流程图</li>
<li>while循环 - 基本结构 / break语句 / continue语句</li>
<li>for循环 - 基本结构 / range类型 / 循环中的分支结构 / 嵌套的循环 / 提前结束程序</li>
</ul>
<h3><span id="han-shu-he-mo-kuai-de-shi-yong">函数和模块的使用</span><a href="#han-shu-he-mo-kuai-de-shi-yong" class="header-anchor">#</a></h3><ul>
<li><p>函数的作用 - 代码的坏味道 / 用函数封装功能模块</p>
</li>
<li><p>定义函数 - def语句 / 函数名 / 参数列表 / return语句 / 调用自定义函数</p>
</li>
<li><p>调用函数 - Python内置函数 / 导入模块和函数</p>
</li>
<li><p>函数的参数 - 默认参数 / 可变参数 / 关键字参数 / 命名关键字参数</p>
</li>
<li><p>函数的返回值 - 没有返回值 / 返回单个值 / 返回多个值</p>
</li>
<li><p>作用域问题 - 局部作用域 / 嵌套作用域 / 全局作用域 / 内置作用域 / 和作用域相关的关键字</p>
</li>
<li><p>用模块管理函数 - 模块的概念 / 用自定义模块管理函数 / 命名冲突的时候会怎样（同一个模块和不同的模块）</p>
</li>
<li><p>Lambda表达式</p>
</li>
</ul>
<h3><span id="zi-fu-chuan-he-chang-yong-de-shu-ju-jie-gou">字符串和常用的数据结构</span><a href="#zi-fu-chuan-he-chang-yong-de-shu-ju-jie-gou" class="header-anchor">#</a></h3><p>这一句非常重要，python提供的数据结构，和内置的方法很实用。</p>
<ul>
<li>字符串的使用 - 计算长度 / 下标运算 / 切片 / 常用方法</li>
<li>列表基本用法 - 定义列表 / 用下表访问元素 / 下标越界 / 添加元素 / 删除元素 / 修改元素 / 切片 / 循环遍历</li>
</ul>
<p>像 <code>insert</code> ，<code>remove</code> 或者 <code>sort</code> 方法，只修改列表，没有打印出返回值——它们<strong>返回默认值 <code>None</code></strong> 。这是Python中所有可变数据结构的设计原则。</p>
<ul>
<li><p>列表常用操作 - 连接 / 复制(复制元素和复制数组) / 长度 / 排序 / 倒转 / 查找</p>
</li>
<li><p>生成列表 - 使用range创建数字列表 / 生成表达式 / 生成器</p>
</li>
<li><p>元组的使用 - 定义元组 / 使用元组中的值 / 修改元组变量 / 元组和列表转换</p>
</li>
<li><p>集合基本用法 - 集合和列表的区别 / 创建集合 / 添加元素 / 删除元素 / 清空</p>
</li>
<li><p>集合常用操作 - 交集 / 并集 / 差集 / 对称差 / 子集 / 超集</p>
</li>
<li><p>字典的基本用法 - 字典的特点 / 创建字典 / 添加元素 / 删除元素 / 取值 / 清空</p>
</li>
<li><p>字典常用操作 - keys()方法 / values()方法 / items()方法 / setdefault()方法</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">list(d1.keys())</span><br><span class="line">in not in</span><br></pre></td></tr></tbody></table></figure>
</li>
</ul>
<p>python list 常用方法总结</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. 创建</span><br><span class="line">	1.1 l = [1, 2]</span><br><span class="line">	1.2 list = []</span><br><span class="line">2. 添加</span><br><span class="line">	2.1 末尾增加一个 append</span><br><span class="line">	2.2 指定位置增加一个 insert</span><br><span class="line">	2.3 增加list extend +</span><br><span class="line">3. 查</span><br><span class="line">	[start: stop: step]</span><br><span class="line">4. 改</span><br><span class="line">5. 删</span><br><span class="line">	1. pop</span><br><span class="line">	2. remove(元素)</span><br><span class="line">	3. del 列表</span><br><span class="line">6. 排序和反转</span><br><span class="line">	reverse(); sort(); sort(reverse = True)</span><br><span class="line">7. 属性</span><br><span class="line">	len</span><br><span class="line">	max/min</span><br><span class="line">8. 复制</span><br></pre></td></tr></tbody></table></figure>
<p>python string </p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">1. 检测 str 是否包含在 mystr中，如果是，返回开始的索引值；否则返回-1。也可以指定在一定的范围内。</span><br><span class="line"></span><br><span class="line">mystr.find(str, start=0, end=len(mystr))</span><br><span class="line"></span><br><span class="line">2. 跟find()方法一样，只不过如果str不在 mystr中会报一个异常.</span><br><span class="line"></span><br><span class="line">mystr.index(str, start=0, end=len(mystr))</span><br><span class="line"></span><br><span class="line">3. 把 mystr 中的 str1 替换成 str2,如果 count 指定，则替换不超过 count 次.</span><br><span class="line"></span><br><span class="line">mystr.replace(str1, str2,  mystr.count(str1))</span><br><span class="line"></span><br><span class="line">4. 以 str 为分隔符切片 mystr，如果 maxsplit有指定值，则仅分隔 maxsplit 个子字符串</span><br><span class="line"></span><br><span class="line">mystr.split(str=" ", 2)</span><br><span class="line"></span><br><span class="line">5. 删除 mystr 左边的空白字符</span><br><span class="line"></span><br><span class="line">mystr.lstrip()</span><br><span class="line">6. 删除 mystr 字符串末尾的空白字符</span><br><span class="line"></span><br><span class="line">mystr.rstrip()</span><br><span class="line">7. 删除mystr字符串两端的空白字符</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="day-ox01">Day Ox01</span><a href="#day-ox01" class="header-anchor">#</a></h2><h3><span id="ding-yi-lei">定义类</span><a href="#ding-yi-lei" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">classname</span>(<span class="params">object</span>):</span></span><br></pre></td></tr></tbody></table></figure>
<pre><code>    __init__是创建对象时进行初始化操作
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">    def __init__(self, name, age):</span><br><span class="line">    	self.name = name</span><br><span class="line">    	self.age = age</span><br><span class="line"></span><br><span class="line">创建实列</span><br><span class="line">std = classname('xiemay','24')</span><br><span class="line"></span><br><span class="line">私有和公开的属性和函数：用__开头</span><br><span class="line"></span><br><span class="line">@property 装饰器</span><br><span class="line">如果想访问属性可以通过属性的getter（访问器）和setter（修改器）方法进行对应的操作。</span><br><span class="line">    # 访问器 - getter方法</span><br><span class="line">​    @property</span><br><span class="line">​    def age(self):</span><br><span class="line">​        return self._age</span><br><span class="line">静态方法和类方法</span><br><span class="line">    # 修改器 - setter方法</span><br><span class="line">​    @age.setter</span><br><span class="line">​    def age(self, age):</span><br><span class="line">​        self._age = age</span><br><span class="line">​    @staticmethod</span><br><span class="line">​    def is_valid(a, b, c):</span><br><span class="line">​        return a + b &gt; c and b + c &gt; a and a + c &gt; b</span><br><span class="line"></span><br><span class="line">## 继承和多态</span><br><span class="line"></span><br><span class="line">class person():</span><br><span class="line">    </span><br><span class="line">class woman(person):</span><br><span class="line">    super.__init__()</span><br><span class="line"></span><br><span class="line">## 文件操作</span><br><span class="line"></span><br><span class="line">文件操作基本上没什么问题了</span><br><span class="line"></span><br><span class="line">| 操作模式 | 具体含义                                                     |</span><br><span class="line">| -------- | ------------------------------------------------------------ |</span><br><span class="line">| a+       | 打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。 |</span><br><span class="line">| w+       | 打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。 |</span><br><span class="line">| `'r'`    | 读取 （默认）                                                |</span><br><span class="line">| `'w'`    | 写入（会先截断之前的内容）                                   |</span><br><span class="line">| `'x'`    | 写入，如果文件已经存在会产生异常                             |</span><br><span class="line">| `'a'`    | 追加，将内容写入到已有文件的末尾                             |</span><br><span class="line">| `'b'`    | 二进制模式                                                   |</span><br><span class="line">| `'t'`    | 文本模式（默认）                                             |</span><br><span class="line">| `'+'`    | 更新（既可以读又可以写）                                     |</span><br><span class="line">| r+       | 打开一个文件用于读写。文件指针将会放在文件的开头。           |</span><br><span class="line"></span><br><span class="line">![img](https://github.com/jackfrued/Python-100-Days/raw/master/Day01-15/res/file-open-mode.png)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
</code></pre><p>with open(filename, moder, encoding) as f1:<br>    for line in f1:<br></p><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 读取方法</span><br><span class="line"></span><br><span class="line">#### 按字节</span><br><span class="line"></span><br><span class="line">fileObject.read([count]);</span><br><span class="line">  在这里，被传递的参数是要从已打开文件中读取的字节计数。该方法从文件的开头开始读入，如果没有传入count，它会尝试尽可能多地读取更多的内容，很可能是直到文件的末尾。</span><br><span class="line"></span><br><span class="line">#### 单独一行</span><br><span class="line"></span><br><span class="line">readline()方法</span><br><span class="line">f.readline() 会从文件中读取单独的一行。换行符为 '\n'。f.readline() 如果返回一个空字符串, 说明已经已经读取到最后一行。</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><br>with open() as f1:<br>    while True:<br>        lines = f.readline()<br>        if lines:<br><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### 全部行</span><br><span class="line"></span><br><span class="line">readlines()方法</span><br><span class="line">  f.readlines() 将以列表的形式返回该文件中包含的所有行，列表中的一项表示文件的一行。如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割。</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><br>with open() as f1:<br>    lines = f1.readlines()<br><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### json 文件读取</span><br><span class="line"></span><br><span class="line">json模块主要有四个比较重要的函数，分别是：</span><br><span class="line"></span><br><span class="line">dump - 将Python对象按照JSON格式序列化到文件中</span><br><span class="line">dumps - 将Python对象处理成JSON格式的字符串</span><br><span class="line">	infor = json.dumps(neww)</span><br><span class="line">	f.write(infor+'\n')</span><br><span class="line">load - 将文件中的JSON数据反序列化成对象</span><br><span class="line">loads - 将字符串的内容反序列化成Python对象</span><br><span class="line">	b = json.loads(lines)</span><br><span class="line"></span><br><span class="line">#### excel</span><br><span class="line"></span><br><span class="line">单独操作excel的库</span><br><span class="line"></span><br><span class="line">创建/打开(对象)，定位(sheet)，定位行列, 保存</span><br><span class="line"></span><br><span class="line">就是这几个方法</span><br><span class="line"></span><br><span class="line">##### xlrd</span><br><span class="line"></span><br><span class="line">### 导入 xlrd 库</span><br><span class="line"></span><br><span class="line">import xlrd</span><br><span class="line"></span><br><span class="line">### 打开刚才我们写入的 test_w.xls 文件</span><br><span class="line"></span><br><span class="line">wb = xlrd.open_workbook("test_w.xls")</span><br><span class="line"></span><br><span class="line">### 获取并打印 sheet 数量</span><br><span class="line"></span><br><span class="line">print( "sheet 数量:", wb.nsheets)</span><br><span class="line"></span><br><span class="line">### 获取并打印 sheet 名称</span><br><span class="line"></span><br><span class="line">print( "sheet 名称:", wb.sheet_names())</span><br><span class="line"></span><br><span class="line">### 根据 sheet 索引获取内容</span><br><span class="line"></span><br><span class="line">sh1 = wb.sheet_by_index(0)</span><br><span class="line"></span><br><span class="line">### 或者</span><br><span class="line"></span><br><span class="line">### 也可根据 sheet 名称获取内容</span><br><span class="line"></span><br><span class="line">### sh = wb.sheet_by_name('成绩')</span><br><span class="line"></span><br><span class="line">### 获取并打印该 sheet 行数和列数</span><br><span class="line"></span><br><span class="line">print( u"sheet %s 共 %d 行 %d 列" % (sh1.name, sh1.nrows, sh1.ncols))</span><br><span class="line"></span><br><span class="line">### 获取并打印某个单元格的值</span><br><span class="line"></span><br><span class="line">print( "第一行第二列的值为:", sh1.cell_value(0, 1))</span><br><span class="line"></span><br><span class="line">### 获取整行或整列的值</span><br><span class="line"></span><br><span class="line">rows = sh1.row_values(0) # 获取第一行内容</span><br><span class="line">cols = sh1.col_values(1) # 获取第二列内容</span><br><span class="line"></span><br><span class="line">### 打印获取的行列值</span><br><span class="line"></span><br><span class="line">print( "第一行的值为:", rows)</span><br><span class="line">print( "第二列的值为:", cols)</span><br><span class="line"></span><br><span class="line">### 获取单元格内容的数据类型</span><br><span class="line"></span><br><span class="line">print( "第二行第一列的值类型为:", sh1.cell(1, 0).ctype)</span><br><span class="line"></span><br><span class="line">### 遍历所有表单内容</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><br>for sh in wb.sheets():<br>    for r in range(sh.nrows):<p></p>
<pre><code>    # 输出指定行
    print( sh.row(r))
</code></pre><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">##### xlwt</span><br><span class="line"></span><br><span class="line">### excel_w.py</span><br><span class="line"></span><br><span class="line">### 导入 xlwt 库</span><br><span class="line"></span><br><span class="line">import xlwt</span><br><span class="line"></span><br><span class="line">### 创建 xls 文件对象</span><br><span class="line"></span><br><span class="line">wb = xlwt.Workbook()</span><br><span class="line"></span><br><span class="line">### 新增两个表单页</span><br><span class="line"></span><br><span class="line">sh1 = wb.add_sheet('成绩')</span><br><span class="line">sh2 = wb.add_sheet('汇总')</span><br><span class="line"></span><br><span class="line">### 然后按照位置来添加数据,第一个参数是行，第二个参数是列</span><br><span class="line"></span><br><span class="line">### 写入第一个sheet</span><br><span class="line"></span><br><span class="line">sh1.write(0, 0, '姓名')</span><br><span class="line">sh1.write(0, 1, '成绩')</span><br><span class="line">sh1.write(1, 0, '张三')</span><br><span class="line">sh1.write(1, 1, 88)</span><br><span class="line">sh1.write(2, 0, '李四')</span><br><span class="line">sh1.write(2, 1, 99.5)</span><br><span class="line"></span><br><span class="line">### 写入第二个sheet</span><br><span class="line"></span><br><span class="line">sh2.write(0, 0, '总分')</span><br><span class="line">sh2.write(1, 0, 187.5)</span><br><span class="line"></span><br><span class="line">### 最后保存文件即可</span><br><span class="line"></span><br><span class="line">wb.save('test_w.xls')</span><br><span class="line"></span><br><span class="line">pandas 也可以操作</span><br><span class="line"></span><br><span class="line">ExcelWriter: Class for writing DataFrame objects into excel sheets. </span><br><span class="line"></span><br><span class="line">    with ExcelWriter('path_to_file.xlsx', mode='a') as writer:</span><br><span class="line">           df.to_excel(writer, sheet_name='Sheet3')</span><br><span class="line">           writer = pd.ExcelWriter('exam.xlsx')</span><br><span class="line">    for i in all_grad_pair:</span><br><span class="line">        inflowdata = pd.read_csv(newfiledir+i+precitypair+'.txt',\</span><br><span class="line">            sep = '\t',header = 0, index_col = 0,encoding = 'utf-8')</span><br><span class="line">        </span><br><span class="line">        inflowdata.to_excel(writer,sheet_name = CityName[j])</span><br><span class="line"></span><br><span class="line">writer.save() </span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<p>​```python<br>import pandas as pd</p>
<h1><span id="du-qu-liang-ge-biao-ge">读取两个表格</span><a href="#du-qu-liang-ge-biao-ge" class="header-anchor">#</a></h1><p>data1=pd.read_excel(‘文件路径’)<br>data2=pd.read_excel(‘文件路径’)</p>
<h1><span id="jiang-liang-ge-biao-ge-shu-chu-dao-yi-ge-excel-wen-jian-li-mian">将两个表格输出到一个excel文件里面</span><a href="#jiang-liang-ge-biao-ge-shu-chu-dao-yi-ge-excel-wen-jian-li-mian" class="header-anchor">#</a></h1><p>writer=pd.ExcelWriter(‘D:新表.xlsx’)<br>data1.to_excel(writer,sheet_name=’sheet1’)<br>data2.to_excel(writer,sheet_name=’sheet2’)</p>
<h1><span id="bi-xu-yun-xing-writer-save-bu-ran-bu-neng-shu-chu-dao-ben-di">必须运行writer.save()，不然不能输出到本地</span><a href="#bi-xu-yun-xing-writer-save-bu-ran-bu-neng-shu-chu-dao-ben-di" class="header-anchor">#</a></h1><p>writer.save()<br></p><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 第二周：numpy</span><br><span class="line"></span><br><span class="line">https://cloudxlab.com/blog/numpy-pandas-introduction/</span><br><span class="line"></span><br><span class="line">## 对象</span><br><span class="line"></span><br><span class="line">Numpy 提供了n维数组对象（ndarray, A multidimensional array object)</span><br><span class="line"></span><br><span class="line">## 创建</span><br><span class="line"></span><br><span class="line">&lt;img src="F:/MyBlog/MyBlog/hexo/source/_posts/prepare-for-work/image-20200807212039210.png" alt="image-20200807212039210" style="zoom:50%;" /&gt;</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">np.arange(6)</span><br><span class="line">array([0,1, 2, 3, 4, 5])</span><br><span class="line">np.zeros(10) # 1-n</span><br><span class="line">np.zeros((3, 6)) # 2-n</span><br></pre></td></tr></tbody></table></figure><p></p>
<h3><span id="types">types</span><a href="#types" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">arr1 = np.array([1, 2, 3], dtype=np.float64)</span><br><span class="line">arr1.dtype</span><br><span class="line">float_arr = arr.astype(np.float64)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="suo-yin">索引</span><a href="#suo-yin" class="header-anchor">#</a></h2><p>就是用中括号，注意切片是一维数组还是多少维数组！[, ], 如果，后面省略表示全部索引。</p>
<p><img src="/2020/07/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BPython/MyBlog/MyBlog/hexo/source/_posts/prepare-for-work/image-20200807213131859.png" alt="image-20200807213131859" style="zoom:33%;"></p>
<p>布尔类型索引</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">data[names == 'Bob']</span><br><span class="line">表示索引行</span><br><span class="line"></span><br><span class="line">data[names == 'Bob', 2:]</span><br><span class="line">表示行列索引</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="zeng-cha-ru">增(插入)</span><a href="#zeng-cha-ru" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">a = np.array([[1,2,3],[4,5,6],[7,8,9]])</span><br><span class="line">b = np.array([[0,0,0]])</span><br><span class="line">c = np.insert(a, 0, values=b, axis=0)</span><br><span class="line">d = np.insert(a, 0, values=b, axis=1)</span><br><span class="line">print c</span><br><span class="line">print d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import numpy as np</span><br><span class="line">a = np.array([[1,2,3],[4,5,6],[7,8,9]])</span><br><span class="line">b = np.array([[0,0,0]])</span><br><span class="line">c = np.row_stack((a,b))</span><br><span class="line">d = np.column_stack((a,b.T)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<h2><span id="gai">改</span><a href="#gai" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">result = np.where(cond, xarr, yarr)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="suo-yin">索引</span><a href="#suo-yin" class="header-anchor">#</a></h3><h3><span id="zhi">值</span><a href="#zhi" class="header-anchor">#</a></h3><h2><span id="shan">删</span><a href="#shan" class="header-anchor">#</a></h2><h2><span id="ji-suan-han-shu">计算函数</span><a href="#ji-suan-han-shu" class="header-anchor">#</a></h2><p>+-<em>/ *</em>都是元素对齐</p>
<p>np.sqrt()</p>
<p>np.exp()</p>
<p><img src="/2020/07/28/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BPython/MyBlog/MyBlog/hexo/source/_posts/prepare-for-work/image-20200807214032542.png" alt="image-20200807214032542" style="zoom:50%;"></p>
<h1><span id="pandas">pandas</span><a href="#pandas" class="header-anchor">#</a></h1><h2><span id="dui-xiang">对象</span><a href="#dui-xiang" class="header-anchor">#</a></h2><p>Series, DataFrame</p>
<h2><span id="chuang-jian">创建</span><a href="#chuang-jian" class="header-anchor">#</a></h2><ol>
<li><h2><span id="suo-yin">索引</span><a href="#suo-yin" class="header-anchor">#</a></h2></li>
</ol>
<h2><span id="zeng">增</span><a href="#zeng" class="header-anchor">#</a></h2><p>新增列：索引要对应，或者提供df[‘ ‘] = ;</p>
<p>新增行：列名要对应。一定要新建一个列名相同的，空DataFrame</p>
<h2><span id="gai">改</span><a href="#gai" class="header-anchor">#</a></h2><h3><span id="guo-lu">过滤</span><a href="#guo-lu" class="header-anchor">#</a></h3><p>过滤出来就是满足条件的部分，不满足条件的，不被修改</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">d = pd.DataFrame({<span class="string">'a'</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],<span class="string">'b'</span>:[<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">44</span>,<span class="number">55</span>]})</span><br><span class="line">print(d)</span><br><span class="line">print(d[d&gt;<span class="number">10</span>])</span><br><span class="line">d[d&gt;<span class="number">10</span>] = <span class="number">10</span></span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line">   a   b</span><br><span class="line"><span class="number">0</span>  <span class="number">1</span>  <span class="number">11</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2</span>  <span class="number">22</span></span><br><span class="line"><span class="number">2</span>  <span class="number">3</span>  <span class="number">33</span></span><br><span class="line"><span class="number">3</span>  <span class="number">4</span>  <span class="number">44</span></span><br><span class="line"><span class="number">4</span>  <span class="number">5</span>  <span class="number">55</span></span><br><span class="line">    a   b</span><br><span class="line"><span class="number">0</span> NaN  <span class="number">11</span></span><br><span class="line"><span class="number">1</span> NaN  <span class="number">22</span></span><br><span class="line"><span class="number">2</span> NaN  <span class="number">33</span></span><br><span class="line"><span class="number">3</span> NaN  <span class="number">44</span></span><br><span class="line"><span class="number">4</span> NaN  <span class="number">55</span></span><br><span class="line">   a   b</span><br><span class="line"><span class="number">0</span>  <span class="number">1</span>  <span class="number">10</span></span><br><span class="line"><span class="number">1</span>  <span class="number">2</span>  <span class="number">10</span></span><br><span class="line"><span class="number">2</span>  <span class="number">3</span>  <span class="number">10</span></span><br><span class="line"><span class="number">3</span>  <span class="number">4</span>  <span class="number">10</span></span><br><span class="line"><span class="number">4</span>  <span class="number">5</span>  <span class="number">10</span></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="suo-yin">索引</span><a href="#suo-yin" class="header-anchor">#</a></h3><h3><span id="zhi">值</span><a href="#zhi" class="header-anchor">#</a></h3><h2><span id="shan">删</span><a href="#shan" class="header-anchor">#</a></h2><h2><span id="ji-suan-han-shu">计算函数</span><a href="#ji-suan-han-shu" class="header-anchor">#</a></h2><h3><span id="pandas-date-range">pandas.date_range</span><a href="#pandas-date-range" class="header-anchor">#</a></h3><p>产生时间日期索引。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">data.index = pd.date_range(start = train.index[<span class="number">-1</span>]+timedelta(hours=<span class="number">1</span>),end = train.index[<span class="number">-1</span>]+timedelta(hours = <span class="number">12</span>),freq = <span class="string">'1h'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>apply() 最后的是经过函数处理，数据以 Series 或 DataFrame 格式返回。</p>
<h1><span id="matplotlib">matplotlib</span><a href="#matplotlib" class="header-anchor">#</a></h1><h1><span id="seaborn">seaborn</span><a href="#seaborn" class="header-anchor">#</a></h1><h1><span id="di-san-zhou-sklearn">第三周：sklearn</span><a href="#di-san-zhou-sklearn" class="header-anchor">#</a></h1><h1><span id="di-wu-zhou-sql">第五周：sql</span><a href="#di-wu-zhou-sql" class="header-anchor">#</a></h1><h1><span id="di-liu-zhou-linux">第六周： Linux</span><a href="#di-liu-zhou-linux" class="header-anchor">#</a></h1><h1><span id="datetime-ri-qi-he-shi-jian-ku">datetime日期和时间库</span><a href="#datetime-ri-qi-he-shi-jian-ku" class="header-anchor">#</a></h1><h2><span id="datetime-he-timestamp">datetime 和timestamp</span><a href="#datetime-he-timestamp" class="header-anchor">#</a></h2><p>在计算机中，时间实际上是用数字表示的。我们把1970年1月1日 00:00:00 UTC+00:00时区的时刻称为epoch time，记为<code>0</code>（1970年以前的时间timestamp为负数），当前时间就是相对于epoch time的秒数，称为timestamp。</p>
<h2><span id="str-he-datetime">str和datetime</span><a href="#str-he-datetime" class="header-anchor">#</a></h2><h3><span id="str-zhuan-huan-wei-datetime">str转换为datetime</span><a href="#str-zhuan-huan-wei-datetime" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cday = datetime.strptime(<span class="string">'2015-6-1 18:19:59'</span>, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(cday)</span><br><span class="line"><span class="number">2015</span><span class="number">-06</span><span class="number">-01</span> <span class="number">18</span>:<span class="number">19</span>:<span class="number">59</span></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="datetime-to-str">datetime to str</span><a href="#datetime-to-str" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = datetime.now()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(now.strftime(<span class="string">'%a, %b %d %H:%M'</span>))</span><br><span class="line">Mon, May <span class="number">05</span> <span class="number">16</span>:<span class="number">28</span></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="datatime-ji-suan">datatime 计算</span><a href="#datatime-ji-suan" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now = datetime.now()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now</span><br><span class="line">datetime.datetime(<span class="number">2015</span>, <span class="number">5</span>, <span class="number">18</span>, <span class="number">16</span>, <span class="number">57</span>, <span class="number">3</span>, <span class="number">540997</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now + timedelta(hours=<span class="number">10</span>)</span><br><span class="line">datetime.datetime(<span class="number">2015</span>, <span class="number">5</span>, <span class="number">19</span>, <span class="number">2</span>, <span class="number">57</span>, <span class="number">3</span>, <span class="number">540997</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now - timedelta(days=<span class="number">1</span>)</span><br><span class="line">datetime.datetime(<span class="number">2015</span>, <span class="number">5</span>, <span class="number">17</span>, <span class="number">16</span>, <span class="number">57</span>, <span class="number">3</span>, <span class="number">540997</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>now + timedelta(days=<span class="number">2</span>, hours=<span class="number">12</span>)</span><br><span class="line">datetime.datetime(<span class="number">2015</span>, <span class="number">5</span>, <span class="number">21</span>, <span class="number">4</span>, <span class="number">57</span>, <span class="number">3</span>, <span class="number">540997</span>)</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>数据分析</category>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Numpuy</tag>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习</title>
    <url>/2020/07/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><img src="/2020/07/25/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/MyBlog\hexo\source\_posts\机器学习\机器学习算法系列.png" alt></p>
<h1><span id="xian-xing-hui-gui">线性回归</span><a href="#xian-xing-hui-gui" class="header-anchor">#</a></h1><h1><span id="luo-ji-si-te-hui-gui">逻辑斯特回归</span><a href="#luo-ji-si-te-hui-gui" class="header-anchor">#</a></h1><h1><span id="jue-ce-shu">决策树</span><a href="#jue-ce-shu" class="header-anchor">#</a></h1>]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>监督学习与非监督学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Data-Analysis</title>
    <url>/2020/07/25/Data-Analysis/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>统计学</title>
    <url>/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/</url>
    <content><![CDATA[<p>统计学</p>
<a id="more"></a>
<h1><span id="tong-ji-xue-day-ox00">统计学 day Ox00</span><a href="#tong-ji-xue-day-ox00" class="header-anchor">#</a></h1><p>day Ox00 首先介绍随机实验的基本概念，包括随机实验，样本点，样本空间，基本事件，随机事件；其次介绍概率论的基本概念，包括概率的公理化定义，古典概率，条件概率，全概率，贝叶斯公式等等。特别注意两个容易混淆的概念：事件的独立性和互斥。</p>
<p>day Ox01 首先引 出随机变量的定义，从离散随机变量和连续随机变量两个维度，介绍典型的分布函数。其中概率函数和分布函数是非常重要的概念。</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/概率论与数量统计.png" alt></p>
<!-- more -->
<h2><span id="ji-ben-gai-nian">基本概念</span><a href="#ji-ben-gai-nian" class="header-anchor">#</a></h2><p>随机试验：记作$E$</p>
<p>样本点： 随机试验中出现的可能结果称为样本点，记作 $\omega$</p>
<p>样本空间： 所有样本点组成的集合称为样本空间，随机实验所有的结果的集合，记作$\Omega$</p>
<p>事件： 样本空间的子集，叫做随机事件，记作A,B,C。</p>
<p>​    分类：基本事件（由一个样本点构成），不可能事件（不包含任何样本点），必然事件（样本空间的所有样本点组成）</p>
<p>事件的关系和运算</p>
<p>​    A与B互斥（互不相容），并为空集。不可能同时发生。</p>
<p>​    对立（互逆）：A,B在一次实验中有且仅有一个发生。</p>
<p><img src="https://img-blog.csdnimg.cn/20200510094048966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NoZW5femFuX3l1Xw==,size_16,color_FFFFFF,t_70" alt="img"></p>
<h2><span id="shi-jian-jian-de-guan-xi">事件间的关系</span><a href="#shi-jian-jian-de-guan-xi" class="header-anchor">#</a></h2><p>包含</p>
<p>相等</p>
<p>互不相容性：不可能同时发生，没有交集</p>
<h2><span id="shi-jian-de-gai-lu">事件的概率</span><a href="#shi-jian-de-gai-lu" class="header-anchor">#</a></h2><h3><span id="gai-lu-de-gong-li-hua-ding-yi">概率的公理化定义</span><a href="#gai-lu-de-gong-li-hua-ding-yi" class="header-anchor">#</a></h3><h3><span id="ji-suan-fang-fa">计算方法</span><a href="#ji-suan-fang-fa" class="header-anchor">#</a></h3><h4><span id="gu-dian-fang-fa">古典方法</span><a href="#gu-dian-fang-fa" class="header-anchor">#</a></h4><p>随机事件的要求：(1). 涉及的随机现象只有有限个基本结果（2). 每个基本结果出现的可能性是相同的（等可能性）</p>
<p>事件的基本结果：</p>
<script type="math/tex; mode=display">
P(A) = \frac{k}{n} = \frac{事件包含的基本事件的个数}{全空间包含的基本结果总数}</script><h4><span id="shi-jian-de-du-li-xing">事件的独立性</span><a href="#shi-jian-de-du-li-xing" class="header-anchor">#</a></h4><p>两个事件的独立性是指一个事件的发生不影响另一个事件的发生，</p>
<script type="math/tex; mode=display">
P(AB) = P(A)P(B)</script><p>多个事件的独立性</p>
<script type="math/tex; mode=display">
P(A_iA_j) = P(A_i)P(A_j)\\
P(A_iA_jA_k) = P(A_i)P(A_j)P(A_k)\\
\vdots
P(A_1A_2\cdots A_n) = P(A_1)P(A_2)\cdots P(A_n)</script><h3><span id="shi-yan-de-du-li-xing">实验的独立性</span><a href="#shi-yan-de-du-li-xing" class="header-anchor">#</a></h3><p>实验$E_1$的任意一个结果（事件）与实验$E_2$的任一个结果都是相互独立的事件，则称实验相互独立</p>
<h3><span id="tiao-jian-gai-lu">条件概率</span><a href="#tiao-jian-gai-lu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
P(A|B) = \frac{P(AB)}{P(B)}</script><h3><span id="cheng-fa-gong-shi">乘法公式</span><a href="#cheng-fa-gong-shi" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
P(A_1A_2A_3) = P(A_1)P(A_2|A_1)P(A_3|A_1A_2)</script><h3><span id="quan-gai-lu-gong-shi">全概率公式</span><a href="#quan-gai-lu-gong-shi" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
P(A) = P(A|B)P(B)+P(A|\hat{B})P(\hat{B})</script><script type="math/tex; mode=display">
P(A) = \sum_{i = 1}^nP(A|B_i)P(B_i)</script><h3><span id="bei-xie-si-gong-shi">贝叶斯公式</span><a href="#bei-xie-si-gong-shi" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
P(B_k|A) = \frac{P(A|B_k)P(B_k)}{\sum_{i = 1}^nP(A|B_k)P(B_k)}</script><h1><span id="sui-ji-bian-liang-day-ox01">随机变量 day Ox01</span><a href="#sui-ji-bian-liang-day-ox01" class="header-anchor">#</a></h1><p>随机变量表示随机现象结果，一般大写字母X,Y,Z,</p>
<p>随机变量取值用小写字母x,y,z等表示。</p>
<p>用等号或者不等号把X与x联系起来就很多有趣的事件，X=x,Y&lt;y,等等构成了事件。</p>
<h2><span id="sui-ji-bian-liang">随机变量</span><a href="#sui-ji-bian-liang" class="header-anchor">#</a></h2><p>定义在基本空间$\Omega$上的实值函数$X = X(w)$成为随机空间</p>
<script type="math/tex; mode=display">
X:
w->实数域（映射)</script><h2><span id="sui-ji-bian-liang-de-fen-bu-han-shu">随机变量的分布函数</span><a href="#sui-ji-bian-liang-de-fen-bu-han-shu" class="header-anchor">#</a></h2><p>分布函数的定义</p>
<script type="math/tex; mode=display">
F(x) = P(X<=x)</script><p>离散随机变量：分段函数</p>
<p>连续随机变量：连续函数</p>
<h2><span id="chi-san-sui-ji-bian-liang">离散随机变量</span><a href="#chi-san-sui-ji-bian-liang" class="header-anchor">#</a></h2><p>${p(x)}$ 成为随机变量X的分布列，或概率分布 $X ~ {p(x_i)}$</p>
<p>其分布函数$F(x) = \sum_{x_i&lt;x}p(x_i)$</p>
<h3><span id="chang-jian-fen-bu">常见分布</span><a href="#chang-jian-fen-bu" class="header-anchor">#</a></h3><h3><span id="er-xiang-fen-bu">二项分布</span><a href="#er-xiang-fen-bu" class="header-anchor">#</a></h3><p>特点</p>
<ol>
<li>重复进行$n$次相互独立的实验</li>
<li>每次实验只可能有两个结果</li>
<li>每次实验出现成功的概率相同，且为p</li>
</ol>
<p>符号说明</p>
<p>$ B_{n,k}$表示n重贝努里实验中成功出现的k次</p>
<p>X:n重贝努里实验中成功的次数，则有</p>
<p>$B_{n,k} =’X=k’$</p>
<script type="math/tex; mode=display">
P(X=x)=\left ( \begin{matrix}
n\\ 
x
\end{matrix}\right )p^x(1-p)^{n-x}</script><h3><span id="bo-song-fen-bu">泊松分布</span><a href="#bo-song-fen-bu" class="header-anchor">#</a></h3><p>$P(X = x) = \frac{\lambda^x}{x!}e^{-\lambda}$</p>
<h2><span id="lian-xu-sui-ji-bian-liang">连续随机变量</span><a href="#lian-xu-sui-ji-bian-liang" class="header-anchor">#</a></h2><p>概率密度函数</p>
<h3><span id="jun-yun-fen-bu">均匀分布</span><a href="#jun-yun-fen-bu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
p(x) = \left\{\begin{array}{c}
\frac{1}{b-a}& a<=x<=b\\
0, others
\end{array} \right.</script><p>分布函数</p>
<script type="math/tex; mode=display">
F(x)=\left\{\begin{array}{c}
0, x<a\\
\frac{x-a}{b-a}, a<=x<=b\\
1, x>b
\end{array}\right.</script><p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/image-20200629204515883.png" alt="image-20200629204515883"></p>
<h3><span id="zhi-shu-fen-bu-x-exp-lambda">指数分布 X~Exp($\lambda$)</span><a href="#zhi-shu-fen-bu-x-exp-lambda" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
p(x) = \left\{\begin{array}{c}
\lambda e^{-\lambda x},x>=0\\
0, x<0
\end{array}\right.</script><script type="math/tex; mode=display">
F(x) = \left\{\begin{array}{c}
0,x<0\\
1-e^{-\lambda x}, x>=0
\end{array}
\right.</script><p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/image-20200629204540374.png" alt="image-20200629204540374"></p>
<h3><span id="zheng-tai-fen-bu-x-n-u-sigma-2">正太分布X~N(u,$\sigma^2$)</span><a href="#zheng-tai-fen-bu-x-n-u-sigma-2" class="header-anchor">#</a></h3><p>概率密度函数</p>
<script type="math/tex; mode=display">
p(x) = \frac{1}{\sqrt{2\pi}\sigma}exp{-\frac{(x-u)^2}{2\sigma^2}}</script><p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/image-20200629204309479.png" alt="image-20200629204309479"></p>
<h3><span id="jia-ma-fen-bu-ga-a-lambda">伽马分布Ga(a,$\lambda$)</span><a href="#jia-ma-fen-bu-ga-a-lambda" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
p(x)=\left\{\begin{array}{c}
\frac{\lambda^{a}}{\Gamma(a)}x^{a-1}e^{-\lambda x},x>0\\
0,x<=0
\end{array}\right.</script><p>含义两个参数$a$和$\lambda$,$a&gt;0$称为形状参数，$\lambda&gt;0$ 称为尺度参数。当$a&gt;1$密度函数是单峰，峰值位于$x = (a-1)/\lambda$ ; 当$1<a<=2$,其密度函数是先上凸，后下凸；对$a>2$, 其密度是先下凸，中间上凸，最后又下凸</a<=2$,其密度函数是先上凸，后下凸；对$a></p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/image-20200629210747963.png" alt="image-20200629210747963"></p>
<h1><span id="sui-ji-bian-liang-de-shu-zi-te-zheng-day-ox02">随机变量的数字特征 day Ox02</span><a href="#sui-ji-bian-liang-de-shu-zi-te-zheng-day-ox02" class="header-anchor">#</a></h1><h2><span id="qi-wang-e-x">期望 E(X)</span><a href="#qi-wang-e-x" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
E(X) = \left\{
\begin{array}{c}
\sum_{i}x_ip(x_i)\\
\int_{-\infty}^{+\infty}xp(x)dx
\end{array}\right.</script><h3><span id="fang-chai-var-x">方差 Var(X)</span><a href="#fang-chai-var-x" class="header-anchor">#</a></h3><p>偏差平方的数学期望</p>
<script type="math/tex; mode=display">
Var(X) = E(X-E(X))^2</script><h3><span id="biao-zhun-chai-sigma-x">标准差 $\sigma_X$</span><a href="#biao-zhun-chai-sigma-x" class="header-anchor">#</a></h3><p>方差的正平方根（开根号）</p>
<h3><span id="k-jie-yuan-dian-ju-u-k">k阶（原点）矩($u_k$)</span><a href="#k-jie-yuan-dian-ju-u-k" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
u_k = E(X^k)</script><h2><span id="k-jie-zhong-xin-ju-v-k">k阶中心矩 $v_k$</span><a href="#k-jie-zhong-xin-ju-v-k" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
v_k = E(X-E(X))^k</script><h3><span id="bian-yi-xi-shu-c-v">变异系数$C_v$</span><a href="#bian-yi-xi-shu-c-v" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
C_V = \frac{\sqrt{Var(X)}}{E(X)}</script><h3><span id="pian-du">偏度</span><a href="#pian-du" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
\beta_s = \frac{E(X-E(X))^3}{[Var(X)]^{3/2}}</script><p>称为偏度系数。$\beta_s&gt;0$ 称该分布为正偏，或右偏。$\beta_s&lt;0$ 称该分布为负偏，又称左偏。刻画的是描述分布偏离对称性程度的一个特征数。</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/Users\23230\AppData\Roaming\Typora\typora-user-images\image-20200630112633750.png" alt="image-20200630112633750"></p>
<h3><span id="feng-du">峰度</span><a href="#feng-du" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
\beta_k = \frac{v_4}{v_2^2}-3 = \frac{E(X-EX)^4}{var(X)^2}-3</script><p>叫峰度系数，简称峰度。峰度是描述分布尖梢程度和/或尾部粗细的一个特征数。相对于正态分布而言的超出量。</p>
<p>$\beta_k&gt;0$ 表示标准化后的分布比标准正态分布更尖梢和/或尾部更粗</p>
<p>$\beta_k &lt; 0 $ 表示标准化后的分布比标准化状态分布更平坦和/或尾部更细</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/Users\23230\AppData\Roaming\Typora\typora-user-images\image-20200630113431889.png" alt="image-20200630113431889"></p>
<p>偏度和峰度都是描述分布形状的特征数</p>
<h3><span id="zhong-wei-shu">中位数</span><a href="#zhong-wei-shu" class="header-anchor">#</a></h3><p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/Users\23230\AppData\Roaming\Typora\typora-user-images\image-20200630142321659.png" alt="image-20200630142321659"></p>
<h3><span id="fen-wei-shu">分位数</span><a href="#fen-wei-shu" class="header-anchor">#</a></h3><p>概率累积</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/Users\23230\AppData\Roaming\Typora\typora-user-images\image-20200630142946479.png" alt="image-20200630142946479"></p>
<h3><span id="zhong-shu">众数</span><a href="#zhong-shu" class="header-anchor">#</a></h3><h1><span id="duo-wei-sui-ji-bian-liang-ji-qi-lian-he-fen-bu-day-ox03">多维随机变量及其联合分布 day Ox03</span><a href="#duo-wei-sui-ji-bian-liang-ji-qi-lian-he-fen-bu-day-ox03" class="header-anchor">#</a></h1><h2><span id="n-wei-sui-ji-xiang-liang">n维随机向量</span><a href="#n-wei-sui-ji-xiang-liang" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
X(\omega) = (X_1(\omega),X_2(\omega),...,X_n(\omega))</script><h2><span id="lian-he-fen-bu-han-shu">联合分布函数</span><a href="#lian-he-fen-bu-han-shu" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
F(x_1,x_2,...,x_n) = \\P(X_1<=x_1,X_2<=x_2,X_3<=x_3,...,X_n<=x_n)</script><h2><span id="bian-ji-mi-du-han-shu">边际密度函数</span><a href="#bian-ji-mi-du-han-shu" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
p_Y(y) = \int_{-\infty}^{+\infty}p(x,y)dx</script><h2><span id="du-li-xing">独立性</span><a href="#du-li-xing" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
F(x_1,x_2,..,x_n) = F(x_1)F(x_2)...F(x_3)</script><h2><span id="juan-ji-gong-shi">卷积公式</span><a href="#juan-ji-gong-shi" class="header-anchor">#</a></h2><p>X与Y相互独立的连续随机变量，其密度函数$P_X(x)$和$P_Y(y)$，则其和$Z = X+Y$ 的密度函数为</p>
<script type="math/tex; mode=display">
p_Z(z) = \int_{-\infty}^{+\infty}p_X(z-y)p_Y(y)dy</script><h2><span id="shu-zi-te-zheng">数字特征</span><a href="#shu-zi-te-zheng" class="header-anchor">#</a></h2><p>期望</p>
<h3><span id="xie-fang-chai">协方差</span><a href="#xie-fang-chai" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
Cov(X,Y) = E[(X-E(X))(Y-E(Y))]</script><h4><span id="xiang-guan-xi-shu">相关系数</span><a href="#xiang-guan-xi-shu" class="header-anchor">#</a></h4><script type="math/tex; mode=display">
Corr(X,Y) = \frac{Cov(X,Y)}{\sigma_X \sigma_Y}</script><h2><span id="tiao-jian-fen-bu">条件分布</span><a href="#tiao-jian-fen-bu" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
P(X=x_i|Y = y_i) = \frac{P(X=x_i,Y = y_i)}{P(Y = y_i)} = \frac{p_{ij}}{p_{.j}}</script><script type="math/tex; mode=display">
p(x|y) = \frac{p(x,y)}{P_Y(y)}</script><h1><span id="shu-li-tong-ji-day-ox04">数理统计 day Ox04</span><a href="#shu-li-tong-ji-day-ox04" class="header-anchor">#</a></h1><p>概率论研究的是概率、各种分布的性质。数量统计则是对随机现象的观察或试验来获取数据，对已知的数据进行分析，并推断隐藏在数据背后的统计规律性。</p>
<h2><span id="xiang-guan-zhu-yu">相关术语</span><a href="#xiang-guan-zhu-yu" class="header-anchor">#</a></h2><p>研究对象的全体成为总体；构成总体的每个成员叫个体。</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/MyBlog\hexo\source\_posts\统计学\image-20200704205119931.png" alt="image-20200704205119931"></p>
<h2><span id="cong-yang-ben-qu-ren-shi-zong-ti">从样本去认识总体</span><a href="#cong-yang-ben-qu-ren-shi-zong-ti" class="header-anchor">#</a></h2><h3><span id="pin-shu-pin-lu-fen-bu">频数频率分布</span><a href="#pin-shu-pin-lu-fen-bu" class="header-anchor">#</a></h3><p>样本直方图描述总体概率密度函数的大致形状</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/MyBlog\hexo\source\_posts\统计学\image-20200704205517901.png" alt="image-20200704205517901"></p>
<h3><span id="jing-yan-fen-bu-han-shu">经验分布函数</span><a href="#jing-yan-fen-bu-han-shu" class="header-anchor">#</a></h3><p>描述总体分布函数的大致形状</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/MyBlog\hexo\source\_posts\统计学\image-20200704205839356.png" alt="image-20200704205839356"></p>
<h3><span id="tong-ji-liang-yu-chou-yang-fen-bu">统计量与抽样分布</span><a href="#tong-ji-liang-yu-chou-yang-fen-bu" class="header-anchor">#</a></h3><p>统计量（抽样分布）,$X = (X_1,X_2,..,X_n)$是来自总体的一个容量$n$的样本。</p>
<script type="math/tex; mode=display">
T = T(X_1,X_2,...,X_n)</script><p>则$T$为统计量，统计量的分布称为抽样分布。</p>
<p>观测值，$x = x_1,x_2,…,x_n$后，带入统计量</p>
<script type="math/tex; mode=display">
t = T(x) = T(x_1,x_2,..,x_n)</script><p>统计量不能含有未知参数。</p>
<h3><span id="yang-ben-jun-zhi-ji-qi-fen-bu">样本均值及其分布</span><a href="#yang-ben-jun-zhi-ji-qi-fen-bu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
\hat{X} = \frac{1}{n}\sum_{i = 1}^{n}X_i</script><h3><span id="yang-ben-fang-chai-yu-yang-ben-biao-zhun-chai">样本方差与样本标准差</span><a href="#yang-ben-fang-chai-yu-yang-ben-biao-zhun-chai" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
S_n^2 = \frac{1}{n}\sum_{i = 1}^n(X_i-\hat{X})^2</script><h3><span id="yang-ben-de-gao-jie-ju">样本的高阶矩</span><a href="#yang-ben-de-gao-jie-ju" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
A_k = \frac{1}{n}\sum_{i = 1}^nX_i^k</script><script type="math/tex; mode=display">
B_k = \frac{1}{n}\sum_{i = 1}^n(X_i-\hat{X})^k</script><h3><span id="fen-wei-shu">分位数</span><a href="#fen-wei-shu" class="header-anchor">#</a></h3><p>$m_d$为样本中位数</p>
<p>$X_1,X_2,..,X_n$是来自总体的一个样本，其次序统计量为$X_{(1)}&lt;=X_{(2)}&lt;=…&lt;=X_{(n)}$，样本的p分位数$m_p$</p>
<script type="math/tex; mode=display">
m_p=\left\{\begin{array}{c}
X_{(k)},\frac{k}{n+1} = p\\
X_{(k)}+[X_{k+1}-X_{k}][(n+1)p-k],\frac{k}{n+1}<p<\frac{k+1}{n+1}
\end{array}\right.</script><h4><span id="xiang-xian-tu">箱线图</span><a href="#xiang-xian-tu" class="header-anchor">#</a></h4><p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/MyBlog\hexo\source\_posts\统计学\image-20200704214857964.png" alt="image-20200704214857964"></p>
<h2><span id="ju-gu-ji-ox05">矩估计 Ox05</span><a href="#ju-gu-ji-ox05" class="header-anchor">#</a></h2><h3><span id="ju-gu-ji">矩估计</span><a href="#ju-gu-ji" class="header-anchor">#</a></h3><p>想法:样本矩估计代替总体矩</p>
<h3><span id="wu-pian-gu-ji">无偏估计</span><a href="#wu-pian-gu-ji" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
\hat{\theta} = \hat{\theta}(X_1,X_2,...,X_n)</script><p>为参数$\theta$的估计量</p>
<script type="math/tex; mode=display">
E(\hat{\theta}) = \theta</script><h2><span id="ji-da-si-ran-gu-ji">极大似然估计</span><a href="#ji-da-si-ran-gu-ji" class="header-anchor">#</a></h2><h2><span id="qu-jian-gu-ji">区间估计</span><a href="#qu-jian-gu-ji" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
p(|\bar{x}-\mu|<\Delta)=1-\alfha</script><p>如果$\hat{x}$的分布已知，则可以求解出$\Delta$,就是区间概率，求解边界</p>
<h2><span id="dian-gu-ji">点估计</span><a href="#dian-gu-ji" class="header-anchor">#</a></h2><p><img src="https://pic4.zhimg.com/80/v2-a7de61cc93aad8aeb5cfad6090f12ffb_720w.jpg" alt="img"></p>
<h2><span id="bei-xie-si-gu-ji">贝叶斯估计</span><a href="#bei-xie-si-gu-ji" class="header-anchor">#</a></h2><h2><span id="jia-she-jian-yan">假设检验</span><a href="#jia-she-jian-yan" class="header-anchor">#</a></h2><p>Step 1: 建立假设</p>
<p>原假设和备择假设</p>
<p>Step 2: 选择检验统计量</p>
<p>Step3: 选择显著性水平</p>
<p>第一类错误：原假设H_0为真，样本观察值落入拒绝域W,其发生的概率为，$\alfha$</p>
<p><img src="/2020/07/17/%E7%BB%9F%E8%AE%A1%E5%AD%A6/Users\23230\AppData\Roaming\Typora\typora-user-images\image-20200705214507303.png" alt="image-20200705214507303"></p>
<p>Step 4: 确定临界值，给出拒绝域</p>
<h1><span id="zhuan-ti-xi-lie">专题系列</span><a href="#zhuan-ti-xi-lie" class="header-anchor">#</a></h1><h2><span id="zhuan-ti-yi-can-shu-gu-ji">专题一：参数估计</span><a href="#zhuan-ti-yi-can-shu-gu-ji" class="header-anchor">#</a></h2><p>数据-&gt; 推断：概率密度函数-&gt;先确定：概率密度函数的形式和参数。</p>
<p>参数估计多大方法: 极大似然估计、最大后验估计、贝叶斯估计、最大熵估计、混合模型估计。</p>
<h3><span id="ji-da-si-ran-gu-ji-mle">极大似然估计(MLE)</span><a href="#ji-da-si-ran-gu-ji-mle" class="header-anchor">#</a></h3><p><strong>形式: 模型已定，参数未知</strong></p>
<p>属于频率派-》优化问题》点估计</p>
<p>假设： 采样独立同分布</p>
<p>想法：似然函数最大，就是不断改变参数，使得事件集发生的概率最大。$\theta$是定值。</p>
<script type="math/tex; mode=display">
p(x|\theta)</script><p>如果$\theta$确定，$x$是变量，这个函数叫做概率函数（probability function)</p>
<p>如果$x$已知，$\theta$未知，叫似然函数（likelihood function),描述对于不同参数的模型，在这种情况下，出现这个样本点的概率是多少</p>
<script type="math/tex; mode=display">
L(\theta) = P(x_1,x_2,...,x_n|\theta)=\Pi_{i=1}^{n}P(x_i|\theta)</script><script type="math/tex; mode=display">
\theta = arg max_{\theta}\Pi_{i = 1}^{n}P(x_i|\theta)</script><h3><span id="zui-da-hou-yan-gu-ji-map">最大后验估计（MAP)</span><a href="#zui-da-hou-yan-gu-ji-map" class="header-anchor">#</a></h3><p>$\theta$是随机变量，最大后验估计要求$P(\theta|X)$最大。</p>
<script type="math/tex; mode=display">
P(\theta|X) = \frac{P(\theta)P(X|\theta)}{p(X)}</script><p>因为$P(X)$和$\theta$是独立的，所以直接忽略$p(X)$</p>
<script type="math/tex; mode=display">
\theta_{max}= argmax_{\theta}p(\theta)p(X|\theta)</script><p>$p(\theta)$称为先验概率。如果服从均匀分布，$p(\theta)$服从均匀分布，</p>
<p><img src="https://img-blog.csdn.net/20170606223618992" alt="img"></p>
<h2><span id="zhuan-ti-er-chang-jian-fen-bu">专题二： 常见分布</span><a href="#zhuan-ti-er-chang-jian-fen-bu" class="header-anchor">#</a></h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzIyNjM2MzQyNg==&amp;mid=2247510542&amp;idx=1&amp;sn=40a49b52f65ea475a71c3756bc3443d5&amp;chksm=e8737b43df04f25565b4c1d58a8c0e7e5985271da20a60c289ac3c4a7d4427ebe33bc9efc48d&amp;scene=0&amp;xtrack=1#rd">https://mp.weixin.qq.com/s?__biz=MzIyNjM2MzQyNg==&amp;mid=2247510542&amp;idx=1&amp;sn=40a49b52f65ea475a71c3756bc3443d5&amp;chksm=e8737b43df04f25565b4c1d58a8c0e7e5985271da20a60c289ac3c4a7d4427ebe33bc9efc48d&amp;scene=0&amp;xtrack=1#rd</a></p>
<h2><span id="zhuan-ti-san-jia-she-jian-yan">专题三 ：假设检验</span><a href="#zhuan-ti-san-jia-she-jian-yan" class="header-anchor">#</a></h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzA4MjYwMTc5Nw==&amp;mid=2648938280&amp;idx=2&amp;sn=dc6184ab880a735be9aadd0bce3383ed&amp;chksm=87940502b0e38c1499e6247e91d65b15e8354b202aba53790859d2d0ffc9081c4cb4b7ae8369&amp;scene=0&amp;xtrack=1#rd">https://mp.weixin.qq.com/s?__biz=MzA4MjYwMTc5Nw==&amp;mid=2648938280&amp;idx=2&amp;sn=dc6184ab880a735be9aadd0bce3383ed&amp;chksm=87940502b0e38c1499e6247e91d65b15e8354b202aba53790859d2d0ffc9081c4cb4b7ae8369&amp;scene=0&amp;xtrack=1#rd</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=Mzg2NzIzNzg4NQ==&amp;mid=2247483764&amp;idx=1&amp;sn=5ad227215a9c634cb7114c36289e2cea&amp;chksm=cebfebe6f9c862f0ff6c2bb71648740c21129494b34da747ddd0a4e2028404401b1487d44577&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=Mzg2NzIzNzg4NQ==&amp;mid=2247483764&amp;idx=1&amp;sn=5ad227215a9c634cb7114c36289e2cea&amp;chksm=cebfebe6f9c862f0ff6c2bb71648740c21129494b34da747ddd0a4e2028404401b1487d44577&amp;scene=21#wechat_redirect</a></p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>统计学</tag>
      </tags>
  </entry>
  <entry>
    <title>西瓜书</title>
    <url>/2020/07/17/%E5%AD%A6%E4%B9%A0%E3%81%AE%E5%8E%86%E7%A8%8B-%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E5%91%A8%E5%BF%97%E5%8D%8E%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2><span id="yue-du-mu-lu"><em>阅读目录</em></span><a href="#yue-du-mu-lu" class="header-anchor">#</a></h2><p>[TOC]</p>
<h2><span id="di-yi-zhang">第一章</span><a href="#di-yi-zhang" class="header-anchor">#</a></h2><a id="more"></a>
<ol>
<li><p>What is the machine learning?<br>非常官方的定义： Tom mitchell(1998) Well-posed Learning<br>Problem:A compute program is said to learn from experience E with respect to same task T and some performance measure P,if its performance on T,as measured by P, improves with experience E。（这个我莫法翻译喔）<br>大概意思是强大的计算机能够事先地完成人为非显示编程好的任务，怎么完成呢？对于某个任务T,给定一个性能度量方法P,在经验E的影响下，如果P对T的测量结果得到了改进，则说明该程序从E中学习了<br>机器学习的过程大致如此：让计算机从数据中产生模型(model)，首先提供经验数据，给定学习算法(learning algorithm)和性能测量方法，它就能根据数据产生模型。<br>模型： 泛指从数据中学得的结果<br>模式： 局部性的结果</p>
<ol>
<li>基本术语<br>数据集: data set<br>样本： sample<br>属性（特征）： attribute（feature)<br>属性值： attribute value<br>属性空间（特征空间）： attribute space （ sample space）<br>特征向量： feature vector<br>学习（训练）：learning（training）<br>训练数据： training data<br>训练集： training set<br>假设：hypothesis 学得模型对应了关于数据的某种潜在规律<br>泛函能力: generalization</li>
<li>假设空间<br>归纳（induction）： 从特殊到一般的“泛化”(generalization)过程<br>演绎（deduction)： 从一般到特殊的“特化”(specialization)过程<br>机器学习显然是归纳学习（inductive learning)<br>归纳学习分狭义与广义，狭义是指要求从training set 中学得概念，广义是指从sample中学习</li>
</ol>
<p>学习过程（训练过程）看作是在所以假设组成的空间中进行搜索的过程，搜索目标是找到与training set匹配的假设。如果假设的表示一旦确定，假设空间与其规模就确定了。想更详细了解假设空间，<a href="http://www.deeplearningbook.org/contents/ml.html">戳我啦</a>5.2<br>现实问题中常面临很大的假设空间，我们可以寻找一个与训练集一致的假设集合，称之为版本空间。版本空间从假设空间剔除了与正例不一致和与反例一致的假设，它可以看成是对正例的最大泛化。<br>归纳偏好<br>机器学习算法在学习过程中对某种类型假设的偏好，称为“归纳偏好”（inductive bias),也就是学习算法在一个可能很庞大的假设空间中对假设进行选择的启发式或者“价值观”<br>奥卡姆剃刀定律： 若有多个假设与观测一致，则选择做简单的哪个。<br>没有免费的无餐定理（No Free Lunch Theorem[NFL]) 在所以问题出现的机会相同，或者所以问题同等重要下，所有算法的期望一样。但在实际问题中，针对具体的问题，不同的算法才会出现相对优劣。                        </p>
<ol>
<li>发展历程<br>推理期：二十世纪五十年代到七十年代初，AI处于推理区，代表性工作主要是A.Newell 和H.Simon的“逻辑理论家”程序和此后的“通用问题求解”程序等。“逻辑理论家”程序证明了数学家罗素和怀特海的《数学原理》里面的某些定理，获得图灵奖。<br>知识期：从二十世纪七十年代中期开始，AI的研究进入了“知识期”，大量的专家系统出现，E.A.Feigenbaum（知识工程之父）在1994获得图灵奖。人们意识到，专家系统面临“知识工程瓶颈”,在那个时候，有人把知识总结出来再教给计算机是相当困难的。<br>1950年，图灵再关于图灵测试的文章中，曾提到机器学习的可能<br>二十世纪五十年代初，A.Samuel著名跳棋程序。五十年代中后期，基于神经网络的”连接主义“学习，如F.Rosenblatt的感知器（Perceptro），B.Widrem的Adaline,六七十年代，基于逻辑表示的”符号主义学习技术蓬勃发展<br>学习期：二十世纪八十年代是机器学习百花初放的时期。一大主流是符号主义学习，代表决策树（decision tree).二十世纪九十年代中期之前，另外一大主流技术是基于神经网络的连接主义学习。二十世纪九十年代中期，”统计学习“占据主流，代表支持向量机。二十一世纪初，连接主义学习掀起了”深度学习“为名的热潮。</li>
</ol>
</li>
</ol>
<h2><span id="di-er-zhang-mo-xing-ping-gu-yu-xuan-ze">第二章 ： 模型评估与选择</span><a href="#di-er-zhang-mo-xing-ping-gu-yu-xuan-ze" class="header-anchor">#</a></h2><h3><span id="jing-yan-wu-chai-yu-guo-ni-he-qian-ni-he">经验误差与过拟合、欠拟合</span><a href="#jing-yan-wu-chai-yu-guo-ni-he-qian-ni-he" class="header-anchor">#</a></h3><p>训练误差（training error) or 经验误差（empirical error): 学习器在训练集上的输出与训练集之间的差异<br>过拟合（over fitting）：在训练集上表现非常好，泛化能力太差，最常见的情况是学习能力太强学习到不太一般的特性，无法彻底避免，只能“缓解”<br>欠拟合（under fitting）：这种情况容易克服<br>模型选择(model selection): 不同的参数配置，产生不同的模型。理论上最好的模型是对泛化能力进行评估，最好的就是泛化误差最小的，泛化误差是无法直接获取的</p>
<h3><span id="ping-gu-fang-fa">评估方法</span><a href="#ping-gu-fang-fa" class="header-anchor">#</a></h3><p>设置一个”测试集（testing set)”来测试学习器在新样本的判断能力，用测试误差近似泛化误差<br>要求：</p>
<ol>
<li>测试样本与训练样本独立同分布的</li>
<li>测试集应该尽可能与训练集互斥，测试样本尽量不出现在训练集中<h4><span id="ru-he-chan-sheng-training-set-he-testing-set">如何产生training set 和 testing set</span><a href="#ru-he-chan-sheng-training-set-he-testing-set" class="header-anchor">#</a></h4></li>
<li>留出法（hold-out)<br>要求：数据集($D$)划分成两个互斥的集合（训练集($S$,测试集$T$),需要注意的是，划分后，尽量可能的保持数据分布的一致性。<br>不同的划分结果，得到不同的测试误差。单次使用留出法得到的结果是不够稳定的，所以一般采用若干次的随机划分，重复进行实验评估后去平均值</li>
<li>交叉验证法（cross validation)<br>I. 将数据($D$)划分成$k$个大小相似的互斥子集，每个子集$D_i$都尽可能保持数据分布的一致性<br>II. 每次都用$k-1$作为训练集，余下的哪个子集作为测试集，于是乎都到了k个测试结果的均值<br>值得注意的是，$k$的取值对结果的稳定性和保真性有很大的影响，因此也叫k者交叉验证（k-flold cross validation) k的通常取值是10<br>同样的，数据集$D$划分为$k$个子集有很多的划分方式，可重复$P$次$k$折交叉验证。</li>
<li>自助法 (bootstrapping)<br>注意的是我们希望通过所以的训练集（$D$)训练出模型，但是流出法和交叉验证的方法，都保留一部分作为测试集，因此实际评估的模型所使用的训练集更下，这也许会导致估计偏差。<br>自助法： 可重复采样或者有放回采样</li>
<li>记采样产生的数据集（$D’$),每次从$D$中挑选应该样本，将其拷贝至($D’$),并再将采样的样本放回数据集($D$),重复($m$)次以后，得到了包含($m$)个样本的数据集($D’$)</li>
<li><p>对于可重复采样，样本始终不采到的概率是$(1-\frac{1}{m})^m$,取极限得到：初式数据集中$36.8%$为出现在采样数据集中，因此可将($D$)作为训练集，($D\D’$)作为测试集，又称外包估计(out-of-bag estimate)<br>自助法适用于数据量少，难区别测试集和训练集时，自助法会改变初始数据的分布，在初始数据足够的情况下，流出法和交叉验证更常用一些</p>
<h4><span id="diao-can-he-zui-zhong-de-mo-xing">调参和最终的模型</span><a href="#diao-can-he-zui-zhong-de-mo-xing" class="header-anchor">#</a></h4><p>学习算法都有参数(parameter),不同的参数配置，学得模型的性能也往往不同<br>验证集(validation set): 模型评估和选择中用于估计测试的数据集称为的数据集<br>往往将训练集划分为训练集和验证集，基于验证集上的性能来进行模型选择和调参</p>
<h4><span id="xing-neng-du-liang-performance-measure">性能度量(performance measure)</span><a href="#xing-neng-du-liang-performance-measure" class="header-anchor">#</a></h4><h4><span id="jia-she-jian-yan">假设检验</span><a href="#jia-she-jian-yan" class="header-anchor">#</a></h4><p>（其实我一直都并不是特别了解）</p>
<ol>
<li>假设检验的基本原理<br>是重要的统计推断问题之一，根据样本提供的信息，检验关于总体某个假设是否正确。包括参数的假设检验（均值、方差等）和非参数（分布啊）的假设检验。 </li>
</ol>
</li>
<li>参数检验： 提出假设H—-&gt;在构造统计量，确定统计量的分布—-&gt; 确定拒绝域和接受域的分界线—-&gt; 在根据样本计算统计量的值u —-&gt; 推断</li>
<li>分布拟合检验</li>
</ol>
<h4><span id="pian-chai-he-fang-chai">偏差和方差</span><a href="#pian-chai-he-fang-chai" class="header-anchor">#</a></h4><p>通过概率论分析对学习算法的期望泛化错误率进行拆解<br>$x$: 测试样本<br>$y_D$： $x$在数据集中的标记<br>$y$: $x$的真实标记<br>$f(x:D)$: 在训练集上学得的模型$f$在$x$上预测输出<br>以回归任务为例子：<br>学习算法的期望预测为：</p>
<script type="math/tex; mode=display">\hat{f}(x) = E_D[f(x;D)]</script><p>方差：度量同样的样本大小的训练集的变动所导致的学习性能的变化，即刻画数据扰动所造成的影响</p>
<script type="math/tex; mode=display">var(x)= E_D[(f(x;D)-\hat{f}(x))^2]</script><p>噪声： 表达了当前任务上任务学习算法所能达到的期望泛化误差的下界，即刻画了学习问题本身的难度。</p>
<script type="math/tex; mode=display">\epsilon^2=E_D[(y_D-y)^2]</script><p>期望输出和真实标记的差别称为偏差(bias): 度量了学习算法的期望预测与真实结果的偏离程度，即刻画了学习算法本身的拟合能力</p>
<script type="math/tex; mode=display">bias^2(x)=(f(x)-y)^2</script><p>若假设噪声期望为零，那么算法的期望泛化误差：</p>
<script type="math/tex; mode=display">
E(f;D)=E_D[(f(x;D)-y)^2]\\
=....=E_D[(f(x;D)-\hat{f}(x))^2]+(\hat{f}(x)-y)^2+E_D[(y_D-y)^2]</script><script type="math/tex; mode=display">E(f;D)=bias^2(x)+var(x)+\epsilon^2</script><p>由上式可知，泛化能力由学习算法的能力、数据的充分性、学习任务本身的难度共同决定的。<br>underfitting: 偏差主导泛化误差<br>over fitting： 训练数据发生的扰动渐渐被学习到，方差主导了泛化误差</p>
<h2><span id="di-san-zhang-xian-xing-mo-xing">第三章 线性模型</span><a href="#di-san-zhang-xian-xing-mo-xing" class="header-anchor">#</a></h2><p>我自己其实是一直停留在线性模型学习过程，因为每次开头都是这一张，所以我就学习了很多次。这次不准备再细看了。</p>
<h3><span id="xian-xing-pan-bie-fen-xi-linear-discriminant-analysis-lda">线性判别分析 Linear Discriminant Analysis (LDA)</span><a href="#xian-xing-pan-bie-fen-xi-linear-discriminant-analysis-lda" class="header-anchor">#</a></h3><p>基本思想： 在训练样例集上，设法将样本例子投影到一条直线上使得同类样例的投影尽可能接近、异类投影点尽可能远离。<br>数学表达：<br>$D={(x_i,y_i)}_{i=1}^{m}$: data set<br>$X_i$: 第$i$类集合<br>$u_i$: 第$i$类集合均值向量<br>$\sum{i}$: 第$i$类集合协方差矩阵<br>$ w^Tu_i$： 第$i$类集合在直线上的投影<br>$ w^T\sum_{i}w$: 样本点的在直线上的投影<br>学习算法：<br>同类更近：<br>$\min \sum_{i=1}^{n}(w^T\sum_{i}w)$<br>类中心越大：<br>$\max ||w^{T}u_1-(\sum_{i=2}(w^{T}u_i))||_2^2$<br>因此，想最大化的目标<br>考虑$i = 2$的情况</p>
<script type="math/tex; mode=display">J  = \frac{||w^Tu_0-w^Tu_1||_2^2}{w^T\sum_{i=1}w+w^T\sum_{i=2}w}
=\frac{w^T(u_0-u_1)(u_0-u_1)^Tw}{w^T(\sum_1+\sum_2)w}</script><script type="math/tex; mode=display">
应用空间几何和矩阵的关系描述
类内散度矩阵($S_W$)</script><script type="math/tex; mode=display">\sum_1+\sum_2</script><script type="math/tex; mode=display">
类间散度矩阵：</script><script type="math/tex; mode=display">(u_0-u_1)(u_0-u_1)^T</script><script type="math/tex; mode=display">
所以，我们想优化目标如下：</script><script type="math/tex; mode=display">J = \frac{w^T_Sbw}{w^TS_ww}</script><p>如何确定$w$呢？注意到分子分母都是关于$w$的二次型，因此解这和w的方向有关系，因此，可令 $w^TS_ww=1$<br>,优化问题可是如下：</p>
<script type="math/tex; mode=display">\min -w^TS_bw \\
s.t. w^TS_ww = 1</script><p>构造lagrange 函数</p>
<script type="math/tex; mode=display">L = -w^TS_bw+r(w^TS_ww-1)</script><p>对$w$求导可得：</p>
<script type="math/tex; mode=display">S_bw =rS_ww</script><p>$S_b w$和$ u_0 - u_1 $ 方向是$u_0-u_1$,不妨设</p>
<script type="math/tex; mode=display">S_nw=r(u_0-u_1)</script><p>so,<script type="math/tex">w = s_w^{-1}(u_0-u_1)</script><br>这里考虑到数值解的稳定性，因此往往把$S_w$进行<a href="https://www.cnblogs.com/xiemaycherry/p/10460464.html">奇异值分解</a></p>
<h2><span id="di-si-zhang-jue-ce-shu">第四章 决策树</span><a href="#di-si-zhang-jue-ce-shu" class="header-anchor">#</a></h2><p>决策树是一种特别普通的符合生活做决策的过程。</p>
<h2><span id="di-wu-zhang-shen-jing-wang-luo">第五章 神经网络</span><a href="#di-wu-zhang-shen-jing-wang-luo" class="header-anchor">#</a></h2><p>神经网络最开始出现是根据生物神经网络来的。</p>
<h3><span id="zui-jian-dan-de-shen-jing-wang-luo-shen-jing-yuan-mo-xing-neuron-unit">最简单的神经网络：神经元模型(neuron|unit)</span><a href="#zui-jian-dan-de-shen-jing-wang-luo-shen-jing-yuan-mo-xing-neuron-unit" class="header-anchor">#</a></h3><p>McCulloch and Pitts抽象出“M-P神经元模型”<br><img src="/2020/07/17/%E5%AD%A6%E4%B9%A0%E3%81%AE%E5%8E%86%E7%A8%8B-%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E5%91%A8%E5%BF%97%E5%8D%8E%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/5.1.png" alt="tup"></p>
<h3><span id="gan-zhi-qi-perceptron">感知器（Perceptron)</span><a href="#gan-zhi-qi-perceptron" class="header-anchor">#</a></h3><p>输入层和输出层，输出层：M-P神经元<br>感知器的学习过程一定是收敛的</p>
<h3><span id="duo-ceng-qian-kui-shen-jing-wang-luo-multi-layer-feddforward-neural-networks">多层前馈神经网络 （multi-layer feddforward neural networks)</span><a href="#duo-ceng-qian-kui-shen-jing-wang-luo-multi-layer-feddforward-neural-networks" class="header-anchor">#</a></h3><p>前馈：网络的拓扑结构不存在环或者回路<br>神经元的学习过程：就是根据训练数据来调整神经元之间的”连接权”(connection weight),以及每个功能神经元的阙值</p>
<h3><span id="wu-chai-ni-chuan-bo-suan-fa-error-backpropagation-bp">误差逆传播算法： error BackPropagation (BP)</span><a href="#wu-chai-ni-chuan-bo-suan-fa-error-backpropagation-bp" class="header-anchor">#</a></h3><h2><span id="quan-ju-zui-xiao-he-ju-bu-zui-xiao">全局最小和局部最小</span><a href="#quan-ju-zui-xiao-he-ju-bu-zui-xiao" class="header-anchor">#</a></h2><p>神经网络的训练过程其实也就是参数寻优的过程，基于梯度的搜素是使用最为广泛的参数寻优方法，但是如果误差函数在当前点的梯度为零，则很有可能达到局部极小。</p>
<h2><span id="di-liu-zhang-zhi-chi-xiang-liang-ji">第六章 支持向量机</span><a href="#di-liu-zhang-zhi-chi-xiang-liang-ji" class="header-anchor">#</a></h2><p>支持向量机的学习原理很简单也很有趣，从分类问题，怎么一步一步建立的优化问题，一步一步的完善优化问题以及求解，从硬间隔到软间隔，分类问题是考虑分对，而回归问题希望预测值和原始值尽可能的接近，这样就造成了约束条件，目标性的不同。</p>
<p>最重要的是引入了核方法，低维空间的非线性关系映射成了高维空间线性关系，这是特别重要的思想</p>
<h1><span id="di-ba-zhang-ji-cheng-xue-xi">第八章 集成学习</span><a href="#di-ba-zhang-ji-cheng-xue-xi" class="header-anchor">#</a></h1><h2><span id="ji-ben-si-xiang">基本思想</span><a href="#ji-ben-si-xiang" class="header-anchor">#</a></h2><p>构建一组基学习器（base learner)，在结合</p>
<p>a. 如果集成中是相同类型的个体学习器，如决策树，全是神经网络的集成“同质”（homogeneous),个体学习器叫基学习器</p>
<p>b. 不同的学习器，异质（heterogeneous)，个体学习器叫组件学习器</p>
<h3><span id="wei-shi-me-you-xiao">为什么有效</span><a href="#wei-shi-me-you-xiao" class="header-anchor">#</a></h3><ol>
<li><p>多样性的基学习器</p>
<ol>
<li>不同的模型取长补短</li>
<li>每个基学习器都犯错误，综合起来可能性不大</li>
</ol>
<p>举个栗子</p>
<ol>
<li>也许一个线性模型不能简单分类，但是多个线性模型综合，可将数据集成功分类</li>
</ol>
</li>
</ol>
<h3><span id="gou-jian-bu-tong-de-ji-qi-xue-xi">构建不同的机器学习</span><a href="#gou-jian-bu-tong-de-ji-qi-xue-xi" class="header-anchor">#</a></h3><p>Q 1: 如何建立基学习器</p>
<p>尽量满足多样性</p>
<p>M1: 不同的学习算法</p>
<p>M2: 相同学习算法、不同的参数</p>
<p>M3: 不同的数据集（不同的样本子集、数据集上不同的特征）</p>
<p>homogenous ensemble</p>
<ol>
<li><p>采用相同的学习算法、不同的训练集</p>
<p>Bagging Boosting</p>
</li>
<li><p>相同算法，不同的参数设置</p>
</li>
<li><p>相同的训练集，不同的学习算法</p>
</li>
</ol>
<p>Q2: 如何综合呢？</p>
<ol>
<li><p>t投票法：majority voting</p>
</li>
<li><p>weighted voting</p>
</li>
<li><p>训练一个新模型确定如何综合</p>
<ol>
<li>Stacking</li>
<li>偏好的简单模型</li>
</ol>
</li>
</ol>
<h3><span id="zong-he">综合</span><a href="#zong-he" class="header-anchor">#</a></h3><h2><span id="bagging-boostrap-aggregating">Bagging = Boostrap AGGregatING</span><a href="#bagging-boostrap-aggregating" class="header-anchor">#</a></h2><p>有放回采样，同质学习器</p>
<h4><span id="suan-fa">算法</span><a href="#suan-fa" class="header-anchor">#</a></h4><figure class="highlight tex"><table><tbody><tr><td class="code"><pre><span class="line">Input : </span><br><span class="line">	训练集 D={(x1,y1)}</span><br><span class="line">	基学习算法A</span><br><span class="line">	训练轮数 T</span><br><span class="line">过程</span><br><span class="line">	for t = 1,2,...,T do</span><br><span class="line">		h_t= A(D,Dt) // Dt第t次采样的分布</span><br><span class="line">	end for</span><br><span class="line">输出</span><br><span class="line">	回归：Average</span><br><span class="line">	分类：投票法</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="you-dian">优点</span><a href="#you-dian" class="header-anchor">#</a></h4><p>没有用于建模的样本，可以用作验证集来对泛化能力进行包外估计，可以得出Bagging泛化误差的包外估计</p>
<h4><span id="random-forest-rf">random forest（RF)</span><a href="#random-forest-rf" class="header-anchor">#</a></h4><p>输入为样本集$D={(x,y1),(x2,y2),…(xm,ym)}$，弱分类器迭代次数T。</p>
<p>输出为最终的强分类器f(x)f(x)</p>
<p>1）对于t=1,2…,T:</p>
<p>a)对训练集进行第t次随机采样，共采集m次，得到包含m个样本的采样集$Dt$</p>
<p>b)用采样集$Dt$训练第t个决策树模型$Gt(x)$，在训练决策树模型的节点的时候， 在节点上所有的样本特征中选择一部分样本特征， 在这些随机选择的部分样本特征中选择一个最优的特征来做决策树的左右子树划分</p>
<p>2) 如果是分类算法预测，则T个弱学习器投出最多票数的类别或者类别之一为最终类别。如果是回归算法，T个弱学习器得到的回归结果进行算术平均得到的值为最终的模型输出。</p>
<p>参数设置</p>
<p>利用00B样本评估变量的重要性</p>
<h2><span id="boosting-ti-gao">Boosting 提高</span><a href="#boosting-ti-gao" class="header-anchor">#</a></h2><p>顺次建立学习器，就是先从训练集上训练一个基学习器，再根据学习器的表现对训练集分布进行调整，让先学习器错误训练的样本在后续收到更多的关注，然后基于调整的分布训练下一个学习器，最后，在将这T个学习器进行加权结合</p>
<p>基学习器的线性组合</p>
<script type="math/tex; mode=display">
H_N(x;P)=\sum_{t=1}^{N}\alpha_th_t(x;a_t)</script><p>$a_t$是第$i$个弱学习器的最优参数，$\alpha_t$是在强分类器中的比重，$P$是$a_t$和$\alpha_t$的组合</p>
<p>最小化指数损失函数</p>
<script type="math/tex; mode=display">
l_{exp}(H|D)=E_{x~D}[e^{-f(x)H(x)}]</script><script type="math/tex; mode=display">
H_n(x)=H_{n-1}(x)+\alpha_{n}h_{n}(x,a_n)</script><script type="math/tex; mode=display">l(h_i(x,a_t)|D)=E_{x~D}(exp(-f(x)h_i(x)))\\=p(f(x)=1)exp(-h_i(x))+p(f(x)=-1)exp(h_i(x))</script><script type="math/tex; mode=display">\frac{\partial l(h_i(x,a_t)|D)}{\partial h_i(x,a_t)}=\\
-p(f(x)=1)exp(-h_i(x))+p(f(x)=-1)exp(h_i(x))=0</script><script type="math/tex; mode=display">h(x)=\frac{1}{2}ln\frac{P(f(x)=1)}{P(f(x)=-1)}</script><p>采取不同的损失函数，得到不同的类型</p>
<p><a href="https://blog.csdn.net/luanpeng825485697/article/details/79383492">https://blog.csdn.net/luanpeng825485697/article/details/79383492</a></p>
<h3><span id="gbdt">GBDT</span><a href="#gbdt" class="header-anchor">#</a></h3><h2><span id="stacking">Stacking</span><a href="#stacking" class="header-anchor">#</a></h2><p><img src="/2020/07/17/%E5%AD%A6%E4%B9%A0%E3%81%AE%E5%8E%86%E7%A8%8B-%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E5%91%A8%E5%BF%97%E5%8D%8E%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/MyBlog\hexo\source\_posts\学习の历程-《机器学习》周志华学习记录\Stacking.png" alt></p>
<p>不同学习器，相同数据集</p>
<p>第一层</p>
<p>第二层：不用第一层的数据</p>
<p>可用交叉验证</p>
<p>注意事项：</p>
<p>过拟合问题：第二层线性回归</p>
<p>第一层尽可能的多样性：</p>
<p>综合好的模型</p>
<p>防止过拟合</p>
<pre><code> 1. 随机性
 2. 
</code></pre><p>Bagging Boosting Stacking</p>
<h2><span id="ji-da-si-ran-gu-ji">极大似然估计</span><a href="#ji-da-si-ran-gu-ji" class="header-anchor">#</a></h2><p>似然： 相似的样子</p>
<p>对于一组数据，假设符合正态分布，希望已知点在这个正态分布的情况下，所有点对于的概率之和或者积最大，</p>
<p><img src="/2020/07/17/%E5%AD%A6%E4%B9%A0%E3%81%AE%E5%8E%86%E7%A8%8B-%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E5%91%A8%E5%BF%97%E5%8D%8E%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/MyBlog\hexo\source\_posts\学习の历程-《机器学习》周志华学习记录\极大似然估计.jpg" alt>，蓝色表示数据，红色就是做得正态分布</p>
<h2><span id="di-shi-zhang-jiang-wei-yu-du-liang-xue-xi">第十章 降维与度量学习</span><a href="#di-shi-zhang-jiang-wei-yu-du-liang-xue-xi" class="header-anchor">#</a></h2><h3><span id="k-jin-lin-xue-xi">k近邻学习</span><a href="#k-jin-lin-xue-xi" class="header-anchor">#</a></h3><p>k-Nearest Neighbor</p>
<p>原理： 基于某种距离度量找出训练集中与其最靠近的k个训练样本，根据k个邻居的信息进行预测。</p>
<p>给定测试样本$x$,如果最邻近样本$z$,最邻近分类器出错的概率就是$x$与$z$不再同一类</p>
<script type="math/tex; mode=display">
p(err) = 1-\sum_{c \in y}p(c|x)P(c|z)</script><h3><span id="di-wei-qian-ru">低维嵌入</span><a href="#di-wei-qian-ru" class="header-anchor">#</a></h3><p>缓解维数灾难的重要途经之一是降维（dimension reduction）这样使得子空间中样本密度大幅度提高，距离计算变得更容易，</p>
<h4><span id="duo-wei-suo-fang-multiple-dimensional-scaling">多维缩放（Multiple Dimensional,Scaling）</span><a href="#duo-wei-suo-fang-multiple-dimensional-scaling" class="header-anchor">#</a></h4><p>MDS</p>
<p>假定m个样本在原始空间的距离矩阵$D$,在低维空间中，两个样本欧式距离等于原空间的距离，$||z_i-z_j|| = dist_{ij}$, 令$B=Z^TZ$为降维后样本的内积矩阵,</p>
<script type="math/tex; mode=display">
dist_{ij}^2=||z_i||^2+||z_j||^2-2z_iz_j=b_{ii}+b_{jj}-2b_{ij}</script><p>对降维后数据中心化，均值为0,$\sum_{i=1}^{m}z_i$,于是乎就有$\sum_{i=1}^{M}b_{ij}=z_j(z_1+z_2+…+z_m)=0=\sum_{j=1}^{m}x_{ij}$</p>
<p>,可得</p>
<script type="math/tex; mode=display">
\sum_{i=1}^{m}dist_{ij}^2=\sum_{i=1}^{m}(b_{ii}+b_{jj}-2b_{ij})=tr(B)_mb_{jj}\\
\sum_{i=1}^{m}\sum_{j=1}^{m}dist_{ij}^2 = 2m tr(B)\\
tr(B)=\sum_{i=1}^{m}||z_i||^2</script><p>可得</p>
<script type="math/tex; mode=display">
b_{ij}=-\frac{1}{2}(dist_{ij}^2-dist_{i.}^2-dist_{.j}^2+dist{..}^2)</script><p>对矩阵B做特征值分解(eigenvalue decomposition)，$B = V \land V$,则</p>
<script type="math/tex; mode=display">
Z = \land_{*}^{1/2}V_{*}</script><p>欲获得低维子空间，最简单是对原始高维空间进行线性变换，$Z = W^TX$,特别的，$W$取正交变换，$W={w_1,w_2,…,w_{d’}}$W是d’个d维基向量，</p>
<h2><span id="zhu-cheng-fen-fen-xi">主成分分析</span><a href="#zhu-cheng-fen-fen-xi" class="header-anchor">#</a></h2><p>Principal Component Analysis ：PCA</p>
<p>在正交空间里面的样本，用一个超平面对样本进行恰当的表达，至少这个样本点满足</p>
<p>最近重构性： 样本点到这个超平面的距离足够近</p>
<p>最大可分性： 样本点在这超平面上的投影尽可能分开</p>
<p>对于最近重构性：</p>
<p>假设样本去中心化，再假设投影变换后得到欣的正交坐标系${w_1,w_2,…,w_d}$,d维空间里面的一组单位正交基，$||w_i||_2=0$,$||w_i^Tw_j||=0$,如果再新坐标系中丢掉一部分坐标，样本点在新坐标的投影是$z_i={w_1^Tx_{i1}},..,w_{d’}^Tx_{i}$,于是又$z_{ij} =w_{j}^Tx_i$,$\hat{x_i}=\sum_{j}^{d’}w_jx_i$</p>
<script type="math/tex; mode=display">
\sum_{i=1}^{m}||\sum_{j=1}^{d'}z_{ij}w_j-x_i||_2^2=\sum_{i=1}^{m}z_i^Tz_i-2\sum_{i=1}^{m}z_i^TW^Tx_i+x_i^Tx_i\\
=\sum_{i=1}^{m}x_i^TWW^Tx_i-2\sum_{i=1}^{m}x_i^TWW^Tx_i+x_i^Tx_i\\
min -\sum_{i=1}^{m}z_i^Tz_i=-tr(Z^TZ)\\
min -tr(\sum_{i=1}^{m}W^Tx_ix_i^TW)=-tr(W^T(\sum_{i=1}^{m}x_i^Tx_i)W）=-tr(W^TXX^TW)\\
s.t W^TW = I</script><p>对于最大可分性$(W^T\hat{X}=0)$</p>
<script type="math/tex; mode=display">
max tr(W^TXX^TW)\\s.t W^TW = I</script><p>根据lagrange</p>
<script type="math/tex; mode=display">
L(W,\lambda)=-tr(W^TXX^TW)-\lambda(W^TW-I)\\
\frac{\partial L}{\partial w_i}=-2w_iXX^T-2\lambda_i w_i=0\\
XX^Tw_i = \lambda w_i</script><p>$XX^T$是协方差矩阵,$\lambda$是特征值，$w_i$是特征向量</p>
<p>特别提示，$x$需要中心化</p>
<p>对于线性PCA降维方法是从高维空间映射到低维空间，$Z= W^TX$,然而不少情况，则需要非线性映射才能找到恰当的低维嵌入， $\phi(x)$</p>
<script type="math/tex; mode=display">
\max tr(\phi(X)\phi(X)^T)=tr( W^T\varphi(x)\varphi(x)^TW)\\
W^TW = I</script><p>于是有</p>
<script type="math/tex; mode=display">
\varphi(x)^T\varphi(x)w_i=\lambda_iw_i\\
w_i=\frac{tr(\varphi(x)^T\varphi(x))}{\lambda_iw_i}</script><script type="math/tex; mode=display">
z_j = \frac{\sum_{i=1}^{m}\varphi(x)^T\varphi(x)}{\lambda_iw_i}\varphi(x_i)\
=\frac{\sum_{i=1}^{m}\varphi(x_i)K(x_i,x)}{\lambda_iw_i}</script><h2><span id="liu-xing-xue-xi-biao-shi-xue-xi-you-dian-kun-nan">流形学习（表示学习有点困难)</span><a href="#liu-xing-xue-xi-biao-shi-xue-xi-you-dian-kun-nan" class="header-anchor">#</a></h2><h1><span id="di-shi-yi-zhang-te-zheng-xuan-ze-yu-xi-shu-xue-xi">第十一章 特征选择与稀疏学习</span><a href="#di-shi-yi-zhang-te-zheng-xuan-ze-yu-xi-shu-xue-xi" class="header-anchor">#</a></h1><p>对于一个学习任务，对任务有用的特征,称为”relevant feature”，对于没有用的属性”irrelevant feature”,因此从给定特征集选择出相关特征子集的过程，特征选择（feature selection),原因一，降维；原因二：降低学习的任务。</p>
<p>无关特征，包括一类冗余特征（redundant feature），能够从其他特征里面推演出来。</p>
<h2><span id="te-zheng-sou-suo">特征搜索</span><a href="#te-zheng-sou-suo" class="header-anchor">#</a></h2><h3><span id="qian-xiang-forward-sou-suo">前向（forward)搜索</span><a href="#qian-xiang-forward-sou-suo" class="header-anchor">#</a></h3><p>对于特征集合$\{a_1,a_2,…,a_d \}$,每个特征看作一个候选集，对这$d$候选的单特征子集进行评价，可选出最优子集，然后，再下一轮子集中，构成了两个特征候选的子集，</p>
<h2><span id="hou-xiang-backward-sou-suo">后向 (backward) 搜索</span><a href="#hou-xiang-backward-sou-suo" class="header-anchor">#</a></h2><p>每次尝试去掉一个无关特征</p>
<h3><span id="shuang-xiang-bidirectional-sou-suo">双向(bidirectional)搜索</span><a href="#shuang-xiang-bidirectional-sou-suo" class="header-anchor">#</a></h3><p>上述操作只是贪心策略，仅仅考虑了本轮选定集合最优</p>
<p>​            </p>
<h2><span id="zi-ji-ping-jie-subset-evaluation">子集评价（subset evaluation)</span><a href="#zi-ji-ping-jie-subset-evaluation" class="header-anchor">#</a></h2><p>已知一个数据集$D$,假定第$i$类样本所占比例$p_i$,对于属性子集$A$,假设根据取值D分成V个子集$\{D^1,D^2,…,D^V\}$,则子集A的信心 增益</p>
<script type="math/tex; mode=display">
Gain(A) = Ent(D)-\sum_{i=1}^V\frac{|D^i|}{|D|}Ent(D^i)\\
Ent(D)=\sum_{i=1}^{|y|}p_ilog^{-p_i}</script><p>​    </p>
<p>信息增益Gain(A)越大，说明特征子集A包含的有助于分类的信息越多，特征子集A是对数据集D的一个划分，样本D的标记信息Y则对应着D的真实划分，就能对A进行评价，对Y对应的划分的差异越小，则说明A越好，</p>
<h2><span id="guo-lu-shi-xuan-ze">过滤式选择</span><a href="#guo-lu-shi-xuan-ze" class="header-anchor">#</a></h2><p>Relief （Relevant Feature） </p>
<p>设计一个“相关统计量”来描述度量特征的重要性，该统计量是一个向量，每个分量对应一个初式特征，而特征子集的重要性则是每个特征对应统计量分量之和来决定，最终只需指定一个阙值，根据阙值选择统计量分量对应的特征即可</p>
<p>如何确定相关统计量</p>
<p>给定训练集$(x_i,y_i)$,对于实例$x_i$,在其同类样本中找最近邻（near-hit),在从异类样本中寻找其最近邻$x_{x,nm}$称为“猜错近邻”，</p>
<script type="math/tex; mode=display">
\delta^j =\sum_i-diff(x_i^j,x_{i.nh}^j)^2+diff(x_i^j,x_{i,nm}^j)^2</script><p>分值越大，说明对应属性的分类能力越强</p>
<p>对于多分类问题</p>
<script type="math/tex; mode=display">
\delta^j = \sum_i-diff(x_i^j,x_{i,nh}^j)^2+\sum_{l \neq k}p_l\ diff(x_i^j,x_{i,l,nm}^j)</script><p>这种方法看一个属性（特征）重不重要，先计算出每个属性的统计分量，按照公式，子集的评价就是对于分量的和</p>
<h2><span id="bao-guo-shi-xuan-ze">包裹式选择</span><a href="#bao-guo-shi-xuan-ze" class="header-anchor">#</a></h2><p>直接把最终将要使用的学习器的性能作为特征子集的评价准则，特征选择的目的就是为给定学习期选择有利其性能的特征子集。</p>
<p>LVW（Las Vegas Wrapper）是典型的包裹式特征选择方法，拉斯维加斯方法（Las Vegas method）框架下使用随机策略来进行子集搜索，并以最终分类器的误差为特征子集评价准则</p>
<p>算法</p>
<h2><span id="qian-ru-shi-xuan-ze">嵌入式选择</span><a href="#qian-ru-shi-xuan-ze" class="header-anchor">#</a></h2><p>学习器自动地进行特征选择</p>
<p>L-P范数</p>
<script type="math/tex; mode=display">
L_P = ||X||_P = p\sqrt{\sum_{i=1}^{n}x_i^p}</script><p><img src="https://img-blog.csdn.net/20160623222921977" alt="这里写图片描述"></p>
<p>L0范数</p>
<script type="math/tex; mode=display">
||X||_0=向量中非零元素的个数</script><p>L1范数</p>
<script type="math/tex; mode=display">
||x||_1 = \sum|x_i|</script><p>L2范数，最常用</p>
<script type="math/tex; mode=display">
||X||_2=\sqrt{x_i^2}</script><p>无穷范数</p>
<script type="math/tex; mode=display">
||x||=max|x_i|</script><p>对于线性回归模型，防止过拟合，如果使用L2,称为岭回归(ridge regression),如果采取L1范数，则有称为LASSO，L1比L2更易于稀疏解，可以看得出L1范数正则化的过程得到了仅采用一部分初始化特征的模型。</p>
<p>L1正则化求解可使用近端梯度下降法(Proximal Gradient Descent)PGD</p>
<p><strong>L-Lipschitz条件</strong></p>
<p>设函数$Φ(x)$在有限 区间$[a,b]$上满足如下条件：</p>
<p>(1) 当$x∈[a,b]$时，$Φ(x)∈[a,b]$，即$a≤Φ(x)≤b$.</p>
<p>(2) 对任意的$x1，x2∈[a,b]$， 恒成立：$|Φ(x1)-Φ(x2)|≤L|x1-x2|$.</p>
<p>如果$f(x)$可导，并且$\nabla f$满足L-Lipschitz条件，</p>
<script type="math/tex; mode=display">
||\nabla f(x')-\nabla f(x)||_2^2<L||x'-x||_2^2</script><p>在$x_k$附近</p>
<script type="math/tex; mode=display">
\hat{f}(x)=f(x_k)+f^{'}(x_k)(x-x_k)+\frac{L}{2}||x-x_k||^2\\
=\frac{L}{2}||x-(x_k)-\frac{1}{L}\nabla f(x_k)||_2^2+const</script><p>可知</p>
<script type="math/tex; mode=display">
x_{k+1}=x_k-\frac{1}{L}\nabla f(x_k)</script><p>对于原始问题，可先计算$z=x_k-\frac{1}{L}\nabla f(x_k)$,</p>
<p>$x_{k+1}=arg \ \ min_{x} \frac{L}{2}||x-z||_2^2+\lambda||x||_1$</p>
<p>由于各个分量相互不影响</p>
<script type="math/tex; mode=display">
x_{k+1}^i=\begin{cases}z^i-\frac{\lambda}{L}, \frac{\lambda}{L}<z^i\\
0, |z^i| <= \frac{\lambda}{L} \\
z^i+\frac{\lambda}{L},z^i<-\frac{\lambda}{L}\end{cases}</script><h2><span id="xi-shu-xue-xi">稀疏学习</span><a href="#xi-shu-xue-xi" class="header-anchor">#</a></h2>]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>西瓜书</tag>
      </tags>
  </entry>
  <entry>
    <title>PageRank算法</title>
    <url>/2020/07/15/PageRank%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<p>PageRank是一种网页排序算法，基于页面的质量和数量。可应用于评估网页节点重要性。</p>
<a id="more"></a>
<h1><span id="pagerank-suan-fa">PageRank算法</span><a href="#pagerank-suan-fa" class="header-anchor">#</a></h1><p>PageRank,即<strong><em>\</em>网页排名**</strong>，又称<strong>网页级别</strong>、<strong>Google左侧排名</strong>或<strong>佩奇排名。</strong>PageRank是Google用于用来标识网页的等级/重要性的一种方法，是Google用来衡量一个网站的好坏的唯一标准。</p>
<p>假设</p>
<ol>
<li>数量假设: 如果一个页面节点入链数量越多，则这个页码越重要。</li>
<li>质量假设：指向页面A的入链质量不同，考虑权重的影响，则这个页面越是重要。</li>
</ol>
<h2><span id="suan-fa-qiu-jie">算法求解</span><a href="#suan-fa-qiu-jie" class="header-anchor">#</a></h2><ol>
<li>第一阶段：通过网页链接关系构建起Web图，初始每个页面相同的PageRank值，再通过若干轮得到每个页面的最终pagerank.</li>
<li>每一轮更新页面PageRank得分的计算方法</li>
</ol>
<h3><span id="quan-chong">权重</span><a href="#quan-chong" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
PR(T)/L(T)\\
where PR(T)的PageRank值，L(T)为T的出链数目</script><h3><span id="xiu-zheng">修正</span><a href="#xiu-zheng" class="header-anchor">#</a></h3><p>$L(T)$为0的情况，孤立网页，使得很多网页能被访问到。$q = 0.85$</p>
<script type="math/tex; mode=display">
PR(A) = (\frac{PR(B)}{L(B)}+\frac{PR(C)}{L(C)}+\dots)q+1-q</script><h2><span id="qi-ta-wang-luo-shu-xing-du-liang-fang-fa">其他网络属性度量方法</span><a href="#qi-ta-wang-luo-shu-xing-du-liang-fang-fa" class="header-anchor">#</a></h2><p>Centrality indices:  degree, betweenness, and closeness.</p>
<h2><span id="reference">reference</span><a href="#reference" class="header-anchor">#</a></h2><p>提出者： The anatomy of a large-scale hypertextual Web search engine  </p>
<p><a href="https://en.wikipedia.org/wiki/PageRank">https://en.wikipedia.org/wiki/PageRank</a></p>
]]></content>
      <categories>
        <category>科研</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言</title>
    <url>/2020/07/03/R%E8%AF%AD%E8%A8%80/</url>
    <content><![CDATA[<p><a href="https://bookdown.org/qiyuandong/intro_r/-r-basics-2.html#section-3.3">https://bookdown.org/qiyuandong/intro_r/-r-basics-2.html#section-3.3</a></p>
<p>入门： <a href="https://rc2e.com/">https://rc2e.com/</a></p>
<p><a href="http://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/intro.html">http://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/intro.html</a></p>
<p>全面：</p>
<p><a href="https://github.com/harryprince/R-Tutor">https://github.com/harryprince/R-Tutor</a></p>
<p>视频：</p>
<p>中文： <a href="https://www.youtube.com/watch?v=rPj5FsTRboE">https://www.youtube.com/watch?v=rPj5FsTRboE</a></p>
<p>英文：<a href="https://www.youtube.com/watch?v=32o0DnuRjfg">https://www.youtube.com/watch?v=32o0DnuRjfg</a></p>
<p>这个教程好： <a href="https://sites.google.com/site/econometricsacademy/econometrics-models/linear-regression">https://sites.google.com/site/econometricsacademy/econometrics-models/linear-regression</a></p>
<p><a href="https://www.youtube.com/watch?v=YMt5K68ZvjQ&amp;list=PLRW9kMvtNZOh7Xt1m5Mlhhz2wtr0tCUEE">https://www.youtube.com/watch?v=YMt5K68ZvjQ&amp;list=PLRW9kMvtNZOh7Xt1m5Mlhhz2wtr0tCUEE</a></p>
]]></content>
      <categories>
        <category>R</category>
      </categories>
      <tags>
        <tag>R</tag>
      </tags>
  </entry>
  <entry>
    <title>Xgboost</title>
    <url>/2020/07/03/Xgboost/</url>
    <content><![CDATA[<h1><span id="li-lun-bu-fen">理论部分</span><a href="#li-lun-bu-fen" class="header-anchor">#</a></h1><p>该算法思想就是不断地添加树，不断地进行特征分裂来生长一棵树，每次添加一个树，其实是学习一个新函数，去拟合上次<strong>预测的残差</strong>。当我们训练完成得到k棵树，我们要预测一个样本的分数，其实就是根据这个样本的特征，在每棵树中会落到对应的一个叶子节点，每个叶子节点就对应一个分数，最后只需要将每棵树对应的分数加起来就是该样本的预测值。</p>
<a id="more"></a>
<p>boosting: <a href="https://zhuanlan.zhihu.com/p/38329631">https://zhuanlan.zhihu.com/p/38329631</a></p>
<p>Xgboost 就是回归树的集成</p>
<p><a href="https://www.csuldw.com/2019/07/20/2019-07-20-xgboost-theory/">https://www.csuldw.com/2019/07/20/2019-07-20-xgboost-theory/</a></p>
<p><a href="https://blog.csdn.net/github_38414650/article/details/76061893?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare">https://blog.csdn.net/github_38414650/article/details/76061893?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.compare</a></p>
<p><a href="https://blog.csdn.net/qq_24519677/article/details/81809157">https://blog.csdn.net/qq_24519677/article/details/81809157</a></p>
<p>有空再推导了</p>
<h1><span id="diao-yong-ku">调用库</span><a href="#diao-yong-ku" class="header-anchor">#</a></h1><p>Python 提供了两种库</p>
<ol>
<li>xgboost</li>
<li>xgboost sklearn接口</li>
</ol>
<p>搭建模型</p>
<ol>
<li><p>参数设置</p>
</li>
<li><p>GridSearchCV 调参(网格法)</p>
<ol>
<li>调参步骤，参数范围</li>
</ol>
</li>
</ol>
<p><a href="https://blog.csdn.net/han_xiaoyang/article/details/52665396">https://blog.csdn.net/han_xiaoyang/article/details/52665396</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb</span><br><span class="line"><span class="keyword">from</span> xgboost <span class="keyword">import</span> XGBRegressor</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error,make_scorer</span><br><span class="line"><span class="keyword">from</span> sklearn.grid_search <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.cross_validation <span class="keyword">import</span> KFold, train_test_split</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_boston</span><br></pre></td></tr></tbody></table></figure>
<p><a href="https://blog.csdn.net/s09094031/article/details/94871596?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-6.compare&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-6.compare">https://blog.csdn.net/s09094031/article/details/94871596?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-6.compare&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-6.compare</a></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">sklearn.model_selection.``train_test_split</span><br></pre></td></tr></tbody></table></figure>
<p>test_size train_size：</p>
<p>​    三种类型。float，int，None。</p>
<ul>
<li>float：0.0-1.0之间，代表训练数据集占总数据集的比例。</li>
<li>int：代表训练数据集具体的样本数量。</li>
<li>None：设置为test_size的补。</li>
<li>default：默认为None。</li>
</ul>
<p>random_state：三种类型。int，randomstate instance，None。</p>
<p>int：是随机数生成器的种子。每次分配的数据相同。</p>
<p>randomstate：random_state是随机数生成器的种子。（这里没太理解）</p>
<p>None：随机数生成器是使用了np.random的randomstate。</p>
<p>种子相同，产生的随机数就相同。种子不同，即使是不同的实例，产生的种子也不相同。</p>
<p>shuffle：布尔值，可选参数。默认是None。在划分数据之前先打乱数据。如果shuffle=FALSE，则stratify必须是None。</p>
<p>stratify：array-like或者None，默认是None。如果不是None，将会利用数据的标签将数据分层划分。</p>
<p>若为None时，划分出来的测试集或训练集中，其类标签的比例也是随机的。</p>
<p>若不为None时，划分出来的测试集或训练集中，其类标签的比例同输入的数组中类标签的比例相同，可以用于处理不均衡的数据集。</p>
<p>x_train, y_train, x_test, y_test = train_test_split(x, y,<br>                                                    test_size=0.23, random_state=2)</p>
<p><a href="https://blog.csdn.net/qq_43288098/article/details/105407204?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.compare&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.compare">https://blog.csdn.net/qq_43288098/article/details/105407204?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.compare&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-4.compare</a></p>
<p>参数：分开调</p>
<p><a href="https://blog.csdn.net/zc02051126/article/details/46711047">https://blog.csdn.net/zc02051126/article/details/46711047</a></p>
<p><a href="https://github.com/dmlc/xgboost/blob/master/doc/parameter.rst">https://github.com/dmlc/xgboost/blob/master/doc/parameter.rst</a></p>
<p><a href="https://www.analyticsvidhya.com/blog/2016/03/complete-guide-parameter-tuning-xgboost-with-codes-python/">https://www.analyticsvidhya.com/blog/2016/03/complete-guide-parameter-tuning-xgboost-with-codes-python/</a></p>
<p><a href="https://xgboost.readthedocs.io/en/latest/python/python_api.html#module-xgboost.sklearn">https://xgboost.readthedocs.io/en/latest/python/python_api.html#module-xgboost.sklearn</a></p>
<h2><span id="mo-xing-bao-cun">模型保存</span><a href="#mo-xing-bao-cun" class="header-anchor">#</a></h2><p><a href="https://www.fatrabbids.com/2018/10/19/xgboost的保存模型、加载模型、继续训练/#more-235">https://www.fatrabbids.com/2018/10/19/xgboost%e7%9a%84%e4%bf%9d%e5%ad%98%e6%a8%a1%e5%9e%8b%e3%80%81%e5%8a%a0%e8%bd%bd%e6%a8%a1%e5%9e%8b%e3%80%81%e7%bb%a7%e7%bb%ad%e8%ae%ad%e7%bb%83/#more-235</a></p>
<h1><span id="xgboost-de-te-xing-chong-yao-xing-he-te-xing-xuan-ze">XGBoost的特性重要性和特性选择</span><a href="#xgboost-de-te-xing-chong-yao-xing-he-te-xing-xuan-ze" class="header-anchor">#</a></h1><ol>
<li><p>模型复杂度</p>
<p>特征数量衡量：特征重要性阙值的增加，选择特征数量减少，模型的准确率会下降。当然，特征数量的减少反而会是准确率升高，因为这些被剔除特征是噪声。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>English-Daily</title>
    <url>/2020/06/23/English-Daily/</url>
    <content><![CDATA[<a id="more"></a>
<h1><span id="2020-7-6">2020-7-6</span><a href="#2020-7-6" class="header-anchor">#</a></h1><p>coincide with v. 与…相符</p>
<p>stalk v. 潜近（猎物或人）；（非法）跟踪；怒冲冲地走；趾高气扬地走</p>
<p>n. 秆；柄；（叶）柄；（花）梗</p>
<p>verge</p>
<p>Bella was on the verge of tears when she heard the news.</p>
<p>听到这个消息时，贝拉差点就要哭了。</p>
<p>resistant adj. 抵制的，反抗的，抗拒的；有抵抗力的；抵抗…的；不受……损害的</p>
<p>People are usually resistant to change.</p>
<p>人们通常抗拒改变。</p>
<p>liar</p>
<p>The tall guy was a notorious liar.</p>
<p>那个高个子是个臭名昭著的骗子。</p>
<p>politics</p>
<p>n. 政治；政治事物（活动）；政见；权术</p>
<p>oblige (以法律、义务等)强迫, 迫使; 帮忙, 效劳; [常用被动]使感激; 使(行为等)成为必要</p>
<p>phrase. (feel obliged to do sth.)觉得有义务做；不得不做</p>
<p>I felt obliged to leave after such an unpleasant quarrel.</p>
<p>发生了这样不愉快的争吵之后，我觉得有必要离开。</p>
<h1><span id="2020-7-1">2020-7-1</span><a href="#2020-7-1" class="header-anchor">#</a></h1><p>jelly n. 果冻；肉冻；果酱；胶状物，胶凝物；轻便塑料鞋</p>
<p>oval adj. 椭圆形的；卵形的 n. 椭圆形；卵形</p>
<p>rigorous /‘rɪɡərəs/ adj. 谨慎的，细致的；严格的，严厉的</p>
<p>He makes a rigorous study of the plants in the area.</p>
<p>他对该地的植物进行了缜密的研究。</p>
<p>ultimately  UK/‘ʌltɪmətli/ adv. 最终, 最后, 归根结底, 终究</p>
<p>Everything will ultimately depend on what is said at the meeting.</p>
<p>一切将最终取决于会议的内容。</p>
<p><strong>sturdy</strong> UK/‘stɜːdi/</p>
<p>adj. 结实的，坚固的；强壮的；健壮的；坚决的，顽强的</p>
<p><strong>broaden</strong> UK/‘brɔːdn/</p>
<p>You should broaden your experience by travelling more.</p>
<p>你应该多到各地走走以增广见识.</p>
<p><strong>broaden</strong> the horizon 开拓视野</p>
<p>propel UK/prə’pel/ v. 推进，推动；驱使；迫使</p>
<p><strong>voyage</strong>  UK/‘vɔɪɪdʒ/</p>
<p>n. 航行, （尤指）航海</p>
<p>v. 航行, 远行, （尤指）远航</p>
<p>例句</p>
<p>The voyage from England to India used to take 3 weeks.</p>
<p>从英格兰到印度的航行曾经需要三周。</p>
<h1><span id="2020-6-28">2020-6-28</span><a href="#2020-6-28" class="header-anchor">#</a></h1><p>moist  UK/mɔɪst/ adj. 微湿的, 湿润的</p>
<p>insult UK/ɪn’sʌlt/v. 侮辱，辱骂 n. 侮辱，辱骂</p>
<p>spontaneous UK/spɒn’teɪniəs/</p>
<p>They greeted him with spontaneous applause.</p>
<p>他们自发地鼓起掌来欢迎他。</p>
<p>slender  UK/‘slendə(r)/</p>
<p>perimeter UK/pə’rɪmɪtə(r)/ n. 周长；外缘，边缘</p>
<p>blouse UK/blaʊz/</p>
<p>He pointed out a woman passing by who was wearing a skirt and blouse.</p>
<p>他指出了一个穿着裙子和衬衫的过路女子。</p>
<p>perfume UK/‘pɜːfjuːm/ n. 香水, 香料, 芳香 v. 使…发出香气, 洒香水</p>
<h1><span id="2020-6-27">2020-6-27</span><a href="#2020-6-27" class="header-anchor">#</a></h1><h1><span id="2020-6-26">2020-6-26</span><a href="#2020-6-26" class="header-anchor">#</a></h1><p>Functional foods are food products that have a potentially <strong>positive effect on</strong> health beyond basic nutritional benefits. Functional foods <strong>aim to solve not only</strong> all the needs that regular foods provide, <strong>but also to address</strong> functional needs, <strong>which can range from</strong> maintaining and improving physical or mental health <strong>to</strong> adjusting energy levels and moods.</p>
<p>Food has been historically used as preventive medicine in many cultures around the world, but the recent rise of functional foods can be directly linked to the rise of the wellness economy, which, in turn, is largely <strong>driven by</strong> influencer marketing and social media use.</p>
<h1><span id="2020-6-25">2020-6-25</span><a href="#2020-6-25" class="header-anchor">#</a></h1><p>IT IS A truth universally acknowledged that inequality（不平等）in the rich world（发达国家）is high and rising. Or, at least, it used to be. A growing band of economists are challenging the received（被公认的）wisdom, pointing out that trends in the distribution（分布，分配）of income and wealth may not be as bad as is often thought.</p>
<p>众所周知，富裕国家的不平等现象非常严重，而且还在加剧。或者说，至少曾经是这样的。越来越多的经济学家开始质疑既有的观点，他们指出收入和财富的分布趋势可能不是像通常被认为的那么糟糕。</p>
<h2><span id="2020-6-24">2020-6-24</span><a href="#2020-6-24" class="header-anchor">#</a></h2><p>imaginary</p>
<p>adj. 想象中的, 幻想的, 虚构的</p>
<p>carriage</p>
<p>n. 运输；运费，（旧时）马车；火车车厢；仪态，姿态，举止</p>
<p>message</p>
<p>messenger </p>
<p>n. 信使, 送信人, 通信员, 邮递员</p>
<p>pavement</p>
<p>n. 人行道</p>
<p>postpone</p>
<p>v. 延期, 延迟, 暂缓</p>
<p>We’ll have to postpone the meeting until next week.</p>
<p>我们将不得不把会议推迟到下周举行。</p>
<p>velocity</p>
<p>n. 速度，速率；高速</p>
<p>reconcile</p>
<p>v. 使和谐一致，调和；使和解；将就，妥协</p>
<p>It’s difficult to reconcile these two different points of view.</p>
<p>很难兼顾这两种不同的观点。</p>
<h1><span id="2020-6-23">2020-6-23</span><a href="#2020-6-23" class="header-anchor">#</a></h1><p>￼The success of the brand <strong>wasn’t</strong> built through big marketing campaigns, <strong>but</strong> through a savvy digital marketing strategy <strong>that</strong> <strong>increased</strong> brand awareness and <strong>generated</strong> high engagement, traffic, and conversions.  </p>
<p>该品牌的成功并不建立于大型营销活动，而是建立于精准的数字营销策略，该策略提高了品牌的知名度，获得了很高的参与度、流量和转化率。</p>
<p>traffic: 信息流量，通信量</p>
<p>With only 40 physical stores, which are mostly used to drive consumers to e-commerce portals, Perfect Diary maintains momentum primarily through its digital footprint. Currently, it has a powerful presence on Little Red Book, Bilibili, Weibo, WeChat, Tmall, and Douyin.  </p>
<p><strong>Thereafter</strong> she wrote articles for papers and magazines for a living.</p>
<p>此后她给报纸和杂志撰稿谋生。</p>
<p><strong>adv. 此后, 之后, 以后</strong></p>
<p><strong>spur</strong></p>
<p>n. 刺激, 激励, 鞭策; 踢马刺, 靴刺; 骨刺; 山嘴, 尖坡</p>
<p>v. 刺激, 激励, 促进, 鞭策</p>
<p><strong>stick</strong></p>
<p>adj. 黏（性）的, 一面带黏胶的, 闷热的, 感到热得难受的</p>
<p>n. 告事贴</p>
<p>I have to take a shower before going out because the sweat had made my skin sticky.</p>
<p>出门前我得冲个澡，因为汗水让我的皮肤黏乎乎的</p>
<p><strong>devotion</strong></p>
<p>n. 关爱，关照；奉献；忠诚；宗教礼拜</p>
<p>The career needs our devotion for all our lives.</p>
<p>这项事业需要我们毕生的奉献。</p>
<p><strong>reckless</strong></p>
<p>adj. 鲁莽的；不计后果的；无所顾忌的</p>
<p><strong>wag</strong></p>
<p>v. 摇动；摆（尾巴），（尾巴）摇，摆动</p>
<p>n. 摇摆，摆动；老开玩笑的人，爱闹着玩的人</p>
<p><strong>keen</strong></p>
<p>adj. 热衷的, 热情的; 渴望的; 敏捷的; 灵敏的; 锋利的; 强烈的</p>
<p>n. 恸哭; 挽歌</p>
<p>v. (为死者)恸哭</p>
<p>be keen on sth对 感兴趣 be keen to do 渴望做某事</p>
<p><strong>offspring</strong></p>
<p>n. 子女，后代；幼崽；幼苗</p>
<p><strong>receipt</strong></p>
<p>n. 收据，收入</p>
]]></content>
      <tags>
        <tag>English</tag>
      </tags>
  </entry>
  <entry>
    <title>day</title>
    <url>/2020/06/22/time-series-01/</url>
    <content><![CDATA[<h1><span id="shi-jian-xu-lie-ji-qi-fen-jie">时间序列及其分解</span><a href="#shi-jian-xu-lie-ji-qi-fen-jie" class="header-anchor">#</a></h1><a id="more"></a>
<h2><span id="shi-jian-xu-lie-fen-lei">时间序列分类</span><a href="#shi-jian-xu-lie-fen-lei" class="header-anchor">#</a></h2><h3><span id="ping-wen-xu-lie-stationary-series">平稳序列（stationary series)</span><a href="#ping-wen-xu-lie-stationary-series" class="header-anchor">#</a></h3><p>序列中的各观察值基本上在某个固定的水平上波动，在不同时F间段波动程度不同，但不存在某种规律。平稳性时间序列的均值和方差都是常数。</p>
<p>方法：a) 看原图。是否在某个常数附近波动，且波动范围有界。如果有明显的趋势性或者周期性，则不是。b) ADF单位根检测。p值。</p>
<h3><span id="fei-ping-wen-xu-lie-non-stationary-series">非平稳序列（non-stationary series)</span><a href="#fei-ping-wen-xu-lie-non-stationary-series" class="header-anchor">#</a></h3><p>涉及趋势、季节性和周期三种特性，包含其中一种或者多种成分。</p>
<h4><span id="qu-shi-trend">趋势(trend)</span><a href="#qu-shi-trend" class="header-anchor">#</a></h4><p>时间序列在长时期内呈现出来的某种上升或者下降的趋势。分为线性和非线性。</p>
<h4><span id="ji-jie-xing-seasonality">季节性（seasonality)</span><a href="#ji-jie-xing-seasonality" class="header-anchor">#</a></h4><p>是指时间序列在一年内重复出现的周期波动。因季节不同而发生变化，如旅游旺季，旅游淡季。</p>
<h4><span id="zhou-qi-xing-cyclicity">周期性（cyclicity）</span><a href="#zhou-qi-xing-cyclicity" class="header-anchor">#</a></h4><p>是指时间序列呈现出的长期趋势。周期性不同于趋势变动，它是涨落相间的交替波动。不同意季节变动，它无固定规律，变动周期多在一年以上，且周期长短不一。周期性通常是由经济环境的变化引起的。</p>
<h4><span id="ou-ran-xing-yin-su">偶然性因素</span><a href="#ou-ran-xing-yin-su" class="header-anchor">#</a></h4><p>其导致时间序列呈现出某种随机波动。</p>
<p>时间序列的成分可分为：趋势（T),季节性（S),周期性（C),随机性（I)。</p>
<h2><span id="ping-wen-shi-jian-xu-lie-fen-xi">平稳时间序列分析</span><a href="#ping-wen-shi-jian-xu-lie-fen-xi" class="header-anchor">#</a></h2><h3><span id="ar-mo-xing">AR模型</span><a href="#ar-mo-xing" class="header-anchor">#</a></h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">自回归模型AR</th>
<th style="text-align:left">自回归模型描述当前值与历史值之间的关系，用变量自身的历史时间数据对自身进行预测。自回归模型必须满足平稳性的要求。</th>
<th style="text-align:left"><img src="https://xiemaycherry.github.io/2020/06/22/time-series-01/F:%5C%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A1%B9%E7%9B%AE%5C2020-5-19.assets%5Car.png" alt="img"></th>
<th style="text-align:left"></th>
<th style="text-align:left"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">移动平均模型MA</td>
<td style="text-align:left">移动平均模型关注的是自回归模型中的误差项的累加</td>
<td style="text-align:left"><img src="https://xiemaycherry.github.io/2020/06/22/time-series-01/F:%5C%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A1%B9%E7%9B%AE%5C2020-5-19.assets%5Cma.png" alt="img"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">自回归移动平均模型ARMA</td>
<td style="text-align:left">自回归模型AR和移动平均模型MA模型相结合，我们就得到了自回归移动平均模型ARMA(p,q)</td>
<td style="text-align:left"><img src="https://xiemaycherry.github.io/2020/06/22/time-series-01/F:%5C%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E9%A1%B9%E7%9B%AE%5C2020-5-19.assets%5Cauma.png" alt="img"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">差分自回归移动平均模型ARIMA</td>
<td style="text-align:left">将自回归模型、移动平均模型和差分法结合，我们就得到了差分自回归移动平均模型ARIMA(p,d,q)</td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
</div>
<h3><span id="can-shu-que-ding">参数确定</span><a href="#can-shu-que-ding" class="header-anchor">#</a></h3><p><strong>拖尾和截尾</strong><br>拖尾指序列以指数率单调递减或震荡衰减，而截尾指序列从某个时点变得非常小。</p>
<p><img src="https://xiemaycherry.github.io/2020/06/22/time-series-01/K:%5CMyBlog%5Chexo%5Csource_posts%5Ctime-series-01%5Ctuowei.png" alt="img"></p>
<h3><span id="arima-jian-mo-guo-cheng">ARIMA建模过程</span><a href="#arima-jian-mo-guo-cheng" class="header-anchor">#</a></h3><ol>
<li>将序列平稳（差分法确定d）</li>
<li>p和q阶数确定：ACF与PACF</li>
<li>ARIMA（p,d,q）</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">模型</th>
<th style="text-align:left">ACF</th>
<th style="text-align:left">PACF</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">AR（p）</td>
<td style="text-align:left">衰减趋于零（几何型或振荡型）</td>
<td style="text-align:left">p阶后截尾</td>
</tr>
<tr>
<td style="text-align:left">MA（q）</td>
<td style="text-align:left">q阶后截尾</td>
<td style="text-align:left">衰减趋于零（几何型或振荡型）</td>
</tr>
<tr>
<td style="text-align:left">ARMA（p,q）</td>
<td style="text-align:left">q阶后衰减趋于零（几何型或振荡型）</td>
<td style="text-align:left">p阶后衰减趋于零（几何型或振荡型）</td>
</tr>
</tbody>
</table>
</div>
<h4><span id="can-shu-p-q-de-zi-dong-que-ding-fang-shi">参数 p,q 的自动确定方式</span><a href="#can-shu-p-q-de-zi-dong-que-ding-fang-shi" class="header-anchor">#</a></h4><h5><span id="xin-xi-zhun-ze">信息准则</span><a href="#xin-xi-zhun-ze" class="header-anchor">#</a></h5><p>在参数估计的时候，我们可以采用似然函数作为目标函数。可以通过加入模型复杂度的惩罚项避免过拟合问题。比如赤池信息准则（AIC)和贝叶斯信息准则(BIC)</p>
<script type="math/tex; mode=display">
AIC=2k−2ln(L)</script><p>一方面引入惩罚项，使得模型参数尽快少，减少过拟合。另一方面，也希望提高模型的拟合度（极大似然）</p>
<script type="math/tex; mode=display">
BIC=kLn(n)−2ln(L)</script><p>k为模型参数个数，n为样本数量，L为似然函数。引入$Kln(n)$惩罚项在维度过大且样本数据相对较少的情况下，可以有效避免出现维度灾难。</p>
<h2><span id="shi-jian-xu-lie-de-fen-jie">时间序列的分解</span><a href="#shi-jian-xu-lie-de-fen-jie" class="header-anchor">#</a></h2><p>加法模型</p>
<script type="math/tex; mode=display">
X_t = T_t + C_t+S_t + I_t ,t = 1,2,..,n</script><p>每个时间序列看成是三个部分的叠加，分别是趋势项、循环项，季节项，随机项</p>
<p>乘法模型</p>
<script type="math/tex; mode=display">
X_t = T_t*C_t*S_t*I_t</script><h3><span id="qu-shi-fen-xi">趋势分析</span><a href="#qu-shi-fen-xi" class="header-anchor">#</a></h3><p>趋势拟合法就是把时间作为自变量，相应的序列观察值作为因变量，建立序列值随时间变化的回归模型。可分为线性拟合和曲线拟合。</p>
<h4><span id="xian-xing-ni-he">线性拟合</span><a href="#xian-xing-ni-he" class="header-anchor">#</a></h4><p>如果长期趋势呈现出线性特征，可用线性模型拟合，</p>
<script type="math/tex; mode=display">
\left\{\begin{array}{c}
x_t = a+bt+I_t\\
E(I_t) = 0,Var(I_t) = \sigma^2
\end{array}
\right.</script><p>其中，$T_t = a+bt$就是消除随机波动影响后的该序列的长期趋势。</p>
<h4><span id="qu-xian-ni-he">曲线拟合</span><a href="#qu-xian-ni-he" class="header-anchor">#</a></h4><p>如果长期趋势呈现出线性特征，可用曲线模型来拟合</p>
<script type="math/tex; mode=display">
\left\{
\begin{array}{c|c|c}
二次型& T_t = a+bt+ct^2& 变换后，线性最小二乘法\\
指数型&T_t = ab^t& 对数变化 & 最小二乘法\\
修正指数型&T_t = a+bc^t&  &迭代法\\
Gompertz型& T_t = e^{a+bc^t}& & 迭代法\\
Logistic & T_t = \frac{1}{a+bc^t}& 迭代法
\end{array}
\right.</script><h4><span id="ping-hua-fa">平滑法</span><a href="#ping-hua-fa" class="header-anchor">#</a></h4><h4><span id="yi-dong-ping-jun-fa">移动平均法</span><a href="#yi-dong-ping-jun-fa" class="header-anchor">#</a></h4><p>假设在比较短的时间间隔里，序列的取值是较稳定的，这种差异是由随机波动造成的。由此，可用一定时间间隔内的平均值作为某一期的估计值。</p>
<p>n期中心移动平均</p>
<script type="math/tex; mode=display">
\widetilde{x_t} = \frac{1}{n}(\frac{1}{2}x_{t-\frac{n}{2}}+x_{t-\frac{n}{2}+1}+\dots+x_{t+\frac{n}{2}-1}+\frac{1}{2}x_{t+\frac{n}{2}})</script><p>n期移动平均</p>
<script type="math/tex; mode=display">
\widetilde{x_t} = \frac{1}{n}(x_t+x_{t-1}+\dots+x_{t-n+1})</script><h4><span id="zhi-shu-ping-hua-fa">指数平滑法</span><a href="#zhi-shu-ping-hua-fa" class="header-anchor">#</a></h4><p>简单指数平滑</p>
<script type="math/tex; mode=display">
\widetilde{x_t} = \alpha x_t+\alpha (1-\alpha )x_{t-1}+\dots)</script><h3><span id="ji-jie-xiao-ying">季节效应</span><a href="#ji-jie-xiao-ying" class="header-anchor">#</a></h3><p>季节性效应的存在，使得气温会在不同年份的相同月份呈现出相似的性质。</p>
<p>如果只是存在季节性和随机波动性</p>
<script type="math/tex; mode=display">
x_{ij} = \hat{x}S_j+I_{ij}</script><p>其中$S_j$表示第j个月的季节指数，$\hat{x}$为各月平均气温。</p>
<p>季节指数的计算:</p>
<p>Step1: 计算周期内各期的平均数</p>
<script type="math/tex; mode=display">
\hat{x}_k = \frac{\sum_{i= 1}^{n}x_{ik}}{n}（k = 1,2,...,m)</script><p>其中，m表示周期，n表示周期的数量</p>
<p>Step2: 计算总平均数</p>
<script type="math/tex; mode=display">
\hat{x} = \frac{\sum_{i = 1}^{n}\sum_{k = 1}^{m}x_{ik}}{nm}</script><p>Step3: 计算季节指数</p>
<script type="math/tex; mode=display">
S_k = \frac{\hat{x}_k}{\hat{x}}</script><h3><span id="hun-he-xiao-ying">混合效应</span><a href="#hun-he-xiao-ying" class="header-anchor">#</a></h3><p>加法模型</p>
<script type="math/tex; mode=display">
x_t = T_t + S_t + I_t</script><p>乘法模型</p>
<script type="math/tex; mode=display">
x_t = T_t*S_t*I_t</script><p>混合模型</p>
<script type="math/tex; mode=display">
x_t = S_t*T_t+I_t\\
x_t = S_t*(T_t+I_t)</script><p>如果季节波动的振幅不受趋势变动的影响，则说明季节性与趋势之间没有相互作用关系，可加。如果季节波动的振幅随趋势的变化而变化，是相互作用的关系，可尝试混合模型和乘法模型。</p>
<h1><span id="tool-in-python-xfresh">Tool in Python: xfresh</span><a href="#tool-in-python-xfresh" class="header-anchor">#</a></h1><h2><span id="te-zheng-ti-qu">特征提取</span><a href="#te-zheng-ti-qu" class="header-anchor">#</a></h2><p>官网： <a href="https://tsfresh.readthedocs.io/en/latest/text/quick_start.html">https://tsfresh.readthedocs.io/en/latest/text/quick_start.html</a></p>
<p>中文： <a href="https://github.com/SimaShanhe/tsfresh-feature-translation">https://github.com/SimaShanhe/tsfresh-feature-translation</a></p>
<h2><span id="data-formats">Data Formats</span><a href="#data-formats" class="header-anchor">#</a></h2><p>column_id: Features will be extracted individually for each entity(id); one row per id.</p>
<p>column_sort:  sorting the time series. </p>
<p>特征提取: 可以一次性提取完；也可以单独提取kind_to_parameters 设置参数；还可以提取</p>
<p><img src="https://tsfresh.readthedocs.io/en/latest/_images/feature_extraction_process_20160815_mc_1.png" alt="the time series"></p>
<p>可分布式计算</p>
<p>the rolling mechanism</p>
<p>首先确定滑动窗口</p>
<p>Step1 : 实现单变量特征的提取</p>
<p>Step2 : 实现多变量特征的提取</p>
<h2><span id="day-ox-01">Day Ox 01</span><a href="#day-ox-01" class="header-anchor">#</a></h2><p>知识清单:</p>
<ol>
<li><p>特征提取：大概上千种特征（几十种方法）</p>
<p>tsfresh.feature_extraction.extraction.extract_features(<strong>timeseries_container</strong>,default_fc_parameters=None<strong>,</strong> <em>kind_to_fc_parameters=None**</em>,<strong> <em>column_id=None</em></strong>,<strong> <em>column_sort=None</em></strong>,<strong> <em>column_kind=None</em></strong>,<strong> <em>column_value=None</em></strong>,<strong> <em>chunksize=None</em></strong>,<strong> <em>n_jobs=1</em></strong>,<strong> <em>show_warnings=False</em></strong>,<strong> <em>disable_progressbar=False</em></strong>,<strong> <em>impute_function=None</em></strong>,<strong> <em>profile=False</em></strong>,<strong> <em>profiling_filename=’profile.txt’</em></strong>,<strong> <em>profiling_sorting=’cumulative’</em></strong>,<strong> <em>distributor=None</em></strong>)**</p>
<p><a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html#pandas.DataFrame"><code>pandas.DataFrame</code></a> containing the different time series</p>
<p><strong>column_id</strong> (<a href="https://docs.python.org/3.7/library/stdtypes.html#str"><em>str</em></a>) – The name of the id column to group by.</p>
<p><strong>column_sort</strong> (<a href="https://docs.python.org/3.7/library/stdtypes.html#str"><em>str</em></a>) – The name of the sort column.</p>
<p><strong>n_jobs</strong> (<a href="https://docs.python.org/3.7/library/functions.html#int"><em>int</em></a>) – The number of processes to use for parallelization. </p>
</li>
<li><p>时间序列的滑动窗口（单序列划分成多序列）</p>
<p><code>tsfresh.utilities.dataframe_functions.``roll_time_series</code><strong>(*</strong>df_or_dict<strong>*,</strong> <em>column_id**</em>,<strong> <em>column_sort=None</em></strong>,<strong> <em>column_kind=None</em></strong>,<strong> <em>rolling_direction=1</em></strong>,<strong> <em>max_timeshift=None</em></strong>,<strong> <em>min_timeshift=0</em></strong>,<strong> <em>chunksize=None</em></strong>,<strong> <em>n_jobs=1</em></strong>,<strong> <em>show_warnings=False</em></strong>,<strong> <em>disable_progressbar=False</em></strong>,<strong> <em>distributor=None</em></strong>)**</p>
<ul>
<li><strong>max_timeshift</strong> (<a href="https://docs.python.org/3.7/library/functions.html#int"><em>int</em></a>) – If not None, the cut-out window is at maximum max_timeshift large. If none, it grows infinitely.</li>
<li><strong>min_timeshift</strong> (<a href="https://docs.python.org/3.7/library/functions.html#int"><em>int</em></a>) – Throw away all extracted forecast windows smaller or equal than this. Must be larger than or equal 0.</li>
<li><strong>n_jobs</strong> (<a href="https://docs.python.org/3.7/library/functions.html#int"><em>int</em></a>) – The number of processes to use for parallelization. If zero, no parallelization is used.</li>
<li><em>show_warnings=False</em></li>
</ul>
</li>
<li><p>（指定）特征提取</p>
</li>
<li><p>显著性检测</p>
<p><a href="https://tsfresh.readthedocs.io/en/latest/api/tsfresh.feature_selection.html?highlight=select_features#tsfresh.feature_selection.selection.select_features">https://tsfresh.readthedocs.io/en/latest/api/tsfresh.feature_selection.html?highlight=select_features#tsfresh.feature_selection.selection.select_features</a></p>
<p>相关性检测</p>
<p><a href="https://tsfresh.readthedocs.io/en/latest/text/parallelization.html#parallelization-of-feature-selection">https://tsfresh.readthedocs.io/en/latest/text/parallelization.html#parallelization-of-feature-selection</a></p>
</li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> tsfresh <span class="keyword">import</span> extract_features, select_features,extract_relevant_features</span><br><span class="line"><span class="keyword">from</span> tsfresh.utilities.dataframe_functions <span class="keyword">import</span> impute</span><br><span class="line"><span class="keyword">from</span> tsfresh.utilities.dataframe_functions <span class="keyword">import</span> roll_time_series, make_forecasting_frame</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> tsfresh <span class="keyword">as</span> tsf </span><br><span class="line"></span><br><span class="line">fc_parameters_value1 = {<span class="string">"length"</span>: <span class="literal">None</span>, </span><br><span class="line">                          <span class="string">"sum_values"</span>: <span class="literal">None</span>}</span><br><span class="line"></span><br><span class="line">fc_parameters_value2 = {<span class="string">"maximum"</span>: <span class="literal">None</span>, </span><br><span class="line">                             <span class="string">"minimum"</span>: <span class="literal">None</span>}</span><br><span class="line"></span><br><span class="line">kind_to_fc_parameters = {</span><br><span class="line">    <span class="string">"value1"</span>: fc_parameters_value1,</span><br><span class="line">    <span class="string">"value2"</span>: fc_parameters_value2</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># ceate data</span></span><br><span class="line">    rawdata = {<span class="string">'id1'</span>: [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],<span class="string">'time'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>],\</span><br><span class="line">        <span class="string">'value1'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>], <span class="string">'value2'</span>: [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line">        }</span><br><span class="line">    df = pd.DataFrame(rawdata)</span><br><span class="line"><span class="comment"># 设置长度+1 = 真实长度,是当前编号往上数.</span></span><br><span class="line">    df_rolled = roll_time_series(df, column_id=<span class="string">"id1"</span>, column_sort=<span class="string">"time"</span>,</span><br><span class="line">                                max_timeshift=<span class="number">1</span>, min_timeshift=<span class="number">0</span>)</span><br><span class="line"><span class="comment"># roll_time_series的返回值</span></span><br><span class="line">    print(df_rolled)</span><br><span class="line">    df_rolled = df_rolled.drop(<span class="string">'id1'</span>,axis = <span class="number">1</span>)</span><br><span class="line"><span class="comment"># column_id: 聚合列 column_sort:排序，一个column_id就对应一个特征</span></span><br><span class="line">    extracted_features = extract_features(df_rolled, column_id=<span class="string">'id'</span>, column_sort=<span class="string">'time'</span>, </span><br><span class="line">            kind_to_fc_parameters = kind_to_fc_parameters, show_warnings=<span class="literal">False</span>)</span><br><span class="line">    print(extracted_features)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="day-ox-02-cha-kan-ti-qu-te-zheng">Day Ox 02 查看提取特征</span><a href="#day-ox-02-cha-kan-ti-qu-te-zheng" class="header-anchor">#</a></h2><p>可根据此提取自动提取的特征，用于预测时候的提取特征</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">kind_to_fc_parameters = tsf.feature_extraction.settings.from_columns(extracted_features)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 5. 特征抽取与过滤同时进行（一步到位，省去多余计算）</span></span><br><span class="line"><span class="comment"># column_id: group by </span></span><br><span class="line"><span class="comment">#features_filtered_direct = extract_relevant_features(timeseries, y, column_id='id', column_sort='time')</span></span><br><span class="line"><span class="comment">#print(features_filtered_direct.head())</span></span><br></pre></td></tr></tbody></table></figure>
<p><img src="/2020/06/22/time-series-01/image-20200705150137882.png" alt="image-20200705150137882" style="zoom: 50%;"></p>
<p>学习路径：</p>
<pre><code>1. 数据格式
 2. 滑动窗口设置
 3. 特征提取
 4. 特征选择
</code></pre><h1><span id="zhuan-ti-shi-jian-xu-lie-de-jing-sai-fang-an">专题 时间序列的竞赛方案</span><a href="#zhuan-ti-shi-jian-xu-lie-de-jing-sai-fang-an" class="header-anchor">#</a></h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzU1Nzc1NjI0Nw==&amp;mid=2247485604&amp;idx=1&amp;sn=6283ec080344665bfad90570bf1504a4&amp;chksm=fc31b29ccb463b8acac7acf4d89494aaad0c76620becb2b07c370ccbfaff850edc3c1ad4e0fd&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1593390448780&amp;sharer_shareid=fb5716a8ad12ea6329433df53d4cbf64#rd">https://mp.weixin.qq.com/s?__biz=MzU1Nzc1NjI0Nw==&amp;mid=2247485604&amp;idx=1&amp;sn=6283ec080344665bfad90570bf1504a4&amp;chksm=fc31b29ccb463b8acac7acf4d89494aaad0c76620becb2b07c370ccbfaff850edc3c1ad4e0fd&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1593390448780&amp;sharer_shareid=fb5716a8ad12ea6329433df53d4cbf64#rd</a></p>
<p><a href="https://www.zhihu.com/question/21229371/answer/533770345">https://www.zhihu.com/question/21229371/answer/533770345</a></p>
<p>Prophet 工具</p>
]]></content>
  </entry>
  <entry>
    <title>回归分析</title>
    <url>/2020/06/20/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1><span id="hui-gui-fen-xi">回归分析</span><a href="#hui-gui-fen-xi" class="header-anchor">#</a></h1><p>最简单的线性回归，避免多重共线性，过拟合，引入正则项的线性回归模型。涉及到的数学知识：一范数，二范数，多元函数求极值。模型的含义，参数求解算法，目标函数，以及各种模型的优缺点。</p>
<a id="more"></a>
<h2><span id="ding-yi">定义</span><a href="#ding-yi" class="header-anchor">#</a></h2><p>回归分析是寻找自变量和因变量之间的数量关系，用于预测建模的方法。其一，它可以揭示自变量和因变量之间的显著性检测。其二，揭示多个自变量对一个因变量的影响程度大小。</p>
<h2><span id="hui-gui-lei-xing">回归类型</span><a href="#hui-gui-lei-xing" class="header-anchor">#</a></h2><p>1）独立变量的数量 2）度量变量的类型 3）回归线的形状</p>
<h2><span id="1-xian-xing-hui-gui-linear-regression">1. 线性回归（Linear Regression)</span><a href="#1-xian-xing-hui-gui-linear-regression" class="header-anchor">#</a></h2><p>因变量：连续； 自变量：连续或者离散</p>
<h3><span id="mo-xing-de-xing-shi">模型的形式</span><a href="#mo-xing-de-xing-shi" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
Y = a+bX+𝜀\\
\left(\begin{array}{c}
y_{1} \\
y_{2} \\
\vdots \\
y_{n}
\end{array}\right)=\left(\begin{array}{cccc}
1 & x_{11} & \cdots & x_{1(p-1)} \\
1 & x_{21} & \cdots & x_{2(p-1)} \\
\vdots & \vdots & \vdots & \vdots \\
1 & x_{n 1} & \cdots & x_{n(p-1)}
\end{array}\right) \beta+\left(\begin{array}{c}
e_{1} \\
e_{2} \\
\vdots \\
e_{n}
\end{array}\right)\\
Y_{n*1} = X_{n*p}\beta+𝜀</script><p>where $a$ and $b$ are the regression coefficients, and 𝜀 is the random error.</p>
<h3><span id="mu-biao-han-shu">目标函数</span><a href="#mu-biao-han-shu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
min SSR = \sum_{i}(y_i-f(x_i))^2\\
min_{w}||Xw-y||_2^2</script><h3><span id="can-shu-gu-ji">参数估计</span><a href="#can-shu-gu-ji" class="header-anchor">#</a></h3><p>最小二乘法（Lease Square Method)（OLS)</p>
<p>This approach is called the method of ordinary least squares.</p>
<h3><span id="mo-xing-ping-gu">模型评估</span><a href="#mo-xing-ping-gu" class="header-anchor">#</a></h3><h4><span id="ni-he-you-du-r-square-coefficient-of-determination">拟合优度 R-square , coefficient of determination</span><a href="#ni-he-you-du-r-square-coefficient-of-determination" class="header-anchor">#</a></h4><p>Larger $R^2$ indicates a better fit and means that the model can better explain the variation of the output with different inputs.</p>
<p><a href="https://realpython.com/linear-regression-in-python/">https://realpython.com/linear-regression-in-python/</a></p>
<h3><span id="yao-qiu">要求</span><a href="#yao-qiu" class="header-anchor">#</a></h3><ul>
<li>自变量和因变量之间必须满足线性关系。</li>
<li>多元回归存在多重共线性，自相关性和异方差性。</li>
<li>线性回归对异常值非常敏感。异常值会严重影响回归线和最终的预测值。</li>
<li>多重共线性会增加系数估计的方差，并且使得估计对模型中的微小变化非常敏感。结果是系数估计不稳定。</li>
<li>在多个自变量的情况下，我们可以采用正向选择、向后消除和逐步选择的方法来选择最重要的自变量。</li>
</ul>
<h2><span id="luo-ji-hui-gui-logistic-regression">逻辑回归（Logistic Regression)</span><a href="#luo-ji-hui-gui-logistic-regression" class="header-anchor">#</a></h2><p>Logistic 回归的本质是：假设数据服从这个分布，然后使用极大似然估计做参数的估计。</p>
<h3><span id="logistic-fen-bu">Logistic 分布</span><a href="#logistic-fen-bu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
F(x) = P(X<=x) = \frac{1}{1+e^{-(x-u)/\gamma}}</script><script type="math/tex; mode=display">
f(x) = F'(X<=x) = \frac{e^{-(x-u)/\gamma}}{\gamma(1+e^{-1(x-u)/\gamma})^2}</script><p>where $u$ 表示位置参数，$\gamma$是形状参数</p>
<p><img src="https://pic2.zhimg.com/80/v2-b15289fd1162a807e11949e5396c7989_720w.jpg" alt="img"></p>
<h3><span id="mo-xing-xing-shi">模型形式</span><a href="#mo-xing-xing-shi" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
y = \frac{1}{1+e^{-(w^Tx+b)}}</script><script type="math/tex; mode=display">
P(Y=1|x) = \frac{1}{1+e^{-(w^Tx+b)}}</script><h3><span id="sun-shi-han-shu">损失函数</span><a href="#sun-shi-han-shu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
P(Y=1|x)=p(x)\\
p(Y=0|x) = 1-p(x)</script><p>似然函数</p>
<script type="math/tex; mode=display">
L(w)</script><h2><span id="duo-xiang-shi-hui-gui-polynomial-regression">多项式回归（Polynomial Regression）</span><a href="#duo-xiang-shi-hui-gui-polynomial-regression" class="header-anchor">#</a></h2><h2><span id="zhu-bu-hui-gui-stepwise-regrssion">逐步回归（Stepwise Regrssion)</span><a href="#zhu-bu-hui-gui-stepwise-regrssion" class="header-anchor">#</a></h2><h2><span id="ling-hui-gui-ridge-regression">岭回归（Ridge Regression)</span><a href="#ling-hui-gui-ridge-regression" class="header-anchor">#</a></h2><p>L2正则化(The ridge coefficients minimize a penalized residual sum of squares) 惩罚函数</p>
<h3><span id="sun-shi-han-shu">损失函数</span><a href="#sun-shi-han-shu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
argmin_{w}||y-X\beta||_2^2+\lambda||\beta||_2^2</script><p>岭回归分析是一种用于存在多重共线性（自变量高度相关）数据的技术。在多重共线性情况下，尽管最小二乘法（OLS）对每个变量很公平，但它们的差异很大，使得观测值偏移并远离真实值。岭回归通过给回归估计上增加一个偏差度，来降低标准误差。</p>
<h2><span id="tao-suo-hui-gui-lasso-regression">套索回归（ <strong>Lasso Regression</strong>）</span><a href="#tao-suo-hui-gui-lasso-regression" class="header-anchor">#</a></h2><h3><span id="l1-zheng-ze-hua-sun-shi-han-shu">L1正则化 损失函数</span><a href="#l1-zheng-ze-hua-sun-shi-han-shu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
argmin_{w}||y-X\beta||_2^2+\lambda||\beta||_1</script><p>The larger the value of $\lambda$ , the greater the amount of shrinkage and thus the coefficients become more robust to collinearity. </p>
<h2><span id="dan-xing-hui-gui-elasticnet-regression">弹性回归 ElasticNet Regression</span><a href="#dan-xing-hui-gui-elasticnet-regression" class="header-anchor">#</a></h2><h4><span id="sun-shi-han-shu">损失函数</span><a href="#sun-shi-han-shu" class="header-anchor">#</a></h4><script type="math/tex; mode=display">
argmin_{w}||y-X\beta||_2^2+\lambda_1||\beta||_2^2+\lambda_2||\beta||_1</script><h2><span id="bei-xie-si-hui-gui">贝叶斯回归</span><a href="#bei-xie-si-hui-gui" class="header-anchor">#</a></h2><p>频率派（优化问题）</p>
<p>贝叶斯派</p>
<p>在极大似然估计线性回归中我们把参数看成是一个未知的固定值，而贝叶斯学派则把看成是一个随机变量。 </p>
<p>Model</p>
<script type="math/tex; mode=display">
f(x) = w^Tx = x^Tw</script><p>Bayesian Method</p>
<p>Inference and Prediction</p>
<p><img src="https://img2018.cnblogs.com/blog/1252882/201902/1252882-20190224115011028-596537100.png" alt="img"></p>
<p><img src="https://img2018.cnblogs.com/blog/1252882/201902/1252882-20190224115035183-1841742133.png" alt="img"></p>
<p><img src="https://img2018.cnblogs.com/blog/1252882/201902/1252882-20190224115121150-29154011.png" alt="img"></p>
<p><img src="https://img2018.cnblogs.com/blog/1252882/201902/1252882-20190224130226736-1827960691.png" alt="img"></p>
<h2><span id="reference">reference</span><a href="#reference" class="header-anchor">#</a></h2><p><a href="https://courses.analyticsvidhya.com/courses/Fundamentals-of-Regression-Analysis?utm_source=blog&amp;utm_medium=introduction_to_regression">https://courses.analyticsvidhya.com/courses/Fundamentals-of-Regression-Analysis?utm_source=blog&amp;utm_medium=introduction_to_regression</a></p>
<p><a href="https://www.analyticsvidhya.com/blog/2016/12/45-questions-to-test-a-data-scientist-on-regression-skill-test-regression-solution/">https://www.analyticsvidhya.com/blog/2016/12/45-questions-to-test-a-data-scientist-on-regression-skill-test-regression-solution/</a></p>
<h1><span id="linear-regression-by-sklearn">Linear Regression by Sklearn</span><a href="#linear-regression-by-sklearn" class="header-anchor">#</a></h1><h2><span id="ols">OLS</span><a href="#ols" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line">print(__doc__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets, linear_model</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error, r2_score </span><br><span class="line"></span><br><span class="line"><span class="comment"># Load the diabetes dataset</span></span><br><span class="line">diabetes_X, diabetes_Y = datasets.load_diabetes(return_X_y= <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># select one feature</span></span><br><span class="line">diabetes_X = diabetes_X[:, np.newaxis, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Split the data set into training/testing sets</span></span><br><span class="line">X_train = diabetes_X[:<span class="number">-20</span>]</span><br><span class="line">X_test = diabetes_X[<span class="number">-20</span>:]</span><br><span class="line"></span><br><span class="line">Y_train = diabetes_Y[:<span class="number">-20</span>]</span><br><span class="line">Y_test = diabetes_Y[<span class="number">-20</span>:]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create linear regression object</span></span><br><span class="line">regr = linear_model.LinearRegression()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Train regression model</span></span><br><span class="line">regr.fit(X_train, Y_train)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Predict </span></span><br><span class="line">Y_pred = regr.predict(X_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Evaluate</span></span><br><span class="line">print(<span class="string">'Mean squared error: %.2f'</span>% mean_squared_error(Y_test, Y_pred))</span><br><span class="line">print(<span class="string">'R2_score:%.2f'</span>% r2_score(Y_test,Y_pred))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Plot</span></span><br><span class="line">plt.scatter(X_test,Y_test, color = <span class="string">'black'</span>)</span><br><span class="line">plt.plot(X_test,Y_pred, color = <span class="string">'blue'</span>,linewidth = <span class="number">3</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="ridge-amp-lasso">Ridge &amp; Lasso</span><a href="#ridge-amp-lasso" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model</span><br><span class="line"></span><br><span class="line">reg = line_model.Ridge(alpha = <span class="number">.2</span>)</span><br><span class="line">reg.fit([[<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">8</span>]],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">reg.coef_</span><br><span class="line">reg.intercept_</span><br><span class="line"></span><br><span class="line">reg1 = line_model.RidgeCV(alphas = np.logspace(<span class="number">-6</span>,<span class="number">6</span>,<span class="number">13</span>))</span><br><span class="line">reg1.fit([[<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">8</span>]],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">reg.alpha_</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model</span><br><span class="line"></span><br><span class="line">reg = line_model.Lasso(alpha = <span class="number">.2</span>)</span><br><span class="line">reg.fit([[<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">8</span>]],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">reg.coef_</span><br><span class="line">reg.intercept_</span><br><span class="line"></span><br><span class="line">reg1 = line_model.LassoCV(alphas = np.logspace(<span class="number">-6</span>,<span class="number">6</span>,<span class="number">13</span>))</span><br><span class="line">reg1.fit([[<span class="number">0</span>,<span class="number">0</span>],[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">8</span>]],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>])</span><br><span class="line">reg.alpha_</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="zheng-ze-xi-shu-xuan-ze">正则系数选择</span><a href="#zheng-ze-xi-shu-xuan-ze" class="header-anchor">#</a></h3><p>交叉验证 LassoCV。 LassoLarsCV基于Least Angle Regression 算法</p>
<p>坐标下降法</p>
<h2><span id="dan-xing-hui-gui">弹性回归</span><a href="#dan-xing-hui-gui" class="header-anchor">#</a></h2><p>Elastic-Net</p>
<h3><span id="zui-xiao-jiao-hui-gui">最小角回归</span><a href="#zui-xiao-jiao-hui-gui" class="header-anchor">#</a></h3><h3><span id="lars-lasso">LARS Lasso</span><a href="#lars-lasso" class="header-anchor">#</a></h3><h3><span id="bei-xie-si-ling-hui-gui">贝叶斯岭回归</span><a href="#bei-xie-si-ling-hui-gui" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> linear_model</span><br><span class="line">X = [[<span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">3</span>]]</span><br><span class="line">Y = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">reg = linear_mode.BayesianRidge()</span><br><span class="line">reg.fit(X, Y)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="luo-ji-si-te-hui-gui">逻辑斯特回归</span><a href="#luo-ji-si-te-hui-gui" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">from sklearn import linear_model</span><br><span class="line"></span><br><span class="line">reg = linear_model.LogisticRegression()</span><br></pre></td></tr></tbody></table></figure>
<p>参数</p>
<p><strong>penalty**</strong>{‘l1’, ‘l2’, ‘elasticnet’, ‘none’}, default=’l2’**</p>
<p><strong>tol*</strong>float, default=1e-4*</p>
<p>Tolerance for stopping criteria.</p>
<p><strong>C*</strong>float, default=1.0*</p>
<p>Inverse of regularization strength; must be a positive float. Like in support vector machines, smaller values specify stronger regularization.</p>
<p><strong>solver*</strong>{‘newton-cg’, ‘lbfgs’, ‘liblinear’, ‘sag’, ‘saga’}, default=’lbfgs’*</p>
<p>Algorithm to use in the optimization problem.</p>
<p><strong>max_iter**</strong>int, default=100**</p>
<p><strong>n_jobs**</strong>int, default=None**</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>回归分析</tag>
      </tags>
  </entry>
  <entry>
    <title>知识清单</title>
    <url>/2020/06/19/%E7%9F%A5%E8%AF%86%E6%B8%85%E5%8D%95/</url>
    <content><![CDATA[<p>主要是列出关于日常中遇到的很好的资料，自己不清楚的文章和资料。</p>
<a id="more"></a>
<h2><span id="2020-8-24-5w2h">2020-8-24 5W2H</span><a href="#2020-8-24-5w2h" class="header-anchor">#</a></h2><p><strong>5W2H分别对应着7个关键问号：</strong></p>
<ul>
<li>What：何事？</li>
<li>Who：何人？</li>
<li>When：何时？</li>
<li>Where：何地？</li>
<li>Why：何因？</li>
<li>How：怎么做？</li>
<li>How much：多少钱？</li>
</ul>
<p><strong>5W2H梳理销售下降问题</strong></p>
<p>文章最开头，小P老板提了一个极其模糊的问题：</p>
<p><strong>“最近销售额为什么下降了？”</strong></p>
<p>如果用5W2H法，应该怎么理清头绪呢？</p>
<p>很简单，跟着问就完事儿了！</p>
<ul>
<li><strong>What</strong>（何事-问题是什么？）</li>
</ul>
<p>问题是老板抛出的销售额下降原因分析，但这个需求太过笼统，我们需要进一步询问来界定和解构问题。</p>
<ul>
<li><strong>When</strong>（什么时候？）</li>
</ul>
<p>是什么时间段销售开始下滑？下滑是环比还是同比，亦或是和平均相比？从趋势上看，是持续性下滑，还是某些时间节点的突然下跌？</p>
<ul>
<li><strong>Where</strong>（什么地方？）</li>
</ul>
<p>是所有渠道的普遍下跌还是某个重点渠道的折戟？是全国各地普遍销售下降，还是某个地区销售下降的厉害？</p>
<ul>
<li><strong>Who</strong>（是哪群人？）</li>
</ul>
<p>是新客户还是老客户的销售贡献乏力？是普通客户的减少，还是品牌忠诚客户的流失？</p>
<ul>
<li><strong>Why</strong>（为什么？）</li>
</ul>
<p>回答完上面4个W，综合起来基本能够回答为什么销售下跌这个问题，但是这样还不够，数据分析更重要的是指导该怎么做</p>
<ul>
<li><strong>How</strong>（怎么做？）</li>
</ul>
<p>如果是某个渠道老客流失严重，应该快速做客户原因定位，以及用CRM关怀来挽回客户。</p>
<p>如果是各渠道、全国性普遍销售下跌，市场份额被对手侵蚀，那应该紧密观察市场，紧盯竞品动作。</p>
<ul>
<li><strong>How much</strong>（量化做多少？）</li>
</ul>
<p>结合上一步的行动，具体衡量通过短信或者其他方式触达花费多少，需要投入多少折扣，预计唤回多少客户，提升多少销售额，这些都可以基于历史数据量化。</p>
<p><strong>怎么样？</strong></p>
<p>对于一个模糊的销售下跌问题，通过这7步的拆解，很快就打开了分析思路。不过，要完全精准的定位问题，找到本质解决办法，还<strong>需要进一步的定位、假设和验证</strong>。</p>
<h1><span id="2020-6-29-z-jian-ce-he-t-jian-ce">2020-6-29 Z检测和T检测</span><a href="#2020-6-29-z-jian-ce-he-t-jian-ce" class="header-anchor">#</a></h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzI4MjkzNTUxMw==&amp;mid=2247485455&amp;idx=1&amp;sn=857066158bf8c2de38939f3037416035&amp;chksm=eb9321b9dce4a8afd68d764c295f8bcc69c62f2b1d000f3e1c5e61a7d9b6e2ec3de8df068174&amp;mpshare=1&amp;scene=24&amp;srcid=&amp;sharer_sharetime=1593403964973&amp;sharer_shareid=0e2d0ffe45c3a6dfb66aa422c3a1381d#rd">https://mp.weixin.qq.com/s?__biz=MzI4MjkzNTUxMw==&amp;mid=2247485455&amp;idx=1&amp;sn=857066158bf8c2de38939f3037416035&amp;chksm=eb9321b9dce4a8afd68d764c295f8bcc69c62f2b1d000f3e1c5e61a7d9b6e2ec3de8df068174&amp;mpshare=1&amp;scene=24&amp;srcid=&amp;sharer_sharetime=1593403964973&amp;sharer_shareid=0e2d0ffe45c3a6dfb66aa422c3a1381d#rd</a></p>
<h1><span id="2020-6-28">2020-6-28</span><a href="#2020-6-28" class="header-anchor">#</a></h1><p>视频： <a href="http://www.julyedu.com/video/play/58/405">http://www.julyedu.com/video/play/58/405</a></p>
<h1><span id="2020-6-19">2020-6-19</span><a href="#2020-6-19" class="header-anchor">#</a></h1><p>SQL</p>
<p>中文:</p>
<p><a href="https://www.liaoxuefeng.com/wiki/1177760294764384">https://www.liaoxuefeng.com/wiki/1177760294764384</a></p>
<p>英文：</p>
<p><a href="https://www.codecademy.com/courses/learn-sql/lessons/manipulation/exercises/sql">https://www.codecademy.com/courses/learn-sql/lessons/manipulation/exercises/sql</a></p>
<p>视频：</p>
<p><a href="https://www.jikexueyuan.com/course/sql/">https://www.jikexueyuan.com/course/sql/</a></p>
<p>基础  <a href="https://study.163.com/course/courseMain.htm?courseId=215012&amp;_trace_c_p_k2_=f68f3d2867a343789ac2d3cfa92dd308">https://study.163.com/course/courseMain.htm?courseId=215012&amp;_trace_c_p_k2_=f68f3d2867a343789ac2d3cfa92dd308</a></p>
<p><a href="https://www.nowcoder.com/discuss/95812?type=2">https://www.nowcoder.com/discuss/95812?type=2</a></p>
<p><a href="https://www.cnblogs.com/zsh-blogs/category/1413021.html">https://www.cnblogs.com/zsh-blogs/category/1413021.html</a></p>
]]></content>
      <categories>
        <category>规划</category>
      </categories>
      <tags>
        <tag>技能</tag>
      </tags>
  </entry>
  <entry>
    <title>Data-Science</title>
    <url>/2020/06/11/Data-Science/</url>
    <content><![CDATA[<a id="more"></a>
<h1><span id="course">Course</span><a href="#course" class="header-anchor">#</a></h1><p>Tsinghua</p>
<p>Dr. Yuan</p>
<p>Data Mining: Theories and Algorithms for Tackling Big Data</p>
<h1><span id="tools">Tools</span><a href="#tools" class="header-anchor">#</a></h1><p>Stata: <a href="https://www.stata.com/why-use-stata/">https://www.stata.com/why-use-stata/</a></p>
<p><a href="https://www.youtube.com/watch?v=AyXeh7iojuA">https://www.youtube.com/watch?v=AyXeh7iojuA</a></p>
<h1><span id="booooook">BOOOOOOK</span><a href="#booooook" class="header-anchor">#</a></h1><p><a href="https://www-users.cs.umn.edu/~kumar001/dmbook/index.php">https://www-users.cs.umn.edu/~kumar001/dmbook/index.php</a></p>
]]></content>
      <categories>
        <category>数据科学(Data Science)</category>
      </categories>
      <tags>
        <tag>Data Mining</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之数据分析思思维</title>
    <url>/2020/06/03/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%80%9D%E6%80%9D%E7%BB%B4/</url>
    <content><![CDATA[<p>学习</p>
<a id="more"></a>
<h1><span id="fang-fa">方法</span><a href="#fang-fa" class="header-anchor">#</a></h1><h2><span id="ye-wu-zhi-biao">业务指标</span><a href="#ye-wu-zhi-biao" class="header-anchor">#</a></h2><p>Why: 要解读、解读数据，想要建立指标，从中得到数据的含义和现象</p>
<h3><span id="ru-he-li-jie-shu-ju">如何理解数据</span><a href="#ru-he-li-jie-shu-ju" class="header-anchor">#</a></h3><p><img src="https://pic4.zhimg.com/v2-f19953ace16a329f5174c1c32d8a61b3.jpg" alt="img" style="zoom:33%;"></p>
<p>两个步骤：每一列含义（定义）-》 数据分类（三大分类）</p>
<p>｜）用户数据:我呈谁<br>用户数据是指用户的基本情况’包括姓名、性别、邮箱、年龄、家庭住址＼教育水平、职业等·<br>2）行为数据:我做了什么</p>
<p>用户行为：鼠标点击，停留时间，浏览内容</p>
<p>行为数据是记录用户做过什么的数据°例如淘宝上,用户行为可以是用户在某个产品页面的停留时间、测览过哪些产品、购买了哪些产品等°行为数据主要包括用户做了哪些行为、发生行为的时间等°<br>3）产品数据:卖什么<br>-个平台里的东西都可以看作产品’例如淘宝里的商品、优酷上的视频、公众号里的文章都可以看作产品°产品数据包括产品名称、产品类别、产品评论、库存等°  </p>
<h3><span id="zhi-biao">指标</span><a href="#zhi-biao" class="header-anchor">#</a></h3><p>如果你不能衡量’那么你就不能有效增长  </p>
<p>定量：需要指标。</p>
<p>数据的基础上=》指标刻画，定量业务</p>
<p><img src="https://pic1.zhimg.com/v2-bf5de83ff6f7c9ce357e9faa9d2a71a1.jpg" alt="img"></p>
<h4><span id="yong-hu-zhi-biao">用户指标</span><a href="#yong-hu-zhi-biao" class="header-anchor">#</a></h4><p>用户分类： 新增用户、（不）活跃用户、留存用户、流失用户</p>
<p><img src="https://pic1.zhimg.com/v2-b560a77f6bc8c51c0f56307d1c58dfb2.jpg" alt="img" style="zoom:33%;"></p>
<p>l）对于新增用户使用的指标: 日新增用户数°<br>（2）对于活跃用户使用的指标:活跃率。<br>（3）对于留存用户使用的指标:留存率。  </p>
<h5><span id="xin-zeng-yong-hu">新增用户</span><a href="#xin-zeng-yong-hu" class="header-anchor">#</a></h5><p>渠道</p>
<p>日新增用户数就是产品每天新增的用户是多少  </p>
<p>新增用户来自产品推广的渠道,如果按渠道维度来拆解新增用户,可以看出不同渠道分别新增了多少用户,从而判断出渠道推广的效果·  </p>
<h5><span id="huo-yue-lu">活跃率</span><a href="#huo-yue-lu" class="header-anchor">#</a></h5><p>在讲解活跃率之前’需要先知道活跃用户数°怎么定义活跃呢?是某个用户登录了App算活跃用户?还是打开使用了App里哪个功能算活跃用户?不同的产品定义不—样’所以看到这样的指标’—定要搞清楚活跃是怎么定义的°活跃用户数按时间又分为日活跃用户数、周活跃用户数、月活跃用户数。<br>日活跃用户数:＿天之内活跃的用户数。例如把打开公众号文章定义为活跃, 日活跃用户数就是＿天内打开公众号文章的人数。<br>周活跃用户数:＿周之内至少活跃—次的用户总数。例如把打开公众号文章定义为活跃’周活跃用户数就是＿周内打开公众号文章的人数°月活跃用户数:＿个月之内至少活跃—次的用户总数°例如把打开公众号又章定义为活跃,月活跃用户数就是-个月内打开公众号文章的人数°  </p>
<p>需要注意的是’统计人数要去掉重复的数据。  </p>
<h5><span id="liu-cun-lu">留存率</span><a href="#liu-cun-lu" class="header-anchor">#</a></h5><p>留存可以评估产品功能对用户的勃性°如果-个产品留存低’那么说明产品对用户的熟性就小,就要想办法来提高留存了°留存反映了不同时期获得新用户的流失情况’如果留存低,就要找到用户流失的原因°反映用户留存的指标,用留存率来表示。第l天新增的用户中’在第N天还使用过产品的用户数’除以第l天新增总用户数’就是留存率。  </p>
<p>根据时间, 留存率又分为次日留存率、第3日留存率、第7日留存率、第30日留存率等’<br>法如下:<br>日留存率:第l天新增的用户中,在第2天使用过产品的用户数／第l天新增总用户数;<br>3日留存率:第1天新增的用户中’在第3天使用过产品的用户数／第l天新增总用户数;<br>7日留存率:第l天新增的用户中,在第7天使用过产品的用户数／第l天新增总用户数;<br>30日留存率:第l天新增的用户中’在第30天使用过产品的用户数／第1天新增总用户数°<br>如某个App’把打开App定义为使用过产品,这款App每天的留存用户数如图Iˉ9所示  </p>
<h4><span id="xing-wei-shu-ju-zhi-biao">行为数据指标</span><a href="#xing-wei-shu-ju-zhi-biao" class="header-anchor">#</a></h4><h5><span id="1-pv-he-uv">1）pV和UV</span><a href="#1-pv-he-uv" class="header-anchor">#</a></h5><p>PV（访问次数’PageView）‘ <strong>＿定时间内某个页面的测览次数</strong>,用户每打开—个网页可以看作-个PV°例如’某-个网页l天中被打开l0次,那么PV为l0。<br>UV（访问人数’UmqueVisitor）:<strong>-定时间内访问某个页面的人数°</strong>例如’某—个网页l天中被］个人打开过l0次’那么UV是l。虽然这位用户在l天中打开该网页l0次’但是这位用户都只能算—个人’所以UV是｜’而不是l0。  </p>
<p>通过pv,uv就可以观测用户的喜好</p>
<h5><span id="2-zhuan-fa-lu">2）转发率</span><a href="#2-zhuan-fa-lu" class="header-anchor">#</a></h5><p>转发率=转发人数、看到该功能的用户数</p>
<h5><span id="3-zhuan-hua-lu">3）转化率</span><a href="#3-zhuan-hua-lu" class="header-anchor">#</a></h5><p><img src="https://pic2.zhimg.com/v2-f5d8cc3ced0d2dc2358c74496e502515.jpg" alt="img" style="zoom:33%;"></p>
<h5><span id="4-k-yin-zi">4） K因子</span><a href="#4-k-yin-zi" class="header-anchor">#</a></h5><p>看推荐效果</p>
<p>K因子= 平均每个用户向多少人发出邀请*转化率</p>
<p>》1：增长；《1： 增长后停止</p>
<h4><span id="chan-ye-shu-ju-zhi-biao">产业数据指标</span><a href="#chan-ye-shu-ju-zhi-biao" class="header-anchor">#</a></h4><p>产品数据相关的指标包括: 用来衡量业务总量的指标’例如成交总额、成交数量;用来衡量  人均情况的指标’例如客单价;用来衡量付费情况的指标’例如付费率、复购率; 以及与产品相关的指标  </p>
<p><img src="https://pic4.zhimg.com/v2-6fdde867e7f408d0278622edc64fcff3.jpg" alt="img"></p>
<h5><span id="zong-liang">总量</span><a href="#zong-liang" class="header-anchor">#</a></h5><p>交总额、成交数量、访问时长（ </p>
<h5><span id="ping-jun">平均</span><a href="#ping-jun" class="header-anchor">#</a></h5><p>用来衡量人均情况的指标有人均付费、付费用户人均付费、人均访问时长。  </p>
<h5><span id="fu-fei">付费</span><a href="#fu-fei" class="header-anchor">#</a></h5><h5><span id><img src="https://pic4.zhimg.com/v2-bf06907a0d5fbd9837e291a6c47b33a7.jpg" alt="img" style="zoom:33%;"></span><a href="#" class="header-anchor">#</a></h5><p>付费相关的指标有付费率、复购率（</p>
<p>付费率＝付费人数／总用户数  </p>
<p>复购率是指重复购买频率’用于反映用户的付费频率·复购率指—定时间内’消费两次以上的用户数／付费人数  </p>
<p><img src="https://pic1.zhimg.com/v2-04d47605fc1422853e3da98bd98213b8.jpg" alt="img" style="zoom:33%;"></p>
<h5><span id="4-chan-pin">4）产品</span><a href="#4-chan-pin" class="header-anchor">#</a></h5><p>常见的几个指标是热销产品数、好评产品数、差评产品数  </p>
<p><img src="https://pic4.zhimg.com/v2-2d1a969c6b71a697bfb9debbb734fc49.jpg" alt="img" style="zoom:33%;"></p>
<h3><span id="ru-he-xuan-ze-zhi-biao">如何选择指标</span><a href="#ru-he-xuan-ze-zhi-biao" class="header-anchor">#</a></h3><p>1）比例</p>
<p>2）业务重点（核心），北极星指标</p>
<p><img src="https://pic1.zhimg.com/v2-47a77966130dde10bd14439e853fc5d4.jpg" alt="img" style="zoom:33%;"></p>
<h3><span id="zhi-biao-ti-xi-he-bao-biao">指标体系和报表</span><a href="#zhi-biao-ti-xi-he-bao-biao" class="header-anchor">#</a></h3><p>l）什么是指标体系?<br>（2）指标体系有什么用?<br>（3）如何建立指标体系?<br>（4）建立指标体系有哪些注意事项?  </p>
<p>够监控业务情况;<br>感通过拆解指标寻找当前业务问题;  </p>
<p>锣评估业务可改进的地方’找出下＿步工作的方向  </p>
<h4><span id="da-jian-zhi-biao-ti-xi">搭建指标体系</span><a href="#da-jian-zhi-biao-ti-xi" class="header-anchor">#</a></h4><p><img src="https://pic3.zhimg.com/v2-2dce345f05f7ed347489397fa038ac2d.jpg" alt="img" style="zoom:50%;"></p>
<p>（l）明确部门KPI’找到＿级指标  </p>
<p>级指标是用来评价公司或部门运营情况最核心的指标  </p>
<p>可以多个</p>
<p>（2）了解业务运营情况,找到二级指标  </p>
<p>有了-级指标以后’可以进-步将-级指标拆解为二级指标°具体如何拆解’要看业务是如何运营的。例如销售部门＿般按地区运营’就可以从地区维度拆解°市场部门—般按用户运营’就可以从用户维度拆解  </p>
<p>（3）梳理业务流程’找到三级指标。  </p>
<h4><span id="bao-biao">报表</span><a href="#bao-biao" class="header-anchor">#</a></h4><p>报表就是报告状况的表’是通过表格、图表来展示指标,从而方便业务部门掌握业务的情况°每天汇总更新的报表叫做日报’每周汇总更新的报表叫做周报°  </p>
<h1><span id="fen-xi-fang-fa">分析方法</span><a href="#fen-xi-fang-fa" class="header-anchor">#</a></h1><h2><span id="5w2h">5W2H</span><a href="#5w2h" class="header-anchor">#</a></h2><p>5W是指对于所有的现象都追问5个问题:what（是什么）、when（何时）、where（何<br>地）、why（为什么）、who（是谁）°<br>2H是指再追问2个问题; how（怎么做）、howmuch（多少钱）°  </p>
<h2><span id="luo-ji-shu-fen-xi-fang-fa">逻辑树分析方法</span><a href="#luo-ji-shu-fen-xi-fang-fa" class="header-anchor">#</a></h2><h2><span id="xing-ye-fen-xi-fang-fa">行业分析方法</span><a href="#xing-ye-fen-xi-fang-fa" class="header-anchor">#</a></h2><p><img src="https://pic1.zhimg.com/v2-a0e3b50366e8059367176c1320b091fe.jpg" alt="img"></p>
<p>政策环境主要包括政府的政策、法律等°例如可以从这样几个问题去展开研究:  </p>
<p>经济环境主要指—个国家的国民收入、消费者的收入水平等。经济环境决定着公司未来市场<br>能做多大。  </p>
<p>社会环境主要包括＿个地区的人□、年龄、收入分布、购买习惯、教盲水平等  </p>
<p>技术环境是指外部技术对公司发展的影响。  </p>
<h2><span id="duo-wei-du-chai-jie-fang-fa">多维度拆解方法</span><a href="#duo-wei-du-chai-jie-fang-fa" class="header-anchor">#</a></h2><p>↑）从指标构成来拆解  </p>
<p>2）从业务流程来拆解  </p>
<h2><span id="dui-bi-fen-xi-fang-fa">对比分析方法</span><a href="#dui-bi-fen-xi-fang-fa" class="header-anchor">#</a></h2><p>1）对象</p>
<p>自己还是行业</p>
<p>2）如何比较</p>
<p><img src="https://pic4.zhimg.com/v2-365330cd680347009bbe41173c8456a1.jpg" alt="img" style="zoom: 50%;"></p>
<h2><span id="jia-she-jian-yan-fen-xi-fang-fa">假设检验分析方法</span><a href="#jia-she-jian-yan-fen-xi-fang-fa" class="header-anchor">#</a></h2><p><img src="https://pic3.zhimg.com/v2-9c60c6594e413f5e76a8fefada30db31.jpg" alt="img"></p>
<p>从这3个维度我们可以提出3种假设:<br>（1）假设斥户有问题:可以从用户来源渠道这个维度来拆解分析’或者画出用户使用产品<br>的业务流程图来分析原因;<br>（2）假设产品有问题:可以研究这段时间销售的产品是否符合用户的需求;<br>（3）假设是竞品导致的问题:可以看竞品是不是在搞什么优惠活动,用户跑到竞争对手那里了。  </p>
<p>们还可以从4P营销理论出发来提出假设°什么是4P营销理论呢?  </p>
<p>（1）产品:公司提供给目标市场的有形或无形产品,包括产品实体、品牌、包装、样式、<br>服务、技术等;<br>（2）价格:用户购买产品时的价格’包括基本价格、折扣价格、付款期限及各种定价方法<br>和定价技巧等;<br>（3）渠道:产品从生产公司到消费用户所经历的销售路径。<br>（4）促销:是指企业利用各种方法刺激用户消费’来促进销售的增长°包括广告、人员推<br>销、营业推广等°例如买＿送<img src="https://pic4.zhimg.com/v2-4e17d1a28c2a1a1c3c18cfb6dd137bda.jpg" alt="img">＿、过节打折等°  </p>
<p><img src="https://pic1.zhimg.com/v2-09a53d7faafd5168ee13f21e4ef63e51.jpg" alt="img" style="zoom:50%;"></p>
<p><img src="https://pic1.zhimg.com/v2-a664735acda44c1d3ddc2ecc5a070139.jpg" alt="img" style="zoom: 50%;"></p>
<h2><span id="xiang-guan-xing-fen-xi-fang-fa">相关性分析方法</span><a href="#xiang-guan-xing-fen-xi-fang-fa" class="header-anchor">#</a></h2><p><img src="https://pic4.zhimg.com/v2-4d14147162b7301543d906288f229ff4.jpg" alt="img"></p>
<h2><span id="qun-zu-fen-xi-fang-fa">群组分析方法</span><a href="#qun-zu-fen-xi-fang-fa" class="header-anchor">#</a></h2><h2><span id="rfm-fang-fa">RFM方法</span><a href="#rfm-fang-fa" class="header-anchor">#</a></h2><p><img src="https://pic1.zhimg.com/v2-04091c51eba2d7c9edb350ce1d0a910f.jpg" alt="img"></p>
<h2><span id="aarrr-mo-xing-fen-xi-fang-fa">AARRR模型分析方法</span><a href="#aarrr-mo-xing-fen-xi-fang-fa" class="header-anchor">#</a></h2><p>AARRR模型对应产品运营的5个重要环节（图2ˉl4l）’分别是:<br>获取用户（Acquisition）:用户如何找到我们?<br>激活用户（Ac恤vation）:用户的首次体验如何?<br>提高留存（Retention）:用户会回来吗?<br>增加收入（Revenue）:如何赚到更多钱?<br>推荐（Referral）: 用户会告诉其他人吗?</p>
]]></content>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之数据分析思维</title>
    <url>/2020/06/01/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8B%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%80%9D%E7%BB%B4/</url>
    <content><![CDATA[<p>数据分析的目的在于驱动决策</p>
<!-- more--->
<h2><span id="yi-shu-ju-fen-xi-de-san-chong-he-xin-si-wei">一、数据分析的三种核心思维</span><a href="#yi-shu-ju-fen-xi-de-san-chong-he-xin-si-wei" class="header-anchor">#</a></h2><h3><span id="1-shu-ju-fen-xi-si-wei-jie-gou-hua">1、数据分析思维——结构化</span><a href="#1-shu-ju-fen-xi-si-wei-jie-gou-hua" class="header-anchor">#</a></h3><p>其实以上过程可以可以归纳为：<strong>核心论点</strong>、<strong>结构拆解</strong>、<strong>MECE</strong>、<strong>验证</strong>等几个相关的步骤。具体来说：</p>
<ul>
<li><strong>核心论点</strong>：寻找金字塔的塔顶，它可以是假设，是问题，是预测，是原因。</li>
<li><strong>结构拆解</strong>：自上而下，将核心论点层层拆解成分论点，上下之间呈因果戒依赖关系。</li>
<li><strong>MECE</strong>：相互独立，完全穷尽。论点之间避免交叉和重复，分论点们要尽量完善。</li>
<li><strong>验证</strong>：丌论核心论点还是分论点，都应该是可量化的，用数据说话。它们必然是可验证的。</li>
</ul>
<p><img src="https://ask.qcloudimg.com/http-save/yehe-7745800/qz0qtbw2b4.png?imageView2/2/w/1620" alt="img"></p>
<h3><span id="2-shu-ju-fen-xi-si-wei-gong-shi-hua">2、数据分析思维——公式化</span><a href="#2-shu-ju-fen-xi-si-wei-gong-shi-hua" class="header-anchor">#</a></h3><p><img src="https://ask.qcloudimg.com/http-save/yehe-7745800/tm20llhm2h.png?imageView2/2/w/1620" alt="img"></p>
<p> 针对上述的案例，如果用公式法进行分析的话，在以上的基础上还可以考虑造成这些结果的原因，从根本底层出发，具体内容如下：</p>
<blockquote>
<p> 1、 销售额由什么组成的？<strong>销量和客单价相乘</strong> 2、利润由什么组成的？<strong>销售额收益和成本相减</strong> 3、销售额是单一的维度么？不是。<strong>销售额是多个商品／SKU的总和</strong> 4、 地区的销量由什么组成？<strong>是不同线下渠道的累加</strong> 5、销量还能再细挖么？<strong>不妨想成人均销量和购买人数</strong> </p>
</blockquote>
<h3><span id="3-shu-ju-fen-xi-si-wei-ye-wu-hua">3、数据分析思维——业务化</span><a href="#3-shu-ju-fen-xi-si-wei-ye-wu-hua" class="header-anchor">#</a></h3>]]></content>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>数据分析之powerBI</title>
    <url>/2020/06/01/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BpowerBI/</url>
    <content><![CDATA[<h1><span id="power-bi">Power BI</span><a href="#power-bi" class="header-anchor">#</a></h1><p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649250809&amp;idx=1&amp;sn=d7db749e3fd31ce3119f5adead4f4fb9&amp;chksm=835fd3c9b4285adf7ee9fe76d4fdeba8b10543758f013dbc6f742d80cd69b44b84c1834ee429&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649250809&amp;idx=1&amp;sn=d7db749e3fd31ce3119f5adead4f4fb9&amp;chksm=835fd3c9b4285adf7ee9fe76d4fdeba8b10543758f013dbc6f742d80cd69b44b84c1834ee429&amp;scene=21#wechat_redirect</a></p>
]]></content>
  </entry>
  <entry>
    <title>数据分析之BI</title>
    <url>/2020/05/27/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E4%B9%8BBI/</url>
    <content><![CDATA[<p>学习商业智能（BI）</p>
<a id="more"></a>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649249991&amp;idx=1&amp;sn=dd0c6752c4cd956d055acdbe1fc44f09&amp;chksm=835fd0f7b42859e1ee63e0dd95b2ddf9086a5041ae28683e521a65e96fafbcb80e33968f3cd5&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649249991&amp;idx=1&amp;sn=dd0c6752c4cd956d055acdbe1fc44f09&amp;chksm=835fd0f7b42859e1ee63e0dd95b2ddf9086a5041ae28683e521a65e96fafbcb80e33968f3cd5&amp;scene=21#wechat_redirect</a></p>
<h2><span id="day-1">day 1</span><a href="#day-1" class="header-anchor">#</a></h2><div class="table-container">
<table>
<thead>
<tr>
<th><a href="http://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649249991&amp;idx=1&amp;sn=dd0c6752c4cd956d055acdbe1fc44f09&amp;chksm=835fd0f7b42859e1ee63e0dd95b2ddf9086a5041ae28683e521a65e96fafbcb80e33968f3cd5&amp;scene=21#wechat_redirect">第1天：什么是报表？</a></th>
<th>什么是报表？如何设计报表？</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649249612&amp;idx=1&amp;sn=f082a39388511ba7920d7019abb1e97b&amp;chksm=835fdf7cb428566acfab9873128472b738558285f2532e3ff0c775b159921eb9c7b3c6a022c6&amp;scene=21#wechat_redirect">第2天：认识Power BI</a></td>
<td>什么是商业智能(BI)？什么是Power BI？如何安装Power BI？</td>
</tr>
<tr>
<td><a href="http://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649249631&amp;idx=1&amp;sn=afffbe04d883571a0dd54f16f00c8f0e&amp;chksm=835fdf6fb428567922efac02ba8d65bd9b5c93c9e276269f2cc129defc4162ee96f7db789a97&amp;scene=21#wechat_redirect">第3天：用Power BI获取数据</a></td>
<td>如何从 Excel 获取数据？如何从数据库获取数据？如何编辑数据？ 如何行列转置？</td>
</tr>
<tr>
<td><a href="http://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649250085&amp;idx=1&amp;sn=ebc33aa17501b0ac71b77b29ed81a14b&amp;chksm=835fd115b4285803d1b88185b0a94fdb167ea0f3d735f3c24c5fd113c511044ccd1007f43757&amp;scene=21#wechat_redirect">第4天：用Power BI对数据建模</a></td>
<td>如何管理数据关系?创建计算列隐藏字段创建度量值创建计算表浏览基于时间的数据</td>
</tr>
<tr>
<td><a href="http://mp.weixin.qq.com/s?__biz=MzAxMTMwNTMxMQ==&amp;mid=2649250197&amp;idx=1&amp;sn=fc28271178c8a350d3ad16093c5a52c2&amp;chksm=835fd1a5b42858b37004ee888c01c03c065f77f5054ee06a23fb69a04d15a3a6099fc52d3226&amp;scene=21#wechat_redirect">第5天：用Power BI可视化数据</a></td>
<td>如何可视化数据？如何创建切片器？如何绘制地图？常用图表可视化页面布局和格式设置</td>
</tr>
</tbody>
</table>
</div>
<h2><span id="day-2">day 2</span><a href="#day-2" class="header-anchor">#</a></h2><p>1、风格统一，可以先搭建好仪表板，颜色设置灰色，重新定义：<strong>主色调，重点区域，统一排版</strong></p>
<p><strong>颜色</strong>可以使用<strong>ColorPix</strong> </p>
<p>涉及到<strong>图标</strong>，老生常谈啦，下载它</p>
<p><a href="https://www.iconfont.cn/collections/index?type=2">https://www.iconfont.cn/collections/index?type=2</a></p>
<p><a href="https://www.flaticon.com/">https://www.flaticon.com/</a></p>
<p>2、<strong>界面</strong>大小的问题，From<strong>气球</strong></p>
<p>通常用户电脑的屏幕是1366＊768，1440＊900，1920＊1080三种。</p>
<p>考虑到可能出现的页签和滚动条，所以商业仪表盘一般会用1340＊740，1410＊870，1900＊1050</p>
<p><strong>字体</strong>，中文字体：<strong>微软雅黑</strong>。英文<strong>Arial,Calibri</strong></p>
<p><strong>3、仪表板水平、垂直、悬浮，图表去掉冗余想，轴、标题等</strong></p>
<h2><span id="day-3-tu-lei-xing-he-zuo-yong">day 3 图类型和作用</span><a href="#day-3-tu-lei-xing-he-zuo-yong" class="header-anchor">#</a></h2><p>01 条形图</p>
<p>02 折线图</p>
<p>03 饼图</p>
<p>04 地图</p>
<p>05 密度图</p>
<p>06 散点图</p>
<p>07 甘特图</p>
<p>08 气泡图</p>
<p>09 直方图</p>
<p>10 靶心图</p>
<p>11 突出显示图</p>
<p>12 树状图</p>
<p>13 盒须图</p>
<p>14 K线图</p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzI1NDEyODMyNw==&amp;mid=2247484485&amp;idx=1&amp;sn=97eeec7af8758f46715f5ba585aae03c&amp;chksm=e9c8bdeddebf34fbdee3549ecfdf2a210dceff778c8187375fd548080ee67e0734257f7e9a28&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzI1NDEyODMyNw==&amp;mid=2247484485&amp;idx=1&amp;sn=97eeec7af8758f46715f5ba585aae03c&amp;chksm=e9c8bdeddebf34fbdee3549ecfdf2a210dceff778c8187375fd548080ee67e0734257f7e9a28&amp;scene=21#wechat_redirect</a></p>
<h2><span id="day4-yi-biao-pan">day4 仪表盘</span><a href="#day4-yi-biao-pan" class="header-anchor">#</a></h2><p>筛选器</p>
<p>地图</p>
<p>组合</p>
<h3><span id="liu-cheng">流程</span><a href="#liu-cheng" class="header-anchor">#</a></h3><ol>
<li>数据导入</li>
<li>数据预处理</li>
<li>单个图形选择</li>
<li>仪表盘</li>
</ol>
<h1><span id="xue-xi-zi-yuan">学习资源</span><a href="#xue-xi-zi-yuan" class="header-anchor">#</a></h1><p><a href="https://www.bilibili.com/video/BV1n4411N7SC/?p=2&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV1n4411N7SC/?p=2&amp;spm_id_from=pageDriver</a></p>
<p>案例学习</p>
<p><a href="https://mp.weixin.qq.com/s/M--9G2N2yeoh8ZQ1qQY89w">https://mp.weixin.qq.com/s/M--9G2N2yeoh8ZQ1qQY89w</a></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>可视化</tag>
        <tag>BI</tag>
      </tags>
  </entry>
  <entry>
    <title>or</title>
    <url>/2019/12/01/or/</url>
    <content><![CDATA[<h1><span id="yun-chou-xue">运筹学</span><a href="#yun-chou-xue" class="header-anchor">#</a></h1><p>目的是在决策时为管理人员提供科学依据。</p>
<p>利用统计学，数学模型和算法等方法，寻找复杂问题中的最佳或者近似最佳的解答。</p>
<p>解决问题的优化算法。</p>
<a id="more"></a>
<h2><span id="mo-xing-jian-li">模型建立</span><a href="#mo-xing-jian-li" class="header-anchor">#</a></h2><p>实际问题</p>
<ol>
<li><p>决策变量</p>
<p>影响所要到达目的的因素找到决策变量</p>
</li>
</ol>
<ol>
<li>目标函数</li>
</ol>
<ol>
<li>约束条件</li>
</ol>
<h2><span id="xian-xing-gui-hua">线性规划</span><a href="#xian-xing-gui-hua" class="header-anchor">#</a></h2><h2><span id="zheng-shu-gui-hua">整数规划</span><a href="#zheng-shu-gui-hua" class="header-anchor">#</a></h2><p>1、纯整数规划：所有决策变量均要求为整数的整数规划<br>2、混合整数规划：部分决策变量均要求为整数的整数规划<br>3、纯0－1整数规划：所有决策变量均要求为0－1的整数规划<br>4、混合0－1规划：部分决策变量均要求为0－1的整数规划</p>
<p>分支定界法 : 精确算法—分支定界法(Branch and Bound Algorithm, B&amp;B)</p>
<p> 这就意味着，要么花钱买以上求解器的使用权，要么就自己写B&amp;B算法的Code，然后忍受Cplex 1分钟可以求解的问题却要花1天时间的求解。（很多问题时间就是金钱，例如航班延误后剩余航班重新排班的问题，通常需要在10分钟内求解） </p>
<p>想法：</p>
<p>首先，可以确定的是这是个航班重新排班的问题，数学上，航班安排属于运筹学的问题之一，需要应用建立优化模型解决。建立最优化问题，最重要的两步是模型建立和模型求解。模型的建立：需要确定决策变量（整数规划，混合整数规划)，目标函数（多目标），约束条件。 模型的求解： 分层序列法 。</p>
<h2><span id="ke-tang-bei-jing">课堂背景</span><a href="#ke-tang-bei-jing" class="header-anchor">#</a></h2><p>航班的重排班问题，最优化问题，运筹学范畴的问题。</p>
<h3><span id="yue-shu">约束：</span><a href="#yue-shu" class="header-anchor">#</a></h3><p>算法能够在满足多种实际约束条件的前提下，可以对航班计划进行恢复，并快速给出最优的航班调整替换方案 ； </p>
<p> 航班运行与机组编排的各类约束条件 ； 根据航班计划对机组排班计划进行调整，使得机组的资质等与航班计划可以匹配，</p>
<p> 川航一个月内的全部航班计划与机组排班计划 </p>
<ol>
<li><p>备用飞机</p>
<p>有限</p>
</li>
<li><p>调整分机飞行顺序</p>
</li>
</ol>
<ol>
<li><p>航班延迟</p>
<p>不能提前起飞</p>
<p>不能超过延误时间</p>
</li>
<li><p>航班取消</p>
<p>如果超过了延误时间，目标函数增加调整成本</p>
</li>
<li><p>旅客转签</p>
<p>只能一次转，还有座位限制</p>
</li>
<li><p>航班直飞</p>
<p> 航班由于天气或流控等原因无法顺畅运行时，将联程航班中段取消直飞最终目的地，并妥善处置旅客是航班调整方法之一。（联程航班定义为，前后段衔接并且航班号相同的多个航班） </p>
</li>
<li><h5><span id="ji-zu-diao-zheng">机组调整</span><a href="#ji-zu-diao-zheng" class="header-anchor">#</a></h5><p>（一） 备份机组<br>在航班计划出现机组实力缺口时，可以在航班的出发地寻找空闲机组，安排其执行该航班。<br>（二） 调换机组<br>将多个机组的航班计划进行调换。<br>（三） 机组摆渡<br>当遇到机组计划不衔接（机组的上个航班的目的地与下个航班的出发地不一致）时，可以通过摆渡的方式，采用飞机或是其他交通工具到达下个航班的出发地。</p>
</li>
</ol>
<h3><span id="mu-biao-jiang-hang-ban-yun-xing-qing-kuang-shou-dao-de-ying-xiang-jiang-dao-zui-di">目标：  将航班运行情况受到的影响降到最低</span><a href="#mu-biao-jiang-hang-ban-yun-xing-qing-kuang-shou-dao-de-ying-xiang-jiang-dao-zui-di" class="header-anchor">#</a></h3><p>从而使得航班与机组计划得到快速恢复、减少航班延误、提高航班正常率，使旅客有更好的出行体验，并提升公司的运行效率与经济效益。 </p>
<ol>
<li>航公公司： 损失最小</li>
<li>游客:  航班延时短</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>linux</title>
    <url>/2019/11/27/linux/</url>
    <content><![CDATA[<p>linux内核，linux发行版（带桌面环境），服务器的访问方式（三种），linux操作系统的相关使用，通过命令行和键盘输入搞定（用户权限，用户分组，用户之间的关系，用户操作；文件结构，文件使用，文件权限，文件编辑，文件压缩和解压，这系列操作类比操作系统，只是linux系统里面，都是命令行完成，不是可视化界面罢了；帮助，终止操作，root，sudo,超级管理员，管理员组，普通用户）windows操作系统可以干的事情，在linux服务器里面，都可以干，通过命令行配置，安装，完成！</p>
<a id="more"></a>
<h1><span id="linux">Linux</span><a href="#linux" class="header-anchor">#</a></h1><h2><span id="linux-de-ke-pu">Linux 的科普</span><a href="#linux-de-ke-pu" class="header-anchor">#</a></h2><p> Linux 是一套免费使用和自由传播的类 Unix 操作系统 ，支持多用户，多任务，支持多线程和对CPU的操作系统。，就像你多少已经了解的 Windows（xp，7，8）和 Mac OS 。</p>
<p><img src="https://doc.shiyanlou.com/linux_base/1-1.png/wm" alt="图1-1"></p>
<p> 或许你之前不知道 Linux ，要知道，你之前在 Windows 使用百度、谷歌，上淘宝，聊 QQ 时，支撑这些软件和服务的，是后台成千上万的 Linux 服务器主机，它们时时刻刻都在忙碌地进行着数据处理和运算，可以说世界上大部分软件和服务都是运行在 Linux 之上的。 </p>
<p> 明确目的：你是要用 Linux 来干什么，搭建服务器、做程序开发、日常办公，还是娱乐游戏； </p>
<p> 兼具图形界面操作（需要使用带有桌面环境的发行版）和完全的命令行操作，可以只用键盘完成一切操作，新手入门较困难，需要一些学习和指导（这正是我们要做的事情），一旦熟练之后效率极高。 </p>
<p>一般命令行操作，通过键盘完成</p>
<p> 因为linux的哲学就是：没有结果就是最好的结果 </p>
<p> 如果只是执行，执行失败会告诉你哪里错了，如果执行成功那么会没有输出，因为linux的哲学就是：没有结果就是最好的结果 </p>
<h2><span id="linux-de-fa-xing-ban">Linux的发行版</span><a href="#linux-de-fa-xing-ban" class="header-anchor">#</a></h2><p>Linux发行版 = linux内核+应用软件的打包</p>
<p>知名的发行版： ubuntu，redhat,centos</p>
<p>Linux系统</p>
<ol>
<li><p>用户登录系统</p>
<p>（1）命令行</p>
<p>（2）ssh登录</p>
<p> SSH 为 <a href="https://baike.baidu.com/item/Secure Shell">Secure Shell</a> 的缩写 ，用于远程登陆的协议</p>
<p>远程连接工具客户端：xshell, putty,</p>
<p>  (3)   图形界面登录</p>
</li>
</ol>
<p><img src="https://img-blog.csdn.net/20180719122550321?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zOTAzNjcwMA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="img"></p>
<ol>
<li><p>文件目录以及权限</p>
<ol>
<li>Linux 中创建、删除用户，及用户组等操作。</li>
<li>Linux 中的文件权限设置。</li>
</ol>
<p>1.2 实验知识点</p>
<ul>
<li>Linux <strong>用户管理</strong></li>
<li>Linux <strong>权限管理</strong></li>
</ul>
<ol>
<li><p>用户管理</p>
<p>通过第一节课程的学习，你应该已经知道，Linux 是一个可以实现多用户登录的操作系统，比如“李雷”和“韩梅梅”都可以同时登录同一台主机，他们共享一些主机的资源，但他们也分别有自己的用户空间，用于存放各自的文件。但实际上他们的文件都是放在同一个物理磁盘上的甚至同一个逻辑分区或者目录里，但是由于 Linux 的 <strong>用户管理</strong>和 <strong>权限机制</strong>，不同用户不可以轻易地查看、修改彼此的文件。 </p>
</li>
<li><p>在 Linux 系统里， <code>root</code> 账户拥有整个系统至高无上的权利，比如 新建/添加 用户。</p>
<p>sudo adduser lilei</p>
</li>
<li><p>创建用户（sudo 组）</p>
<p>我们一般登录系统时都是以普通账户的身份登录的，要创建用户需要 root 权限，这里就要用到 <code>sudo</code> 这个命令了。不过使用这个命令有两个大前提，一是你要知道当前登录用户的密码，二是当前用户必须在 <code>sudo</code> 用户组。 sudo命令：获得root权限</p>
</li>
<li><p>用户组</p>
<p>查看：</p>
<p>在 Linux 里面每个用户都有一个归属（用户组），用户组简单地理解就是一组用户的集合，它们共享一些资源和权限，同时拥有私有资源 。</p>
<p> groups shiyanlou </p>
<p>加入sudo用户组</p>
<p>su <user>：切换用户user，需要输入目标用户和密码</user></p>
<p>sudo usermod -G sudo lilei</p>
</li>
<li><p>文件所以者</p>
<p>su -l lilei</p>
<p>su chown 修改权限</p>
<p><code>sudo</code> 可以以特权级别运行 cmd 命令，需要当前用户属于 sudo 组，且需要输入当前用户的密码。 </p>
</li>
</ol>
</li>
<li><p>文档编辑</p>
<p>vim编辑器</p>
<p>i esc :wq</p>
</li>
<li><p>linux文件系统与磁盘管理</p>
</li>
<li><p><img src="https://doc.shiyanlou.com/linux_base/4-1.png/wm" alt="img"></p>
<p>  $ tree /  </p>
<p>pwd</p>
<p>cd ..: 上一级目录</p>
<p>../</p>
<p>/:根目录：绝对路径</p>
<p> cd /home/shiyanlou</p>
<p>touch test</p>
<p> mkdir mydir </p>
<p>  <code>cp</code>（copy）命令复制一个文件到指定目录 </p>
<p> 要成功复制目录需要加上 <code>-r</code> 或者 <code>-R</code> 参数，表示递归复制 </p>
<p>cd /home/shiyanlou<br> mkdir family<br>​ cp -r father family</p>
</li>
</ol>
<pre><code>rm test 

跟复制目录一样，要删除一个目录，也需要加上 `-r` 或 `-R` 参数 

mv 源目录文件 目的目录 ，可以用来重命名文件
</code></pre><p>   $ cd /home/shiyanlou/</p>
<p>   使用通配符批量创建 5 个文件:</p>
<p>   $ touch file{1..5}.txt</p>
<p>   批量将这 5 个后缀为 .txt 的文本文件重命名为以 .c 为后缀的文件:</p>
<p>   $ rename ‘s/.txt/.c/‘ *.txt</p>
<p>   批量将这 5 个文件，文件名和后缀改为大写:</p>
<p>   $ rename ‘y/a-z/A-Z/‘ *.c</p>
<p>   文件打包和解压缩</p>
<ul>
<li>zip：<ul>
<li>打包 ：zip something.zip something （目录请加 -r 参数）</li>
<li>解包：unzip something.zip</li>
<li>指定路径：-d 参数</li>
</ul>
</li>
<li><p>tar：</p>
<ul>
<li>打包：tar -cf something.tar something</li>
<li>解包：tar -xf something.tar</li>
<li>指定路径：-C 参数、</li>
</ul>
<p>tar -cf shiyanlou.tar /home/shiyanlou/Desktop </p>
<p><code>-c</code> 表示创建一个 tar 包文件，<code>-f</code> 用于指定创建的文件名，注意文件名必须紧跟在 <code>-f</code> 参数之后 </p>
<p>tar -xf shiyanlou.tar -C tardir </p>
<p>解包一个文件（<code>-x</code> 参数）到指定路径的<strong>已存在</strong>目录（<code>-C</code> 参数） </p>
<p>tar -xzf shiyanlou.tar.gz </p>
</li>
</ul>
<ol>
<li><p>| 压缩文件格式 | 参数 |<br>| —————— | —— |<br>| <code>*.tar.gz</code>   | <code>-z</code> |<br>| <code>*.tar.xz</code>   | <code>-J</code> |<br>| <code>*tar.bz2</code>   | <code>-j</code> |</p>
</li>
<li><p>linux安装软件</p>
</li>
</ol>
<h3><span id="shu-ru-shu-chu">输入，输出</span><a href="#shu-ru-shu-chu" class="header-anchor">#</a></h3><p>   输入：输入当然就是打开终端，然后按键盘输入，然后按回车，输入格式一般就是这类的</p>
<p>输出：</p>
<p>输出会返回你想要的结果，比如你要看什么文件，就会返回文件的内容。</p>
<p>如果只是执行，执行失败会告诉你哪里错了，如果执行成功那么会没有输出，因为linux的哲学就是：没有结果就是最好的结果</p>
<p>Tab: 命令补全</p>
<p>Ctrl+C:强制终止</p>
<p>学会使用通配符：通配符：*,?</p>
<p>学会在命令行中获取帮助：man命令调用手册页，</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>区段</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>一般命令</td>
</tr>
<tr>
<td>2</td>
<td>系统调用</td>
</tr>
<tr>
<td>3</td>
<td>库函数，涵盖了C标准函数库</td>
</tr>
<tr>
<td>4</td>
<td>特殊文件（通常是/dev中的设备）和驱动程序</td>
</tr>
<tr>
<td>5</td>
<td>文件格式和约定</td>
</tr>
<tr>
<td>6</td>
<td>游戏和屏保</td>
</tr>
<tr>
<td>7</td>
<td>杂项</td>
</tr>
<tr>
<td>8</td>
<td>系统管理命令和守护进程</td>
</tr>
</tbody>
</table>
</div>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">man 1 ls</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">ls --help</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>machine learning</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>清晰有效的数据分析思路</title>
    <url>/2019/11/26/%E6%B8%85%E6%99%B0%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%80%9D%E8%B7%AF/</url>
    <content><![CDATA[<p>数据分析</p>
<a id="more"></a>
<h2><span id="ru-he-zuo-shu-ju-fen-xi-hui-bao">如何做数据分析汇报</span><a href="#ru-he-zuo-shu-ju-fen-xi-hui-bao" class="header-anchor">#</a></h2><h3><span id="1-miao-shu-shu-ju-de-biao-zheng">1. 描述数据的表征</span><a href="#1-miao-shu-shu-ju-de-biao-zheng" class="header-anchor">#</a></h3><p>描述性统计：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>平均数</th>
<th>中位数</th>
<th>众数</th>
<th>几何平均数</th>
<th>调和平均数</th>
</tr>
</thead>
<tbody>
<tr>
<td>平均值</td>
<td>中间位置的数</td>
<td>出现次数最多</td>
<td></td>
<td></td>
</tr>
<tr>
<td>方差</td>
<td>标准差</td>
<td>分布</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<p>得到第一份数据结论</p>
<h3><span id="2-xun-zhao-bian-hua-shen-ru-guan-cha">2. 寻找变化，深入观察</span><a href="#2-xun-zhao-bian-hua-shen-ru-guan-cha" class="header-anchor">#</a></h3><p>发生变化的指标一般就是指标关联的业务环境发生了某种变化。通过观察变化量，寻找可能的业务问题点。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>同比</th>
<th>对比同期的变化</th>
<th>如：上周五和去年过年</th>
</tr>
</thead>
<tbody>
<tr>
<td>环比</td>
<td>对比连续周期</td>
<td>如：今天和昨天；本月和上月；</td>
</tr>
<tr>
<td>增长率</td>
<td>评估累计型指标的有力工具</td>
<td>如：收入</td>
</tr>
</tbody>
</table>
</div>
<p> 时间上的对比，也称为纵比  ：环比，同比</p>
<p>同级单位之间的比较，简称横比 ： 不同省份之间的分析</p>
<p>得到第二份数据结论，可以分析到问题所在。</p>
<h3><span id="3-quan-mian-ping-gu-duo-wei-fen-xi">3.全面评估，多维分析</span><a href="#3-quan-mian-ping-gu-duo-wei-fen-xi" class="header-anchor">#</a></h3><p>多维分析：</p>
<p>维度是描述指标 不同角度，通过多维分析，来寻求指标的变化的可以的原因。</p>
<p>广义的多维分析，不仅仅包括从指标的不同维度进行分析，也包含拆分为多个子指标进行分析。</p>
<p>指标体系+维度体系</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>基础/通用</th>
<th>年龄、性别、学历、地域、手机型号、操作系统</th>
</tr>
</thead>
<tbody>
<tr>
<td>产品</td>
<td>产品类型、归属业务</td>
</tr>
<tr>
<td>运营</td>
<td>归属渠道、投放周期、活动类型</td>
</tr>
<tr>
<td>营销</td>
<td>市场推广、营销方式、营销目的</td>
</tr>
</tbody>
</table>
</div>
<p>如粽子的维度</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>产品维度</th>
<th>肉粽，大枣棕，糖总</th>
</tr>
</thead>
<tbody>
<tr>
<td>渠道维度</td>
<td>线上：自有APP,电商渠道，合作渠道；线下：合作门店，大屏广告</td>
</tr>
<tr>
<td>时间维度</td>
<td>投放周期；投放时段</td>
</tr>
<tr>
<td>地域维度</td>
<td>直辖市；省会；二三线城市</td>
</tr>
<tr>
<td>年龄维度</td>
<td>年龄段</td>
</tr>
<tr>
<td>线上入口</td>
<td>splash,banner,弹窗，角标</td>
</tr>
</tbody>
</table>
</div>
<p>输入：第三份结论；单指标分析：得到分析到上升，下降的原因。</p>
<h3><span id="4-duo-zhi-biao-jiao-cha-fen-xi">4. 多指标交叉分析</span><a href="#4-duo-zhi-biao-jiao-cha-fen-xi" class="header-anchor">#</a></h3><p>维度偏差： 大数据涉及的维度很多单一维度分析会出现偏差，多个维度组合起来的时候可能得到相反的结论。</p>
<p>幸存者偏差：样本的丢失问题</p>
<p>第四份分析结论：分析得到出现的问题？</p>
<h3><span id="5-liang-hua-ping-gu-xun-zhao-gui-yin">5. 量化评估，寻找归因</span><a href="#5-liang-hua-ping-gu-xun-zhao-gui-yin" class="header-anchor">#</a></h3><p>相关性分析： 在业务中，通过是为了量化评估各种因素对于核心指标的影响程度，寻找对业务影响的原因。</p>
<p>相关性分析：</p>
<ol>
<li>单因素相关性分析</li>
<li>多因素的相关性分析</li>
</ol>
<p>第五份分析结论： 找到了核心影响因素了</p>
<h3><span id="6-hui-dao-wei-lai-qu-shi-yu-ce">6. 回到未来、趋势预测</span><a href="#6-hui-dao-wei-lai-qu-shi-yu-ce" class="header-anchor">#</a></h3><p>趋势预测： 预测分析是一种统计或数据挖掘解决方案</p>
<p>时间序列预测：一般时间序列预测；季节性时间序列预测；复合时间序列预测</p>
<ol>
<li><p>数学层面是严谨的</p>
<p>用一些数据预测方法和算法：指数平滑模型</p>
</li>
<li><p>业务层面是易变的</p>
<p>实际业务环境中，影响未来发展的还会有行业环境的突变，资源的突变，产品客群的突变等，人为的干扰较大。业务层面的趋势预测是不稳定的，且易变的</p>
</li>
</ol>
<p>得到第五份结论：未来效果</p>
<h3><span id="7-fen-xi-de-shi-xiang-luo-di-ye-wu">7. 分析的实相，落地业务</span><a href="#7-fen-xi-de-shi-xiang-luo-di-ye-wu" class="header-anchor">#</a></h3><p>分析的结论和数据逻辑与业务方—-确认，数据分析一定要闭环，即从业务中来，到业务中去。</p>
<h3><span id="zhi-biao-he-wei-de-gai-nian">指标和维的概念</span><a href="#zhi-biao-he-wei-de-gai-nian" class="header-anchor">#</a></h3><ol>
<li>指标</li>
</ol>
<p>​       指标:衡量事物发展程度的单位和方法，也叫度量。如：人口数，GDP, 收入，用户数，利润利，留存率，覆盖率等。</p>
<p>​       指标分为：绝对数指标和相对数指标。绝对指标：反映了规模大小；相对指标：反映了质量好坏的指标。</p>
<ol>
<li><p>维度</p>
<p>事物或者现象的某种特征，如性别，地区，时间。</p>
</li>
</ol>
<p>​       分为定量维度和定性维度。定性：字符型数据；定量：数值型。</p>
<p> 只有通过事物发展的数量、质量两大方面，从横比、纵比角度进行全方位的比较，我们才能够全面的了解事物发展的好坏 </p>
<p>通俗举个例子：2019年各个省级的经济发展状况：GDP总量：指标；省份，二三线城市：维度；</p>
<p>​    </p>
<p>总结： 数据分析的典型过程；指标拆分，维度对比；</p>
<p>产品（Product），是用来满足人们需求和欲望的物体或无形的载体。产品的实体称为一般产品。产品包含了产品的核心利益（向消费者提供的基本效用和利益）</p>
<pre><code>1. 软件，通讯，手机，科技产品
</code></pre><p>市场是指一种货物或劳务的潜在购买者的集合需求。</p>
<p>在市场营销组合中， 4P 分别是产品( product) 、价格( price) 、地点( place) 、促销( promotion) </p>
<p>营销是创造、沟通与传送价值给顾客，及经营顾客关系以便让组织与其利益关系人（stakeholder）受益的一种组织功能与程序。</p>
<p>通俗地讲，就是通过宣传、推广，进而促进产品或服务的销售。</p>
<p> 互联网产品公司三个业务部分：产品，技术，运营</p>
<p>产品：把东西想出来</p>
<p>技术：把东西做出来</p>
<p>运营：把东西用起来</p>
<p>从字面上看，运，是让产品维持运转；营，是让产品运转得更好，就是要对用户群体进行有目的地组织和管理，增加用户数量、用户粘性、用户贡献和用户忠诚度，这也就涉及到运营工作的三个重要方面：拉新、留存、促活。</p>
<p>理解问题—&gt; 设计解决方案—&gt; 迭代方案，直到问题解决</p>
<h2><span id="shu-ju-fen-xi-shi-de-ji-neng-zhi-lu">数据分析师的技能之路</span><a href="#shu-ju-fen-xi-shi-de-ji-neng-zhi-lu" class="header-anchor">#</a></h2><ol>
<li>week 01:  <strong>Excel学习掌握</strong> </li>
<li><p>week 02: 数据可视化</p>
</li>
<li><p>week 03： 分析思维的训练</p>
</li>
<li>week 04:  数据库学习</li>
<li>week 05: 统计知识学习</li>
<li>week 06: 业务学习（用户行为，产品，运营）</li>
<li>week 07： Python/R学习</li>
</ol>
<h2><span id="shu-ju-fen-xi-ying-you-de-luo-ji-si-wei-ji-fen-xi-fang-fa">数据分析应有的逻辑思维及分析方法</span><a href="#shu-ju-fen-xi-ying-you-de-luo-ji-si-wei-ji-fen-xi-fang-fa" class="header-anchor">#</a></h2><p><strong>提出问题➟分析问题➟提出假设➟验证假设➟输出结论</strong></p>
<h3><span id="01-mu-biao-si-wei">01 目标思维</span><a href="#01-mu-biao-si-wei" class="header-anchor">#</a></h3><p><img src="https://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8jiavA4aJqXtHRH1SXglgV3uP6ORRu1BIoqJswicZicnb1zsQ7ibns8MWibHCKEEHgm57sR90oykQx8vQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>在陈述问题时所使用的KWIC方法，其实也是逻辑要素的延伸：</p>
<p>1）K（KEY）：核心观点</p>
<p>2）W（Widen）：扩展核心观点包含的内容</p>
<p>3）I（Illustrate）：举例说明佐证观点</p>
<p>4）C（Conclude）：总结</p>
<h3><span id="02-jie-gou-hua-si-wei">02 结构化思维</span><a href="#02-jie-gou-hua-si-wei" class="header-anchor">#</a></h3><p>结构化思维能够帮助我们<strong>将无序、散乱的信息进行聚焦、归纳、分类。</strong></p>
<p><strong><img src="https://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8nz3To4RXmOMqV4SKpD4TxOL5ysfw6Q8R7b4ovapHViaF3bf5qFcib7nyjQUXZa8QL9rQRs8U7TPMw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></strong></p>
<h3><span id="03-tui-li-si-wei"><strong>03 推理思维</strong></span><a href="#03-tui-li-si-wei" class="header-anchor">#</a></h3><p>确认论点，结构化论据，下一步是论证。在论证中运用推理思维能够帮助我们迅速找到问题的异同点，从而发现它们的规律。</p>
<p>归纳法，指从特殊（部分样本）到一般（全量样本）的过程，通俗的说是从个别的经验归纳出普遍规律的方法。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8lgsYibjmVic1HHc5nqxSKyJWHDb9qNwPdrdsodEEwttZ931nVv6faBiaCKVOqbpe9XebNiarhde3UHA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>这实质上是以偏概全的方法，一旦有一个用户不满足这个前提，这个结论就无法成立。</p>
<p>在输出结论之前需要判断<strong>样本是否足够有代表性，判断是必然事件还是随机事件。</strong></p>
<p><strong>3-2、演绎法</strong></p>
<p>演绎法则与归纳法相反,是从既有经证实的普遍性结论，推导出个别性结论的一种方法，常见的表现形式是逻辑三段论。</p>
<p>逻辑三段论的格式为：大前提、小前提、结论。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8lgsYibjmVic1HHc5nqxSKyJgjXf7nJqD4cWCfRHpjqvyPYqNCHFg0g40HN2ia8zXXy4tXej0M3eyUg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p><strong>3-3、因果关系分析法</strong></p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8lgsYibjmVic1HHc5nqxSKyJpdZ0ialiaNyXsvnJQkOkFqmy8WaMXiaWdMTUrHbzJOprobx3Y1jIAMllg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>枚举完毕后，辩证时提问3个问题：</p>
<p>1）原因是否真实？</p>
<p>2）结果是否真实</p>
<p>3）这个原因一定会引起这个结果吗？是否有其他的原因？</p>
<h2><span id="shu-ju-fen-xi-de-fang-fa">数据分析的方法</span><a href="#shu-ju-fen-xi-de-fang-fa" class="header-anchor">#</a></h2><h3><span id="01-shu-ju-fen-xi-qian-de-zhun-bei"><strong>01  数据分析前的准备</strong></span><a href="#01-shu-ju-fen-xi-qian-de-zhun-bei" class="header-anchor">#</a></h3><p><strong>1-1、分清楚目标和指标</strong></p>
<p>数据分析，能帮助我们了解<strong>业务运行状况</strong>，并从中<strong>发现问题、优化问题</strong>。其次，还能够帮助<strong>洞察</strong>下一个增长点。</p>
<p><strong>数据分析的意义，往往在数据产生之前。</strong>我们应围绕产品目标，进行产品设计以及运营策划。</p>
<p><strong>目标是结果，而指标是对结果分拆的具体要求，是对目标的衡量。</strong></p>
<p>假设我们的目标是提升年度成交金额，那衡量这个目标的方法是什么呢？</p>
<p>根据衡量的方法我们才能定向的设置调整产品设计及运营策略。如果缺少<strong>可衡量目标的单位和方法</strong>，目标会难以达成。</p>
<p>而围绕目标设置数据的采集方案，可以大大节省数据过滤和清洗的时间。</p>
<p>甚至于在明确指标后再最开始就设置好分析模型，通过监测模型中的数据情况更及时的发现问题，做出更高质、高效的决策。</p>
<p><strong>1-2、辨别指标的目的</strong><img src="https://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l9BEvJAaDibbu191EOBOPbPic0uCNrrlhfiam1CHLIHnDia6eWUf0lAa7RcQF0rfHhDggCLZWziaaXXOIg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>结果指标用于衡量目标，过程指标用于体现如何完成。观察指标则指的受影响指标，其是否会受到自变量（结果指标）的影响，导致上升或下降。</p>
<p>在上图中，基于成交订单数，设置过程指标为订单平均金额及商品分布能帮助我们了解完成的方式。</p>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4libVa40fIVA6bicpQPicicqMTZjkVI206GqoaZ3gMu8dPUiclcxBtW7atN7P2ZHRzExop13iby2Q9MyANPQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p><strong>1-3、确认分析类型</strong></p>
<p>在完成目标和指标后，下一步就是应用结构化思维进行拆解和延伸。</p>
<p>拆解出的指标目的是什么？根据目的我们才能有倾向性的分析。</p>
<p><strong>1）描述性分析</strong></p>
<p>表现形式：数据报表</p>
<p>数据报表能够帮助我们描述事件发展的情况，但很难解释某种结果发生的原因和未来可能的趋势。</p>
<p>它更偏向结果性的描述，此前的结果对此后是不具备太多参考意义的。</p>
<p><strong>2）测性分析</strong></p>
<p>表现形式：用户相似度及物品相似度计算、用户购买饱和度、用户成交影响因子</p>
<p>预测性分析可以理解为对结果和变量的关系进行预测的过程，包含相似度、相关性分析、回归分析等。</p>
<p>相似度多用于推荐算法，通过计算用户的相似度和商品相似度从而推荐给用户。而相关分析用于预测变量的关联性，如用户的成交会受什么因素影响。</p>
<p><strong>3）实证性分析及规范性分析</strong></p>
<p>表现形式：A/B实验</p>
<p>实证性分析，指是什么，偏向于客观；规范性分析指应当做什么，偏向于主观。</p>
<p>在实际使用过程，上述的4种分析类型常常会被混合使用，混合使用时应明确不同类型我们应采取的分析维度。</p>
<p>数据分析是有顺承关系的，先采集事实，再根据事实或者预测，提出我们的假设。逐步灰度地验证假设，最终才输出我们的结论。</p>
<p>不能将主观猜测强加于事实之上，<strong>已经发生的结果并不一定是未来的结果</strong></p>
<p><strong>02 数据分析如何带来长期价值</strong></p>
<p>为了使有用功更多，下文将从<strong>用户</strong>和<strong>收益</strong>2个维度分享数据如何为我们沉淀长期价值。</p>
<p><strong>2-1、了解我们的用户</strong></p>
<p><strong>1）基础信息</strong></p>
<p><img src="http://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8MwDpLTOtyiaLCECkfK0mbQjK5axB94KNVB08VlbaM92685Uf6ms9mEkSXEFiaEHEzYTWqiakXOhmrg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>基础信息，指用户本身的属性。</p>
<p>身份特征，可以从自然属性、社会属性向下细分，包含用户的性别、年龄、职业、教育等。</p>
<p>渠道属性，指用户的注册时间、注册平台、注册来源等。</p>
<p><strong>2）决策类型</strong></p>
<p><img src="http://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8MwDpLTOtyiaLCECkfK0mbQXKm0NUBtLk9Dh5NUGCgoicSf4H4bDukPZ5XUlLEY2Ie8wO8viaiaEU8yg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p><strong>决策类型，主要分为决策周期、品类偏好、促销偏好、对象偏好，</strong>这是用户分析中常常被忽略的一方面。</p>
<p>决策周期中的首次访问，指的首次触及该商品的时间。结合次数、时长以及成交时间，从而了解用户的决策周期。</p>
<p>品类偏好，结合品牌和历史成交单数，能够帮助我们获悉品牌、价格综合对用户的影响。</p>
<p>而成交品类、商品、单数则是帮助我们理解其品类购买深度及路径，用于进行关联推荐和评判用户的价值。</p>
<p>促销偏好，结合品类和折扣金额了解用户的敏感度，能更好的提高其转化率。对象偏好，同样是了解购买深度及路径，不过维度不同。</p>
<p>在用户层面的分析，此前接触的一些朋友都非常热衷于使用RFM模型，在使用过程中也应“因地制宜”。</p>
<p><strong>
</strong></p>
<p><strong>3）购买路径</strong></p>
<p><img src="http://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8MwDpLTOtyiaLCECkfK0mbQ3ZACcSicicEroxkWZTVVicpHYFnGC6LhpHjwvaClE2rVV9K4NmrBL6TSQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>品类深度、对象深度是影响决策类型的因子，当它们在购买路径时则聚焦于次序。</p>
<p>根据次序，制定运营的发力点，再遵循用户的购买路径制定转化路径。</p>
<p>在用户分布相对稳定的前提下，应<strong>顺从用户的购买规律而非倾力于另一条主线。</strong></p>
<p>一专多强的前提是专，只有聚焦优势品类或主题建立了优势，才能为其他的方向供应炮弹。</p>
<p><strong>4）增长观察</strong></p>
<p><img src="http://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8MwDpLTOtyiaLCECkfK0mbQcA4bCRYXYqRgbl0uGWVltwQZpoKpdHxjVG8fkavAaZhzo9Nz9apjfw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>前面解决的问题是：他是谁，买什么以及怎么买。最后一点，则是增长观察。</p>
<p>购买路径聚焦于次序，<strong>增长观察聚焦于深度</strong>。购买的次序是运营的主线，购买的深度用于精细化运营。</p>
<p>了解用户在品类和对象的购买深度，再辅以ARPU与LTV的比对，从用户的剩余潜力寻找平台增长点的方式。</p>
<p><strong>2-2、建立你的用户模型</strong></p>
<p>当时我把平台用户的地域年龄、性别等分布介绍了一番。紧接着他提问：“<strong>根据这样的画像你能够做什么呢？</strong>”<img src="http://mmbiz.qpic.cn/mmbiz_png/Pk2wLZrp4l8MwDpLTOtyiaLCECkfK0mbQp6ibPM1mLleO2Zu2Q96v0iaicPMVz52WwIHmA4ia3QwD4ttlJrfzAVKczA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="img"></p>
<p>基于对用户的认识建立模型，以上一小节的决策模型为例。</p>
<p>将决策类型、品类偏好、对象偏好、促销偏好4个因子的关联，并辅以用户的基础信息进行组合。</p>
<p>如：“精打细算、专注大牌、疼爱孩子的母亲”。</p>
<p>这样一来冰冷的数据也被赋予了情感化的表达，无论是产品设计、交互设计、产品运营都会变得容易的多。</p>
<p>建立起用户模型，才能够更好地进行情感化设计、精细化运营。</p>
<p><a href="https://mp.weixin.qq.com/s/eWYiHNJ57aXtqygitnwVqw">https://mp.weixin.qq.com/s/eWYiHNJ57aXtqygitnwVqw</a></p>
<h1><span id="shu-ju-fen-xi-de-liu-cheng">数据分析的流程</span><a href="#shu-ju-fen-xi-de-liu-cheng" class="header-anchor">#</a></h1><p><img src="https://picb.zhimg.com/v2-78b75b190181c603402346bd1194c495_r.jpg" alt="img"></p>
]]></content>
      <categories>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/</url>
    <content><![CDATA[<h1><span id="principal-component-analysis-zhu-cheng-fen-fen-xi">Principal Component Analysis**  : 主成分分析</span><a href="#principal-component-analysis-zhu-cheng-fen-fen-xi" class="header-anchor">#</a></h1><h2><span id="xing-xiang-li-jie">形象理解</span><a href="#xing-xiang-li-jie" class="header-anchor">#</a></h2><p>如图，下面是一张3d的图片，从不同的方向投影出来的二维图，可以看出右往左投影的含有更多信息。</p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133219347.png" alt="image-20191102133219347"></p>
<p>如图，下面是一个高斯分布，二维点往两个正交的方向投影，长轴含有的信息更多。</p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133339237.png" alt="image-20191102133339237"></p>
<h2><span id="pca-de-guo-cheng-shi-yi">PCA的过程示意</span><a href="#pca-de-guo-cheng-shi-yi" class="header-anchor">#</a></h2><p><strong>Step 1 </strong> : 去中心。中心在坐标轴在（0,0)，均值在坐标轴原点</p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133416190.png" alt="image-20191102133416190"></p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133422942.png" alt="image-20191102133422942"></p>
<p><strong>Step 2</strong>  : Remove correlation(去除相关性)</p>
<p>通过坐标变化，坐标旋转，矩阵作用</p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133442399.png" alt="image-20191102133442399"></p>
<h3><span id="shu-xue-tui-dao">数学推导</span><a href="#shu-xue-tui-dao" class="header-anchor">#</a></h3><p>目标：变换后的矩阵，对角非零，非对角线全为零。S(Y)有非零的对角元素，所有非对角元素都是零 </p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133714679.png" alt="image-20191102133714679"></p>
<h3><span id="li-lun-tui-dao">理论推导</span><a href="#li-lun-tui-dao" class="header-anchor">#</a></h3><p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133819074.png" alt="image-20191102133819074"></p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133929665.png" alt="image-20191102133929665"></p>
<h3><span id="pca-examples">PCA Examples</span><a href="#pca-examples" class="header-anchor">#</a></h3><p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102133956360.png" alt="image-20191102133956360"></p>
<h3><span id="pca-bias">PCA bias</span><a href="#pca-bias" class="header-anchor">#</a></h3><p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102134003219.png" alt="image-20191102134003219"></p>
<p><img src="/2019/11/25/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/FeatureExtraction/Users\ADMIN\AppData\Roaming\Typora\typora-user-images\image-20191102134023435.png" alt="image-20191102134023435"></p>
]]></content>
  </entry>
  <entry>
    <title>Apriori</title>
    <url>/2019/11/25/Apriori/</url>
    <content><![CDATA[<p>Apriori 算法是一种挖掘关联规则的频繁项集的算法。</p>
<a id="more"></a>
<h2><span id="yin-yan">引言</span><a href="#yin-yan" class="header-anchor">#</a></h2><p>对于特征构成的集合$A$, 如果列出非空集合有$a^{|A|}-1$种，太恐怖了。</p>
<p>Aprior算法：核心想法是</p>
<ol>
<li>L_1是频繁的，则其子集也是频繁的。</li>
<li>L_1是非频繁的，则其超集是非频繁的</li>
</ol>
<p>这样的化，就大大减小了搜索空间了。</p>
<p>Aprior算法的过程：</p>
<p>$C_i$：表示数据集生成候选项集</p>
<p>$L_i$:表示生成的频繁项集</p>
<p>$C_{k-1}$产生$L_k$</p>
<h3><span id="zhi-chi-du">支持度</span><a href="#zhi-chi-du" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
support(\{A,B\}) = num\{AUB\}/W = P(A \ bing \ B)</script><p>W:总的记录，</p>
<h3><span id="zhi-xin-du">置信度</span><a href="#zhi-xin-du" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
Confidence(A->B) = support(\{A,B\})/support(B) = P(B/A)</script><p>注意：support(B)和Confidence(A-&gt;B)的影响，</p>
<h2><span id="xu-lie-mo-xing">序列模型</span><a href="#xu-lie-mo-xing" class="header-anchor">#</a></h2><p>考虑时间，如周一买一堆对象，周二买一堆东西</p>
<script type="math/tex; mode=display">
t= {t_1,t_2,..,t_n}\\
s = {s_1,s_2,..,s_n}</script><p>&lt;{s1},{s_2}&gt;是正确的</p>
<p>&lt;{s1,s2}}&gt;是错误的表达</p>
]]></content>
      <categories>
        <category>数据挖掘</category>
      </categories>
      <tags>
        <tag>关联规则</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的数据探索</title>
    <url>/2019/11/20/%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<h1><span id="jian-dan-de-tan-suo-shu-ju-de-fang-fa">简单的探索数据的方法</span><a href="#jian-dan-de-tan-suo-shu-ju-de-fang-fa" class="header-anchor">#</a></h1><p>总结一些简单的数据分析方法，以及常用的python 库 Pandas里面相应的函数。</p>
<a id="more"></a>
<h2><span id="tong-ji-hui-zong">统计汇总</span><a href="#tong-ji-hui-zong" class="header-anchor">#</a></h2><h3><span id="dan-ge-te-zheng">单个特征</span><a href="#dan-ge-te-zheng" class="header-anchor">#</a></h3><figure class="highlight txt"><table><tbody><tr><td class="code"><pre><span class="line">decrible() # 给出样本的基本统计量</span><br></pre></td></tr></tbody></table></figure>
<ul>
<li><p>频率</p>
</li>
<li><p>众数</p>
</li>
<li><p>百分位数</p>
</li>
</ul>
<ul>
<li>位置度量</li>
</ul>
<ul>
<li>均值和方差</li>
</ul>
<ul>
<li>散布度量： 极差和方差</li>
</ul>
]]></content>
      <categories>
        <category>数据挖掘</category>
        <category>数据分析</category>
      </categories>
      <tags>
        <tag>数据探索</tag>
      </tags>
  </entry>
  <entry>
    <title>英语Daily</title>
    <url>/2019/08/25/%E8%8B%B1%E8%AF%ADDaily/</url>
    <content><![CDATA[<h1><span id="2020">2020</span><a href="#2020" class="header-anchor">#</a></h1><h2><span id="09">09</span><a href="#09" class="header-anchor">#</a></h2><h3><span id="05">05</span><a href="#05" class="header-anchor">#</a></h3><p>上星期我去<strong>看戏</strong>。我的<strong>座位</strong>很好，戏很有意思，但我却无法欣赏。一青年男子与一青年女子<strong>坐在我的身后</strong>，大声地说着话。我非常生气，因为我听不见演员在说什么。我<strong>回过头</strong>去<strong>怒视</strong>着那一男一女，他们却毫不理会。最后，我忍不住了，又一次回过头去，<strong>生气地说</strong>：”我一个字也听不见了！”</p>
<p>“<strong>不关你的事</strong>，”那男的毫不客气地说，”这是私人间的谈话！”</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>新概念</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Basics</title>
    <url>/2019/05/28/Python-basic/</url>
    <content><![CDATA[<h1><span id><!-- more  --></span><a href="#" class="header-anchor">#</a></h1><h1><span id="chong-xin-xue-xi">重新学习</span><a href="#chong-xin-xue-xi" class="header-anchor">#</a></h1><p>开始很乱的学习Python，现在想系统学习基础，真正了解pythonic,</p>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Networks</title>
    <url>/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/</url>
    <content><![CDATA[<h1><span id="c4-convolutional-neural-networks-juan-ji-shen-jing-wang-luo">C4 : Convolutional Neural Networks(卷积神经网络)</span><a href="#c4-convolutional-neural-networks-juan-ji-shen-jing-wang-luo" class="header-anchor">#</a></h1><h2><span id="w1-convolutional-neural-networks-juan-ji-shen-jing-wang-luo">W1 :Convolutional Neural Networks(卷积神经网络)</span><a href="#w1-convolutional-neural-networks-juan-ji-shen-jing-wang-luo" class="header-anchor">#</a></h2><h3><span id="l1-computer-vision">L1: Computer Vision</span><a href="#l1-computer-vision" class="header-anchor">#</a></h3><ol>
<li>Image classification</li>
<li>Object detection</li>
<li>Neural Style Transfer</li>
</ol>
<p>Problem : input big</p>
<ol>
<li>神经网络结构复杂，数据量相对较少，容易出现过拟合；</li>
<li>所需内存和计算量巨大。</li>
</ol>
<h3><span id="l2-edge-detection-example">L2: Edge detection example</span><a href="#l2-edge-detection-example" class="header-anchor">#</a></h3><p>我们之前提到过，神经网络由浅层到深层，分别可以检测出图片的边缘特征、局部特征（例如眼睛、鼻子等），到最后面的一层就可以根据前面检测的特征来识别整体面部轮廓。这些工作都是依托卷积神经网络来实现的。</p>
<p><strong>卷积运算（Convolutional Operation）</strong>是卷积神经网络最基本的组成部分。我们以边缘检测为例，来解释卷积是怎样运算的。</p>
<ol>
<li><p>常见的边缘检测</p>
<p>垂直边缘（Vertical Edges) 和 水平边缘（horizontal Edges)</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Different-edges.png" alt></p>
</li>
</ol>
<p>这张图的栏杆就对应垂直线，栏杆的水平线是水平边缘。</p>
<p>那么图片是怎么检测边缘的呢？</p>
<p>过滤器：filter</p>
<p>在数学中“”就是卷积的标准标志，但是在<strong>Python</strong>中，这个标识常常被用来表示乘法或者元素乘法。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_1.png" alt></p>
<p>Output; 4 by 4</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_1——2.png" alt></p>
<p>具体运算：</p>
<p>1）</p>
<p>为了计算第一个元素，在4×4左上角的那个元素，使用3×3的过滤器，将其覆盖在输入图像，如下图所示。然后进行元素乘法（<strong>element-wise products</strong>）运算</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_1_3png.png" alt></p>
<p>2）为了弄明白第二个元素是什么，你要把蓝色的方块，向右移动一步，像这样，把这些绿色的标记去掉：</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_1_4png.png" alt></p>
<p>6×6矩阵和3×3矩阵进行卷积运算得到4×4矩阵。这些图片和过滤器是不同维度的矩阵，但左边矩阵容易被理解为一张图片，中间的这个被理解为过滤器，右边的图片我们可以理解为另一张图片。这个就是垂直边缘检测器。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Convolutional-operation.jpg" alt></p>
<p>举例说明： Vertical edge detection</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_1_5.png" alt></p>
<p>这里在结果可能有点不对头，检测到的边缘太粗了，主要是图片太小了，</p>
<p>卷积操作API</p>
<ul>
<li>在 Python 中，卷积用<code>conv_forward()</code>表示；</li>
<li>在 Tensorflow 中，卷积用<code>tf.nn.conv2d()</code>表示；</li>
<li>在 keras 中，卷积用<code>Conv2D()</code>表示。</li>
</ul>
<h3><span id="l3-edge-detection-example">L3: Edge Detection Example</span><a href="#l3-edge-detection-example" class="header-anchor">#</a></h3><ol>
<li><p>颜色由暗到亮，还是亮到暗</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_1.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_2.png" alt></p>
</li>
</ol>
<p>这种滤波器可以区分明暗变化，取绝对值没有区别了</p>
<ol>
<li><p>水平边缘</p>
<p>上边相对较亮，而下方相对较暗</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_3.png" alt></p>
<ol>
<li>复杂栗子</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_4.png" alt></p>
</li>
</ol>
<p>这块区域左边两列是正边，右边一列是负边，正边和负边的值加在一起得到了一个中间值。但假如这个一个非常大的1000×1000的类似这样棋盘风格的大图，就不会出现这些亮度为10的过渡带了，因为图片尺寸很大，这些中间值就会变得非常小。</p>
<ol>
<li>filter</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_5.png" alt></p>
<p>sobel过滤器，优点在于增加了中间一行元素的权重，这使得结果的鲁棒性会更高一些。</p>
<p>charr过滤器，它有着和之前完全不同的特性，实际上也是一种垂直边缘检测，如果你将其翻转90度，你就能得到对应水平边缘检测。</p>
<p>学习的其中一件事就是当你真正想去检测出复杂图像的边缘，你不一定要去使用那些研究者们所选择的这九个数字，但你可以从中获益匪浅。把这矩阵中的9个数字当成9个参数，并且在之后你可以学习使用反向传播算法，其目标就是去理解这9个参数。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_6.png" alt></p>
<p>这样可能得到一个出色的边缘检测</p>
<p>相比这种单纯的垂直边缘和水平边缘，它可以检测出45°或70°或73°，甚至是任何角度的边缘。所以将矩阵的所有数字都设置为参数，通过数据反馈，让神经网络自动去学习它们，我们会发现神经网络可以学习一些低级的特征，例如这些边缘的特征。</p>
<p>不管是垂直的边缘，水平的边缘，还有其他奇怪角度的边缘，甚至是其它的连名字都没有的过滤器。</p>
<h3><span id="padding">Padding</span><a href="#padding" class="header-anchor">#</a></h3><p>按照我们上面讲的图片卷积，如果原始图片尺寸为$n x n$，filter尺寸为$f x f$，则卷积后的图片尺寸为$(n-f+1) x (n-f+1)$，注意f一般为奇数。这样会带来两个问题：</p>
<ul>
<li><p><strong>卷积运算后，输出图片尺寸缩小</strong></p>
</li>
<li><p><strong>原始图片边缘信息对输出贡献得少，输出图片丢失边缘信息</strong></p>
<p>边缘像素点只被一个输出所触碰或者使用，</p>
</li>
</ul>
<p>为了解决这些问题，可以在进行卷积操作前，对原始图片在边界上进行<strong>填充（Padding）</strong>，以增加矩阵的大小。通常将 0 作为填充值。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Padding.jpg" alt></p>
<p>经过padding之后，填充p,原始图片尺寸为$(n+2p) x (n+2p)$，filter尺寸为$f x f$，则卷积后的图片尺寸为$(n+2p-f+1) x (n+2p-f+1)$。若要保证卷积前后图片尺寸不变，则p应满足：$ p=(f-1)/2$,f通常是奇数，如果是偶数，造成不对称填充，第二个原因是当你有一个奇数维过滤器，比如3×3或者5×5的，它就有一个中心点。有时在计算机视觉里，如果有一个中心像素点会更方便，便于指出过滤器的位置</p>
<ol>
<li>p=0,Valid convolution</li>
<li>p=((f-1))/2,Same convolution</li>
</ol>
<h3><span id="l05-strided-convolution-juan-ji-bu-chang">L05: Strided convolution（卷积步长）</span><a href="#l05-strided-convolution-juan-ji-bu-chang" class="header-anchor">#</a></h3><p>Stride表示filter在原图片中水平方向和垂直方向每次的步进长度。之前我们默认stride=1。若stride=2，则表示filter每次步进长度为2，即隔一点移动一次。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Stride.jpg" alt></p>
<p>我们用s表示stride长度，p表示padding长度，如果原始图片尺寸为n x n，filter尺寸为f x f，则卷积后的图片尺寸为：</p>
<script type="math/tex; mode=display">
\left\lfloor\frac{n+2 p-f}{s}+1\right\rfloor X\left\lfloor\frac{n+2 p-f}{s}+1\right\rfloor</script><p>向下取整</p>
<p>目前为止我们学习的“卷积”实际上被称为<strong>互相关（cross-correlation）</strong>，而非数学意义上的卷积。真正的卷积操作在做元素乘积求和之前，要将滤波器沿水平和垂直轴翻转（相当于旋转 180 度）。因为这种翻转对一般为水平或垂直对称的滤波器影响不大，按照机器学习的惯例，我们通常不进行翻转操作，在简化代码的同时使神经网络能够正常工作。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_6.png" alt></p>
<p>互相关：过滤器沿水平和垂直轴翻转，元素相乘来计算，这些视频中定义卷积运算时，我们跳过了这个镜像操作。（不进行翻转操作）叫做卷积操作</p>
<h3><span id="l06-convolution-over-volumes-san-wei-juan-ji">L06: Convolution over volumes(三维卷积)</span><a href="#l06-convolution-over-volumes-san-wei-juan-ji" class="header-anchor">#</a></h3><ol>
<li><p>卷积运算</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Convolutions-on-RGB-image.png" alt></p>
</li>
</ol>
<p>过程是将每个单通道（R，G，B）与对应的filter进行卷积运算求和，然后再将3通道的和相加，得到输出图片的一个像素值。</p>
<p>不同通道的滤波算子可以不相同。例如R通道filter实现垂直边缘检测，G和B通道不进行边缘检测，全部置零，或者将R，G，B三通道filter全部设置为水平边缘检测。</p>
<p>为了进行多个卷积运算，实现更多边缘检测，可以增加更多的滤波器组。例如设置第一个滤波器组实现垂直边缘检测，第二个滤波器组实现水平边缘检测。这样，不同滤波器组卷积得到不同的输出，个数由滤波器组决定。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_8.png" alt></p>
<p>为了进行多个卷积运算，实现更多边缘检测，可以增加更多的滤波器组。例如设置第一个滤波器组实现垂直边缘检测，第二个滤波器组实现水平边缘检测。这样，不同滤波器组卷积得到不同的输出，个数由滤波器组决定。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_9.png" alt></p>
<p>若输入图片的尺寸为n x n x nc，nc: 通道数目，filter尺寸为f x f x nc，则卷积后的图片尺寸为(n-f+1) x (n-f+1) x nc′。其中，nc为图片通道数目，nc′为滤波器组个数。</p>
<h3><span id="l7-one-layer-of-a-convolution-network-dan-ceng-shen-jing-wang-luo">L7 : One layer of a convolution network (单层神经网络)</span><a href="#l7-one-layer-of-a-convolution-network-dan-ceng-shen-jing-wang-luo" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_10.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_11.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_12.png" alt></p>
<p>CNN单层的所以标记符号，设层数$l$,</p>
<script type="math/tex; mode=display">
\begin{array}{l}{f^{[l]}=\text { filter size }} \\ {p^{[l]}=\text { padding }} \\ {g^{[l]}=\text { stride }} \\ {n_{c}^{[l]}=\text { number of filters }}\end{array}</script><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_13.png" alt></p>
<script type="math/tex; mode=display">
\begin{array}{c}{n_{H}^{[l]}=\left\lfloor\frac{n_{H}^{[l-1]}+2 p^{[l]}-f^{[l]}}{s^{[l]}}+1\right\rfloor} \\ { n_{W}^{[l]}=\left\lfloor\frac{n_{W}^{[l-1]}+2 p^{[l]}-f^{[l]}}{s^{[l]}}+1\right\rfloor}\end{array}</script><p>如果$m$个样本，进行向量化运算，相应的输出维度，为</p>
<script type="math/tex; mode=display">
\mathrm{m} \times n_{H}^{[l]} \times n_{W}^{[l]} \times n_{c}^{[l]}</script><h3><span id="l8-a-simple-convolution-network-example-jian-dan-juan-ji-wang-luo-shi-li">L8 : A simple convolution network example（简单卷积网络示例）</span><a href="#l8-a-simple-convolution-network-example-jian-dan-juan-ji-wang-luo-shi-li" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Xnip2018-07-04_08-28-33.jpg" alt></p>
<ul>
<li>一般而言，<strong>图片的height $n^{[l]}_{H}$和width $n^{[l]}_W$随着层数的增加逐渐降低，但channel $n^{[l]}_C$逐渐增加</strong>。</li>
</ul>
<p>CNN有三种类型的layer：</p>
<ul>
<li>Convolution层（CONV）</li>
<li>Pooling层（POOL）</li>
<li>Fully connected层（FC）</li>
</ul>
<h3><span id="l9-pooling-layers-chi-hua-ceng">L9: Pooling layers(池化层)</span><a href="#l9-pooling-layers-chi-hua-ceng" class="header-anchor">#</a></h3><p>卷积神经网络除了卷积层，还有池化层来缩减模型的大小，提高运算速度和鲁棒性</p>
<ol>
<li>池的类型有max pooling(最大池化)</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_14.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_15.png" alt></p>
<p>这里步幅是s=2，filter = 2*2是最大池化的超参数,如果是三维，则单独在每个通道执行最大池化操作</p>
<p>关于max pooling的直觉解释： 元素较大的值，可能是卷积过程中提取到的某些特征（比如边界），而max pooling则在压缩了矩阵大小的情况下，保留每个分区内最大的输出，即保留了提取的特征。但理论上还没有证明max pooling的原理，max pooling应用的原因是在实践中效果很好。</p>
<ol>
<li><p>Pooling layer: Average pooling</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_16.png" alt></p>
<p>但是最大池化更好用</p>
</li>
</ol>
<p>summary : 输入$n_H<em>n_W</em>n_C$,如果没有padding,输出$(n_h-f)/s+1<em>(n_w-f)/s+1</em>n_c$</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_17.png" alt></p>
<h3><span id="l10-convolutional-neural-network-example-juan-ji-shen-jing-wang-luo-shi-li">L10: Convolutional neural network example (卷积神经网络实例)</span><a href="#l10-convolutional-neural-network-example-juan-ji-shen-jing-wang-luo-shi-li" class="header-anchor">#</a></h3><p>做一个识别数字的CNN网络</p>
<ol>
<li><p>LeNet-5架构如下：</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/CNN.jpg" alt></p>
<ul>
<li>通常Conv Layer和Pooling Layer合在一起算一个layer，因为pooling layer并没有参数训练</li>
</ul>
</li>
</ol>
<ul>
<li>常见的结构：Conv ==&gt; Pool ==&gt; Conv ==&gt; Pool ==&gt; FC ==&gt; FC ==&gt; softmax</li>
<li>最终还会用FC层（全连接层），与一般NN的处理一样；并在输出层，应用softmax得到10个数字的概率。</li>
<li>在整个网络中，Height和Width是逐渐递减的，但channel和filter是递增的。</li>
<li>关于CNN如何选择超参：可以参考论文的经验。</li>
<li><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_18.png" alt></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">Activation shape</th>
<th style="text-align:center">Activation Size</th>
<th>#parameters</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>Input:</strong></td>
<td style="text-align:center">(32, 32, 3)</td>
<td style="text-align:center">3072</td>
<td>0</td>
</tr>
<tr>
<td style="text-align:center"><strong>CONV1(f=5, s=1)</strong></td>
<td style="text-align:center">(28, 28, 6)</td>
<td style="text-align:center">4704</td>
<td>156 (=5<em>5</em>6+6)</td>
</tr>
<tr>
<td style="text-align:center"><strong>POOL1</strong></td>
<td style="text-align:center">(14, 14, 6)</td>
<td style="text-align:center">1176</td>
<td>0</td>
</tr>
<tr>
<td style="text-align:center"><strong>CONV2(f=5, s=1)</strong></td>
<td style="text-align:center">(10, 10, 16)</td>
<td style="text-align:center">1600</td>
<td>416 (=5<em>5</em>16+16)</td>
</tr>
<tr>
<td style="text-align:center"><strong>POOL2</strong></td>
<td style="text-align:center">(5, 5, 16)</td>
<td style="text-align:center">400</td>
<td>0</td>
</tr>
<tr>
<td style="text-align:center"><strong>FC3</strong></td>
<td style="text-align:center">(120, 1)</td>
<td style="text-align:center">120</td>
<td>48120 (=120*400+120)</td>
</tr>
<tr>
<td style="text-align:center"><strong>FC4</strong></td>
<td style="text-align:center">(84, 1)</td>
<td style="text-align:center">84</td>
<td>10164 (=84*120+84)</td>
</tr>
<tr>
<td style="text-align:center"><strong>Softmax</strong></td>
<td style="text-align:center">(10, 1)</td>
<td style="text-align:center">10</td>
<td>850 (=10*84+10)</td>
</tr>
</tbody>
</table>
</div>
<h3><span id="l11-why-convolution">L11 Why convolution</span><a href="#l11-why-convolution" class="header-anchor">#</a></h3><ul>
<li><p>参数共享（parameter sharing)</p>
<p> 如果用FC的话，参数爆炸啊！如果conv layer 就需要filter检测器，这个参数就少了，还参数共享</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_19.png" alt></p>
</li>
<li><p>稀疏连接(sparsity of connection)</p>
<p>输出中的每个单元仅和输入的一个小分区相关，比如输出的左上角的像素仅仅由输入左上角的9个像素决定（假设filter大小是3*3），而其他输入都不会影响。</p>
</li>
</ul>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_20.png" alt></p>
<h2><span id="summary">summary</span><a href="#summary" class="header-anchor">#</a></h2><font color="read">1. 卷积神经网络的基本构造和计算过程 2. 如何整合这些模型 3.  哪些超参数 4. 为什么使用卷积 </font>

<h2><span id="w2-deep-convolutional-models-case-studies-shen-du-juan-ji-wang-luo-shi-li-tan-jiu">W2 : Deep convolutional models: case studies(深度卷积网络：实例探究)</span><a href="#w2-deep-convolutional-models-case-studies-shen-du-juan-ji-wang-luo-shi-li-tan-jiu" class="header-anchor">#</a></h2><h3><span id="l1-why-look-at-case-studies-wei-shi-me-yao-jin-xing-shi-li-tan-jiu">L1 : Why look at case studies?(为什么要进行实例探究？)</span><a href="#l1-why-look-at-case-studies-wei-shi-me-yao-jin-xing-shi-li-tan-jiu" class="header-anchor">#</a></h3><p>本文将主要介绍几个典型的CNN案例。通过对具体CNN模型及案例的研究，来帮助我们理解知识并训练实际的模型。</p>
<p>典型的CNN模型包括：</p>
<ul>
<li><strong>LeNet-5</strong></li>
<li><strong>AlexNet</strong></li>
<li><strong>VGG</strong></li>
</ul>
<p>还会介绍Residual Network（ResNet）。其特点是可以构建很深很深的神经网络（目前最深的好像有152层）。还会介绍Inception Neural Network</p>
<h3><span id="l2-classic-networks-jing-dian-wang-luo">L2 : Classic networks(经典网络)</span><a href="#l2-classic-networks-jing-dian-wang-luo" class="header-anchor">#</a></h3><h4><span id="1-lenet-5">1. LeNet-5</span><a href="#1-lenet-5" class="header-anchor">#</a></h4><p><strong>LeNet-5</strong>是针对灰度图片训练的，使用6个5×5的过滤器，步幅为1。由于使用了6个过滤器，步幅为1，<strong>padding</strong>为0，输出结果为28×28×6，图像尺寸从32×32缩小到28×28。然后进行池化操作，在这篇论文写成的那个年代，人们更喜欢使用平均池化，而现在我们可能用最大池化更多一些。在这个例子中，我们进行平均池化，过滤器的宽度为2，步幅为2，图像的尺寸，高度和宽度都缩小了2倍，输出结果是一个14×14×6的图像。我觉得这张图片应该不是完全按照比例绘制的，如果严格按照比例绘制，新图像的尺寸应该刚好是原图像的一半。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Xnip2018-07-04_08-28-34.jpg" alt></p>
<p>该LeNet模型总共包含了大约6万个参数。值得一提的是，当时Yann LeCun提出的LeNet-5模型池化层使用的是average pool，而且各层激活函数一般是Sigmoid和tanh。现在，我们可以根据需要，做出改进，使用max pool和激活函数ReLU。</p>
<h4><span id="1-alexnet">1. AlexNet</span><a href="#1-alexnet" class="header-anchor">#</a></h4><p>AlexNet模型是由Alex Krizhevsky、Ilya Sutskever和Geoffrey Hinton共同提出的，其结构如下所示：</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Xnip2018-07-04_08-28-35.jpg" alt></p>
<p><strong>AlexNet</strong>首先用一张227×227×3的图片作为输入，实际上原文中使用的图像是224×224×3，但是如果你尝试去推导一下，你会发现227×227这个尺寸更好一些。第一层我们使用96个11×11的过滤器，步幅为4，由于步幅是4，因此尺寸缩小到55×55，缩小了4倍左右。然后用一个3×3的过滤器构建最大池化层,f=3，步幅为2，卷积层尺寸缩小为27×27×96。接着再执行一个5×5的卷积，<strong>padding</strong>之后，输出是27×27×276。然后再次进行最大池化，尺寸缩小到13×13。再执行一次<strong>same</strong>卷积，相同的<strong>padding</strong>，得到的结果是13×13×384，384个过滤器。再做一次<strong>same</strong>卷积，就像这样。再做一次同样的操作，最后再进行一次最大池化，尺寸缩小到6×6×256。6×6×256等于9216，将其展开为9216个单元，然后是一些全连接层。最后使用<strong>softmax</strong>函数输出识别的结果，看它究竟是1000个可能的对象中的哪一个。</p>
<p>实际上，这种神经网络与<strong>LeNet</strong>有很多相似之处，不过<strong>AlexNet</strong>要大得多。正如前面讲到的<strong>LeNet</strong>或<strong>LeNet-5</strong>大约有6万个参数，而<strong>AlexNet</strong>包含约6000万个参数。当用于训练图像和数据集时，<strong>AlexNet</strong>能够处理非常相似的基本构造模块，这些模块往往包含着大量的隐藏单元或数据，这一点<strong>AlexNet</strong>表现出色。<strong>AlexNet</strong>比<strong>LeNet</strong>表现更为出色的另一个原因是它使用了<strong>ReLu</strong>激活函数。原作者还提到了一种优化技巧，叫做Local Response Normalization(LRN)。 而在实际应用中，LRN的效果并不突出。</p>
<h4><span id="3-vgg-16">3. VGG-16</span><a href="#3-vgg-16" class="header-anchor">#</a></h4><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Xnip2018-07-04_08-28-36.jpg" alt></p>
<p>首先用3×3，步幅为1的过滤器构建卷积层，<strong>padding</strong>参数为<strong>same</strong>卷积中的参数。然后用一个2×2，步幅为2的过滤器构建最大池化层。因此<strong>VGG</strong>网络的一大优点是它确实简化了神经网络结构，下面我们具体讲讲这种网络结构。</p>
<p>数字16，就是指在这个网络中包含16个卷积层和全连接层。总共包含约1.38亿个参数</p>
<h3><span id="l3-residual-networks-resnets-can-chai-wang-luo-resnets">L3 : Residual Networks (ResNets)(残差网络(ResNets))</span><a href="#l3-residual-networks-resnets-can-chai-wang-luo-resnets" class="header-anchor">#</a></h3><p>我们知道，如果神经网络层数越多，网络越深，源于梯度消失和梯度爆炸的影响，整个模型难以训练成功。解决的方法之一是人为地让神经网络某些层跳过下一层神经元的连接，隔层相连，弱化每层之间的强联系。这种神经网络被称为Residual Networks(ResNets)。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_21.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Residual-Network.jpg" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/ResNet-Training-Error.jpg" alt></p>
<h3><span id="l4-why-resnets-work-can-chai-wang-luo-wei-shi-me-you-yong">L4: Why ResNets work?(残差网络为什么有用？)</span><a href="#l4-why-resnets-work-can-chai-wang-luo-wei-shi-me-you-yong" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_22.png" alt></p>
<p>因此，这两层额外的残差块不会降低网络性能。而如果没有发生梯度消失时，训练得到的非线性关系会使得表现效果进一步提高。</p>
<p>注意，如果$ a[l]$与 $a[l+2]$的维度不同，需要引入矩阵 $W_s$与 $a_{[l]}$相乘，使得二者的维度相匹配。参数矩阵 $W_s$既可以通过模型训练得到，也可以作为固定值，仅使 $a[l]$截断或者补零。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Xnip2018-07-04_08-28-37.jpg" alt></p>
<h3><span id="l5-network-in-network-and-1x1-convolutions-wang-luo-zhong-de-wang-luo-yi-ji-1x1-juan-ji">L5 : Network in Network and 1×1 convolutions(网络中的网络以及 1×1 卷积)</span><a href="#l5-network-in-network-and-1x1-convolutions-wang-luo-zhong-de-wang-luo-yi-ji-1x1-juan-ji" class="header-anchor">#</a></h3><ol>
<li>作用 </li>
</ol>
<p>假设这是一个28×28×192的输入层，你可以使用池化层压缩它的高度和宽度，这个过程我们很清楚。但如果通道数量很大，该如何把它压缩为28×28×32维度的层呢？你可以用32个大小为1×1的过滤器，严格来讲每个过滤器大小都是1×1×192维，因为过滤器中通道数量必须与输入层中通道的数量保持一致。但是你使用了32个过滤器，输出层为28×28×32，这就是压缩通道数（$n_c$）的方法，对于池化层我只是压缩了这些层的高度和宽度</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_23.png" alt></p>
<ol>
<li><strong>doing something pretty non-trivial</strong></li>
</ol>
<p>它给神经网络添加了一个非线性函数，从而减少或保持输入层中的通道数量不变，当然如果你愿意，也可以增加通道数量。</p>
<h3><span id="l6-inception-network-motivation-gu-ge-inception-wang-luo-jian-jie">L6 : Inception network motivation(谷歌 Inception 网络简介)</span><a href="#l6-inception-network-motivation-gu-ge-inception-wang-luo-jian-jie" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/99f8fc7dbe7cd0726f5271aae11b9872.png" alt></p>
<p>有了这样的<strong>Inception</strong>模块，你就可以输入某个量，因为它累加了所有数字，这里的最终输出为32+32+128+64=256。有了这样的<strong>Inception</strong>模块，你就可以输入某个量，因为它累加了所有数字，这里的最终输出为32+32+128+64=256。Inception 网络选用不同尺寸的滤波器进行 Same 卷积，并将卷积和池化得到的输出组合拼接起来，最终让网络自己去学习需要的参数和采用的滤波器组合。</p>
<p> 1x1 的卷积层通常被称作<strong>瓶颈层（Bottleneck layer）</strong></p>
<p>计算量为 28x28x32x5x5x192 = 1.2亿</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/The-problem-of-computational-cost.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Using-1x1-convolution.png" alt></p>
<p>28x28x192x16 + 28x28x32x5x5x15 = 1.24 千万，减少了约 90%。</p>
<h3><span id="l7-inception-network-inception-wang-luo">L7 : Inception network(Inception 网络)</span><a href="#l7-inception-network-inception-wang-luo" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_24.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/example_2_25.png" alt></p>
<h3><span id="l8-using-open-source-implementations-shi-yong-kai-yuan-de-shi-xian-fang-an">L8 : Using open-source implementations( 使用开源的实现方案)</span><a href="#l8-using-open-source-implementations-shi-yong-kai-yuan-de-shi-xian-fang-an" class="header-anchor">#</a></h3><p>开源项目</p>
<h3><span id="l9-transfer-learning-qian-yi-xue-xi">L9 ： Transfer Learning（迁移学习）</span><a href="#l9-transfer-learning-qian-yi-xue-xi" class="header-anchor">#</a></h3><p>如果你下载别人已经训练好网络结构的权重，你通常能够进展的相当快，用这个作为预训练，然后转换到你感兴趣的任务上。</p>
<ol>
<li>只有很小数据集： 可以你只需要训练<strong>softmax</strong>层的权重，把前面这些层的权重都冻结。</li>
<li>稍微更大的数据集： 你应该冻结更少的层，比如只把这些层冻结，然后训练后面的层。如果你的输出层的类别不同，那么你需要构建自己的输出单元；或者你可以直接去掉这几层，换成你自己的隐藏单元和你自己的<strong>softmax</strong>输出层，这些方法值得一试。</li>
<li>大量数据： 你可以用下载的权重只作为初始化，用它们来代替随机初始化，接着你可以用梯度下降训练，更新网络所有层的所有权重。</li>
</ol>
<h3><span id="l10-data-augmentation-shu-ju-zeng-qiang">L10 ： Data augmentation（数据增强）</span><a href="#l10-data-augmentation-shu-ju-zeng-qiang" class="header-anchor">#</a></h3><p>数据量远远不够</p>
<ol>
<li>Mirroring</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Mirroring.png" alt></p>
<ol>
<li>Random Cropping</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Mirroring_1.png" alt></p>
<ol>
<li><p>彩色转换color shifting</p>
<p>r,g,b数据改变</p>
</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Mirroring_2.png" alt></p>
<p>除了随意改变RGB通道数值外，还可以更有针对性地对图片的RGB通道进行PCA color augmentation，也就是对图片颜色进行主成分分析，对主要的通道颜色进行增加或减少，可以采用高斯扰动做法。这样也能增加有效的样本数量。具体的PCA color augmentation做法可以查阅AlexNet的相关论文。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Mirroring_3.png" alt></p>
<p>常用的实现数据扩充的方法是使用一个线程或者是多线程，这些可以用来加载数据，实现变形失真，然后传给其他的线程或者其他进程，来训练这个（编号2）和这个（编号1），可以并行实现。</p>
<h3><span id="l11-the-state-of-computer-vision-ji-suan-ji-shi-jue-xian-zhuang">L11：The state of computer vision(计算机视觉现状)</span><a href="#l11-the-state-of-computer-vision-ji-suan-ji-shi-jue-xian-zhuang" class="header-anchor">#</a></h3><ol>
<li>神经网络需要数据，不同的网络模型所需的数据量是不同的。Object dection，Image recognition，Speech recognition所需的数据量依次增加。一般来说，如果data较少，那么就需要更多的hand-engineering，对已有data进行处理。</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Mirroring_4.png" alt></p>
<p>hand-engineering是一项非常重要也比较困难的工作。很多时候，hand-engineering对模型训练效果影响很大，特别是在数据量不多的情况下。</p>
<p>当你有少量的数据时，有一件事对你很有帮助，那就是迁移学习。在别人做好的基础上研究</p>
<ol>
<li><p>提升性能</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Mirroring_5.png" alt>*</p>
</li>
</ol>
<p>由于计算机视觉问题建立在小数据集之上，其他人已经完成了大量的网络架构的手工工程。一个神经网络在某个计算机视觉问题上很有效，但令人惊讶的是它通常也会解决其他计算机视觉问题。</p>
<p>所以，要想建立一个实用的系统，你最好先从其他人的神经网络架构入手。如果可能的话，你可以使用开源的一些应用，因为开放的源码实现可能已经找到了所有繁琐的细节，比如学习率衰减方式或者超参数。</p>
<h2><span id="summary">summary</span><a href="#summary" class="header-anchor">#</a></h2><font color="red">1. CNN的常见网络结构 重点说了一些残差网络 2.数据增加的方法 3. 多用开源框架，不用从头开始训练 </font>

<h1><span id="w3-object-detection-mu-biao-jian-ce">W3 Object detection(目标检测)</span><a href="#w3-object-detection-mu-biao-jian-ce" class="header-anchor">#</a></h1><h3><span id="l1-object-localization-mu-biao-ding-wei">L1 :Object localization(目标定位)</span><a href="#l1-object-localization-mu-biao-ding-wei" class="header-anchor">#</a></h3><p>目标定位和目标检测</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_1.png" alt></p>
<p>模型</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_2.png" alt></p>
<p>输入还包括位置信息</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_3.png" alt></p>
<p>损失函数</p>
<p>情况一：检测到了</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_4.png" alt></p>
<p>情况二：</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_5.png" alt></p>
<h3><span id="l2-landmark-detection-te-zheng-dian-jian-ce">L2: Landmark detection(特征点检测)</span><a href="#l2-landmark-detection-te-zheng-dian-jian-ce" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_6.png" alt></p>
<p>该网络模型共检测人脸上64处特征点，加上是否为face的标志位，输出label共有64x2+1=129个值。通过检测人脸特征点可以进行情绪分类与判断，或者应用于AR领域等等。</p>
<p>除了人脸特征点检测之外，还可以检测人体姿势动作，如下图所示：</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_7.png" alt></p>
<h3><span id="l3-object-detection-mu-biao-jian-ce">L3 :Object detection(目标检测)</span><a href="#l3-object-detection-mu-biao-jian-ce" class="header-anchor">#</a></h3><p>学过了对象定位和特征点检测，今天我们来构建一个对象检测算法。这节课，我们将学习如何通过卷积网络进行对象检测，采用的是基于滑动窗口的目标检测算法。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_8.png" alt></p>
<p>训练完这个卷积网络，就可以用它来实现滑动窗口目标检测，具体步骤如下。</p>
<p>选定特定大小的窗口，窗口圈定输入卷积神经网络，卷积神经网络开始预测。</p>
<p>重复上述操作，不过这次我们选择一个更大的窗口，截取更大的区域，并输入给卷积神经网络处理，你可以根据卷积网络对输入大小调整这个区域，然后输入给卷积网络，输出0或<img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_10.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_11.png" alt></p>
<p>如果你这样做，不论汽车在图片的什么位置，总有一个窗口可以检测到它。</p>
<p>这种算法叫作滑动窗口目标检测，因为我们以某个步幅滑动这些方框窗口遍历整张图片，对这些方形区域进行分类，判断里面有没有汽车。</p>
<p>滑动窗算法的优点是原理简单，且不需要人为选定目标区域（检测出目标的滑动窗即为目标区域）。但是其缺点也很明显，首先滑动窗的大小和步进长度都需要人为直观设定。滑动窗过小或过大，步进长度过大均会降低目标检测正确率。而且，每次滑动窗区域都要进行一次CNN网络计算，如果滑动窗和步进长度较小，整个目标检测的算法运行时间会很长。所以，滑动窗算法虽然简单，但是性能不佳，不够快，不够灵活。</p>
<h3><span id="l-4-convolutional-implementation-of-sliding-windows-hua-dong-chuang-kou-de-juan-ji-shi-xian">L 4 : Convolutional implementation of sliding windows(滑动窗口的卷积实现)</span><a href="#l-4-convolutional-implementation-of-sliding-windows-hua-dong-chuang-kou-de-juan-ji-shi-xian" class="header-anchor">#</a></h3><ol>
<li><p>全连接层转化为卷积层</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_12.png" alt></p>
</li>
</ol>
<p>单个窗口区域卷积网络结构建立完毕之后，对于待检测图片，即可使用该网络参数和结构进行运算。例如16 x 16 x 3的图片，步进长度为2，CNN网络得到的输出层为2 x 2 x 4。其中，2 x 2表示共有4个窗口结果。对于更复杂的28 x 28 x3的图片，CNN网络得到的输出层为8 x 8 x 4，共64个窗口结果。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_13.png" alt></p>
<p>之前的滑动窗算法需要反复进行CNN正向计算，例如16 x 16 x 3的图片需进行4次，28 x 28 x3的图片需进行64次。而利用卷积操作代替滑动窗算法，则不管原始图片有多大，只需要进行一次CNN正向计算，因为其中共享了很多重复计算部分，这大大节约了运算成本。值得一提的是，窗口步进长度与选择的MAX POOL大小有关。如果需要步进长度为4，只需设置MAX POOL为4 x 4即可。</p>
<h3><span id="l5-bounding-box-predictions-bounding-box-yu-ce">L5 ： Bounding box predictions（Bounding Box预测）</span><a href="#l5-bounding-box-predictions-bounding-box-yu-ce" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_14.png" alt></p>
<ol>
<li><p>YOLO（You Only Look Once）算法可以解决这类问题，生成更加准确的目标区域（如上图红色窗口）。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_16.png" alt></p>
</li>
<li><p>如果目标中心坐标(bx,by)不在当前网格内，则当前网格Pc=0；相反，则当前网格Pc=1（即只看中心坐标是否在当前网格内）。判断有目标的网格中，bx,by,bh,bw限定了目标区域。值得注意的是，当前网格左上角坐标设定为(0, 0)，右下角坐标设定为(1, 1)，(bx,by)范围限定在[0,1]之间，但是bh,bw可以大于1。因为目标可能超出该网格，横跨多个区域，如上图所示。目标占几个网格没有关系，目标中心坐标必然在一个网格之内。</p>
</li>
</ol>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_15.png" alt></p>
<h3><span id="l6-intersection-over-union-jiao-bing-bi">L6 ：Intersection over union（交并比)</span><a href="#l6-intersection-over-union-jiao-bing-bi" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_17.png" alt></p>
<p>一般约定，在计算机检测任务中，如果lou&gt;=0.5，就说检测正确，如果预测器和实际边界框完美重叠，<strong>loU</strong>就是1，因为交集就等于并集。但一般来说只要lou&gt;=0.5，那么结果是可以接受的，看起来还可以。一般约定，0.5是阈值，用来判断预测的边界框是否正确。一般是这么约定，但如果你希望更严格一点，你可以将<strong>loU</strong>定得更高，比如说大于0.6或者更大的数字，但<strong>loU</strong>越高，边界框越精确。</p>
<h3><span id="l7-non-max-suppression-fei-ji-da-zhi-yi-zhi">L7: Non-max suppression(非极大值抑制)</span><a href="#l7-non-max-suppression-fei-ji-da-zhi-yi-zhi" class="header-anchor">#</a></h3><p>到目前为止你们学到的对象检测中的一个问题是，你的算法可能对同一个对象做出多次检测，所以算法不是对某个对象检测出一次，而是检测出多次。非极大值抑制这个方法可以确保你的算法对每个对象只检测一次，我们讲一个例子。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_18.png" alt></p>
<p>假设你需要在这张图片里检测行人和汽车，你可能会在上面放个19×19网格，理论上这辆车只有一个中点，所以它应该只被分配到一个格子里，左边的车子也只有一个中点，所以理论上应该只有一个格子做出有车的预测。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_19.png" alt></p>
<p>实际情况是格子1，2，3，4，5，6都认为里面有车。因为你要在361个格子上都运行一次图像检测和定位算法，那么可能很多格子都会举手说我的pc,我这个格子里有车的概率很高，而不是361个格子中仅有两个格子会报告它们检测出一个对象。</p>
<p>非最大值抑制（Non-max Suppression）做法很简单，图示每个网格的Pc值可以求出，Pc值反映了该网格包含目标中心坐标的可信度。首先选取Pc最大值对应的网格和区域，然后计算该区域与所有其它区域的IoU，剔除掉IoU大于阈值（例如0.5）的所有网格及区域。这样就能保证同一目标只有一个网格与之对应，且该网格Pc最大，最可信。接着，再从剩下的网格中选取Pc最大的网格，重复上一步的操作。最后，就能使得每个目标都仅由一个网格和区域对应。如下图所示：</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_20.png" alt></p>
<p>总结一下非最大值抑制算法的流程：</p>
<ol>
<li><strong>剔除Pc值小于某阈值（例如0.6）的所有网格；</strong></li>
<li><strong>选取Pc值最大的网格，利用IoU，摒弃与该网格交叠较大的网格；</strong></li>
<li><strong>对剩下的网格，重复步骤2。</strong></li>
</ol>
<p>到目前为止，对象检测中存在的一个问题是每个格子只能检测出一个对象，如果你想让一个格子检测出多个对象，你可以这么做，就是使用<strong>anchor box</strong>这个概念，我们从一个例子开始讲吧。方法是使用不同形状的Anchor Boxes。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_21.png" alt></p>
<p>这就是<strong>anchor box</strong>的概念，我们建立<strong>anchor box</strong>这个概念，是为了处理两个对象出现在同一个格子的情况，实践中这种情况很少发生</p>
<h3><span id="l9-yolo-suan-fa-putting-it-together-yolo-algorithm">L9 :  YOLO 算法（Putting it together: YOLO algorithm）</span><a href="#l9-yolo-suan-fa-putting-it-together-yolo-algorithm" class="header-anchor">#</a></h3><p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_22.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_23.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_24.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_25.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_26.png" alt></p>
<p>这就是<strong>YOLO</strong>对象检测算法，这实际上是最有效的对象检测算法之一，包含了整个计算机视觉对象检测领域文献中很多最精妙的思路</p>
<h3><span id="region-proposals-optional-hou-xuan-qu-yu-xuan-xiu">Region proposals (Optional)（候选区域（选修））</span><a href="#region-proposals-optional-hou-xuan-qu-yu-xuan-xiu" class="header-anchor">#</a></h3><p>之前介绍的滑动窗算法会对原始图片的每个区域都进行扫描，即使是一些空白的或明显没有目标的区域，例如下图所示。这样会降低算法运行效率，耗费时间。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_27.png" alt></p>
<p>为了解决这一问题，尽量避免对无用区域的扫描，可以使用Region Proposals的方法。具体做法是先对原始图片进行分割算法处理，然后支队分割后的图片中的块进行目标检测。</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_28.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/Detering_29.png" alt></p>
<p>Region Proposals共有三种方法：</p>
<ul>
<li><strong>R-CNN: 滑动窗的形式，一次只对单个区域块进行目标检测，运算速度慢。</strong></li>
<li><strong>Fast R-CNN: 利用卷积实现滑动窗算法，类似第4节做法。</strong></li>
<li><strong>Faster R-CNN: 利用卷积对图片进行分割，进一步提高运行速度。</strong></li>
</ul>
<h2><span id="w4-special-applications-face-recognition-amp-neural-style-transfer-te-shu-ying-yong-ren-lian-shi-bie-he-shen-jing-feng-ge-zhuan-huan">W4：Special applications: Face recognition &amp;Neural style transfer( 特殊应用：人脸识别和神经风格转换)</span><a href="#w4-special-applications-face-recognition-amp-neural-style-transfer-te-shu-ying-yong-ren-lian-shi-bie-he-shen-jing-feng-ge-zhuan-huan" class="header-anchor">#</a></h2><h3><span id="c1-what-is-face-recognition">C1 ： What is face recognition?</span><a href="#c1-what-is-face-recognition" class="header-anchor">#</a></h3><p>首先简单介绍一下人脸验证（face verification）和人脸识别（face recognition）的区别。</p>
<ul>
<li><strong>人脸验证：输入一张人脸图片，验证输出与模板是否为同一人，即一对一问题。</strong></li>
<li><strong>人脸识别：输入一张人脸图片，验证输出是否为K个模板中的某一个，即一对多问题。</strong></li>
</ul>
<h3><span id="l2-one-shot-learning">L2 ： One-shot learning</span><a href="#l2-one-shot-learning" class="header-anchor">#</a></h3><p>One-shot learning就是说数据库中每个人的训练样本只包含一张照片，然后训练一个CNN模型来进行人脸识别。若数据库有K个人，则CNN模型输出softmax层就是K维的。</p>
<p>但是One-shot learning的性能并不好，其包含了两个缺点：</p>
<ul>
<li><strong>每个人只有一张图片，训练样本少，构建的CNN网络不够健壮。</strong></li>
<li><strong>若数据库增加另一个人，输出层softmax的维度就要发生变化，相当于要重新构建CNN网络，使模型计算量大大增加，不够灵活。</strong></li>
</ul>
<p>为了解决One-shot learning的问题，我们先来介绍相似函数（similarity function）。相似函数表示两张图片的相似程度，用d(img1,img2)来表示。若d(img1,img2)较小，则表示两张图片相似；若d(img1,img2)较大，则表示两张图片不是同一个人。相似函数可以在人脸验证中使用：</p>
<ul>
<li><strong>d(img1,img2)≤τ : 一样</strong></li>
<li><strong>d(img1,img2)&gt;τ : 不一样</strong></li>
</ul>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/congtion_1.png" alt></p>
<p>现在你已经知道函数d是如何工作的，通过输入两张照片，它将让你能够解决一次学习问题。那么，下节视频中，我们将会学习如何训练你的神经网络学会这个函数。</p>
<h3><span id="l3-siamese-network">L3: Siamese network</span><a href="#l3-siamese-network" class="header-anchor">#</a></h3><p>最后一层去掉softmax单元做分类</p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/congtion_2.png" alt></p>
<p><img src="/2019/05/12/Deel%20Learning%20ai_Convolutional%20Neural%20Networks/congtion_3.png" alt></p>
<p>如果你要比较两个图片的话，例如这里的第一张（编号1）和第二张图片（编号2），你要做的就是把第二张图片喂给有同样参数的同样的神经网络，然后得到一个不同的128维的向量（编号3），这个向量代表或者编码第二个图片，我要把第二张图片的编码叫做$f(x^{(2)})$。这里我用$x^{(1)}$和$x^{(2)}$仅仅代表两个输入图片,</p>
<script type="math/tex; mode=display">
d(x^{(1)},x^{(2)})=||f(x^{(1)}-f(x^{(2)}||^2</script><p>不同的图片的CNN网络结构和参数都是一样的，目标就是利用梯度下降算法，调整网络参数</p>
]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>The Deep Learning Specialization</title>
    <url>/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/</url>
    <content><![CDATA[<h1><span id="c3-improving-model-performance">C3 Improving Model Performance</span><a href="#c3-improving-model-performance" class="header-anchor">#</a></h1><h2><span id="w1-ml-strategy-1">W1 ML Strategy(1)</span><a href="#w1-ml-strategy-1" class="header-anchor">#</a></h2><h3><span id="l01-improving-model-performance">L01 Improving Model Performance</span><a href="#l01-improving-model-performance" class="header-anchor">#</a></h3><p>需要提高训练结果的表现，表现得更好的措施 Machine Learning Strategy</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-24_21-03-13.jpg" alt></p>
<h3><span id="l2-orthogonalization-zheng-jiao-hua">L2 : Orthogonalization(正交化)</span><a href="#l2-orthogonalization-zheng-jiao-hua" class="header-anchor">#</a></h3><p>所谓正交，<strong>就是你的操控效果尽量只影响一个方面</strong>。比如以老式电视机为例，调节图像的大小、左右偏移、上下偏移。而不是一个按钮可以同时调节图像大小和左右偏移，那样会很难操作。</p>
<p>具体到supervised learning，有以下4个假设是正交的？</p>
<ol>
<li>Fit <strong>training set</strong> well in cost function If it doesn’t fit well, the use of a bigger neural network or switching to a better optimization algorithm might help.</li>
<li>Fit <strong>development set</strong> well on cost function If it doesn’t fit well, regularization or using bigger training set might help.</li>
<li>Fit <strong>test set</strong> well on cost function If it doesn’t fit well, the use of a bigger development set might help</li>
<li>Performs well in <strong>real world</strong> If it doesn’t perform well, the development test set is not set correctly or the cost function is not evaluating the right thing.</li>
</ol>
<p>在训练集上表现欠佳，需要切换到好的优化算法</p>
<p>在验证集上表现不好，一组正则化按钮</p>
<p>在测试集表现不好，需要更好的验证集</p>
<p>在用户体验不好，需要改变测试集大小或者成本函数</p>
<h3><span id="l3-single-number-evaluation-metric-dan-yi-shu-zi-ping-gu-zhi-biao">L3 Single number evaluation metric(单一数字评估指标)</span><a href="#l3-single-number-evaluation-metric-dan-yi-shu-zi-ping-gu-zhi-biao" class="header-anchor">#</a></h3><h4><span id="classification">classification</span><a href="#classification" class="header-anchor">#</a></h4><p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-25_20-42-10.jpg" alt></p>
<h4><span id="precesion-cha-zhun-lu">Precesion （查准率）</span><a href="#precesion-cha-zhun-lu" class="header-anchor">#</a></h4><p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-25_20-47-46.jpg" alt></p>
<h4><span id="recall-cha-quan-lu">recall（查全率）</span><a href="#recall-cha-quan-lu" class="header-anchor">#</a></h4><p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-25_20-48-11.jpg" alt></p>
<script type="math/tex; mode=display">
F 1=\frac{2}{\frac{1}{P}+\frac{1}{R}}=\frac{2 P R}{P+R}</script><h3><span id="l4-satisficing-and-optimizing-metrics-man-zu-he-you-hua-zhi-biao">L4  Satisficing and optimizing metrics(满足和优化指标)</span><a href="#l4-satisficing-and-optimizing-metrics-man-zu-he-you-hua-zhi-biao" class="header-anchor">#</a></h3><p>如果我们还想要将分类器的运行时间也纳入考虑范围，将其和精确率、召回率组合成一个单值评价指标显然不那么合适。这时，我们可以将某些指标作为<strong>优化指标（Optimizing Matric）</strong>，寻求它们的最优值；而将某些指标作为<strong>满足指标（Satisficing Matric）</strong>，只要在一定阈值以内即可。</p>
<p>在这个例子中，准确率就是一个优化指标，因为我们想要分类器尽可能做到正确分类；而运行时间就是一个满足指标，如果你想要分类器的运行时间不多于某个阈值，那最终选择的分类器就应该是以这个阈值为界里面准确率最高的那个。</p>
<p>如此，accuracy就变成了<strong>optimizing metric</strong>，而running time则是<strong>satisfying metric</strong>，statisfying metric只要达到标准即可，而optimizing metric则追求更好。一般的，选择一项metric作为optimizing metric，其他的则设置为satisfying metric： </p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-09-36.jpg" alt></p>
<h3><span id="l-5-train-dev-test-distributions-xun-lian-kai-fa-ce-shi-ji-hua-fen">L 5: Train/dev/test distributions(训练/开发/测试集划分)</span><a href="#l-5-train-dev-test-distributions-xun-lian-kai-fa-ce-shi-ji-hua-fen" class="header-anchor">#</a></h3><p>开发（<strong>dev</strong>）集也叫做开发集（<strong>development set</strong>），有时称为保留交叉验证集（<strong>hold out cross validation set</strong>）。</p>
<p>如何设置Train/dev/test集，很大程度上影响了机器学习的速度。</p>
<p>Train/dev/test的区别 Workflow in machine learning is that you try a lot of ideas, train up different models on the training set, and then use the dev set to evaluate the different ideas and pick one. And, keep innovating to improve dev set performance until, finally, you have one class that you’re happy with that you then evaluate on your test set.</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-09-37.jpg" alt></p>
<p>开发集合和开发集合来自同一分布，如果是不同分布，相当于靶心移动了</p>
<h3><span id="l-6-size-of-dev-and-test-sets-kai-fa-ji-he-ce-shi-ji-de-da-xiao">L 6: Size of dev and test sets(开发集和测试集的大小)</span><a href="#l-6-size-of-dev-and-test-sets-kai-fa-ji-he-ce-shi-ji-de-da-xiao" class="header-anchor">#</a></h3><p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-29-51.jpg" alt></p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-25.jpg" alt></p>
<h3><span id="l7-when-to-change-dev-test-sets-and-metrics-shi-me-shi-hou-gai-gai-bian-kai-fa-ce-shi-ji-he-zhi-biao">L7 : When to change dev/test sets and metrics(什么时候该改变开发/测试集和指标)</span><a href="#l7-when-to-change-dev-test-sets-and-metrics-shi-me-shi-hou-gai-gai-bian-kai-fa-ce-shi-ji-he-zhi-biao" class="header-anchor">#</a></h3><p>如果发现设定目标和实际期望不符，那就调整目标。</p>
<ol>
<li><p>举个例子</p>
<p>A可能把一些色情照片也分类成猫了，因此改变优化指标</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-26.jpg" alt></p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-27.jpg" alt></p>
</li>
</ol>
<p>我想你处理机器学习问题时，应该把它切分成独立的步骤。一步是弄清楚如何定义一个指标来衡量你想做的事情的表现，然后我们可以分开考虑如何改善系统在这个指标上的表现。你们要把机器学习任务看成两个独立的步骤，用目标这个比喻，第一步就是设定目标。所以要定义你要瞄准的目标，这是完全独立的一步，这是你可以调节的一个旋钮。如何设立目标是一个完全独立的问题，把它看成是一个单独的旋钮，可以调试算法表现的旋钮，如何精确瞄准，如何命中目标，定义指标是第一步。</p>
<p>后第二步要做别的事情，在逼近目标的时候，也许你的学习算法针对某个长这样的成本函数优化，$J=\frac{1}{m} \sum_{i=1}^{m} L\left(\hat{y}^{(i)}, y^{(i)}\right)$你要最小化训练集上的损失。你可以做的其中一件事是，修改这个，为了引入这些权重，也许最后需要修改这个归一化常数，$J=\frac{1}{\sum w^{(i)}} \sum_{i=1}^{m} w^{(i)} L\left(\hat{y}^{(i)}, y^{(i)}\right)$</p>
<p>再次，如何定义J并不重要，关键在于正交化的思路，把设立目标定为第一步，然后瞄准和射击目标是独立的第二步。换种说法，我鼓励你们将定义指标看成一步，然后在定义了指标之后，你才能想如何优化系统来提高这个指标评分。比如改变你神经网络要优化的成本函数J。</p>
<h3><span id="l8-why-human-level-performance-wei-shi-me-shi-ren-de-biao-xian">L8 : Why human-level performance?(为什么是人的表现？)</span><a href="#l8-why-human-level-performance-wei-shi-me-shi-ren-de-biao-xian" class="header-anchor">#</a></h3><p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Bayes-Optimal-Error.png" alt></p>
<p>上图展示了随着时间的推进，机器学习系统和人的表现水平的变化。一般的，当机器学习超过人的表现水平后，它的进步速度逐渐变得缓慢，最终性能无法超过某个理论上限，这个上限被称为<strong>贝叶斯最优误差（Bayes Optimal Error）</strong>。</p>
<p>也因此，只要建立的机器学习模型的表现还没达到人类的表现水平时，就可以通过各种手段来提升它。例如采用人工标记过的数据进行训练，通过人工误差分析了解为什么人能够正确识别，或者是进行偏差、方差分析。</p>
<p>当模型的表现超过人类后，这些手段起的作用就微乎其微了。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/e1ef954731399bb4fbf18f2fb99b863a.png" alt></p>
<h3><span id="l9-avoidable-bias-ke-bi-mian-pian-chai">L9 : Avoidable bias(可避免偏差)</span><a href="#l9-avoidable-bias-ke-bi-mian-pian-chai" class="header-anchor">#</a></h3><ol>
<li><p>training error</p>
<p>我们经常使用猫分类器来做例子，比如人类具有近乎完美的准确度，所以人类水平的错误是1%。在这种情况下，如果您的学习算法达到8%的训练错误率和10%的开发错误率，那么你也许想在训练集上得到更好的结果。所以事实上，你的算法在训练集上的表现和人类水平的表现有很大差距的话，说明你的算法对训练集的拟合并不好。所以从减少偏差和方差的工具这个角度看，在这种情况下，我会把重点放在减少偏差上。你需要做的是，比如说训练更大的神经网络，或者跑久一点梯度下降，就试试能不能在训练集上做得更好。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-28.jpg" alt></p>
</li>
</ol>
<ol>
<li><p>dev error</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-29.jpg" alt></p>
</li>
</ol>
<p><strong>贝叶斯错误率或者对贝叶斯错误率的估计和训练错误率之间的差值称为可避免偏差</strong></p>
<h3><span id="l-10-understanding-human-level-performance-li-jie-ren-de-biao-xian">L 10: Understanding human-level performance(理解人的表现)</span><a href="#l-10-understanding-human-level-performance-li-jie-ren-de-biao-xian" class="header-anchor">#</a></h3><p>还记得上个视频中，我们用过这个词“人类水平错误率”用来估计贝叶斯误差，那就是理论最低的错误率，任何函数不管是现在还是将来，能够到达的最低值</p>
<h3><span id="l11-surpassing-human-level-performance-chao-guo-ren-de-biao-xian">L11 : Surpassing human- level performance(超过人的表现)</span><a href="#l11-surpassing-human-level-performance-chao-guo-ren-de-biao-xian" class="header-anchor">#</a></h3><p>现在，机器学习有很多问题已经可以大大超越人类水平了。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/de2eb0ddc7918f6e9213871e07b8fa56.png" alt></p>
<h3><span id="l12-improving-your-model-performance-gai-shan-ni-de-mo-xing-de-biao-xian">L12 : Improving your model performance(改善你的模型的表现)</span><a href="#l12-improving-your-model-performance-gai-shan-ni-de-mo-xing-de-biao-xian" class="header-anchor">#</a></h3><p>你们学过正交化，如何设立开发集和测试集，用人类水平错误率来估计贝叶斯错误率以及如何估计可避免偏差和方差。我们现在把它们全部组合起来写成一套指导方针，如何提高学习算法性能的指导方针。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-39.jpg" alt></p>
<p>method</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-49.jpg" alt></p>
<h2><span id="summary">summary</span><a href="#summary" class="header-anchor">#</a></h2><font color="red">这一周的内容主要是改善模型的表现，主要是按照正交化，使得更好的满足 1. 评价指标 2. 数据集的划分 3. 人的表现的重要性 4. 当出现表现不好的时候，如何改善呢，有哪些方法呢？ </font>

<h2><span id="w2-ml-strategy-2">W2 ML Strategy(2)</span><a href="#w2-ml-strategy-2" class="header-anchor">#</a></h2><h3><span id="c-1-carrying-out-error-analysis-jin-xing-wu-chai-fen-xi">C 1: Carrying out error analysis(进行误差分析)</span><a href="#c-1-carrying-out-error-analysis-jin-xing-wu-chai-fen-xi" class="header-anchor">#</a></h3><h4><span id="1-simple-analysis">1. simple analysis</span><a href="#1-simple-analysis" class="header-anchor">#</a></h4><p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/e1ef954731399bb4fbf18f2fb99b863.png" alt></p>
<p>通过观察发现算法分类出错的例子，是把狗分成猫，提高准确率的方法就是如何针对狗的图片优化算法。你可以针对狗，收集更多的狗图，或者设计一些只处理狗的算法功能之类的，为了让你的猫分类器在狗图上做的更好，让算法不再将狗分类成猫。现在考虑的是应该不应该这么去做呢？统计一下dev set里面多少是错误标记是狗的个数，分析出可以改善的算法的上限。</p>
<h4><span id="mutiply-analysis">mutiply analysis</span><a href="#mutiply-analysis" class="header-anchor">#</a></h4><p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-51.jpg" alt></p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-50.jpg" alt></p>
<h3><span id="c2-cleaning-up-incorrectly-labeled-data-qing-chu-biao-zhu-cuo-wu-de-shu-ju">C2 : Cleaning up Incorrectly labeled data(清除标注错误的数据)</span><a href="#c2-cleaning-up-incorrectly-labeled-data-qing-chu-biao-zhu-cuo-wu-de-shu-ju" class="header-anchor">#</a></h3><h4><span id="incorrct-label">incorrct label</span><a href="#incorrct-label" class="header-anchor">#</a></h4><h4><span id="traning-set">traning set</span><a href="#traning-set" class="header-anchor">#</a></h4><p>DL algorithms are quite robust to random errors in the traning set so long as your errors or your labeled example to once those errors are not too far from random .</p>
<h4><span id="distribution">distribution</span><a href="#distribution" class="header-anchor">#</a></h4><p>首先，我鼓励你不管用什么修正手段，都要同时作用到开发集和测试集上，我们之前讨论过为什么，开发和测试集必须来自相同的分布。开发集确定了你的目标，当你击中目标后，你希望算法能够推广到测试集上，这样你的团队能够更高效的在来自同一分布的开发集和测试集上迭代。如果你打算修正开发集上的部分数据，那么最好也对测试集做同样的修正以确保它们继续来自相同的分布。所以我们雇佣了一个人来仔细检查这些标签，但必须同时检查开发集和测试集。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-52.jpg" alt></p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-53.jpg" alt></p>
<h4><span id="suggestion">suggestion</span><a href="#suggestion" class="header-anchor">#</a></h4><p>最后我讲几个建议：</p>
<p>首先，深度学习研究人员有时会喜欢这样说：“我只是把数据提供给算法，我训练过了，效果拔群”。这话说出了很多深度学习错误的真相，更多时候，我们把数据喂给算法，然后训练它，并减少人工干预，减少使用人类的见解。但我认为，在构造实际系统时，通常需要更多的人工错误分析，更多的人类见解来架构这些系统，尽管深度学习的研究人员不愿意承认这点。</p>
<p>其次，不知道为什么，我看一些工程师和研究人员不愿意亲自去看这些样本，也许做这些事情很无聊，坐下来看100或几百个样本来统计错误数量，但我经常亲自这么做。当我带领一个机器学习团队时，我想知道它所犯的错误，我会亲自去看看这些数据，尝试和一部分错误作斗争。我想就因为花了这几分钟，或者几个小时去亲自统计数据，真的可以帮你找到需要优先处理的任务，我发现花时间亲自检查数据非常值得，所以我强烈建议你们这样做，如果你在搭建你的机器学习系统的话，然后你想确定应该优先尝试哪些想法，或者哪些方向。</p>
<p>这就是错误分析过程，在下一个视频中，我想分享一下错误分析是如何在启动新的机器学习项目中发挥作用的。</p>
<h3><span id="c3-build-your-first-system-quickly-then-iterate-kuai-su-da-jian-ni-de-di-yi-ge-xi-tong-bing-jin-xing-die-dai">C3: Build your first system quickly, then iterate(快速搭建你的第一个系统，并进行迭代)</span><a href="#c3-build-your-first-system-quickly-then-iterate-kuai-su-da-jian-ni-de-di-yi-ge-xi-tong-bing-jin-xing-die-dai" class="header-anchor">#</a></h3><h4><span id="1-iteration">1. iteration</span><a href="#1-iteration" class="header-anchor">#</a></h4><p>I recommend that you first quickly set up a definition and metrics so this is really you know  deciding where to place your target and you get it wrong you can always move it later we just set up a target somewhere and then I recommend you build an inital machine learning system quickly find the traning set train it and see start to see and understand how well your are doing against your Devon chess setting evaluation metric when you build your initial system you then be able to use bias variance analysis we should talk about earlier as well as error analysis whick we talked about just in last several videos to prioritize the next step in particular if error analysis causes you to realize that a lot of the errors are from the spearker being very far from the mirophone which causes special challenges speech recognitin then that would give you a good reason to focus on techniques to address this it called fast used speech recognition which basically means handling when the speaker is very far from microphone along the value of building this inital  system  it can be a quick  and diry implementation you know do not overthink it but all the value of the inital system is having some learning system having some tranin system allows you lok at bias and variance to do error analysis look at some mistakes to figure out all the different directins you could go in.</p>
<p>我鼓励你们搭建快速而粗糙的实现，然后用它做偏差/方差分析，用它做错误分析，然后用分析结果确定下一步优先要做的方向。</p>
<h3><span id="c4-training-and-testing-on-different-distributions-shi-yong-lai-zi-bu-tong-fen-bu-de-shu-ju-jin-xing-xun-lian-he-ce-shi">C4 : Training and testing on different distributions(使用来自不同分布的数据，进行训练和测试)</span><a href="#c4-training-and-testing-on-different-distributions-shi-yong-lai-zi-bu-tong-fen-bu-de-shu-ju-jin-xing-xun-lian-he-ce-shi" class="header-anchor">#</a></h3><p>this is resulted in many teams sometimes taking one of the days you can find and just shoving it into the training set .</p>
<ol>
<li><p>Cat app example </p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/Xnip2018-06-26_08-32-54.jpg" alt></p>
<p>假设你在开发一个手机应用，用户会上传他们用手机拍摄的照片，你想识别用户从应用中上传的图片是不是猫。现在你有两个数据来源，一个是你真正关心的数据分布，来自应用上传的数据，比如右边的应用，这些照片一般更业余，取景不太好，有些甚至很模糊，因为它们都是业余用户拍的。另一个数据来源就是你可以用爬虫程序挖掘网页直接下载，就这个样本而言，可以下载很多取景专业、高分辨率、拍摄专业的猫图片。如果你的应用用户数还不多，也许你只收集到10,000张用户上传的照片，但通过爬虫挖掘网页，你可以下载到海量猫图，也许你从互联网上下载了超过20万张猫图。而你真正关心的算法表现是你的最终系统处理来自应用程序的这个图片分布时效果好不好，因为最后你的用户会上传类似右边这些图片，你的分类器必须在这个任务中表现良好。现在你就陷入困境了，因为你有一个相对小的数据集，只有10,000个样本来自那个分布，而你还有一个大得多的数据集来自另一个分布，图片的外观和你真正想要处理的并不一样。但你又不想直接用这10,000张图片，因为这样你的训练集就太小了，使用这20万张图片似乎有帮助。但是，困境在于，这20万张图片并不完全来自你想要的分布，那么你可以怎么做呢？</p>
<p>我们真正关心的是来自手机手机收集的数据，而不是来自网页。方法一，随机分配训练集、验证集、测试集，这样的后果就是花了大量时间在实际不关心的数据分布去优化。</p>
<p>训练集20万张网络，5000手机，验证集和测试集各2500，这样可以保证验证集和测试集更接近实际应用场景，我们试试搭建一个学习系统，让系统在处理手机上传图片分布时效果良好。缺点在于，当然了，现在你的训练集分布和你的开发集、测试集分布并不一样。但事实证明，这样把数据分成训练、开发和测试集，在长期能给你带来更好的系统性能。我们以后会讨论一些特殊的技巧，可以处理 训练集的分布和开发集和测试集分布不一样的情况。</p>
</li>
</ol>
<h2><span id="c5-bias-and-variance-with-mismatched-data-distributions-shu-ju-fen-bu-bu-pi-pei-shi-pian-chai-yu-fang-chai-de-fen-xi">C5: Bias and Variance with mismatched data distributions（数据分布不匹配时，偏差与方差的分析）</span><a href="#c5-bias-and-variance-with-mismatched-data-distributions-shu-ju-fen-bu-bu-pi-pei-shi-pian-chai-yu-fang-chai-de-fen-xi" class="header-anchor">#</a></h2><p>首先算法只看过训练集数据，没看过开发集数据。第二，开发集数据来自不同的分布。很难确认这增加的9%误差率有多少是因为算法没看到开发集中的数据导致的，这么评估呢？到底哪个影响元素更大，</p>
<p>评估方法，训练集的分布挖出，traning-dev set : Same distributation as traning set ,but not used for training.</p>
<p>现在，我们有了<em>训练集</em>错误率、<em>训练-验证集</em>错误率，以及<em>验证集</em>错误率。其中，<em>训练集</em>错误率和<em>训练-验证集</em>错误率的差值反映了方差；而<em>训练-验证集</em>错误率和<em>验证集</em>错误率的差值反映了样本分布不一致的问题，从而说明<strong>模型擅长处理的数据和我们关心的数据来自不同的分布</strong>，我们称之为<strong>数据不匹配（Data Mismatch）</strong>问题。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\Analysis-With-Data-Mismatch.png" alt></p>
<h3><span id="c6-addressing-data-mismatch-chu-li-shu-ju-bu-pi-pei-wen-ti">C6: Addressing data mismatch（处理数据不匹配问题）</span><a href="#c6-addressing-data-mismatch-chu-li-shu-ju-bu-pi-pei-wen-ti" class="header-anchor">#</a></h3><p>I<img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\Xnip2018-06-26_08-32-55.jpg" alt></p>
<p>Data: Artifical data synthesis</p>
<p>所以，总而言之，如果你认为存在数据不匹配问题，我建议你做错误分析，或者看看训练集，或者看看开发集，试图找出，试图了解这两个数据分布到底有什么不同，然后看看是否有办法收集更多看起来像开发集的数据作训练。</p>
<h3><span id="c7-transfer-learning-qian-yi-xue-xi">C7: Transfer learning（迁移学习）</span><a href="#c7-transfer-learning-qian-yi-xue-xi" class="header-anchor">#</a></h3><p><strong>迁移学习（Tranfer Learning）</strong>是通过将已训练好的神经网络模型的一部分网络结构应用到另一模型，将一个神经网络从某个任务中学到的知识和经验运用到另一个任务中，以显著提高学习任务的性能。</p>
<p>例如，我们将为猫识别器构建的神经网络迁移应用到放射科诊断中。因为猫识别器的神经网络已经学习到了有关图像的结构和性质等方面的知识，所以只要先删除神经网络中原有的输出层，加入新的输出层并随机初始化权重系数（$W[L]$、$b[L]$），随后用新的训练集进行训练，就完成了以上的迁移学习。</p>
<p>如果新的数据集很小，可能只需要重新训练输出层前的最后一层的权重，即$W[L]$$、b[L]$，并保持其他参数不变；而如果有足够多的数据，可以只保留网络结构，重新训练神经网络中所有层的系数。这时初始权重由之前的模型训练得到，这个过程称为<strong>预训练（Pre-Training）</strong>，之后的权重更新过程称为<strong>微调（Fine-Tuning）</strong>。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\Xnip2018-06-26_08-32-56.jpg" alt></p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\Xnip2018-06-26_08-32-57.jpg" alt></p>
<p>在下述场合进行迁移学习是有意义的：</p>
<p>两个任务有同样的输入（比如都是图像或者都是音频）；<br>拥有更多数据的任务迁移到数据较少的任务；<br>某一任务的低层次特征（底层神经网络的某些功能）对另一个任务的学习有帮助。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\Xnip2018-06-26_08-32-58.jpg" alt></p>
<h3><span id="c8-multi-task-learning-duo-ren-wu-xue-xi">C8; Multi-task learning （多任务学习）</span><a href="#c8-multi-task-learning-duo-ren-wu-xue-xi" class="header-anchor">#</a></h3><p>For example, autonomous driving example,check cars,stop signs,trfffic lights ,输出也是一个向量，</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\Xnip2018-06-26_08-32-59.jpg" alt></p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\Xnip2018-06-26_08-32-60.jpg" alt></p>
<h3><span id="c9-what-is-end-to-end-deep-learning-shi-me-shi-duan-dao-duan-de-shen-du-xue-xi">C9 :  What is end-to-end deep learning?(什么是端到端的深度学习)</span><a href="#c9-what-is-end-to-end-deep-learning-shi-me-shi-duan-dao-duan-de-shen-du-xue-xi" class="header-anchor">#</a></h3><p>在传统的机器学习分块模型中，每一个模块处理一种输入，然后其输出作为下一个模块的输入，构成一条流水线。而<strong>端到端深度学习（End-to-end Deep Learning）</strong>只用一个单一的神经网络模型来实现所有的功能。它将所有模块混合在一起，只关心输入和输出。</p>
<p><img src="/2019/05/05/Deep%20Learning%20ai_Deep%20Learning%20Specialization/MyBlog\hexo\source\_posts\Deep Learning ai_Deep Learning Specialization\End-to-end-Deep-Learning.png" alt></p>
<h3><span id="you-dian-yu-que-dian">优点与缺点</span><a href="#you-dian-yu-que-dian" class="header-anchor">#</a></h3><p>应用端到端学习的优点：</p>
<ul>
<li>只要有足够多的数据，剩下的全部交给一个足够大的神经网络。比起传统的机器学习分块模型，可能更能捕获数据中的任何统计信息，而不需要用人类固有的认知（或者说，成见）来进行分析；</li>
<li>所需手工设计的组件更少，简化设计工作流程；</li>
</ul>
<p>缺点：</p>
<ul>
<li>需要大量的数据；</li>
<li>排除了可能有用的人工设计组件；</li>
</ul>
<p>根据以上分析，决定一个问题是否应用端到端学习的<strong>关键点</strong>是：是否有足够的数据，支持能够直接学习从 x 映射到 y 并且足够复杂的函数？</p>
<h3><span id="whether-to-use-end-to-end-learning-shi-fou-yao-shi-yong-duan-dao-duan-de-shen-du-xue-xi">Whether to use end-to-end learning?(是否要使用端到端的深度学习?)</span><a href="#whether-to-use-end-to-end-learning-shi-fou-yao-shi-yong-duan-dao-duan-de-shen-du-xue-xi" class="header-anchor">#</a></h3><p>Pros:</p>
<p>​    let the data speak : x-&gt;y</p>
<p>​    less hand-designing of components needed</p>
<p>Cons:</p>
<p>​    May need large amount of data</p>
<p>​    excludes potentially useful hand-designed components</p>
<p>Key question: Do you hava sufficient data to learn a function of the complexity needed to map x to y?</p>
<p>如果你想使用机器学习或者深度学习来学习某些单独的组件，那么当你应用监督学习时，你应该仔细选择要学习的x到y映射类型，这取决于那些任务你可以收集数据。相比之下，谈论纯端到端深度学习方法是很激动人心的，你输入图像，直接得出方向盘转角，但是就目前能收集到的数据而言，还有我们今天能够用神经网络学习的数据类型而言，这实际上不是最有希望的方法，或者说这个方法并不是团队想出的最好用的方法。而我认为这种纯粹的端到端深度学习方法，其实前景不如这样更复杂的多步方法。因为目前能收集到的数据，还有我们现在训练神经网络的能力是有局限的。</p>
<h1><span id="summary"><font color="green">Summary</font></span><a href="#summary" class="header-anchor">#</a></h1><font color="red">学习如何通过一些手段提高模型的表现，首先了解模型的性能的体现，bias、variance、贝叶斯误差。以及如何一步步的改善性能。具体解决了如下问题，1. 数据的划分 2. 人的表现与机器性能的关系、偏差、方差 3. 训练集和验证集的分布问题，当数据样本对于解决问题不足的时候的解决办法，4. 迁移学习 5. 端到端的学习 6. 多任务学习。6. 在性能不好的情况下，可能需要手动的分析误差，对测试集错误样例做统计等等， </font>]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>aiai_</title>
    <url>/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/</url>
    <content><![CDATA[<h1><span id="c2w1">C2W1</span><a href="#c2w1" class="header-anchor">#</a></h1><h2><span id="l01-train-dev-test-sets">L01 : Train/Dev/Test Sets</span><a href="#l01-train-dev-test-sets" class="header-anchor">#</a></h2><h3><span id="1-process">1. process</span><a href="#1-process" class="header-anchor">#</a></h3><p>应用型机器学习是一个高度迭代的过程，通常在项目启动时，我们会先有一个初步想法，比如构建一个含有特定层数，隐藏单元数量或数据集个数等等的神经网络，然后编码，并尝试运行这些代码，通过运行和测试得到该神经网络或这些配置信息的运行结果，你可能会根据输出结果重新完善自己的想法，改变策略，或者为了找到更好的神经网络不断迭代更新自己的方案。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_2.png" alt></p>
<h3><span id="2-data-split">2. data split</span><a href="#2-data-split" class="header-anchor">#</a></h3><ul>
<li>训练集（train set）：用训练集对算法或模型进行<strong>训练</strong>过程；</li>
<li>验证集（development set）：利用验证集（又称为简单交叉验证集，hold-out cross validation set）进行<strong>交叉验证</strong>，<strong>选择出最好的模型</strong>或者验证不同算法的有效性。</li>
<li>测试集（test set）：最后利用测试集对模型进行测试，<strong>获取模型运行的无偏估计</strong>（对学习方法进行评估）。</li>
</ul>
<p>假设这是训练数据，我用一个长方形表示，我们通常会将这些数据划分成几部分，一部分作为训练集，一部分作为简单交叉验证集，有时也称之为验证集，方便起见，我就叫它验证集（<strong>dev set</strong>），其实都是同一个概念，最后一部分则作为测试集。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_3.png" alt></p>
<ol>
<li><p>在机器学习发展的小数据量时代，如 100、1000、10000 的数据量大小，可以将数据集按照以下比例进行划分：</p>
<ul>
<li>无验证集的情况：70% / 30%；</li>
<li>有验证集的情况：60% / 20% / 20%；</li>
</ul>
</li>
<li><p>在如今的<strong>大数据时代</strong>，对于一个问题，我们拥有的数据集的规模可能是百万级别的，所以验证集和测试集所占的比重会趋向于变得更小。</p>
<p>验证集的目的是为了验证不同的算法哪种更加有效，所以验证集只要足够大到能够验证大约 2-10 种算法哪种更好，而不需要使用 20% 的数据作为验证集。如百万数据中抽取 1 万的数据作为验证集就可以了。</p>
<p>测试集的主要目的是评估模型的效果，如在单个分类器中，往往在百万级别的数据中，我们选择其中 1000 条数据足以评估单个模型的效果。</p>
</li>
</ol>
<ul>
<li>100 万数据量：98% / 1% / 1%；</li>
<li>超百万数据量：99.5% / 0.25% / 0.25%（或者99.5% / 0.4% / 0.1%）</li>
</ul>
<h3><span id="3-jian-yi">3. 建议</span><a href="#3-jian-yi" class="header-anchor">#</a></h3><p><strong>验证集要和训练集来自于同一个分布</strong>（数据来源一致），可以使得机器学习算法变得更快并获得更好的效果。</p>
<p>如果不需要用<strong>无偏估计</strong>来评估模型的性能，则可以不需要测试集。如果只有验证集，没有测试集，我们要做的就是，在训练集上训练，尝试不同的模型框架，在验证集上评估这些模型，然后迭代并选出适用的模型。因为验证集中已经涵盖测试集数据，其不再提供无偏性能评估。当然，如果你不需要无偏估计，那就再好不过了。</p>
<h2><span id="l02-bias-variance">L02 : Bias/Variance</span><a href="#l02-bias-variance" class="header-anchor">#</a></h2><p><strong>“偏差-方差分解”（bias-variance decomposition）</strong>是解释学习算法泛化性能的一种重要工具。</p>
<p>泛化误差可分解为偏差、方差与噪声之和：</p>
<ul>
<li><strong>偏差</strong>：度量了学习算法的期望预测与真实结果的偏离程度，即刻画了<strong>学习算法本身的拟合能力</strong>；</li>
<li><strong>方差</strong>：度量了同样大小的训练集的变动所导致的学习性能的变化，即刻画了<strong>数据扰动所造成的影响</strong>；</li>
<li><strong>噪声</strong>：表达了在当前任务上任何学习算法所能够达到的期望泛化误差的下界，即刻画了<strong>学习问题本身的难度</strong>。</li>
</ul>
<p>high bias ,underfitting</p>
<p>high variance, overfitting</p>
<p>just right</p>
<h3><span id="1-example">1. example</span><a href="#1-example" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_5.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_6.png" alt></p>
<p>Your algorithms ever on the training set and dev set you can try to diganose whether has problems high barriers or high variances or both or neither.</p>
<h2><span id="l03-basic-recipe-for-machine-learning">L03 Basic Recipe for Machine learning</span><a href="#l03-basic-recipe-for-machine-learning" class="header-anchor">#</a></h2><h3><span id="1-method">1. METHOD</span><a href="#1-method" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_8.png" alt></p>
<p>Training a bigger network almost never hurts. And the main cost of training a neural network that’s too big is just computational time, so long as you’re regularizing.</p>
<p>今天我们讲了如何通过组织机器学习来诊断偏差和方差的基本方法，然后选择解决问题的正确操作，希望大家有所了解和认识。我在课上不止一次提到了正则化，它是一种非常实用的减少方差的方法，正则化时会出现偏差方差权衡问题，偏差可能略有增加，如果网络足够大，增幅通常不会太高，我们下节课再细讲，以便大家更好理解如何实现神经网络的正则化。</p>
<p>第一点，高偏差和高方差是两种不同的情况，我们后续要尝试的方法也可能完全不同</p>
<p>只要正则适度，通常构建一个更大的网络便可以，在不影响方差的同时减少偏差，而采用更多数据通常可以在不过多影响偏差的同时减少方差。这两步实际要做的工作是：训练网络，选择网络或者准备更多数据，现在我们有工具可以做到在减少偏差或方差的同时，不对另一方产生过多不良影响。</p>
<h2><span id="l04">L04</span><a href="#l04" class="header-anchor">#</a></h2><h3><span id="1-over-fitting">1. over fitting</span><a href="#1-over-fitting" class="header-anchor">#</a></h3><h3><span id="regularization">regularization</span><a href="#regularization" class="header-anchor">#</a></h3><p>L2 regularization</p>
<p>L1 regularizaion: w will be sparse  L1 正则化最后得到 w 向量中将存在大量的 0</p>
<p>为什么只正则化参数w？为什么不再加上参数b 呢？你可以这么做，只是我习惯省略不写，因为通常w是一个高维参数矢量，w已经可以表达高偏差问题，可能w包含有很多参数，我们不可能拟合所有参数，而只是b单个数字，所以w几乎涵盖所有参数，而不是，如果加了参数b，其实也没太大影响，因为b只是众多参数中的一个，所以我通常省略不计，如果你想加上这个参数，完全没问题。</p>
<ol>
<li><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_9.png" alt></li>
</ol>
<p>2.<img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_10.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_11.png" alt>矩阵范数被称作“弗罗贝尼乌斯范数”，用下标标注F</p>
<ol>
<li><p>反向传播时，填上正则化的一项</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_12.png" alt></p>
<p>因此L2正则化也被称为“权重衰减”。</p>
</li>
</ol>
<p>to get more training data</p>
<h2><span id="l05-why-regularization-reduces-overfitting">L05 :Why Regularization Reduces Overfitting</span><a href="#l05-why-regularization-reduces-overfitting" class="header-anchor">#</a></h2><p>我们添加正则项，它可以避免数据权值矩阵过大，这就是弗罗贝尼乌斯范数，为什么压缩范数，或者弗罗贝尼乌斯范数或者参数可以减少过拟合？我们尝试消除或至少减少许多隐藏单元的影响，最终这个网络会变得更简单.Regularization其实是让函数变得<strong>简化</strong>。</p>
<p>直观上理解就是如果正则化设置得足够大，权重矩阵被设置为接近于0的值，直观理解就是把多隐藏单元的权重设为0，于是基本上消除了这些隐藏单元的许多影响。如果是这种情况，这个被大大简化了的神经网络会变成一个很小的网络，小到如同一个逻辑回归单元，可是深度却很大，它会使这个网络从过度拟合的状态更接近左图的高偏差状态。</p>
<p>总结一下，如果正则化参数变得很大，w参数很小，z也会相对变小，此时忽略的b影响，z会相对变小，实际上，z的取值范围很小，这个激活函数tanh，也就是曲线函数会相对呈线性，整个神经网络会计算离线性函数近的值，这个线性函数非常简单，并不是一个极复杂的高度非线性函数，不会发生过拟合。</p>
<p><strong>L2 regularization的不足</strong>：要通过不断的选用不同的λ进行测试，计算量加大了。</p>
<h2><span id="l06-dropout-regularization">L06 : Dropout Regularization</span><a href="#l06-dropout-regularization" class="header-anchor">#</a></h2><h3><span id="1-gong-zuo-yuan-li">1. 工作原理</span><a href="#1-gong-zuo-yuan-li" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_15.png" alt></p>
<p>如果上面这幅图存在over fitting。复制这个神经网络，dropout会遍历网络的每一层。假设网络中的每一层，每个节点都以抛硬币的方式设置概率，每个节点得以保留和消除的概率都是0.5，设置完节点概率，我们会消除一些节点，然后删除掉从该节点进出的连线，最后得到一个节点更少，规模更小的网络，然后用<strong>backprop</strong>方法进行训练。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_13.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_14.png" alt></p>
<p>我们针对每个训练样本训练规模极小的网络，最后你可能会认识到为什么要正则化网络，因为我们在训练极小的网络。</p>
<h3><span id="2-inverted-dropout-fan-xiang-sui-ji-shi-huo">2. <strong>inverted dropout</strong>（反向随机失活）</span><a href="#2-inverted-dropout-fan-xiang-sui-ji-shi-huo" class="header-anchor">#</a></h3><p>对第L</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">keep_prob = <span class="number">0.8</span>    <span class="comment"># 设置神经元保留概率</span></span><br><span class="line">dl = np.random.rand(al.shape[<span class="number">0</span>], al.shape[<span class="number">1</span>]) &lt; keep_prob</span><br><span class="line">al = np.multiply(al, dl)</span><br><span class="line">al /= keep_prob</span><br></pre></td></tr></tbody></table></figure>
<p>最后一步<code>al /= keep_prob</code>是因为 a[l]a[l]中的一部分元素失活（相当于被归零），为了在下一层计算时不影响 $Z[l+1]=W[l+1]a[l]+b[l+1]$的期望值，因此除以一个<code>keep_prob</code>。举例解释我们假设第三隐藏层上有50个单元或50个神经元，在一维上是50，我们通过因子分解将它拆分成维的，保留和删除它们的概率分别为80%和20%，这意味着最后被删除或归零的单元平均有10（50×20%=10）个，现在我们看下$z^{[4]}$，，我们的预期是$z^{[4]}=w^{[4]}a^{[3]}$，$a^{[3]}$减少20%，也就是说中有$a^{[3]}$20%的元素被归零，为了不影响的$a^{[4]}$期望值，我们需要用$w^{[4]}a^{[3]}/keep_prob$，它将会修正或弥补我们所需的那20%，$a^{[3]}$的期望值不会变，划线部分就是所谓的<strong>dropout</strong>方法。</p>
<h2><span id="l07-understanding-dropout">L07 : Understanding Dropout</span><a href="#l07-understanding-dropout" class="header-anchor">#</a></h2><p>直观上理解：不要依赖于任何一个特征，因为该单元的输入可能随时被清除，因此该单元通过这种方式传播下去，并为单元的四个输入增加一点权重，通过传播所有权重，<strong>dropout</strong>将产生收缩权重的平方范数的效果，和之前讲的L2正则化类似；实施<strong>dropout</strong>的结果实它会压缩权重，并完成一些预防过拟合的外层正则化；L2对不同权重的衰减是不同的，它取决于激活函数倍增的大小。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_16.png" alt></p>
<p>计算视觉中的输入量非常大，输入太多像素，以至于没有足够的数据，所以<strong>dropout</strong>在计算机视觉中应用得比较频繁，有些计算机视觉研究人员非常喜欢用它，几乎成了默认的选择，但要牢记一点，<strong>dropout</strong>是一种正则化方法，它有助于预防过拟合，因此除非算法过拟合，不然我是不会使用<strong>dropout</strong>的，所以它在其它领域应用得比较少，主要存在于计算机视觉领域，因为我们通常没有足够的数据，所以一直存在过拟合，这就是有些计算机视觉研究人员如此钟情于<strong>dropout</strong>函数的原因。直观上我认为不能概括其它学科。<strong>dropout</strong>将产生收缩权重的平方范数的效果。当然，不同的层，值可以设置成不同，如果你觉得某一层容易过拟合，把值设置小一点。</p>
<p>dropout 的一大<strong>缺点</strong>是成本函数无法被明确定义。因为每次迭代都会随机消除一些神经元结点的影响，因此无法确保成本函数单调递减。因此，使用 dropout 时，先将<code>keep_prob</code>全部设置为 1.0 后运行代码，确保 $J(w,b)$函数单调递减，再打开 dropout。</p>
<h2><span id="l08-other-regularization-methods">L08 :  Other Regularization Methods</span><a href="#l08-other-regularization-methods" class="header-anchor">#</a></h2><ul>
<li><p>数据扩增（Data Augmentation）：通过图片的一些变换（翻转，局部放大后切割等），得到更多的训练集和验证集。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_17.png" alt></p>
</li>
<li><p>早停止法（Early Stopping）：将训练集和验证集进行梯度下降时的成本变化曲线画在同一个坐标轴内，当训练集误差降低但验证集误差升高，两者开始发生较大偏差时及时停止迭代，并返回具有最小验证集误差的连接权和阈值，以避免过拟合。这种方法的缺点是无法同时达成偏差和方差的最优。</p>
</li>
</ul>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_18.png" alt></p>
<p>但对我来说<strong>early stopping</strong>的主要缺点就是你不能独立地处理这两个问题，因为提早停止梯度下降，也就是停止了优化代价函数，因为现在你不再尝试降低代价函数，所以代价函数的值可能不够小，同时你又希望不出现过拟合，你没有采取不同的方式来解决这两个问题，而是用一种方法同时解决两个问题，这样做的结果是我要考虑的东西变得更复杂。</p>
<p><strong>Early stopping</strong>的优点是，只运行一次梯度下降，你可以找出的w较小值，中间值和较大值，而无需尝试正则化超级参数的很多值。</p>
<h2><span id="l09-normalizing-inputs">L09 ： Normalizing inputs</span><a href="#l09-normalizing-inputs" class="header-anchor">#</a></h2><ol>
<li><p>零均值</p>
<p>$u=\frac{1}{m}\sum x^{(i)}$,$x-u$</p>
</li>
<li><p>归一化方差；</p>
<p>$\delta^2=\frac{1}{m}(x^{(i)})^2$,每个特征的方差，每个特征数据除以它，就归一化方差了</p>
</li>
</ol>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_19.png" alt></p>
<h3><span id="why">why</span><a href="#why" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_20.png" alt></p>
<p>在不使用标准化的成本函数中，如果设置一个较小的学习率，可能需要很多次迭代才能到达全局最优解；而如果使用了标准化，那么无论从哪个位置开始迭代，都能以相对较少的迭代次数找到全局最优解。</p>
<h2><span id="l10-vanishing-exploding-gradients">L10 : Vanishing /Exploding Gradients</span><a href="#l10-vanishing-exploding-gradients" class="header-anchor">#</a></h2><p>训练神经网络，尤其是深度神经所面临的一个问题就是梯度消失或梯度爆炸，也就是你训练神经网络的时候，导数或坡度有时会变得非常大，或者非常小，甚至于以指数方式变小，这加大了训练的难度。</p>
<p>在深度神经网络中，激活函数将以指数级递减，虽然我只是讨论了激活函数以与相关的指数级数增长或下降，它也适用于与层数相关的导数或梯度函数，也是呈指数级增长或呈指数递减。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_21.png" alt></p>
<p>假定 g(z)=z,b[l]=0g(z)=z,b[l]=0，对于目标输出有：</p>
<p>$y^=W[L]W[L−1]…W[2]W[1]X$</p>
<ul>
<li>对于$ W[l]$的值大于 1 的情况，激活函数的值将以指数级递增；</li>
<li>对于 $W[l]$的值小于 1 的情况，激活函数的值将以指数级递减。</li>
</ul>
<p>对于导数同理。因此，在计算梯度时，根据不同情况梯度函数会以指数级递增或递减，导致训练导数难度上升，梯度下降算法的步长会变得非常小，需要训练的时间将会非常长。</p>
<h2><span id="l11-weight-initialization-in-a-deep-network">L11 : Weight initialization in a deep network</span><a href="#l11-weight-initialization-in-a-deep-network" class="header-anchor">#</a></h2><p>为了预防值z过大或过小，你可以看到n越大，你希望w越小，因为z是wx+b的和,最合理的方法$w_i=1/n$</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_22.png" alt></p>
<p>因此，实际上，你要做的就是设置某层权重矩阵</p>
<p>$w^{[l]}=n p . random. randn (shape) * np.sqrt \left(\frac{1}{n^{[l-1]}}\right)$</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_23.png" alt></p>
<p>当多个节点时，也一样的看，使得这个节点$z^{<a href="i">L</a>}$不要太大，单独看每个节点既可以</p>
<p>relu : var(w(i)) = 2/n or $\frac{2}{n^{[l-1]}*n^{[l]}}$</p>
<p>tanh: var(w(i)) = 1/n</p>
<p>通过设置初始化化权重矩阵，使得不会增长太快或者太慢</p>
<h2><span id="l12-numerical-approximations-of-gradients">L12 ： Numerical Approximations of Gradients</span><a href="#l12-numerical-approximations-of-gradients" class="header-anchor">#</a></h2><p>单边误差</p>
<p>$f^{\prime}(\theta)=\lim _{\varepsilon \rightarrow 0} \frac{f(\theta+\varepsilon)-(\theta)}{\varepsilon}$</p>
<p>误差$O(\varepsilon)$</p>
<p>双边误差</p>
<p>$f^{\prime}(\theta)=\lim _{\varepsilon \rightarrow 0}=\frac{f(\theta+\varepsilon)-(\theta-\varepsilon)}{2 \varepsilon}$</p>
<p>$O\left(\varepsilon^{2}\right)$</p>
<h2><span id="l-13-gradient-checking">L 13 Gradient Checking</span><a href="#l-13-gradient-checking" class="header-anchor">#</a></h2><p>梯度检验帮我们节省了很多时间，也多次帮我发现<strong>backprop</strong>实施过程中的bug，接下来，我们看看如何利用它来调试或检验<strong>backprop</strong>的实施是否正确。</p>
<p>首先要做的就是，把所有参数转换成一个巨大的向量数据，你要做的就是把矩阵w转换成一个向量，把所有矩阵w转换成向量之后，做连接运算，得到一个巨型向量$\theta$，该向量表示为参数$\theta$，代价函数J是所有W和b的函数，现在你得到了一个的代价函数（即）。接着，你得到与和顺序相同的数据，你同样可以把$dW^{[l]}$,和$db^{[l]}$ 转换成一个新的向量，用它们来初始化大向量$d\theta$，它与$\theta$具有相同维度。</p>
<p>梯度的逼近值</p>
<script type="math/tex; mode=display">
d \theta_{\text { approx }}[i]=\frac{J\left(\theta_{1}, \theta_{2}, \ldots . \theta_{i}+\varepsilon, \ldots\right)-J\left(\theta_{1}, \theta_{2}, \ldots . \theta_{i}-\varepsilon, \ldots\right)}{2 \varepsilon}</script><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_24.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_25.png" alt></p>
<p>现在你已经了解了梯度检验的工作原理，它帮助我在神经网络实施中发现了很多<strong>bug</strong>，希望它对你也有所帮助。</p>
<h1><span id="l-14-gradient-checking-implementation-notes">L 14 : Gradient Checking Implementation notes</span><a href="#l-14-gradient-checking-implementation-notes" class="header-anchor">#</a></h1><ol>
<li>不要在训练中使用梯度检验，它只用于调试（debug）。使用完毕关闭梯度检验的功能；太慢了</li>
<li>如果算法的梯度检验失败，要检查所有项，并试着找出 bug，即确定哪个 dθapprox[i] 与 dθ 的值相差比较大；</li>
<li>当成本函数包含正则项时，也需要带上正则项进行检验；</li>
<li>梯度检验不能与 dropout 同时使用。因为每次迭代过程中，dropout 会随机消除隐藏层单元的不同子集，难以计算 dropout 在梯度下降上的成本函数 J。建议关闭 dropout，用梯度检验进行双重检查，确定在没有 dropout 的情况下算法正确，然后打开 dropout；</li>
</ol>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week1_25.png" alt></p>
<h2><span id="summary">Summary</span><a href="#summary" class="header-anchor">#</a></h2><font color="red">回顾这一周，我们讲了如何配置训练集，验证集和测试集，如何分析偏差和方差，如何处理高偏差或高方差以及高偏差和高方差并存的问题，如何在神经网络中应用不同形式的正则化，如正则化和**dropout**，还有加快神经网络训练速度的技巧，最后是梯度检验。</font>



<h1><span id="c2w2-optimization-algorithm">C2W2 :Optimization Algorithm</span><a href="#c2w2-optimization-algorithm" class="header-anchor">#</a></h1><h2><span id="l-01-mini-batch-gradient-descent">L 01 : Mini Batch Gradient Descent</span><a href="#l-01-mini-batch-gradient-descent" class="header-anchor">#</a></h2><ol>
<li><p>Vectorization</p>
</li>
<li><p>Mini batch</p>
<p>not entire training set </p>
<p>bady training set i，$x^{\{i\}}$</p>
<p>mini batch training set</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_1.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_2.png" alt></p>
</li>
</ol>
<p>mini batch gradient descent</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_3.png" alt></p>
<h2><span id="l-02-understanding-mini-batch-gradient-decent">L 02 : Understanding Mini-Batch Gradient Decent</span><a href="#l-02-understanding-mini-batch-gradient-decent" class="header-anchor">#</a></h2><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_4.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_6.png" alt></p>
<p>左图，随着iterations increased, it should decrease .if it ever goes up on iteration,something is wrong.</p>
<p>右图 : it’s as if on every iteration you’re training on a different training set or really training on a different mini batch. It should trend downwards, but it’s also going to be a little bit noisier.So if you plot J{t}, as you’re training mini batch in descent it may be over multiple epochs,you might expect to see a curve like this.</p>
<h3><span id="choosing-your-mini-batch-size">Choosing your mini-batch size</span><a href="#choosing-your-mini-batch-size" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_5.png" alt></p>
<h3><span id="1-you-que-dian">1. 优缺点</span><a href="#1-you-que-dian" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_7.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_8.png" alt></p>
<p>通过减小学习率，噪声会被改善或有所减小，但随机梯度下降法的一大缺点是，你会失去所有向量化带给你的加速，因为一次性只处理了一个训练样本，这样效率过于低下，所以实践中最好选择不大不小的<strong>mini-batch</strong>尺寸，实际上学习率达到最快。你会发现两个好处，一方面，你得到了大量向量化，上个视频中我们用过的例子中，如果<strong>mini-batch</strong>大小为1000个样本，你就可以对1000个样本向量化，比你一次性处理多个样本快得多。另一方面，你不需要等待整个训练集被处理完就可以开始进行后续工作，再用一下上个视频的数字，每次训练集允许我们采取5000个梯度下降步骤，所以实际上一些位于中间的<strong>mini-batch</strong>大小效果最好。</p>
<p>使用<strong>batch</strong>梯度下降法时，每次迭代你都需要历遍整个训练集，可以预期每次迭代成本都会下降，所以如果成本函数是迭代次数的一个函数，它应该会随着每次迭代而减少，如果在某次迭代中增加了，那肯定出了问题，也许你的学习率太大。</p>
<p>在随机梯度下降法中，从某一点开始，我们重新选取一个起始点，每次迭代，你只对一个样本进行梯度下降，大部分时候你向着全局最小值靠近，有时候你会远离最小值，因为那个样本恰好给你指的方向不对，因此随机梯度下降法是有很多噪声的，平均来看，它最终会靠近最小值，不过有时候也会方向错误，因为随机梯度下降法永远不会收敛，而是会一直在最小值附近波动，但它并不会在达到最小值并停留在此。</p>
<p>用<strong>mini-batch</strong>梯度下降法，我们从这里开始，一次迭代这样做，两次，三次，四次，它不会总朝向最小值靠近，但它比随机梯度下降要更持续地靠近最小值的方向，它也不一定在很小的范围内收敛或者波动，如果出现这个问题，可以慢慢减少学习率，我们在下个视频会讲到学习率衰减，也就是如何减小学习率。</p>
<p>batch : too long,too time</p>
<p>随机： lose speeding ,噪声大</p>
<p>mini-batch和stochastic都存在噪声问题，且在local optima附近会徘徊。但设置合适大小的mini-batch size，噪声和徘徊问题可接受的范围内。</p>
<p>size=1,又叫随机梯度下降法 stochastic gradient descent </p>
<h3><span id="how">how</span><a href="#how" class="header-anchor">#</a></h3><p>如何选择mini-batch size（这是一个hyperparameter）：</p>
<ul>
<li>小数据量，比如总的样本只有几千个，完全可以直接用batch gradient descent</li>
<li>大数量，mini-batch size倾向于选择2^n个，比如64, 128, 256等</li>
<li><p>mini-batch 与CPU/GPU memory的内存容量。</p>
<p>In practice of course the mini batch size is another hyper parameter that you might do a quick search over to try to figure out which one is most sufficient of reducing the cost function j. 按照上面的方法</p>
</li>
</ul>
<h2><span id="l-03-exponentially-weighted-averages">L 03: Exponentially Weighted Averages</span><a href="#l-03-exponentially-weighted-averages" class="header-anchor">#</a></h2><p>In order to understand those algorithms, you need to be able they use something called exponentially weighted averages. Also called exponentially weighted moving averages in statistics.</p>
<h3><span id="1-zhi-shu-jia-quan-ping-jun-shu-exponentially-weighted-averages">1. 指数加权平均数（Exponentially weighted averages）</span><a href="#1-zhi-shu-jia-quan-ping-jun-shu-exponentially-weighted-averages" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_9.png" alt></p>
<p>$\theta _i$表示每一日的温度值，蓝色的点，$v_t$表示加权平均后的,红色</p>
<p>权平均方法是：每天的温度值加权值$vt$设置为前一天的温度加权值$vt−1$和当天的温度实际值$θt$做加权平均：</p>
<script type="math/tex; mode=display">
v_{t}=\beta v_{t-1}+(1-\beta) \theta_{t}</script><p>由于以后我们要考虑的原因，在计算时可视$v_T$大概是$\frac{1}{(1-\beta)}$的每日温度的加权平均，</p>
<p>如果是$\beta$=0.9，这是十天的平均值，红色</p>
<p>如果$\beta$=0.98,是50天的结果，绿色</p>
<p>如果$beta$=0.5,是2day的结果，黄色</p>
<p>由于仅平均了两天的温度，平均的数据太少，所以得到的曲线有更多的噪声，有可能出现异常值，但是这个曲线能够更快适应温度变化。</p>
<p>当 $\beta$较大时，指数加权平均值适应地更缓慢一些。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_10.png" alt></p>
<p>$</p>
<h2><span id="l-04-understanding-exponentially-weighted-averages">L 04 : Understanding Exponentially Weighted Averages</span><a href="#l-04-understanding-exponentially-weighted-averages" class="header-anchor">#</a></h2><p><strong>假如β=0.9，每个v的计算如下：</strong></p>
<script type="math/tex; mode=display">
\begin{aligned} v_{100} &=0.9 v_{99}+0.1 \theta_{100} \\ v_{99} &=0.9 v_{98}+0.1 \theta_{99} \\ v_{98} &=0.9 v_{97}+0.1 \theta_{98} \end{aligned}</script><p>递推可得：</p>
<script type="math/tex; mode=display">
v_{100}=0.1 \theta_{100}+0.1 * 0.9 \theta_{99}+0.1 *(0.9)^{2} \theta_{98}+\ldots</script><p>指数的衰减规律</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_11.png" alt></p>
<p>一般的</p>
<script type="math/tex; mode=display">
v_{t}=\sum_{i=1}^{t}(1-\beta) \beta^{t-i} \theta_{i}</script><p>无穷级数求和：</p>
<script type="math/tex; mode=display">
\sum_{t=1}^{n}(1-\beta) \beta^{t}=1</script><p>因此可以近似的认为所有项的系数之和正好为100%。</p>
<p>即，$vt$是对t日之前<strong>所有的实际温度的加权平均</strong>,权重是指数递减的。</p>
<p>十天后，曲线高度下降到了1/3,赋予权重$\beta^{t-i}$</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_12.png" alt></p>
<script type="math/tex; mode=display">
0.9^{10}~=0.35~=1/e</script><p>一般认为，$v_t$近似前$\frac{1}{1-\beta}$的加权平均值</p>
<h2><span id="l05-bias-correction-in-exponentially-weighted-averages">L05 : Bias correction in exponentially weighted averages</span><a href="#l05-bias-correction-in-exponentially-weighted-averages" class="header-anchor">#</a></h2><p>指数加权平均的偏差修正</p>
<p>由于计算$v1$的时候，并没有历史值做加权，这个时候令其前一个加权值$v0=0$，则会导致$v_1$远小于$\theta_1$,依次类推，<strong>在靠近前面的值会出现显著的小于实际值的情况</strong></p>
<p>因此做一个修正</p>
<script type="math/tex; mode=display">
v_{t}=\frac{\beta v_{t-1}+(1-\beta) \theta_{t}}{1-\beta^{t}}</script><p>你会发现随着$\beta^t$增加，接近于0，所以当t很大的时候，偏差修正几乎没有作用，因此当t较大的时候，紫线基本和绿线重合了。不过在开始学习阶段，你才开始预测热身练习，偏差修正可以帮助你更好预测温度，偏差修正可以帮助你使结果从紫线变成绿线。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_13.png" alt></p>
<p>因为在Machine Learning中看重的是很多次迭代后的结果，初期的偏差影响并不大。</p>
<h2><span id="l-06-gradient-descent-with-momentum">L 06 : Gradient Descent With Momentum</span><a href="#l-06-gradient-descent-with-momentum" class="header-anchor">#</a></h2><p>动量梯度下降法，运行速度几乎总是快于标准的梯度下降算法，</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_14.png" alt></p>
<p>当慢慢下降到最小值，上下波动的梯度下降法的速度减缓，无法使用更大的学习率，</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_15.png" alt></p>
<p>在纵轴上，希望学校慢一点，不需要摆动，横着上，加快学校，基于此就有了Gradient descent with momentum。</p>
<script type="math/tex; mode=display">
\begin{array}{c}{v_{d W} :=\beta v_{d W}+(1-\beta) d W} \\ {v_{d b} :=\beta v_{d b}+(1-\beta) d b} \\ {w=w-\alpha v_{d W}} \\ {b=b-\alpha v_{d b}}\end{array}</script><p>这样，可以让gradient更平滑</p>
<ul>
<li>对于上图垂直方向，原来是会上下震荡，但引入了exponentially weighted average，相当于对前面的震荡进行了平均，<strong>结果就是上下震荡互相抵消了</strong>。而水平方向都是向右没有震荡，因此平均后还是向右。最终导致呈现上图红色的下降路线。</li>
<li><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_18.png" alt></li>
</ul>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_16.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_17.png" alt></p>
<h2><span id="l-07-rmsprop">L 07 : RMSprop</span><a href="#l-07-rmsprop" class="header-anchor">#</a></h2><p>RMSprop (Root Mean Square Propagation，均方根传递)，<strong>与momentum一样，也是降低梯度的抖动</strong>。<strong>而是平抑不同大小梯度的更新速率。实际上 作用在α上的</strong></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_19.png" alt></p>
<p>回忆一下我们之前的例子，如果你执行梯度下降，虽然横轴方向正在推进，但纵轴方向会有大幅度摆动，为了分析这个例子，假设b纵轴代表参数，横轴代表参数W，可能有w1，或者w2其它重要的参数，为了便于理解，被称为b和w。</p>
<p>我们希望学习速度快，而在垂直方向，也就是例子中的方向，我们希望减缓纵轴上的摆动，所以有了$S_{d W} $和$ S_{d b}$，我们希望$S_{d W} $会相对较小，所以我们要除以一个较小的数，而希望$ S_{d b}$又较大，所以这里我们要除以较大的数字，这样就可以减缓纵轴上的变化。</p>
<p>这些微分，垂直方向的要比水平方向的大得多，所以斜率在方向特别大，所以这些微分中，db较大，dw较小，因为函数的倾斜程度，在纵轴上，也就是b方向上要大于在横轴上，也就是方向上W。db的平方较大，所以$Sdb$也会较大，而相比之下，dw会小一些，亦或dw平方会小一些，因此$Sdw$会小一些，结果就是纵轴上的更新要被一个较大的数相除，就能消除摆动，而水平方向的更新则被较小的数相除。</p>
<p><strong>RMSprop</strong>的影响就是你的更新最后会变成这样（绿色线），纵轴方向上摆动较小，而横轴方向继续推进。还有个影响就是，你可以用一个更大学习率，然后加快学习，而无须在纵轴上垂直方向偏离。</p>
<p>实际中dw是一个高维度的参数向量，db也是一个高维度参数向量，但是你的直觉是，在你要消除摆动的维度中，最终你要计算一个更大的和值，这个平方和微分的加权平均值，所以你最后去掉了那些有摆动的方向。所以这就是<strong>RMSprop</strong>，全称是均方根，因为你将微分进行平方，然后最后使用平方根。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_20.png" alt></p>
<p>解释平方：</p>
<p>垂直方向，比较陡，梯度比较大，但我们又希望它下降的慢。因此对梯度除以一个较大的值，所以用梯度的平方的平均来表示。让不同的参数拥有不同的learning rate。</p>
<p><strong>从某种角度看，RMSprop会根据当前的梯度自动调整参数的learning rate，梯度大降低learning rate，梯度小的时候提高learning rate，从而一方面避免了震荡，另一方面避免在平坦的地方徘徊太久。</strong></p>
<p>为了避免出现分母为0</p>
<script type="math/tex; mode=display">
\begin{array}{c}{s_{d w}=\beta s_{d w}+(1-\beta)(d w)^{2}} \\ {s_{d b}=\beta s_{d b}+(1-\beta)(d b)^{2}} \\ {w :=w-\alpha \frac{d w}{\sqrt{s_{d w}+\varepsilon}}} \\ {b :=b-\alpha \frac{d b}{\sqrt{s_{d b}+\varepsilon}}}\end{array}</script><p>$\varepsilon$取$10^{-8}$不错的选择.</p>
<p>补充：</p>
<p>RMSProp算法对梯度计算了<strong>微分平方加权平均数</strong>。这种做法有利于消除了摆动幅度大的方向，用来修正摆动幅度，使得各个维度的摆动幅度都较小。另一方面也使得网络函数收敛更快</p>
<h2><span id="l-08-adam-optimization-algorithm">L 08 Adam optimization algorithm</span><a href="#l-08-adam-optimization-algorithm" class="header-anchor">#</a></h2><p>Adam（Adaptive Moment Estimation，自适应矩估计）就是momentum和RMSprop的结合。momentum负责平滑梯度，而RMSprop负责调解learning rate。</p>
<h3><span id="1-adam">1. Adam</span><a href="#1-adam" class="header-anchor">#</a></h3><p>a. 引入的变量有：</p>
<ul>
<li>$v$ : 计算同momentum算法，将梯度进行指数加权平均</li>
<li>$s$: 计算同RMSprop，将梯度的平方进行指数加权平均</li>
<li>$β1$ : 计算vv的加权参数</li>
<li>$β2$ : 计算ss的加权参数</li>
</ul>
<p>b. 在迭代前，初始化参数v和s</p>
<script type="math/tex; mode=display">
v_{d W}=0, s_{d W}=0, v_{d b}=0, s_{d b}=0</script><p>c. 对第t次梯度下降的迭代 a. 首先计算dw和db的v和s</p>
<script type="math/tex; mode=display">
\begin{array}{c}{v_{d W}=\beta_{1} v_{d W}+\left(1-\beta_{1}\right) d W} \\ {s_{d W}=\beta_{2} s_{d W}+\left(1-\beta_{2}\right)(d W)^{2}} \\ {v_{d b}=\beta_{1} v_{d b}+\left(1-\beta_{1}\right) d b} \\ {s_{d b}=\beta_{2} s_{d b}+\left(1-\beta_{2}\right)(d b)^{2}}\end{array}</script><p>d. 修正</p>
<script type="math/tex; mode=display">
v_{d W}^{\text {corrected}}=\frac{v_{d W}}{1-\left(\beta_{1}\right)^{t}}\\
\begin{aligned} s_{d W}^{\text {corrected}} &=\frac{s_{d W}}{1-\left(\beta_{2}\right)^{t}} \\ v_{d b}^{\text {corrected}} &=\frac{v_{d b}}{1-\left(\beta_{1}\right)^{t}} \\ s_{d b}^{\text {corrected}} &=\frac{s_{d b}}{1-\left(\beta_{2}\right)^{t}} \end{aligned}</script><p>e. 最后更新参数W和b</p>
<script type="math/tex; mode=display">
W=W-\alpha \frac{v_{d W}^{\text {corrected}}}{\sqrt{s_{d W}^{\text { corrected }}+\varepsilon}}\\
b=b-\alpha \frac{v_{d b}^{\text {corrected}}}{\sqrt{s_{d b}^{\text { corrected }}+\varepsilon}}</script><p>超参的选择：</p>
<ul>
<li>α：需要调优</li>
<li>β1: 通常选择为0.9</li>
<li>β2: 通常选择为0.999</li>
<li>ε: 一般不需要调优，选择一个小数，比如10−8</li>
</ul>
<p>你可以尝试一系列值α，然后看哪个有效</p>
<h2><span id="l09-learning-rate-decay">L09 : Learning Rate Decay</span><a href="#l09-learning-rate-decay" class="header-anchor">#</a></h2><ol>
<li><p>why</p>
<p>为什么要做learning rate decay？ 较大的learning rate虽然在算法开始阶段会加快收敛速度，但在收敛接近到优化点的时候，算法会在优化点附近震荡，如下图：</p>
</li>
</ol>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_22.png" alt></p>
<p>2.如何做learning rate decay？ <strong>思路很简单，就是引入一个函数，让α随着迭代（比如min-batch的epoch）递减</strong>。为此可以采用的decay函数有：</p>
<p>倒数：</p>
<script type="math/tex; mode=display">
\alpha :=\frac{1}{1+\text { decay rate * epoch num}} \alpha</script><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_23.png" alt></p>
<h2><span id="l-10-the-problem-of-local-optima">L 10: The Problem of local Optima</span><a href="#l-10-the-problem-of-local-optima" class="header-anchor">#</a></h2><p>事实上，如果你要创建一个神经网络，通常梯度为零的点并不是这个图中的局部最优点，实际上成本函数的零梯度点，通常是鞍点。</p>
<p>但是一个具有高维度空间的函数，如果梯度为0，那么在每个方向，它可能是凸函数，也可能是凹函数。如果你在2万维空间中，那么想要得到局部最优，所有的2万个方向都需要是这样，但发生的机率也许很小，也许是$2^{-20000}$，因此更有可能遇到有些方向的曲线会这样向上弯曲，另一些方向曲线向下弯，而不是所有的都向上弯曲，因此在高维度空间，你更可能碰到鞍点。所有，担心收敛到local optima，真是人们想多了，实际上并没有想象的那么多local optima。在高维空间，几乎不太可能被困在一个local optima，这是一个好消息。</p>
<p>因此，在高维空间遇到的问题是高原问题（Problem of plateaus）</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_27.png" alt></p>
<p>Adam算法可以加速学习</p>
<h1><span id="w3-hyperparameter-tuning">W3 Hyperparameter tuning</span><a href="#w3-hyperparameter-tuning" class="header-anchor">#</a></h1><h2><span id="l01-tuning-process">L01 Tuning process</span><a href="#l01-tuning-process" class="header-anchor">#</a></h2><ol>
<li>到目前为止，我们接触到的hyperparameter有：</li>
<li>learning rate: αα</li>
<li>momentum 参数: ββ</li>
<li>Adam参数: β1β1和 β2β2以及εε</li>
<li>神经网络层数: L</li>
<li>神经网络隐藏层neuron数：n[l]n[l]</li>
<li>learning rate decay参数</li>
<li>min-batch size</li>
<li>这些hyperparameter重要性排序：</li>
<li>最重要的： learning rate: αα</li>
<li>比较重要的： momentum 参数: ββ 神经网络层数: L 神经网络隐藏层neuron数：n[l]n[l]</li>
<li>次重要的： 神经网络隐藏层neuron数 learning rate decay参数</li>
<li>基本不需调整的 β1β1和 β2β2以及ε</li>
</ol>
<h4><span id="1-try-random-values-don-t-use-a-grid">1. Try random values : Don’t use a grid</span><a href="#1-try-random-values-don-t-use-a-grid" class="header-anchor">#</a></h4><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_28.png" alt></p>
<p>why:</p>
<p>举个例子，假设超参数1是（学习速率），取一个极端的例子，假设超参数2是<strong>Adam</strong>算法中，分母中的$\varepsilon$。在这种情况下，a的取值很重要，而$\varepsilon$取值则无关紧要。如果你在网格中取点，接着，你试验了a的5个取值，那你会发现，无论$\varepsilon$取何值，结果基本上都是一样的。所以，你知道共有25种模型，但进行试验的值只有5个，我认为这是很重要的。</p>
<p>对比而言，如果你随机取值，你会试验25个独立的a,$\varepsilon$，似乎你更有可能发现效果做好的那个。</p>
<h3><span id="2-you-cu-cao-dao-jing-xi-de-ce-lue">2. 由粗糙到精细的策略</span><a href="#2-you-cu-cao-dao-jing-xi-de-ce-lue" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_29.png" alt></p>
<h2><span id="l-02-using-an-appropriate-scale-to-pick-hyperparameters">L 02: Using an Appropriate Scale to pick hyperparameters</span><a href="#l-02-using-an-appropriate-scale-to-pick-hyperparameters" class="header-anchor">#</a></h2><p>$a$取值0.0001,1,如果你画一条从0.0001到1的数轴，沿其随机均匀取值，那90%的数值将会落在0.1到1之间，结果就是，在0.1到1之间，应用了90%的资源，而在0.0001到0.1之间，只有10%的搜索资源，这看上去不太对。</p>
<p>同时在范围内搜索，也不是均匀分布（uniformly random）的，通常有这个参数的scale，<strong>比如对数scale</strong>。</p>
<p>反而，用对数标尺搜索超参数的方式会更合理，因此这里不使用线性轴，分别依次取0.0001，0.001，0.01，0.1，1，在对数轴上均匀随机取点，这样，在0.0001到0.001之间，就会有更多的搜索资源可用，还有在0.001到0.01之间等等。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_32.png" alt></p>
<h2><span id="l-03-hyperparameter-tuning-i-practice">L 03 : Hyperparameter tuning i practice</span><a href="#l-03-hyperparameter-tuning-i-practice" class="header-anchor">#</a></h2><ol>
<li>不同的算法和场景，对超参的scale敏感性可能不一样.</li>
<li>根据计算资源和数据量，可以采取两种策略来调参<ul>
<li>Panda（熊猫策略）：对一个模型先后修改参数，查看其表现，最终选择最好的参数。就像熊猫一样，一次只抚养一个后代。</li>
<li>Caviar（鱼子酱策略）：计算资源足够，可以同时运行很多模型实例，采用不同的参数，然后最终选择一个好的。类似鱼类，一次下很多卵，自动竞争成活。 </li>
</ul>
</li>
</ol>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_33.png" alt></p>
<h3><span id="l-04-normalizing-activations-in-a-network">L 04: Normalizing Activations in a Network</span><a href="#l-04-normalizing-activations-in-a-network" class="header-anchor">#</a></h3><h4><span id="1-implementing-batch-normalizing">1. Implementing Batch Normalizing</span><a href="#1-implementing-batch-normalizing" class="header-anchor">#</a></h4><p><strong>Batch</strong>归一化,<strong>Batch</strong>归一化会使你的参数搜索问题变得很容易，使神经网络对超参数的选择更加稳定，超参数的范围会更加庞大，工作效果也很好，也会是你的训练更加容易，甚至是深层网络。</p>
<p>可以normalize $a^{[l]},z^{[l]}$,选择$z^{[L]}$</p>
<p><strong>设置 γ 和 β 的原因</strong>是，如果各隐藏层的输入均值在靠近 0 的区域，即处于激活函数的线性区域，不利于训练非线性神经网络，从而得到效果较差的模型。因此，需要用 γ 和 β 对标准化后的结果做进一步处理。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_34.png" alt></p>
<p>需要注意的是，β和γ不是超参，而是梯度下降需学习的参数。</p>
<h2><span id="l-05-fitting-batch-norm-into-neural-networks">L 05 : Fitting Batch Norm Into Neural Networks</span><a href="#l-05-fitting-batch-norm-into-neural-networks" class="header-anchor">#</a></h2><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_35.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_36.png" alt></p>
<p>注意</p>
<p>先前我说过每层的参数是$w^{[l]}$和$b^{[l]}$，还有$\beta^{[l]}$和$b^{[l]}$，请注意计算的方式如下，$z^{[l]}=w^{[l]} a^{[l-1]}+b^{[l]}$，但<strong>Batch</strong>归一化做的是，它要看这个<strong>mini-batch</strong>，先将$z^{[l]}$归一化，结果为均值0和标准方差，再由$\beta$和b重缩放，但这意味着，无论$b^{[l]}$的值是多少，都是要被减去的，因为在<strong>Batch</strong>归一化的过程中，你要计算的$z^{[l]}$均值，再减去平均值，在此例中的<strong>mini-batch</strong>中增加任何常数，数值都不会改变，因为加上的任何常数都将会被均值减去所抵消.</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_37.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_38.png" alt></p>
<p>最后，请记住的维$z^{[l]}$，因为在这个例子中，维数会是$\left(n^{[l]}, 1\right)$，的尺寸为，如果是l层隐藏单元的数量，那$ \beta^{[l]}$和$ \gamma^{[l]}$的维度也是$\left(n^{[l]}, 1\right)$，因为这是你隐藏层的数量，你有隐藏单元，<strong>所以$\gamma^{[l]}$和</strong>$  \beta^{[l]}$用来将每个隐藏层的均值和方差缩放为网络想要的值。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_39.png" alt></p>
<h3><span id="l-06-why-doest-batch-norm-work">L 06 Why Doest Batch Norm Work?</span><a href="#l-06-why-doest-batch-norm-work" class="header-anchor">#</a></h3><ol>
<li>首先，起到了normalization的作用，同对输入数据X的normalization作用类似。</li>
</ol>
<ol>
<li><p>让每一层的学习，<strong>一定程度解耦了前层参数和后层参数，让各层更加独立的学习</strong>。无论前一层如何变，本层输入的数据总是保持稳定的均值和方差。（主要原因）</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_40.png" alt></p>
<p>所以使你数据改变分布的这个想法，有个有点怪的名字“<strong>Covariate shift</strong>”，想法是这样的，如果你已经学习了到 的映射，如果 的分布改变了，那么你可能需要重新训练你的学习算法。这种做法同样适用于，如果真实函数由 到 映射保持不变，正如此例中，因为真实函数是此图片是否是一只猫，训练你的函数的需要变得更加迫切，如果真实函数也改变，情况就更糟了。</p>
<p>关于第二点，如果实际应用样本和训练样本的数据分布不同（例如，橘猫图片和黑猫图片），我们称发生了“<strong>Covariate Shift</strong>”。这种情况下，一般要对模型进行重新训练。Batch Normalization 的作用就是减小 Covariate Shift 所带来的影响，让模型变得更加健壮，鲁棒性（Robustness）更强。</p>
<p>即使输入的值改变了，由于 Batch Normalization 的作用，使得均值和方差保持不变（由 γ 和 β 决定），限制了在前层的参数更新对数值分布的影响程度，因此后层的学习变得更容易一些。Batch Normalization 减少了各层 W 和 b 之间的耦合性，让各层更加独立，实现自我训练学习的效果。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_41.png" alt></p>
<p>另外，Batch Normalization 也<strong>起到微弱的正则化</strong>（regularization）效果。因为在每个 mini-batch 而非整个数据集上计算均值和方差，只由这一小部分数据估计得出的均值和方差会有一些噪声，因此最终计算出的 z~(i)z~(i)也有一定噪声。类似于 dropout，这种噪声会使得神经元不会再特别依赖于任何一个输入特征。</p>
<p>因为 Batch Normalization 只有微弱的正则化效果，因此可以和 dropout 一起使用，以获得更强大的正则化效果。通过应用更大的 mini-batch 大小，可以减少噪声，从而减少这种正则化效果。</p>
<p>最后，不要将 Batch Normalization 作为正则化的手段，而是当作加速学习的方式。正则化只是一种非期望的副作用，Batch Normalization 解决的还是反向传播过程中的梯度问题（梯度消失和爆炸）。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_42.png" alt></p>
</li>
</ol>
<h3><span id="l-07-batch-norm-at-test-time">L 07 : Batch Norm At Test Time</span><a href="#l-07-batch-norm-at-test-time" class="header-anchor">#</a></h3><p>问题：BN算法在训练时是一个批次的数据训练，能算出每一层Z的均值和方差；而在测试时，输入的则是单个数据，<strong>单条数据没法做均值和方差的计算</strong>，怎么在测试期输入均值和方差呢?</p>
<p>实际应用中一般不使用这种方法，而是使用之前学习过的指数加权平均的方法来预测测试过程单个样本的 μ 和 $σ^2$</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_43.png" alt></p>
<p>计算$z_{\text { norm }}^{(\hat{2})}$，用$\mu$ 和$ \sigma^{2}$的指数加权平均，用你手头的最新数值来做调整，然后你可以用左边我们刚算出来的和你在神经网络训练过程中得到的$\beta$和$\sigma$参数来计算你那个测试样本的z值。</p>
<h3><span id="l-08-softmax-regression">L 08 : Softmax Regression</span><a href="#l-08-softmax-regression" class="header-anchor">#</a></h3><h4><span id="1-multi-class-classification">1. [Multi-class classification]</span><a href="#1-multi-class-classification" class="header-anchor">#</a></h4><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_44.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_45.png" alt></p>
<p>最后一层是概率，之和为1，要用到<strong>Softmax</strong>层，<strong>Softmax</strong>激活函数的特殊之处在于，因为需要将所有可能的输出归一化，就需要输入一个向量，最后输出一个向量。</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_46.png" alt></p>
<h4><span id="2-softmax-example">2. Softmax example</span><a href="#2-softmax-example" class="header-anchor">#</a></h4><p>没有隐藏层的softmax,代表一些决策边界</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_47.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_48.png" alt></p>
<h3><span id="l-09-training-softmax-classifier">L 09 Training SoftMax classifier</span><a href="#l-09-training-softmax-classifier" class="header-anchor">#</a></h3><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_49.png" alt></p>
<p><strong>Softmax</strong>这个名称的来源是与所谓<strong>hardmax</strong>对比,<strong>Softmax</strong>回归或<strong>Softmax</strong>激活函数将<strong>logistic</strong>激活函数推广到类，而不仅仅是两类，结果就是如果C=2，那么C=2的<strong>Softmax</strong>实际上变回了<strong>logistic</strong>回归，</p>
<h4><span id="loss-function">Loss Function</span><a href="#loss-function" class="header-anchor">#</a></h4><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_50.png" alt></p>
<script type="math/tex; mode=display">
J\left(w^{[1]}, b^{[1]}, \ldots \ldots\right)=\frac{1}{m} \sum_{i=1}^{m} L\left(\hat{y}^{(i)}, y^{(i)}\right)</script><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_51.png" alt></p>
<h4><span id="3-gradient-descent-with-softmax">3. Gradient descent with softmax</span><a href="#3-gradient-descent-with-softmax" class="header-anchor">#</a></h4><p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_52.png" alt></p>
<p>最后一层求导，softmax激活函数</p>
<script type="math/tex; mode=display">
J\left(w^{[1]}, b^{[1]}, \ldots \ldots\right)=\frac{1}{m} \sum_{i=1}^{m} L\left(\hat{y}^{(i)}, y^{(i)}\right)</script><h2><span id="l11-tensorflow">L11 TensorFlow</span><a href="#l11-tensorflow" class="header-anchor">#</a></h2><h4><span id="1-ji-ben-liu-cheng">1. 基本流程</span><a href="#1-ji-ben-liu-cheng" class="header-anchor">#</a></h4><p>使用tensorflow，只要告诉tensorflow forward prop，它自己就会做backprop，因此不用自己实现backprop</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_53.png" alt></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="comment">#导入TensorFlow</span></span><br><span class="line">​</span><br><span class="line">w = tf.Variable(<span class="number">0</span>,dtype = tf.float32)</span><br><span class="line"><span class="comment">#接下来，让我们定义参数w，在TensorFlow中，你要用tf.Variable()来定义参数</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">#然后我们定义损失函数：</span></span><br><span class="line">​</span><br><span class="line">cost = tf.add(tf.add(w**<span class="number">2</span>,tf.multiply(- <span class="number">10.</span>,w)),<span class="number">25</span>)</span><br><span class="line"><span class="comment">#然后我们定义损失函数J</span></span><br><span class="line">然后我们再写：</span><br><span class="line">​</span><br><span class="line">train = tf.train.GradientDescentOptimizer(<span class="number">0.01</span>).minimize(cost)</span><br><span class="line"><span class="comment">#(让我们用0.01的学习率，目标是最小化损失)。</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">#最后下面的几行是惯用表达式:</span></span><br><span class="line">​</span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line">​</span><br><span class="line">session = tf.Session()<span class="comment">#这样就开启了一个TensorFlow session。</span></span><br><span class="line">​</span><br><span class="line">session.run(init)<span class="comment">#来初始化全局变量。</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">#然后让TensorFlow评估一个变量，我们要用到:</span></span><br><span class="line">​</span><br><span class="line">session.run(w)</span><br><span class="line">​</span><br><span class="line"><span class="comment">#上面的这一行将w初始化为0，并定义损失函数，我们定义train为学习算法，它用梯度下降法优化器使损失函数最小化，但实际上我们还没有运行学习算法，所以#上面的这一行将w初始化为0，并定义损失函数，我们定义train为学习算法，它用梯度下降法优化器使损失函数最小化，但实际上我们还没有运行学习算法，所以session.run(w)评估了w，让我：：</span></span><br><span class="line">​</span><br><span class="line">print(session.run(w))</span><br><span class="line">​</span><br><span class="line">所以如果我们运行这个，它评估等于<span class="number">0</span>，因为我们什么都还没运行。</span><br><span class="line"></span><br><span class="line"><span class="comment">#现在让我们输入：</span></span><br><span class="line">​</span><br><span class="line">$session.run(train)，它所做的就是运行一步梯度下降法。</span><br><span class="line"><span class="comment">#接下来在运行了一步梯度下降法后，让我们评估一下w的值，再print：</span></span><br><span class="line">​</span><br><span class="line">print(session.run(w))</span><br><span class="line"><span class="comment">#在一步梯度下降法之后，w现在是0.1。</span></span><br></pre></td></tr></tbody></table></figure>
<h4><span id="2-ru-he-yong-xun-lian-shu-ju">2. 如何用训练数据</span><a href="#2-ru-he-yong-xun-lian-shu-ju" class="header-anchor">#</a></h4><p>placeholder 在实际的训练过程中，要用不同的样本反复放到一个待优化函数中的，这个时候就可以用tensorflow的placeholder实现,在run的时候，对应给出<code>feed_dict</code>，表名占位符x的实际值。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf <span class="comment"># 导入Tensorflow</span></span><br><span class="line"></span><br><span class="line">coefficient = np.array([[<span class="number">2.</span>],[<span class="number">-10.</span>],[<span class="number">25.</span>]])</span><br><span class="line"></span><br><span class="line">w = tf.Variable(<span class="number">0</span>, dtype=tf.float32)</span><br><span class="line">x = tf.placeholder(tf.float32, [<span class="number">3</span>,<span class="number">1</span>]) <span class="comment"># 3x1大小的placeholder</span></span><br><span class="line">cost = w**x[<span class="number">0</span>][<span class="number">0</span>] - x[<span class="number">1</span>][<span class="number">0</span>]*w + x[<span class="number">2</span>][<span class="number">0</span>] <span class="comment"># 要优化的cost function（即forward prop的形式）</span></span><br><span class="line">train = tf.train.GradientDescentOptimizer(<span class="number">0.01</span>).minimize(cost) </span><br><span class="line"></span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line">session = tf.Session()</span><br><span class="line">session.run(init)</span><br><span class="line">print(session.run(w))</span><br><span class="line"></span><br><span class="line">session.run(train, feed_dict={x:coefficient}) <span class="comment"># x占位符替换为coefficient</span></span><br><span class="line">print(session.run(w))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    session.run(train, feed_dict={x:coefficient}) <span class="comment"># # x占位符替换为coefficient</span></span><br><span class="line">print(session.run(w))</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="3-ji-suan-liu">3. 计算流</span><a href="#3-ji-suan-liu" class="header-anchor">#</a></h4><p><strong>TensorFlow</strong>程序的核心是计算损失函数，然后<strong>TensorFlow</strong>自动计算出导数，以及如何最小化损失，因此这个等式或者这行代码所做的就是让<strong>TensorFlow</strong>建立计算图，</p>
<p>with 语句适用于对资源进行访问的场合，确保不管使用过程中是否发生异常都会执行必要的“清理”操作，释放资源，比如文件使用后自动关闭、线程中锁的自动获取和释放等。建立计算流的过程，前向传播的过程，operation</p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_56.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_54.png" alt></p>
<p><img src="/2019/04/17/ImprovingDeep%20learning.ai_Deep%20Neural%20NetworksHyperparameter%20tuning,%20Regularization%20and%20Optimization/L2_week2_55.png" alt></p>
<h1><span id="summary">Summary</span><a href="#summary" class="header-anchor">#</a></h1><font color="read">how to systematically organize the hyper parameter search process and  batch normalization and framework </font>

<p><a href="http://kyonhuang.top/Andrew-Ng-Deep-Learning-notes/#/Improving_Deep_Neural_Networks/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%9E%E7%94%A8%E5%B1%82%E9%9D%A2">http://kyonhuang.top/Andrew-Ng-Deep-Learning-notes/#/Improving_Deep_Neural_Networks/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AE%9E%E7%94%A8%E5%B1%82%E9%9D%A2</a></p>
<p><a href="http://www.ai-start.com/dl2017/html/lesson2-week1.html#header-n3">http://www.ai-start.com/dl2017/html/lesson2-week1.html#header-n3</a></p>
<p><a href="http://dl-notes.imshuai.com/#/c2w1?id=_4-heros-of-deep-learning-yoshua-bengio-interview">http://dl-notes.imshuai.com/#/c2w1?id=_4-heros-of-deep-learning-yoshua-bengio-interview</a></p>
<p><a href="https://www.youtube.com/watch?v=4Ct3Yujl1dk&amp;list=PLkDaE6sCZn6Hn0vK8co82zjQtt3T2Nkqc&amp;index=14">https://www.youtube.com/watch?v=4Ct3Yujl1dk&amp;list=PLkDaE6sCZn6Hn0vK8co82zjQtt3T2Nkqc&amp;index=14</a></p>
]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>彩铅DailyLifeStyle</title>
    <url>/2019/04/16/%E5%BD%A9%E9%93%85DailyLifeStyle/</url>
    <content><![CDATA[<h1><span id="day-one">Day one</span><a href="#day-one" class="header-anchor">#</a></h1><h2><span id="1-gong-ju-jian-dan-jie-shao">1. 工具简单介绍</span><a href="#1-gong-ju-jian-dan-jie-shao" class="header-anchor">#</a></h2><ol>
<li><p>彩铅</p>
<p>水溶性，油性</p>
</li>
<li><p>彩铅纸</p>
</li>
<li><p>铅笔</p>
<ol>
<li><p>B</p>
<p>2B&lt;4B黑的程度</p>
</li>
<li><p>H</p>
<p>4H&lt;8H软度</p>
</li>
</ol>
</li>
<li><p>橡皮</p>
<ol>
<li>软橡皮</li>
<li>硬橡皮</li>
<li>电动橡皮擦</li>
</ol>
</li>
<li><p>铅笔刀</p>
<ol>
<li>可跳档类型</li>
</ol>
</li>
<li><p>勾线笔</p>
</li>
<li><p>针管笔 （樱花）</p>
</li>
<li><p>笔套</p>
</li>
<li><p>高光笔</p>
<ol>
<li>可以用修正液替换（三棱)</li>
</ol>
</li>
<li><p>纸擦笔</p>
<ol>
<li>玛丽</li>
</ol>
</li>
<li>刷子</li>
<li><p>画板</p>
<ol>
<li>速写板</li>
</ol>
</li>
</ol>
<h2><span id="2-yan-se">2. 颜色</span><a href="#2-yan-se" class="header-anchor">#</a></h2><p>三原色： 红 黄 蓝</p>
<ol>
<li><p>色相</p>
<p>颜色</p>
</li>
<li><p>饱和度</p>
<ol>
<li>鲜艳程度</li>
</ol>
</li>
<li><p>明度</p>
<ol>
<li>明暗程度</li>
</ol>
</li>
<li>邻近色</li>
<li>对比色<ol>
<li>红-绿</li>
<li>蓝-橙</li>
<li>紫-黄</li>
</ol>
</li>
<li>暖色和冷色</li>
</ol>
<h2><span id="3-pai-xian">3. 排线</span><a href="#3-pai-xian" class="header-anchor">#</a></h2><ol>
<li><p>一个方向</p>
<p>往同一个方向排，无连接</p>
</li>
<li><p>来回</p>
<p>相连接，一条线</p>
</li>
<li><p>不同方向排列</p>
</li>
</ol>
<p>注意：力度和间距</p>
<h2><span id="4-ping-tu">4. 平涂</span><a href="#4-ping-tu" class="header-anchor">#</a></h2><p>力度一致</p>
<h2><span id="5-jian-bian">5. 渐变</span><a href="#5-jian-bian" class="header-anchor">#</a></h2><p>力度不一致</p>
]]></content>
      <categories>
        <category>娱乐生活</category>
      </categories>
      <tags>
        <tag>彩铅</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2019/04/13/machine%20learning%20test/</url>
    <content><![CDATA[<h1><span id="logistics-regression">Logistics Regression</span><a href="#logistics-regression" class="header-anchor">#</a></h1><p>   如何凸显你是一个对逻辑回归已经非常了解的人呢。那就是用一句话概括它！<strong>逻辑回归假设数据服从伯努利分布,通过极大化似然函数的方法，运用梯度下降来求解参数，来达到将数据二分类的目的。</strong></p>
<p>​     这里面其实包含了5个点 1：逻辑回归的假设，2：逻辑回归的损失函数，3：逻辑回归的求解方法，4：逻辑回归的目的，5:逻辑回归如何分类。这些问题是考核你对逻辑回归的基本了解。</p>
<a id="more"></a>
<h2><span id="luo-ji-hui-gui-de-ji-ben-jia-she"><strong>逻辑回归的基本假设</strong></span><a href="#luo-ji-hui-gui-de-ji-ben-jia-she" class="header-anchor">#</a></h2><ul>
<li><ul>
<li><p>任何的模型都是有自己的假设，在这个假设下模型才是适用的。逻辑回归的</p>
<p>第一个</p>
<p>基本假设是</p>
<p>假设数据服从伯努利分布。</p>
<p>伯努利分布有一个简单的例子是抛硬币，抛中为正面的概率是p,抛中为负面的概率是 1-p,在逻辑回归这个模型里面是假设 $h_θ(x)$为样本为正的概率，</p>
<p>$1−h_θ(x)$为样本为负的概率。那么整个模型可以描述为$h_θ(x;θ)=p$</p>
</li>
<li><p>逻辑回归的第二个假设是假设样本为正的概率是 $p=\frac{1}{1+e^{w^Tx}}$</p>
</li>
</ul>
</li>
<li><ul>
<li><p>所以逻辑回归的最终形式 </p>
<p>$h_θ(x;θ)=\frac{1}{1+e^{w^Tx}}$</p>
</li>
</ul>
</li>
</ul>
<h2><span id="luo-ji-hui-gui-de-sun-shi-han-shu"><strong>逻辑回归的损失函数</strong></span><a href="#luo-ji-hui-gui-de-sun-shi-han-shu" class="header-anchor">#</a></h2><ul>
<li><p>逻辑回归的损失函数是它的极大似然函数</p>
<p>$Lθ(x)=\pi_{i=1}^{m}h_θ(xi;θ)^y_i∗(1−h_θ(xi;θ))^{1−y_i}$</p>
</li>
</ul>
<h2><span id="luo-ji-hui-gui-de-qiu-jie-fang-fa"><strong>逻辑回归的求解方法</strong></span><a href="#luo-ji-hui-gui-de-qiu-jie-fang-fa" class="header-anchor">#</a></h2><ul>
<li><p>由于该极大似然函数无法直接求解，我们一般通过对该函数进行梯度下降来不断逼急最优解。在这个地方其实会有个加分的项，考察你对其他优化方法的了解。因为就梯度下降本身来看的话就有随机梯度下降，批梯度下降，small batch 梯度下降三种方式，面试官可能会问这三种方式的优劣以及如何选择最合适的梯度下降方式。</p>
<ul>
<li>简单来说 批梯度下降会获得全局最优解，缺点是在更新每个参数的时候需要遍历所有的数据，计算量会很大，并且会有很多的冗余计算，导致的结果是当数据量大的时候，每个参数的更新都会很慢。</li>
<li>随机梯度下降是以高方差频繁更新，优点是使得sgd会跳到新的和潜在更好的局部最优解，缺点是使得收敛到局部最优解的过程更加的复杂。</li>
<li>小批量梯度下降结合了sgd和batch gd的优点，每次更新的时候使用n个样本。减少了参数更新的次数，可以达到更加稳定收敛结果，一般在深度学习当中我们采用这种方法。</li>
</ul>
</li>
<li><ul>
<li>其实这里还有一个隐藏的更加深的加分项，看你了不了解诸如Adam，动量法等优化方法。因为上述方法其实还有两个致命的问题。<ul>
<li>第一个是如何对模型选择合适的学习率。自始至终保持同样的学习率其实不太合适。因为一开始参数刚刚开始学习的时候，此时的参数和最优解隔的比较远，需要保持一个较大的学习率尽快逼近最优解。但是学习到后面的时候，参数和最优解已经隔的比较近了，你还保持最初的学习率，容易越过最优点，在最优点附近来回振荡，通俗一点说，就很容易学过头了，跑偏了。</li>
<li>第二个是如何对参数选择合适的学习率。在实践中，对每个参数都保持的同样的学习率也是很不合理的。有些参数更新频繁，那么学习率可以适当小一点。有些参数更新缓慢，那么学习率就应该大一点。这里我们不展开，有空我会专门出一个专题介绍。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2><span id="luo-ji-hui-gui-de-mu-de"><strong>逻辑回归的目的</strong></span><a href="#luo-ji-hui-gui-de-mu-de" class="header-anchor">#</a></h2><ul>
<li><p>该函数的目的便是将数据二分类，提高准确率。</p>
</li>
<li><p>逻辑回归如何分类</p>
<ul>
<li>逻辑回归作为一个回归(也就是y值是连续的)，如何应用到分类上去呢。y值确实是一个连续的变量。逻辑回归的做法是划定一个阈值，y值大于这个阈值的是一类，y值小于这个阈值的是另外一类。阈值具体如何调整根据实际情况选择。一般会选择0.5做为阈值来划分。</li>
</ul>
</li>
</ul>
<h2><span id="3-dui-luo-ji-hui-gui-de-jin-yi-bu-ti-wen"><strong>3.对逻辑回归的进一步提问</strong></span><a href="#3-dui-luo-ji-hui-gui-de-jin-yi-bu-ti-wen" class="header-anchor">#</a></h2><p>​    逻辑回归虽然从形式上非常的简单，但是其内涵是非常的丰富。有很多问题是可以进行思考的</p>
<ul>
<li><p><strong>逻辑回归的损失函数为什么要使用极大似然函数作为损失函数？</strong></p>
<ul>
<li><p>损失函数一般有四种，平方损失函数，对数损失函数，HingeLoss0-1损失函数，绝对值损失函数。将极大似然函数取对数以后等同于对数损失函数。在逻辑回归这个模型下，对数损失函数的训练求解参数的速度是比较快的。至于原因大家可以求出这个式子的梯度更新</p>
<p>$w_j=w_j−(y^i−h_w(x^i;w))∗x_j^i\theta$</p>
<p>这个式子的更新速度只和$x_j,y_j</p>
<p>相关。和sigmod函数本身的梯度是无关的。这样更新的速度是可以自始至终都比较的稳定。</p>
</li>
<li><p>为什么不选平方损失函数的呢？其一是因为如果你使用平方损失函数，你会发现梯度更新的速度和sigmod函数本身的梯度是很相关的。sigmod函数在它在定义域内的梯度都不大于0.25。这样训练会非常的慢。</p>
</li>
</ul>
</li>
<li><p><strong>逻辑回归在训练的过程当中，如果有很多的特征高度相关或者说有一个特征重复了100遍，会造成怎样的影响？</strong></p>
</li>
<li><p>先说结论，如果在损失函数最终收敛的情况下，其实就算有很多特征高度相关也不会影响分类器的效果。</p>
</li>
<li>但是对特征本身来说的话，假设只有一个特征，在不考虑采样的情况下，你现在将它重复100遍。训练以后完以后，数据还是这么多，但是这个特征本身重复了100遍，实质上将原来的特征分成了100份，每一个特征都是原来特征权重值的百分之一。</li>
<li><p>如果在随机采样的情况下，其实训练收敛完以后，还是可以认为这100个特征和原来那一个特征扮演的效果一样，只是可能中间很多特征的值正负相消了。</p>
</li>
<li><p><strong>为什么我们还是会在训练的过程当中将高度相关的特征去掉？</strong></p>
<ul>
<li>去掉高度相关的特征会让模型的可解释性更好</li>
<li>可以大大提高训练的速度。如果模型当中有很多特征高度相关的话，就算损失函数本身收敛了，但实际上参数是没有收敛的，这样会拉低训练的速度。其次是特征多了，本身就会增大训练的时间。</li>
</ul>
</li>
</ul>
<h2><span id="4-luo-ji-hui-gui-de-you-que-dian-zong-jie"><strong>4.逻辑回归的优缺点总结</strong></span><a href="#4-luo-ji-hui-gui-de-you-que-dian-zong-jie" class="header-anchor">#</a></h2><p>​    面试的时候，别人也经常会问到，你在使用逻辑回归的时候有哪些感受。觉得它有哪些优缺点。</p>
<p>​     <strong>在这里我们总结了逻辑回归应用到工业界当中一些优点：</strong></p>
<ul>
<li><p>形式简单，模型的可解释性非常好。从特征的权重可以看到不同的特征对最后结果的影响，某个特征的权重值比较高，那么这个特征最后对结果的影响会比较大。</p>
</li>
<li><p>模型效果不错。在工程上是可以接受的（作为baseline)，如果特征工程做的好，效果不会太差，并且特征工程可以大家并行开发，大大加快开发的速度。</p>
</li>
<li><p>训练速度较快。分类的时候，计算量仅仅只和特征的数目相关。并且逻辑回归的分布式优化sgd发展比较成熟，训练的速度可以通过堆机器进一步提高，这样我们可以在短时间内迭代好几个版本的模型。</p>
</li>
<li><p>资源占用小,尤其是内存。因为只需要存储各个维度的特征值，。</p>
</li>
<li><p>方便输出结果调整。逻辑回归可以很方便的得到最后的分类结果，因为输出的是每个样本的概率分数，我们可以很容易的对这些概率分数进行cutoff，也就是划分阈值(大于某个阈值的是一类，小于某个阈值的是一类)。</p>
</li>
</ul>
<p>​      <strong>但是逻辑回归本身也有许多的缺点:</strong></p>
<ul>
<li><p>准确率并不是很高。因为形式非常的简单(非常类似线性模型)，很难去拟合数据的真实分布。</p>
</li>
<li><p>很难处理数据不平衡的问题。举个例子：如果我们对于一个正负样本非常不平衡的问题比如正负样本比 10000:1.我们把所有样本都预测为正也能使损失函数的值比较小。但是作为一个分类器，它对正负样本的区分能力不会很好。</p>
</li>
<li><p>处理非线性数据较麻烦。逻辑回归在不引入其他方法的情况下，只能处理线性可分的数据，或者进一步说，处理二分类的问题 。</p>
</li>
<li><p>逻辑回归本身无法筛选特征。有时候，我们会用gbdt来筛选特征，然后再上逻辑回归。</p>
</li>
</ul>
<h2><span id="mo-xing-ce-lue-suan-fa">模型、策略、算法</span><a href="#mo-xing-ce-lue-suan-fa" class="header-anchor">#</a></h2><h2><span id="codings">Codings</span><a href="#codings" class="header-anchor">#</a></h2>]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>machine learning</tag>
      </tags>
  </entry>
  <entry>
    <title>tensorflow</title>
    <url>/2019/04/11/tensorflow/</url>
    <content><![CDATA[<h1><span id="official-definition">official definition</span><a href="#official-definition" class="header-anchor">#</a></h1><a id="more"></a>
<h1><span id="what-is-tensorflow">What is tensorflow</span><a href="#what-is-tensorflow" class="header-anchor">#</a></h1><p><em>flow of tensors</em></p>
<p><strong>“TensorFlow is an open source software library for numerical computation using dataflow graphs. Nodes in the graph represents mathematical operations, while graph edges represent multi-dimensional data arrays (aka tensors) communicated between them. The flexible architecture allows you to deploy computation to one or more CPUs or GPUs in a desktop, server, or mobile device with a single API.”*</strong></p>
<p><img src="/2019/04/11/tensorflow/MyBlog\hexo\source\_posts\tensorflow\tensors_flowing-3.gif" alt></p>
<p>A major difference between numpy and TensorFlow is that TensorFlow follows a lazy programming paradigm. It first builds a graph of all the operation to be done, and then when a “session” is called, it “runs” the graph. It’s built to be scalable, by changing internal data representation to tensors (aka multi-dimensional arrays). Building a computational graph can be considered as the main ingredient of TensorFlow. </p>
<p>It’s easy to classify TensorFlow as a neural network library, but it’s not just that. Yes, it was designed to be a powerful neural network library. But it has the power to do much more than that. You can build other machine learning algorithms on it such as decision trees or k-Nearest Neighbors. You can literally do everything you normally would do in numpy! It’s aptly called “numpy on steroids”</p>
<p>The advantages of using TensorFlow are:</p>
<ul>
<li><p><strong>It has an intuitive construct</strong>, because as the name suggests it has <em>“flow of tensors”.</em> You can easily visualize each and every part of the graph.</p>
</li>
<li><p><strong>Easily train on cpu/gpu for distributed computing</strong></p>
</li>
<li><p><strong>Platform flexibility</strong>. You can run the models wherever you want, whether it is on mobile, server or PC.</p>
</li>
</ul>
<p>  scikit-learn</p>
  <figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># define hyperparamters of ML algorithm</span></span><br><span class="line">clf = svm.SVC(gamma=<span class="number">0.001</span>, C=<span class="number">100.</span>)</span><br><span class="line"><span class="comment"># train </span></span><br><span class="line">clf.fit(X, y)</span><br><span class="line"><span class="comment"># test </span></span><br><span class="line">clf.predict(X_test)</span><br></pre></td></tr></tbody></table></figure>
<p>  The usual workflow of running a program in TensorFlow is as follows:</p>
<ul>
<li><strong>Build a computational graph,</strong> this can be any mathematical operation TensorFlow supports.</li>
<li><strong>Initialize variables,</strong> to compile the variables defined previously</li>
<li><strong>Create session(会话）,</strong> this is where the magic starts!</li>
<li><strong>Run graph in session,</strong> the compiled graph is passed to the session, which starts its execution. </li>
<li><strong>Close session,</strong> shutdown the session.</li>
</ul>
<p>Lets write a small program to add two numbers!</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># import tensorflow</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># build computational graph</span></span><br><span class="line">a = tf.placeholder(tf.int16)</span><br><span class="line">b = tf.placeholder(tf.int16)</span><br><span class="line"></span><br><span class="line">addition = tf.add(a, b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># initialize variables</span></span><br><span class="line">init = tf.initialize_all_variables()</span><br><span class="line"></span><br><span class="line"><span class="comment"># create session and run the graph</span></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Addition: %i"</span> % sess.run(addition, feed_dict={a: <span class="number">2</span>, b: <span class="number">3</span>})</span><br><span class="line"></span><br><span class="line"><span class="comment"># close session</span></span><br><span class="line">sess.close()</span><br></pre></td></tr></tbody></table></figure>
<p>A typical implementation of Neural Network would be as follows:</p>
<ul>
<li><p>Define Neural Network architecture to be compiled</p>
</li>
<li><p>Transfer data to your model</p>
</li>
<li><p>Under the hood, the data is first divided into batches, so that it can be ingested. The batches are first preprocessed, augmented and then fed into Neural Network for training</p>
</li>
<li><p>The model then gets trained incrementally</p>
</li>
<li><p>Display the accuracy for a specific number of timesteps</p>
</li>
<li><p>After training save the model for future use</p>
</li>
<li><p>Test the model on a new data and check how it performs</p>
<h2><span id="san-lei-fei-chang-chong-yao-de-bian-liang">三类非常重要的变量</span><a href="#san-lei-fei-chang-chong-yao-de-bian-liang" class="header-anchor">#</a></h2><h3><span id="zhan-wei-fu">占位符</span><a href="#zhan-wei-fu" class="header-anchor">#</a></h3><p>tensorFlow中接收值的方式为占位符(placeholder)，创建placeholder</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">- <span class="comment"># b = tf.placeholder(tf.float32, [None, 1], name='b')</span></span><br><span class="line"></span><br><span class="line">第二个参数值为[<span class="literal">None</span>, <span class="number">1</span>]，其中<span class="literal">None</span>表示不确定，即不确定第一个维度的大小，第一维可以是任意大小。特别对应tensor数量(或者样本数量)，输入的tensor数目可以是<span class="number">32</span>、<span class="number">64</span>…</span><br></pre></td></tr></tbody></table></figure>
<p>placeholder: A way to feed data into the graphs<br>feed_dict: A dictionary to pass numeric values to computational graph</p>
<h3><span id="chang-liang">常量</span><a href="#chang-liang" class="header-anchor">#</a></h3><p>tf.constant()`定义常量</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">const = tf.constant(<span class="number">2.0</span>, name=<span class="string">'const'</span>)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="bian-liang">变量</span><a href="#bian-liang" class="header-anchor">#</a></h3></li>
</ul>
<p>​    使用<code>tf.Variable()</code>定义变量</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">c = tf.Variable(<span class="number">1.0</span>, dtype=tf.float32, name=<span class="string">'c'</span>)</span><br></pre></td></tr></tbody></table></figure>
<p>TensorFlow中所有的变量必须经过初始化才能使用，**初始化方式分两步：</p>
<ol>
<li><p>定义初始化operation</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 定义init operation</span></span><br><span class="line">init_op = tf.global_variables_initializer()</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>运行初始化operation</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 2. 运行init operation</span></span><br><span class="line">	sess.run(init_op)</span><br></pre></td></tr></tbody></table></figure>
</li>
</ol>
<p>reference</p>
<p><a href="https://jacobbuckman.com/post/tensorflow-the-confusing-parts-1/">https://jacobbuckman.com/post/tensorflow-the-confusing-parts-1/</a></p>
<p><a href="https://www.toptal.com/machine-learning/tensorflow-machine-learning-tutorial">https://www.toptal.com/machine-learning/tensorflow-machine-learning-tutorial</a></p>
<p><a href="https://github.com/aymericdamien/TensorFlow-Examples">https://github.com/aymericdamien/TensorFlow-Examples</a></p>
<p>video:<a href="https://morvanzhou.github.io/tutorials/machine-learning/tensorflow/">https://morvanzhou.github.io/tutorials/machine-learning/tensorflow/</a></p>
<p>course: <a href="https://classroom.udacity.com/courses/ud187">https://classroom.udacity.com/courses/ud187</a></p>
<p>tensorflow: GOOGLE 开源、Deep learning</p>
<h2><span id="lian-shu-cheng-jin">练数成金</span><a href="#lian-shu-cheng-jin" class="header-anchor">#</a></h2><h3><span id="c1">C1</span><a href="#c1" class="header-anchor">#</a></h3><ol>
<li><p>tensorboard ：a tool;visual network;debug</p>
</li>
<li><p>alter dir of jupyter 顺便改了下新下载的路径（GOOD）</p>
</li>
<li><p>CPU or GPU</p>
</li>
</ol>
<h3><span id="c2">C2</span><a href="#c2" class="header-anchor">#</a></h3><p>graphs 代表计算任务，节点（op)，一个op可以获得o个或者多个tensor,输出1个或者多个tensor</p>
<p>Session(会话)的上下文（context)中执行</p>
<p>tensor表示数据,n维数组</p>
<h3><span id="c3">C3</span><a href="#c3" class="header-anchor">#</a></h3><ol>
<li><p>简单的回归神经网络（拟合二次函数），貌似学了理论没有实践，还真是忘得快啊</p>
</li>
<li><p>手写体分类、Softmax函数</p>
<p>softmax函数可以给不同的对象分配概率，softmax($x_i$)=$\frac{exp(x_i)}{\sum_j{exp(x_j)}}$</p>
<p>如输出[1,2,5] ,$p1=\frac{exp(1)}{exp(1)+exp(2)+exp(5)}$,$p2=\frac{exp(2)}{exp(1)+exp(2)+exp(5)}$,$p1=\frac{exp(5)}{exp(1)+exp(2)+exp(5)}$</p>
</li>
</ol>
<h2><span id="keras">Keras</span><a href="#keras" class="header-anchor">#</a></h2><ol>
<li><p>安装</p>
</li>
<li><p>backend</p>
<p>基于什么做运算（tensorflow or theano)</p>
<p>import keras 查看 底层搭建</p>
<p> a） /.keras/keras.json 相关的配置信息  </p>
<p>b) 终端改，单次</p>
<p>import os</p>
<p>os.environ[‘KERAS_BACKEND’]= ‘tensorflow’</p>
<p>import keras</p>
</li>
<li><p>For example</p>
<p>model :Sequential</p>
<p>layer : Dense activation</p>
<p>训练算法：model.compile(参数optimizer=’梯度下降法的变种’ , loss=’rms/‘)</p>
<p>训练：model. fit (x,y) model.train_on_batch</p>
<p>evaluate:model.evaluate</p>
<p>prediction:  model.predict(x_test, batch_size=128)</p>
</li>
</ol>
<p>   <a href="https://github.com/MorvanZhou/tutorials/blob/master/kerasTUT/5-classifier_example.py">https://github.com/MorvanZhou/tutorials/blob/master/kerasTUT/5-classifier_example.py</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># 4 - Regressor example</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np.random.seed(<span class="number">1337</span>)  <span class="comment"># for reproducibility</span></span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential <span class="comment"># 按顺序建立</span></span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense <span class="comment"># 全连接层</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># create some data</span></span><br><span class="line">X = np.linspace(<span class="number">-1</span>, <span class="number">1</span>, <span class="number">200</span>)</span><br><span class="line">np.random.shuffle(X)    <span class="comment"># randomize the data</span></span><br><span class="line">Y = <span class="number">0.5</span> * X + <span class="number">2</span> + np.random.normal(<span class="number">0</span>, <span class="number">0.05</span>, (<span class="number">200</span>, ))</span><br><span class="line"><span class="comment"># plot data</span></span><br><span class="line">plt.scatter(X, Y)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">X_train, Y_train = X[:<span class="number">160</span>], Y[:<span class="number">160</span>]     <span class="comment"># first 160 data points</span></span><br><span class="line">X_test, Y_test = X[<span class="number">160</span>:], Y[<span class="number">160</span>:]       <span class="comment"># last 40 data points</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># build a neural network from the 1st layer to the last layer</span></span><br><span class="line">model = Sequential()</span><br><span class="line"></span><br><span class="line">model.add(Dense(units=<span class="number">1</span>, input_dim=<span class="number">1</span>)) </span><br><span class="line"></span><br><span class="line"><span class="comment"># choose loss function and optimizing method</span></span><br><span class="line">model.compile(loss=<span class="string">'mse'</span>, optimizer=<span class="string">'sgd'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># training</span></span><br><span class="line">print(<span class="string">'Training -----------'</span>)</span><br><span class="line"><span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">301</span>):</span><br><span class="line">    cost = model.train_on_batch(X_train, Y_train)</span><br><span class="line">    <span class="keyword">if</span> step % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">'train cost: '</span>, cost)</span><br><span class="line"></span><br><span class="line"><span class="comment"># test</span></span><br><span class="line">print(<span class="string">'\nTesting ------------'</span>)</span><br><span class="line">cost = model.evaluate(X_test, Y_test, batch_size=<span class="number">40</span>)</span><br><span class="line">print(<span class="string">'test cost:'</span>, cost)</span><br><span class="line">W, b = model.layers[<span class="number">0</span>].get_weights()</span><br><span class="line">print(<span class="string">'Weights='</span>, W, <span class="string">'\nbiases='</span>, b)</span><br><span class="line"></span><br><span class="line"><span class="comment"># plotting the prediction</span></span><br><span class="line">Y_pred = model.predict(X_test)</span><br><span class="line">plt.scatter(X_test, Y_test)</span><br><span class="line">plt.plot(X_test, Y_pred)</span><br><span class="line">plt.show()</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="5">5</span><a href="#5" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">To know more or get code samples, please visit my website:</span></span><br><span class="line"><span class="string">https://morvanzhou.github.io/tutorials/</span></span><br><span class="line"><span class="string">Or search: 莫烦Python</span></span><br><span class="line"><span class="string">Thank you for supporting!</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># please note, all tutorial code are running under python3.5.</span></span><br><span class="line"><span class="comment"># If you use the version like python2.7, please modify the code accordingly</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5 - Classifier example</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np.random.seed(<span class="number">1337</span>)  <span class="comment"># for reproducibility</span></span><br><span class="line"><span class="keyword">from</span> keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation</span><br><span class="line"><span class="keyword">from</span> keras.optimizers <span class="keyword">import</span> RMSprop</span><br><span class="line"></span><br><span class="line"><span class="comment"># download the mnist to the path '~/.keras/datasets/' if it is the first time to be called</span></span><br><span class="line"><span class="comment"># X shape (60,000 28x28), y shape (10,000, )</span></span><br><span class="line">(X_train, y_train), (X_test, y_test) = mnist.load_data()</span><br><span class="line"></span><br><span class="line"><span class="comment"># data pre-processing</span></span><br><span class="line">X_train = X_train.reshape(X_train.shape[<span class="number">0</span>], <span class="number">-1</span>) / <span class="number">255.</span>   <span class="comment"># normalize</span></span><br><span class="line">X_test = X_test.reshape(X_test.shape[<span class="number">0</span>], <span class="number">-1</span>) / <span class="number">255.</span>      <span class="comment"># normalize</span></span><br><span class="line">y_train = np_utils.to_categorical(y_train, num_classes=<span class="number">10</span>)</span><br><span class="line">y_test = np_utils.to_categorical(y_test, num_classes=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Another way to build your neural net</span></span><br><span class="line">model = Sequential([</span><br><span class="line">    Dense(<span class="number">32</span>, input_dim=<span class="number">784</span>),</span><br><span class="line">    Activation(<span class="string">'relu'</span>),</span><br><span class="line">    Dense(<span class="number">10</span>),</span><br><span class="line">    Activation(<span class="string">'softmax'</span>),</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Another way to define your optimizer</span></span><br><span class="line">rmsprop = RMSprop(lr=<span class="number">0.001</span>, rho=<span class="number">0.9</span>, epsilon=<span class="number">1e-08</span>, decay=<span class="number">0.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># We add metrics to get more results you want to see</span></span><br><span class="line">model.compile(optimizer=rmsprop,</span><br><span class="line">              loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">              metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Training ------------'</span>)</span><br><span class="line"><span class="comment"># Another way to train the model</span></span><br><span class="line">model.fit(X_train, y_train, epochs=<span class="number">2</span>, batch_size=<span class="number">32</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nTesting ------------'</span>)</span><br><span class="line"><span class="comment"># Evaluate the model with the metrics we defined earlier</span></span><br><span class="line">loss, accuracy = model.evaluate(X_test, y_test)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'test loss: '</span>, loss)</span><br><span class="line">print(<span class="string">'test accuracy: '</span>, accuracy)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="6-cnn-juan-ji-shen-jing-wang-luo">6 CNN卷积神经网络</span><a href="#6-cnn-juan-ji-shen-jing-wang-luo" class="header-anchor">#</a></h2><p>不是对</p>
<p><a href="https://www.cnblogs.com/skyfsm/p/6790245.html">https://www.cnblogs.com/skyfsm/p/6790245.html</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">To know more or get code samples, please visit my website:</span></span><br><span class="line"><span class="string">https://morvanzhou.github.io/tutorials/</span></span><br><span class="line"><span class="string">Or search: 莫烦Python</span></span><br><span class="line"><span class="string">Thank you for supporting!</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># please note, all tutorial code are running under python3.5.</span></span><br><span class="line"><span class="comment"># If you use the version like python2.7, please modify the code accordingly</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 6 - CNN example</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># to try tensorflow, un-comment following two lines</span></span><br><span class="line"><span class="comment"># import os</span></span><br><span class="line"><span class="comment"># os.environ['KERAS_BACKEND']='tensorflow'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np.random.seed(<span class="number">1337</span>)  <span class="comment"># for reproducibility</span></span><br><span class="line"><span class="keyword">from</span> keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense, Activation, Convolution2D, MaxPooling2D, Flatten</span><br><span class="line"><span class="keyword">from</span> keras.optimizers <span class="keyword">import</span> Adam</span><br><span class="line"></span><br><span class="line"><span class="comment"># download the mnist to the path '~/.keras/datasets/' if it is the first time to be called</span></span><br><span class="line"><span class="comment"># training X shape (60000, 28x28), Y shape (60000, ). test X shape (10000, 28x28), Y shape (10000, )</span></span><br><span class="line">(X_train, y_train), (X_test, y_test) = mnist.load_data()</span><br><span class="line"></span><br><span class="line"><span class="comment"># data pre-processing</span></span><br><span class="line">X_train = X_train.reshape(<span class="number">-1</span>, <span class="number">1</span>,<span class="number">28</span>, <span class="number">28</span>)/<span class="number">255.</span></span><br><span class="line">X_test = X_test.reshape(<span class="number">-1</span>, <span class="number">1</span>,<span class="number">28</span>, <span class="number">28</span>)/<span class="number">255.</span></span><br><span class="line">y_train = np_utils.to_categorical(y_train, num_classes=<span class="number">10</span>)</span><br><span class="line">y_test = np_utils.to_categorical(y_test, num_classes=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Another way to build your CNN</span></span><br><span class="line">model = Sequential()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Conv layer 1 output shape (32, 28, 28)</span></span><br><span class="line">model.add(Convolution2D(</span><br><span class="line">    batch_input_shape=(<span class="literal">None</span>, <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>),</span><br><span class="line">    filters=<span class="number">32</span>,</span><br><span class="line">    kernel_size=<span class="number">5</span>,</span><br><span class="line">    strides=<span class="number">1</span>,</span><br><span class="line">    padding=<span class="string">'same'</span>,     <span class="comment"># Padding method</span></span><br><span class="line">    data_format=<span class="string">'channels_first'</span>,</span><br><span class="line">))</span><br><span class="line">model.add(Activation(<span class="string">'relu'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pooling layer 1 (max pooling) output shape (32, 14, 14)</span></span><br><span class="line">model.add(MaxPooling2D(</span><br><span class="line">    pool_size=<span class="number">2</span>,</span><br><span class="line">    strides=<span class="number">2</span>,</span><br><span class="line">    padding=<span class="string">'same'</span>,    <span class="comment"># Padding method</span></span><br><span class="line">    data_format=<span class="string">'channels_first'</span>,</span><br><span class="line">))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Conv layer 2 output shape (64, 14, 14)</span></span><br><span class="line">model.add(Convolution2D(<span class="number">64</span>, <span class="number">5</span>, strides=<span class="number">1</span>, padding=<span class="string">'same'</span>, data_format=<span class="string">'channels_first'</span>))</span><br><span class="line">model.add(Activation(<span class="string">'relu'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pooling layer 2 (max pooling) output shape (64, 7, 7)</span></span><br><span class="line">model.add(MaxPooling2D(<span class="number">2</span>, <span class="number">2</span>, <span class="string">'same'</span>, data_format=<span class="string">'channels_first'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fully connected layer 1 input shape (64 * 7 * 7) = (3136), output shape (1024)</span></span><br><span class="line">model.add(Flatten())</span><br><span class="line">model.add(Dense(<span class="number">1024</span>))</span><br><span class="line">model.add(Activation(<span class="string">'relu'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fully connected layer 2 to shape (10) for 10 classes</span></span><br><span class="line">model.add(Dense(<span class="number">10</span>))</span><br><span class="line">model.add(Activation(<span class="string">'softmax'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Another way to define your optimizer</span></span><br><span class="line">adam = Adam(lr=<span class="number">1e-4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># We add metrics to get more results you want to see</span></span><br><span class="line">model.compile(optimizer=adam,</span><br><span class="line">              loss=<span class="string">'categorical_crossentropy'</span>,</span><br><span class="line">              metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"></span><br><span class="line">print(<span class="string">'Training ------------'</span>)</span><br><span class="line"><span class="comment"># Another way to train the model</span></span><br><span class="line">model.fit(X_train, y_train, epochs=<span class="number">1</span>, batch_size=<span class="number">64</span>,)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\nTesting ------------'</span>)</span><br><span class="line"><span class="comment"># Evaluate the model with the metrics we defined earlier</span></span><br><span class="line">loss, accuracy = model.evaluate(X_test, y_test)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'\ntest loss: '</span>, loss)</span><br><span class="line">print(<span class="string">'\ntest accuracy: '</span>, accuracy)</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>tensorlow</tag>
      </tags>
  </entry>
  <entry>
    <title>Deep Learning Neural Network and Deep Learning</title>
    <url>/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/</url>
    <content><![CDATA[<h1><span id="course-one-neural-networks-and-deep-learning-course-1-of-the-deep-learning-specialization">Course one :  Neural Networks and Deep Learning(Course 1 of the Deep Learning Specialization)</span><a href="#course-one-neural-networks-and-deep-learning-course-1-of-the-deep-learning-specialization" class="header-anchor">#</a></h1><h1><span id="c1w1">C1W1</span><a href="#c1w1" class="header-anchor">#</a></h1><h2><span id="c1w1l01-welcome">C1W1L01: Welcome</span><a href="#c1w1l01-welcome" class="header-anchor">#</a></h2><p>AI is the new Electricity!</p>
<p>Course 1: Neural Networks and Deep Learning</p>
<p>Course 2: Improving Deep Neural Networks: Hyperparameter tuning,Regularization and Optimization</p>
<p>Course 3: Structuring your Machine Learning project</p>
<p>Course 4: Convolutional Neural Networks</p>
<p>Course 5: Natural Langurge Processing: Building sequence models</p>
<h2><span id="c1w1l02-what-is-neural-network">C1W1L02 : What is Neural Network</span><a href="#c1w1l02-what-is-neural-network" class="header-anchor">#</a></h2><p>Deep Learning = training (very large) neural network</p>
<h3><span id="for-example-of-house-prize-prediction-the-simplest-neural-network">For example of house prize prediction : the simplest neural network</span><a href="#for-example-of-house-prize-prediction-the-simplest-neural-network" class="header-anchor">#</a></h3><p>如果现在有六栋房子的信息，分别是房子的大小(size of house)和对应的价格(prize),绘制出如下的。自然的想法：线性回归，得到拟合的直线。值得注意的是，房价不可能是负数吧！因此下图中蓝色的线，大致就是我们所需要的函数。这个对应一个最简单神经网络（neural network）</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/housr_prize_1.png" alt></p>
<p>上述是一个tiny little neural network，更大的，更复杂的神经网络是</p>
<p>把很多最简单的single neural堆积(stacking)到一起。</p>
<h3><span id="for-example-of-house-prize-prediction-stacking-the-neural">For example of house prize prediction : stacking the  neural</span><a href="#for-example-of-house-prize-prediction-stacking-the-neural" class="header-anchor">#</a></h3><p>上面这个例子，仅仅考虑特征是size,实际情况上，与房屋相关的特征还有number of bedrooms、zip code、wealth, number of bedrooms and size affect family size. The zip code is a feature that tells you you know walkability. The wealth tells you how good is the school quality</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/house_prize_2.png" alt></p>
<p>hidden layer 用输入层计算得到，因此说输入层与中间层紧密连接起来了</p>
<h3><span id="the-actual-application-of-neural-networks">The actual application of neural networks</span><a href="#the-actual-application-of-neural-networks" class="header-anchor">#</a></h3><p>hidden layer 与上一层的连接情况并不是手工确定，每一层都是上一层所有的输入函数，所以建立的神经网络如下：</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/house prize 3.png" alt></p>
<p>The remarkable thing about neural network</p>
<ol>
<li>Given enough data about X&amp;Y (x,y) which good at freaking out functions :map x to y</li>
<li>Most powerful in supervised learning</li>
</ol>
<h3><span id="c2w1cl03-supervised-learning-with-neural-network">C2W1CL03 : Supervised Learning with Neural Network</span><a href="#c2w1cl03-supervised-learning-with-neural-network" class="header-anchor">#</a></h3><h3><span id="chang-jian-de-jian-du-xue-xi">常见的监督学习</span><a href="#chang-jian-de-jian-du-xue-xi" class="header-anchor">#</a></h3><p>截止到目前，<strong>Neural Network的成功应用基本都在Supervised Learning</strong>。比如：Ad，Images vision, Audio to Text, Machine translation, Autonomous Driving</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/supervised-learning-exmples.png" alt></p>
<h3><span id="chang-jian-de-shen-jing-wang-luo-de-she-ji">常见的神经网络的设计</span><a href="#chang-jian-de-shen-jing-wang-luo-de-she-ji" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/NeuralNetworkExamples.png" alt></p>
<p>卷积神经网络：<strong>Convolutional Neural Network</strong> (CNN) 通常有用图像数据</p>
<p>递归神经网络： <strong>Recurrent Neural Network</strong> (RNN) 通常用于time series</p>
<p>对应复杂的应用中，定制一些复杂的混合的神经网络结构</p>
<h3><span id="jie-gou-hua-he-fei-jie-gou-hua-shu-ju">结构化和非结构化数据</span><a href="#jie-gou-hua-he-fei-jie-gou-hua-shu-ju" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/datastructure.png" alt></p>
<p>处理非结构化数据是很难的，与结构化数据比较，让计算机理解非结构化数据很难</p>
<h3><span id="c1w1l04-why-is-deep-learning-taking-off">C1W1L04: Why is deep learning taking off</span><a href="#c1w1l04-why-is-deep-learning-taking-off" class="header-anchor">#</a></h3><p>Answer: scale</p>
<p>If you want to hit this very high level of performance ,firstly, you need to be able train a big enough neural network in order to take advantage of the huge amount of data and second you need to be out here on the x axes you do need a lot of data.</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/scale.jpg" alt></p>
<ol>
<li>If you do not have a lot training data is often up to your skill at hand engineering features that determines the foreman.在这个小的训练集中，各种算法的优先级事实上定义的也不是很明确，所以如果你没有大量的训练集，那效果会取决于你的特征工程能力，那将决定最终的性能。</li>
<li>这个图形区域的左边，各种算法之间的优先级并不是定义的很明确，最终的性能更多的是取决于你在用<strong>工程选择特征</strong>方面的能力以及<strong>算法处理方面</strong>的一些细节.</li>
<li>只是在某些大数据规模非常庞大的训练集，也就是在右边这个会非常的大时，我们能更加持续地看到更大的由神经网络控制其它方法.</li>
</ol>
<h3><span id="the-reason">The Reason</span><a href="#the-reason" class="header-anchor">#</a></h3><ol>
<li><p>the scale of data</p>
</li>
<li><p>the speed of computation  such as GPUS</p>
</li>
<li><p>innovation of algorithm </p>
<p>许多算法方面的创新，一直是在尝试着使得神经网络运行的更快</p>
<p>switch sigmoid function to relu function</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/algorithm——rul.jpg" alt></p>
</li>
</ol>
<p>在这个区域，也就是这个<strong>sigmoid</strong>函数的梯度会接近零，所以学习的速度会变得非常缓慢，因为当你实现梯度下降以及梯度接近零的时候，参数会更新的很慢，所以学习的速率也会变的很慢，而通过改变这个被叫做激活函数的东西，神经网络换用这一个函数，叫做<strong>ReLU</strong>的函数（修正线性单元），<strong>ReLU</strong>它的梯度对于所有输入的负值都是零，因此梯度更加不会趋向逐渐减少到零。</p>
<p>训练你的神经网络的过程，很多时候是凭借直觉的，往往你对神经网络架构有了一个想法，于是你尝试写代码实现你的想法，然后让你运行一个试验环境来告诉你，你的神经网络效果有多好，通过参考这个结果再返回去修改你的神经网络里面的一些细节，然后你不断的重复上面的操作，当你的神经网络需要很长时间去训练，需要很长时间重复这一循环，在这里就有很大的区别，根据你的生产效率去构建更高效的神经网络。当你能够有一个想法，试一试，看效果如何。在10分钟内，或者也许要花上一整天，如果你训练你的神经网络用了一个月的时间，有时候发生这样的事情，也是值得的，因为你很快得到了一个结果。在10分钟内或者一天内，你应该尝试更多的想法，那极有可能使得你的神经网络在你的应用方面工作的更好、更快的计算，在提高速度方面真的有帮助，那样你就能更快地得到你的实验结果。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/faster.jpg" alt></p>
<h2><span id="summary"><font color="red">Summary</font></span><a href="#summary" class="header-anchor">#</a></h2><font color="green">早上花了2h小时学习第一周的视频，先看一遍视频的字幕，逐字逐句的理解，虽然很多时候都是自己乱猜的，大概清楚讲的什么！然后再看大牛的笔记，然后再看一篇结合PPT。下午也看了半个多小时。问题：1. 自己的英文水平不够，这个需要大大的提高讷。2. 其实只要看别人的笔记就可以知道内容，但是还是想听andow ng的讲解。3. 视频都比较短，每个视频设计的知识点或者内容不多，1到3个，分成知识点做笔记还是不错的</font>

<font color="blue">这一周的内容，也就是今天我学习的知识简单和容易理解。学习了神经网络的大致结构，神经网络的应用领域，深度学习为什么取得快速的发展的三点原因，尤其是数据scale与其他方法和神经网络规模的大致性能关系</font>

<h1><span id="c1w2">C1W2</span><a href="#c1w2" class="header-anchor">#</a></h1><h3><span id="c1w2l01-binary-classification">C1W2L01: Binary Classification</span><a href="#c1w2l01-binary-classification" class="header-anchor">#</a></h3><p>In this week, we’re going to go over the basics of neural network programming. We are going to study handle data without for loop.</p>
<p>forward password for propagation </p>
<p> backward pass or what’s called a backward propagation step</p>
<p>Why the computations in learning in a neural network can be organized in this board propagation and a separate backward propagation by using logistic regression to convey(传达) theses ideas.</p>
<h3><span id="binary-classification">Binary Classification</span><a href="#binary-classification" class="header-anchor">#</a></h3><p>Input； an image . three separate matrices corresponding red green and blue color channels of this image. 如果你的图片大小为64x64像素，那么你就有三个规模为64x64的矩阵，分别对应图片中红、绿、蓝三种像素的强度值</p>
<p>unroll all of these pixel intensity values into  a feature vector </p>
<p>pixel intensity values of this image </p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/w_piexl.jpg" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/2_blue_green_read.jpg" alt></p>
<p>notation</p>
<p>(x,y)： a pair X comma Y</p>
<p>$M_{train}$: M subscript train</p>
<p>每条测试集在矩阵中都是以列向量的形式存在</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/2_noation.png" alt></p>
<p>Matrix capital</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/2_nation_2.png" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/2_all_nation.jpg" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/2_all_nation_1.jpg" alt></p>
<h3><span id="model-hypothesis-function-logistic-regression">Model : hypothesis Function :Logistic Regression</span><a href="#model-hypothesis-function-logistic-regression" class="header-anchor">#</a></h3><p>So given an input X and the parameters W and b, how do we generate the output Y hat? Well, one thing you could try, that doesn’t work, would be to have Y hat be w transpose X plus B, kind of a linear function of the input X. And in fact, this is what you use if you were doing linear regression. But this isn’t a very good algorithm for binary classification because you want Y hat to be the chance that Y is equal to one. </p>
<p>So,Y hat should really be between zero and one. This is what the sigmoid function looks like. </p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/log_1.png" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/log_3.jpg" alt></p>
<h3><span id="sigmoid-function">sigmoid function</span><a href="#sigmoid-function" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
\sigma(z) = \frac{1}{1+e^{-z}}</script><p>因为你想让$\hat{y}$表示实际值$y$等于1的机率的话， 应该在0到1之间。这是一个需要解决的问题，因为可能比1要大得多，或者甚至为一个负值。对于你想要的在0和1之间的概率来说它是没有意义的，因此在逻辑回归中，我们的输出应该是等于由上面得到的线性函数式子作为自变量的<strong>sigmoid</strong>函数中，公式如上图最下面所示，将线性函数转换为非线性函数。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/log_2.jpg" alt></p>
<p>注意：原来$w,b$是分开在，这里就合并，引入变量$x_0=1$,对应偏置$b$,</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/log_3.png" alt></p>
<h3><span id="strategy-cost-function">Strategy：Cost function</span><a href="#strategy-cost-function" class="header-anchor">#</a></h3><p>Firstly : Loss function</p>
<script type="math/tex; mode=display">
L(\hat{y},y)=\frac{1}{2}\sum{(y_i-\hat{y_i})^2}</script><p>这个优化问题不是凸优化问题(non-convex)，因此不选用这个</p>
<p>Secondly，</p>
<script type="math/tex; mode=display">
L(y,\hat{y})=-(ylog^{\hat{y}}+(1-y)log^{1-\hat{y}})</script><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/log_cost_1.jpg" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/log__cost_2.jpg" alt></p>
<h3><span id="algorithm-gradient-descent">Algorithm: Gradient Descent</span><a href="#algorithm-gradient-descent" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/GD1.jpg" alt></p>
<p>Gradient Descent算法步骤：</p>
<ol>
<li>Initialize $w$, $b$ to zero</li>
<li>repeat：</li>
</ol>
<p>$w :=w−\alpha \frac{∂J(w,b)}{∂w}$</p>
<p>$b :=b-\alpha \frac{∂J(w,b)}{∂b}$</p>
<h3><span id="c1w2l05-amp-c1w2l06-derivatives">C1W2L05 &amp; C1W2L06 Derivatives</span><a href="#c1w2l05-amp-c1w2l06-derivatives" class="header-anchor">#</a></h3><p>求导，这个是微积分的内容，不用写了！</p>
<h3><span id="c1w2l07-computation-graph">C1W2L07： Computation Graph</span><a href="#c1w2l07-computation-graph" class="header-anchor">#</a></h3><h3><span id="c1w2l08-derivatives-with-compution-graphs">C1W2L08 : Derivatives with compution graphs</span><a href="#c1w2l08-derivatives-with-compution-graphs" class="header-anchor">#</a></h3><p>链式法则</p>
<script type="math/tex; mode=display">
\frac{\partial L}{\partial v}=\frac{\partial L}{\partial u}\frac{\partial u}{\partial v}</script><h3><span id="c1w2l09-logistic-regression-gradient-descent">C1W2L09 : Logistic Regression Gradient Descent</span><a href="#c1w2l09-logistic-regression-gradient-descent" class="header-anchor">#</a></h3><h4><span id="single-training-example">single training example</span><a href="#single-training-example" class="header-anchor">#</a></h4><p>You’ve seen the loss function that measures how well you’re doing on the single training example. You’ve also seen the cost function that measures how well your parameters w and b are doing on your entire training set.</p>
<p>You’ve heard me say that the computations of a neural network are organized in terms of a forward pass or a forward propagation step, in which we compute the output of the neural network, followed by a backward pass or back propagation step, which we use to compute gradients or compute derivatives.</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/gd_1.jpg" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/gd_2.png" alt></p>
<script type="math/tex; mode=display">
\frac{\partial L}{\partial w}=\frac{\partial L}{\partial \alpha }\frac{\partial \alpha }{\partial z}\frac{\partial z}{\partial w}
\\=-(\frac{y}{a}+\frac{1-y}{1-a})a(1-a)x=(a-y)x</script><h3><span id="c1w2l10-gradient-descent-on-m-example">C1W2L10 Gradient Descent on m example</span><a href="#c1w2l10-gradient-descent-on-m-example" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
\min L(w,b)=\sum_{i=1}^{m}L(\alpha_i,y_i)/m\\
\frac{\partial L }{\partial w}=(\sum_{i=1}^{m}\frac{\partial L(a_i,y_i)}{\partial w})/m=(\sum_{i=1}^{m}(a-y_i)x_i)/m\\
\frac{\partial L }{\partial b}=(\sum_{i=1}^{m}\frac{\partial L(a_i,y_i)}{\partial b})/m=(\sum_{i=1}^{m}(a-1)x_i)/m</script><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/gd_3jpg.jpg" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/cost_3.png" alt></p>
<p>上面的伪代码告诉我们，需要多次for loop完成代码，但是这会造成运算速度下降！因为我们越来越多地训练非常大的数据集，因此你真的需要你的代码变得非常高效。所以在接下来的几个视频中，我们会谈到向量化，以及如何应用向量化而连一个<strong>for</strong>循环都不使用。所以学习了这些，我希望你有关于如何应用逻辑回归，或是用于逻辑回归的梯度下降，事情会变得更加清晰</p>
<h3><span id="summary">summary</span><a href="#summary" class="header-anchor">#</a></h3><font color="red">今天主要学习了以logistics regression 为例，如何通过链式求导的过程，简单的练习一下，以及再次了解什么是梯度下降法，以及训练学习算法的需要一个损失函数，训练的过程就是求损失函数最优值的过程</font>

<h3><span id="c1w2l11-vectorization">C1W2L11: Vectorization</span><a href="#c1w2l11-vectorization" class="header-anchor">#</a></h3><h4><span id="1-shi-me-shi-vectorization-jiang-for-loop-jin-ke-neng-zhuan-huan-wei-ju-zhen-yun-suan">1. 什么是Vectorization：将 for loop 尽可能转换为矩阵运算</span><a href="#1-shi-me-shi-vectorization-jiang-for-loop-jin-ke-neng-zhuan-huan-wei-ju-zhen-yun-suan" class="header-anchor">#</a></h4><p>通过<strong>numpy</strong>内置函数和避开显式的循环(<strong>loop</strong>)的方式进行向量化，从而有效提高代码速度。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/v_1.jpg" alt></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">np.dot(a,b)</span><br><span class="line">如果a,b是一维数组，则计算点积</span><br><span class="line">如果a,b是多维数据，则矩阵乘法</span><br></pre></td></tr></tbody></table></figure>
<h4><span id="2-an-example-of-vectorization">2. An example of vectorization</span><a href="#2-an-example-of-vectorization" class="header-anchor">#</a></h4><p>vectorization的好处：conciser code, but faster execution 一个简单的对比实验：1,000,000大小的两个向量内积计算，for loop要比Vectorization快300倍。 在Deep Learning时代，vectorization是一项重要的技能。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment">#导入numpy库</span></span><br><span class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]) <span class="comment">#创建一个数据a</span></span><br><span class="line">print(a)</span><br><span class="line"><span class="comment"># [1 2 3 4]</span></span><br><span class="line"><span class="keyword">import</span> time <span class="comment">#导入时间库</span></span><br><span class="line">a = np.random.rand(<span class="number">1000000</span>)</span><br><span class="line">b = np.random.rand(<span class="number">1000000</span>) <span class="comment">#通过round随机得到两个一百万维度的数组</span></span><br><span class="line">tic = time.time() <span class="comment">#现在测量一下当前时间</span></span><br><span class="line"><span class="comment">#向量化的版本</span></span><br><span class="line">c = np.dot(a,b)</span><br><span class="line">toc = time.time()</span><br><span class="line">print(“Vectorized version:” + str(<span class="number">1000</span>*(toc-tic)) +”ms”) <span class="comment">#打印一下向量化的版本的时间</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">#继续增加非向量化的版本</span></span><br><span class="line">c = <span class="number">0</span></span><br><span class="line">tic = time.time()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):</span><br><span class="line">    c += a[i]*b[i]</span><br><span class="line">toc = time.time()</span><br><span class="line">print(c)</span><br><span class="line">print(“For loop:” + str(<span class="number">1000</span>*(toc-tic)) + “ms”)<span class="comment">#打印for循环的版本的时间</span></span><br></pre></td></tr></tbody></table></figure>
<h4><span id="3-gpu-or-cpu">3. GPU or CPU</span><a href="#3-gpu-or-cpu" class="header-anchor">#</a></h4><ol>
<li><p>大规模的深度学习再<strong>GPU</strong>或者图像处理单元运行”，<strong>CPU</strong>和<strong>GPU</strong>都有并行化的指令，他们有时候会叫做<strong>SIMD</strong>指令，这个代表了一个单独指令多维数据，这个的基础意义是，如果你使用了<strong>built-in</strong>函数,像<code>np.function</code>或者并不要求你实现循环的函数，它可以让<strong>python</strong>的充分利用并行化计算。</p>
</li>
<li><p>只是在<strong>GPU</strong>和<strong>CPU</strong>上面计算，<strong>GPU</strong>更加擅长<strong>SIMD</strong>计算，但是<strong>CPU</strong>事实上也不是太差，可能没有<strong>GPU</strong>那么擅长吧。SIMD Both CPU and GPU have parallelization instructions(i.e. SIMD, Signle Instruction Multiple Data)</p>
</li>
</ol>
<h3><span id="c12l12-more-vectorization-example">C12L12 ： More Vectorization Example</span><a href="#c12l12-more-vectorization-example" class="header-anchor">#</a></h3><h3><span id="ju-zhen-he-xiang-liang-cheng-fa">矩阵和向量乘法</span><a href="#ju-zhen-he-xiang-liang-cheng-fa" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/v_2.png" alt></p>
<h3><span id="xiang-liang-han-shu">向量函数</span><a href="#xiang-liang-han-shu" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/v_3.png" alt></p>
<ol>
<li>原则：whenever possible, avoid explict for-loops</li>
<li>使用Element wised的矩阵运算，将函数作用在每个矩阵元素上，比如：<ul>
<li>np.exp()</li>
<li>np.log()</li>
<li>np.abs()</li>
<li>np.maxium()</li>
<li>1/v</li>
<li>v**2</li>
</ul>
</li>
</ol>
<h3><span id="c1w2l13-vectorizing-logistic-regression">C1W2L13: Vectorizing Logistic Regression</span><a href="#c1w2l13-vectorizing-logistic-regression" class="header-anchor">#</a></h3><h3><span id="1-qian-xiang-chuan-bo">1. 前向传播</span><a href="#1-qian-xiang-chuan-bo" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/v_3.jpg" alt></p>
<script type="math/tex; mode=display">
\hat{y}=σ(w^TX+b)=(a(1),a(2),...,a(m−1),a(m))=\\
(\alpha(z_1),\alpha(z_m),...,\alpha(z_m))=\\
(\alpha(w^Tx_1+b),\alpha(w^Tx_2+b),...,\alpha(w^Tx_m+b))=</script><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">z=np.dot(W^T,X)+b</span><br><span class="line"><span class="comment"># z这里就是python 巧妙的地方，b是实数，但是向量加上实数后，b扩展成向量，被称为广播（brosdcasting）</span></span><br></pre></td></tr></tbody></table></figure>
<p>个人经验：</p>
<ol>
<li>首先，熟悉每个变量的记号和维度，必要的话，可以画出来，更直观。</li>
<li>先从一个样本做向量化，再把m个样本的操作向量化。</li>
<li>for-loop里面是循环乘法，则向量化一定是一个乘法形式，若对于不确定乘法的左右关系，是否需转置，可以根据目标变量的维度推测。或者先乘起来，再根据目标变量看是否要转置。</li>
</ol>
<h3><span id="c1w2l14-vectorzing-logistic-regression-s-gradient-compution">C1W2L14 : Vectorzing Logistic Regression’s Gradient Compution</span><a href="#c1w2l14-vectorzing-logistic-regression-s-gradient-compution" class="header-anchor">#</a></h3><ol>
<li><p>backforwd</p>
</li>
<li><script type="math/tex; mode=display">
\frac{∂J}{∂w}=\frac{1}{m}X(A−Y)T\\
\frac{∂J}{∂b}=\frac{1}{m}(a(i)−y(i))</script></li>
</ol>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/v-4.jpg" alt></p>
<p>重要的是弄清楚，里面的行列关系，代表的意思，运算时候，先自己理清楚。还有点积、等等运算性质对应的操作，或者对应的内置函数</p>
<h3><span id="c1w2l15-broadcasting-in-python">C1W2L15: Broadcasting in Python</span><a href="#c1w2l15-broadcasting-in-python" class="header-anchor">#</a></h3><h3><span id="one-example">One Example</span><a href="#one-example" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/bordacasing_4.png" alt></p>
<p><code>A.sum(axis = 0)</code>中的参数<code>axis</code>。<strong>axis用来指明将要进行的运算是沿着哪个轴执行，在numpy中，0轴是垂直的，也就是列，而1轴是水平的，也就是行。</strong></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/boradcasing_5.png" alt></p>
<p>第二个<code>A/cal.reshape(1,4)</code>指令则调用了<strong>numpy</strong>中的广播机制。这里使用 3 by 4的矩阵除以1 by 4 的矩阵。技术上来讲，其实并不需要再将矩阵 <code>reshape</code>(重塑)成 ，因为矩阵本身已经是 了。但是当我们写代码时不确定矩阵维度的时候，通常会对矩阵进行重塑来确保得到我们想要的列向量或行向量。重塑操作<code>reshape</code>是一个常量时间的操作，时间复杂度是，它的调用代价极低。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/boradcasing_6.png" alt></p>
<h3><span id="secondly-example">Secondly Example</span><a href="#secondly-example" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/bordacasing_2.png" alt></p>
<p>python的广播机制会将常数扩展成4by 1的列向量</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/boradcasing_3.png" alt></p>
<p>其实是将1by*n 的矩阵复制成为mbyn的矩阵</p>
<h3><span id="guang-bo-ji-zhi-de-ju-li">广播机制的举例</span><a href="#guang-bo-ji-zhi-de-ju-li" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/bordcasing_1.png" alt></p>
<h3><span id="axis">axis</span><a href="#axis" class="header-anchor">#</a></h3><p>补充：numpy中，类似sum的函数，经常涉及axis参数，可以取值为0或1，甚至其他。经常记不住，这里我查了了一下，是这样的（<a href="https://stackoverflow.com/questions/17079279/how-is-axis-indexed-in-numpys-array">原文</a>）：</p>
<ol>
<li><strong>axis的数字，和数组的shape参数的索引是对应的</strong>。比如一个数组的shape是(5,6)，则代表5个row，6个column。即在shape中，row和column的个数的索引是0和1。也就第1个坐标，在shape中的第一个元素，<strong>索引是0，代表row的方向</strong>；第2个坐标，在shape中的第2个元素，<strong>索引是1，代表row的方向</strong>。</li>
<li>对于sum函数，axis指的是sum“<strong>沿着</strong>”的方向，经过计算，这个方向的维度因为求和后就消失了，比如sum(axis=0)代表是沿着“row”方向进行求和，</li>
<li>当然axis可以是一个tupe，那就相当于沿着多个多个方向求和。</li>
<li>sum如果不传入axis参数，默认是对所有维度求和。</li>
</ol>
<h3><span id="broadcasting">broadcasting</span><a href="#broadcasting" class="header-anchor">#</a></h3><p>  当两个数组的形状并不相同的时候，我们可以通过扩展数组的方法来实现相加、相减、相乘等操作，这种机制叫做广播（broadcasting）。</p>
<p>三种广播情况</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/bordacasing.png" alt></p>
<h3><span id="c1w2l16-a-note-on-python-numpy-vectors">C1W2L16 A Note on Python/numpy vectors</span><a href="#c1w2l16-a-note-on-python-numpy-vectors" class="header-anchor">#</a></h3><p>本节主要讲<strong>Python</strong>中的<strong>numpy</strong>一维数组的特性，以及与行向量或列向量的区别</p>
<h3><span id="1-yi-wei-shu-zu-de-te-xing">1. 一维数组的特性</span><a href="#1-yi-wei-shu-zu-de-te-xing" class="header-anchor">#</a></h3><p>首先设置a = np.array.random.randn(5)，这样会生成存储在数组a中的5个高斯随机数变量。之后输出 ，从屏幕上可以得知，此时a 的<strong>shape</strong>（形状）是一个的结构。这在<strong>Python</strong>中被称作<strong>一个一维数组</strong>。它既不是一个行向量也不是一个列向量，这也导致它有一些不是很直观的效果。举个例子，如果我输出一个转置阵，最终结果它会和看起来一样，所以和的转置阵最终结果看起来一样。而如果我输出和的转置阵的内积，你可能会想：乘以的转置返回给你的可能会是一个矩阵。但是如果我这样做，你只会得到一个数。</p>
<p>所以我建议当你编写神经网络时，不要在使用的<strong>shape</strong>(5,1)是还是(n,)或者一维数组。相反，如果你设置(5,1)，那么这就是5行1列向量。在先前的操作里a和a的转置看起来一样，而现在这样的 a变成一个新的a 的转置，并且它是一个行向量。请注意一个细微的差别，在这种数据结构中，当我们输出a 的转置时有两对方括号，而之前只有一对方括号，所以这就是1行5列的矩阵和一维数组的差别。</p>
<h3><span id="2-xing-xiang-liang-he-lie-xiang-liang">2. 行向量和列向量</span><a href="#2-xing-xiang-liang-he-lie-xiang-liang" class="header-anchor">#</a></h3><p><strong>rank 1 array问题</strong>：shape是(x,)的数组，既不是行向量，也不是列向量，没法参与正常的矩阵运算，应该总是使用(x,1)或(1,x)的shape来表示向量。但可以通过reshape方法将rank 1 array转换为行向量或列向量。（什么是rank，就是一个数组的维度）一维的数组既不是行向量也不是列向量，转置后，依然是本身。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/note_1.jpg" alt></p>
<h3><span id="3-jie-jue-fang-fa">3. 解决方法</span><a href="#3-jie-jue-fang-fa" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">assert</span>(a.shape=（<span class="number">5</span>，<span class="number">1</span>)）</span><br><span class="line"><span class="comment"># 为了确保你的矩阵或向量所需要的维数时，不要羞于 reshape 操作</span></span><br></pre></td></tr></tbody></table></figure>
<h3><span id="c1w2l18-quick-tour-of-jupyter-ipython-notebooks">C1W2L18 ：Quick Tour of Jupyter/iPython Notebooks</span><a href="#c1w2l18-quick-tour-of-jupyter-ipython-notebooks" class="header-anchor">#</a></h3><h3><span id="c1w2l18-explanation-of-logistic-regression-cost-function">C1W2L18: Explanation of Logistic Regression Cost Function</span><a href="#c1w2l18-explanation-of-logistic-regression-cost-function" class="header-anchor">#</a></h3><p>对应logistic regression，输出$\hat{y}=p(y=1|x)$,那么$p(y=0|x)=1-\hat{y}$</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/cost_2png.png" alt></p>
<p>综合上面</p>
<script type="math/tex; mode=display">
p(y|x)= \hat{y}^y*(1-\hat{y})^{1-y}</script><p>对于整个训练集，</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/cost_1png.png" alt></p>
<p>假设所有的训练样本服从同一分布且相互独立，也即独立同分布的，所有这些样本的联合概率就是每个样本概率的乘积:</p>
<script type="math/tex; mode=display">
p(labels \ in\  training\  set)=\Pi_{i=1}^mp(y_i|x_i)</script><p>如果利用极大似然法做，找到一组参数，使得样本观测值概率最大</p>
<script type="math/tex; mode=display">
\max log p(label \ in \ training \ set)=log \Pi_{i=1}^mp(y_i|x_i)=\sum -L(\hat{y^i},y^i)</script><script type="math/tex; mode=display">
\min cost J(w,b)=\frac{1}{m}L(\hat{y^i},y^i)</script><p>总结一下，为了最小化成本函数，我们从<strong>logistic</strong>回归模型的最大似然估计的角度出发，假设训练集中的样本都是独立同分布的条件下</p>
<h3><span id="day3-summary">Day3 : summary</span><a href="#day3-summary" class="header-anchor">#</a></h3><font color="red">主要学习了python编程的如何才能高效率，内置函数的具有并行性，simd指令，以及一维数组的使用注意事项，logistic regression的lost function的原理证明</font>

<h1><span id="c1w3">C1W3</span><a href="#c1w3" class="header-anchor">#</a></h1><h2><span id="c1w3l01-neural-network-overview">C1W3L01 : Neural Network Overview</span><a href="#c1w3l01-neural-network-overview" class="header-anchor">#</a></h2><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_2.png" alt></p>
<p>许多<strong>sigmoid</strong>单元堆叠起来形成一个神经网络。</p>
<p>正向传播：输入层到layer one</p>
<script type="math/tex; mode=display">
\left.\begin{array}{c}{x} \\ {W^{[1]}} \\ {b^{[1]}}\end{array}\right\} \Longrightarrow z^{[1]}=W^{[1]} x+b^{[1]} \Longrightarrow a^{[1]}=\sigma\left(z^{[1)}\right)</script><p>layer one 到layer two</p>
<script type="math/tex; mode=display">
\left.\begin{array}{r}{a^{(1]}=\sigma\left(z^{[1]}\right)} \\ {W^{[2]}} \\ {b^{[2]}}\end{array}\right\}\begin{array}{l}{\Longrightarrow z^{[2]}=W^{[2]} a^{[1]}+b^{[2]} \Longrightarrow a^{[2]}=\sigma\left(z^{[2]}\right)} \\ {\Longrightarrow L\left(a^{[2]}, y\right)}\end{array}</script><p>反向传播</p>
<script type="math/tex; mode=display">
\left.\begin{array}{r}{d a^{[1]}=d \sigma\left(z^{[1]}\right)} \\ {d W^{[2]}} \\ {d b^{[2]}}\end{array}\right\}\begin{array}{l}{\Longleftarrow d z^{[2]}=d\left(W^{[2]} \alpha^{[1]}+b^{[2]}\right) \Longleftarrow d a^{[2]}=d \sigma\left(z^{[2]}\right)} \\ {\Longleftarrow d L\left(a^{[2]}, y\right)}\end{array}</script><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_3.png" alt></p>
<p>$W$的行数是本次结点个数，列数是上层节点个数</p>
<h2><span id="c1w3l02-nerual-network-representations">C1W3L02 : Nerual Network Representations</span><a href="#c1w3l02-nerual-network-representations" class="header-anchor">#</a></h2><p>符号说明</p>
<h2><span id="c1w3l03-computation-neural-network-output">C1W3L03： Computation Neural Network Output</span><a href="#c1w3l03-computation-neural-network-output" class="header-anchor">#</a></h2><h3><span id="a-simple-training-examples">A simple training examples</span><a href="#a-simple-training-examples" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_5.png" alt></p>
<p>其中，x表示输入特征，a表示每个神经元的输出，W表示特征的权重，上标表示神经网络的层数（隐藏层为1），下标表示该层的第几个神经元。这是神经网络的<strong>符号惯例</strong>，下同。</p>
<p><strong>神经网络的计算</strong></p>
<p>关于神经网络是怎么计算的，从我们之前提及的逻辑回归开始，如下图所示。用圆圈表示神经网络的计算单元，逻辑回归的计算有两个步骤，首先你按步骤计算出，然后在第二步中你以<strong>sigmoid</strong>函数为激活函数计算（得出），一个神经网络只是这样子做了好多次重复计算。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_6.png" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_4.png" alt></p>
<p>说明：$w_i^{[1]}$和$W^{[1]}$的关系，一个按照logistic regression ，一个是矩阵表示。</p>
<p><strong>向量化计算</strong> 如果你执行神经网络的程序，用for循环来做这些看起来真的很低效。所以接下来我们要做的就是把这四个等式向量化。向量化的过程是将神经网络中的一层神经元参数纵向堆积起来，例如隐藏层中的纵向堆积起来变成一个(4,3)的矩阵，用符号$W^{[1]}$表示。另一个看待这个的方法是我们有四个逻辑回归单元，且每一个逻辑回归单元都有相对应的参数——向量，把这四个向量堆积在一起，你会得出这4×3的矩阵。</p>
<script type="math/tex; mode=display">
z^{[n]}=W^{[n]}X+b^{[n]}</script><script type="math/tex; mode=display">
a^{[1]}=\left[ \begin{array}{c}{a_{1}^{[1]}} \\ {a_{2}^{[1]}} \\ {a_{3}^{[1]}} \\ {a_{4}^{[1]}}\end{array}\right]=\sigma\left(z^{[1]}\right)</script><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_7.png" alt></p>
<p>Given input X（a single training set)</p>
<script type="math/tex; mode=display">
\begin{array}{c}{z^{[1]}=W^{[1]} a^{[0]}+b^{[1]}} \\ {a^{[1]}=\sigma\left(z^{[1]}\right)} \\ {z^{[2]}=W^{[2]} a^{[1]}+b^{[2]}} \\ {a^{[2]}=\sigma\left(z^{[2]}\right)}\end{array}</script><p>说明：</p>
<p>$W$的第$i$行表示，当前层到上一层的权重行向量，再计算单个的时候，由于是按照logristics regression的方式，所以认为$w_i$是列向量，所以转置成行向量。上面的图也说明了：如何从单个操作到矩阵操作，权重矩阵是怎么构造，怎么表示的。</p>
<p>b是列向量。</p>
<h2><span id="c1w3l04-vectorizing-across-mutilple-example">C1W3L04: Vectorizing Across Mutilple Example</span><a href="#c1w3l04-vectorizing-across-mutilple-example" class="header-anchor">#</a></h2><p>Different training examples in different columns of the matrix </p>
<ol>
<li><p>for loop</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_8.png" alt></p>
</li>
<li><p>vectorizing : stacking training set in columns</p>
<script type="math/tex; mode=display">
x=\left[ \begin{array}{cccc}{\vdots} & {\vdots} & {\vdots} & {\vdots} \\ {x^{(1)}} & {x^{(2)}} & {\dots} & {x} \\ {\vdots} & {\vdots} & {\vdots} & {\vdots}\end{array}\right]</script></li>
</ol>
<p>就有</p>
<script type="math/tex; mode=display">
\left\{\begin{array}{l}{A^{[1]}=\sigma\left(z^{[1]}\right)} \\ {z^{[2]}=W^{[2]} A^{[1]}+b^{[2]}} \\ {A^{[2]}=\sigma\left(z^{[2]}\right)}\end{array}\right.</script><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_9.png" alt></p>
<p>当垂直扫描，是索引到隐藏单位的数字。当水平扫描，将从第一个训练示例中从第一个隐藏的单元到第二个训练样本，第三个训练样本……直到节点对应于第一个隐藏单元的激活值，且这个隐藏单元是位于这个训练样本中的最终训练样本。</p>
<p>从水平上看，矩阵代表了各个训练样本。从竖直上看，矩阵的不同的索引对应于不同的隐藏单元。</p>
<h2><span id="c1w3l05-explanation-for-vectorized-implement">C1W3L05 : Explanation for vectorized implement</span><a href="#c1w3l05-explanation-for-vectorized-implement" class="header-anchor">#</a></h2><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_10.png" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_11.png" alt></p>
<h2><span id="c1w3l06-activation-function">C1W3L06 : Activation Function</span><a href="#c1w3l06-activation-function" class="header-anchor">#</a></h2><p>在讨论优化算法时，有一点要说明：基本已经不用<strong>sigmoid</strong>激活函数了，<strong>tanh</strong>函数在所有场合都优于<strong>sigmoid</strong>函数。</p>
<p><strong>sigmoid</strong>函数和<strong>tanh</strong>函数两者共同的缺点是，在z特别大或者特别小的情况下，导数的梯度或者函数的斜率会变得特别小，最后就会接近于0，导致降低梯度下降的速度。</p>
<p>在机器学习另一个很流行的函数是：修正线性单元的函数（<strong>ReLu</strong>），<strong>ReLu</strong>函数图像是如下图。$ a = max(0,z)$：  所以，只要是正值的情况下，导数恒等于1，当是负值的时候，导数恒等于0。从实际上来说，当使用的导数时，=0的导数是没有定义的。但是当编程实现的时候，的取值刚好等于0.00000001，这个值相当小，所以，在实践中，不需要担心这个值，是等于0的时候，假设一个导数是1或者0效果都可以。</p>
<p>如果输出是0、1值（二分类问题），则输出层选择<strong>sigmoid</strong>函数，然后其它的所有单元都选择<strong>Relu</strong>函数。</p>
<p>这是很多激活函数的默认选择，如果在隐藏层上不确定使用哪个激活函数，那么通常会使用<strong>Relu</strong>激活函数。有时，也会使用<strong>tanh</strong>激活函数，但<strong>Relu</strong>的一个缺点是：当z是负值的时候，导数等于0。</p>
<p>这里也有另一个版本的<strong>Relu</strong>被称为<strong>Leaky Relu</strong>。</p>
<p>当是负值时，这个函数的值不是等于0，而是轻微的倾斜。</p>
<p>两者的优点是：</p>
<p>第一，在的区间变动很大的情况下，激活函数的导数或者激活函数的斜率都会远大于0，在程序实现就是一个<strong>if-else</strong>语句，而<strong>sigmoid</strong>函数需要进行浮点四则运算，在实践中，使用<strong>ReLu</strong>激活函数神经网络通常会比使用<strong>sigmoid</strong>或者<strong>tanh</strong>激活函数学习的更快。</p>
<p>第二，<strong>sigmoid</strong>和<strong>tanh</strong>函数的导数在正负饱和区的梯度都会接近于0，这会造成梯度弥散，而<strong>Relu</strong>和<strong>Leaky ReLu</strong>函数大于0部分都为常数，不会产生梯度弥散现象。(同时应该注意到的是，<strong>Relu</strong>进入负半区的时候，梯度为0，神经元此时不会训练，产生所谓的稀疏性，而<strong>Leaky ReLu</strong>不会有这问题)</p>
<p>在<strong>ReLu</strong>的梯度一半都是0，但是，有足够的隐藏层使得z值大于0，所以对大多数的训练数据来说学习过程仍然可以很快。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_12.png" alt></p>
<p><strong>sigmoid</strong>激活函数：除了输出层是一个二分类问题基本不会用它。</p>
<p><strong>tanh</strong>激活函数：<strong>tanh</strong>是非常优秀的，几乎适合所有场合。</p>
<p><strong>ReLu</strong>激活函数：最常用的默认函数，，如果不确定用哪个激活函数，就使用<strong>ReLu</strong>或者<strong>Leaky ReLu</strong>。</p>
<p>通常的建议是：如果不确定哪一个激活函数效果更好，可以把它们都试试，然后在验证集或者发展集上进行评价。然后看哪一种表现的更好，就去使用它。</p>
<h2><span id="c1w3l07-why-non-linear-activation-functions">C1W3L07 : Why non-linear activation Functions</span><a href="#c1w3l07-why-non-linear-activation-functions" class="header-anchor">#</a></h2><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_13.png" alt></p>
<p>通过推导可以得出，如果使用线性激活函数，相当于没有隐藏层。无论你的神经网络有多少层一直在做的只是计算线性函数，所以不如直接去掉全部隐藏层。当当然，在output layer是可以不用activation function，或者用linear activation function；这种情况一般是要求输出实数集结果（比如预测房价）。即便如此，在hidden layer还是要用non-linear activation function。</p>
<h3><span id="sigmoid-activation-function">sigmoid activation function</span><a href="#sigmoid-activation-function" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_14.png" alt></p>
<script type="math/tex; mode=display">
\frac{d}{d z} g(z)=\frac{1}{1+e^{-z}}\left(1-\frac{1}{1+e^{-z}}\right)=g(z)(1-g(z))</script><h3><span id="tanh-activation-function">tanh activation function</span><a href="#tanh-activation-function" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_15.png" alt></p>
<script type="math/tex; mode=display">
g(z)=\tanh (z)=\frac{e^{z}-e^{-z}}{e^{x}+e^{-z}}</script><script type="math/tex; mode=display">
\frac{d}{d z} g(z)=1-(\tanh (z))^{2}</script><h3><span id="rectified-linear-unit-relu">Rectified linear unit(RelU)</span><a href="#rectified-linear-unit-relu" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_16.png" alt></p>
<script type="math/tex; mode=display">
g(z)^{\prime}=\left\{\begin{array}{ll}{0} & {\text { if } z<0} \\ {1} & {\text { if } z>0} \\ {\text {undefined}} & {\text { if } z=0}\end{array}\right.</script><p>注：通常在z= 0的时候给定其导数1,0；当然=0的情况很少</p>
<h3><span id="leaky-linear-unit-leaky-relu"><strong>Leaky linear unit (Leaky ReLU)</strong></span><a href="#leaky-linear-unit-leaky-relu" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
g(z)=\max (0.01 z, z)</script><script type="math/tex; mode=display">
g(z)^{\prime}=\left\{\begin{array}{ll}{0.01} & {\text { if } z<0} \\ {1} & {\text { if } z>0} \\ {\text {undefined}} & {\text { if } z=0}\end{array}\right.</script><p>注：通常在的z=0时候给定其导数1,0.01；当然的情况很少。</p>
<h2><span id="c1w3l09-gradient-descent-for-neural-networks">C1W3L09 : Gradient Descent For Neural Networks</span><a href="#c1w3l09-gradient-descent-for-neural-networks" class="header-anchor">#</a></h2><ol>
<li><p>gradient descent的关键是求cost function对参数的偏导数</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_17.png" alt></p>
</li>
<li><p>求导过程使用的是Backpropagation</p>
<ol>
<li><p>首先做forward propagation，求解出每一层的输出A</p>
<script type="math/tex; mode=display">
(1) z^{[1]}=W^{[1]} x+b^{[1]}\\
(2) a^{[1]}=\sigma\left(z^{[1]}\right)\\(3) z^{[2]}=W^{[2]}=W^{[2]} a^{[1]}+b^{[2]}\\(4) a^{[2]}=g^{[2]}\left(z^{[z]}\right)=\sigma\left(z^{[2]}\right)</script></li>
<li><p>然后向后，逐层求解对每一层参数的偏导数</p>
</li>
</ol>
</li>
</ol>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_18.png" alt></p>
<p>sum，<code>keepdims</code>是防止<strong>python</strong>输出那些古怪的秩数(n,)，加上这个确保阵矩阵这个向量输出的维度为(n,1）这样标准的形式。</p>
<h2><span id="c1wl10-backpropagation-intuition-optional">C1WL10: Backpropagation intuition (optional)</span><a href="#c1wl10-backpropagation-intuition-optional" class="header-anchor">#</a></h2><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_19.png" alt></p>
<p>实现后向传播有个技巧，就是要保证矩阵的维度相互匹配</p>
<p>其实，对于一个神经元，输入部分：是权重和上一层输出的线性组合；输出：激活函数作用于输入，因此对$W$求偏导时，对激活函数求一次，再对线性组合求一次。对$b$求偏导是，对线性部分求偏导是1,这里用求和。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_20.png" alt></p>
<h2><span id="c1w3l11-random-initialization">C1W3L11: Random Initialization</span><a href="#c1w3l11-random-initialization" class="header-anchor">#</a></h2><p>`</p>
<p>与logistic regression不同，初始化参数不可固定为0，而是每个参数都要随机初始化。</p>
<p>主要原因是：<strong>如果每个参数w和b都是0，则同一层的每个neuron计算结果完全一样</strong>（输入一样a，参数一样w，则z一样,<strong>symmetry breaking problem</strong>）；接下来反向传播时的偏导数也一样，下一轮迭代同一层的每个neuron的w又是一样的。这样整个neural Network上每一层的neuron是同质的，自然不会有好的performance。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week3_13 (1" alt>.png)</p>
<p>不过，对b参数，可以都初始化为0。</p>
<p>另外需要注意，虽然w是随机初始化，但最好使用较小的随机数。主要是避免让z的计算值过大，导致activation function对z的偏导数趋于0，导致Gradient descent下降较慢。 通常的做法是对random的值乘以一个比率，比如0.01（但具体怎么选这个比率，也要根据情况而定，这应该又是一个超参了）：</p>
<p>$W[1]=np.random.randn((2,2))∗0.01$</p>
<p>因为如果你用<strong>tanh</strong>或者<strong>sigmoid</strong>激活函数，或者说只在输出层有一个<strong>Sigmoid</strong>，如果（数值）波动太大，当你计算激活值时如果很大，就会很大或者很小，因此这种情况下你很可能停在<strong>tanh</strong>/<strong>sigmoid</strong>函数的平坦的地方，这些地方梯度很小也就意味着梯度下降会很慢，因此学习也就很慢。</p>
<p>事实上有时有比0.01更好的常数，当你训练一个只有一层隐藏层的网络时（这是相对浅的神经网络，没有太多的隐藏层），设为0.01可能也可以。但当你训练一个非常非常深的神经网络，你可能要试试0.01以外的常数。</p>
<h2><span id="summary">summary</span><a href="#summary" class="header-anchor">#</a></h2><font color="red">如何建立一个一层的神经网络了，初始化参数，用前向传播预测，还有计算导数，结合反向传播用在梯度下降中。</font>

<font color="blue">

1. Define the neural network structure ( # of input units, # of hidden units, etc).
2. Initialize the model's parameters

1. Loop:
   - Implement forward propagation
   - Compute loss
   - Implement backward propagation to get the gradients
   - Update parameters (gradient descent)

</font>

<h1><span id="c1w4">C1W4</span><a href="#c1w4" class="header-anchor">#</a></h1><h2><span id="c1w4l01-deep-layer-neural-network">C1W4L01 Deep-layer neural network</span><a href="#c1w4l01-deep-layer-neural-network" class="header-anchor">#</a></h2><h3><span id="1-logistics-regression-and-shallow-neural-network-and-deep-layer-neural-network">1. logistics regression and shallow neural network and deep-layer neural network</span><a href="#1-logistics-regression-and-shallow-neural-network-and-deep-layer-neural-network" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_1.png" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_2.png" alt></p>
<h3><span id="2-notation">2. notation</span><a href="#2-notation" class="header-anchor">#</a></h3><p>神经网络模型</p>
<script type="math/tex; mode=display">
\begin{array}{l}{X \in \mathbb{R}^{n_{x} \times m}} 代表输入的矩阵\\{x^{(i)} \in \mathbb{R}^{n_{x}}} 代表第 i 个样本的列向量\\
{Y \in \mathbb{R}^{n_{y} \times n}} 标记矩阵\\ {y^{(i)} \in \mathbb{R}^{n_{v}}}是第i样本的输出标签\\
W^{[l]} \in \mathbb{R}^{l \times(l-1)}代表第[l]层的权重矩阵\\ b^{[l]} \in \mathbb{R}^{l}代表第[l]层的偏差矩阵\\
 {\hat{y}^{(i)} \in \mathbb{R}^{n_{v}}}是预测输出向量\end{array}</script><script type="math/tex; mode=display">
通用激活公式：
a_{j}^{[l]}=g^{[l]}\left(z_{j}^{[l]}\right)=g^{ | l ]}\left(\sum_{k} w_{j k}^{[l]} a_{k}^{[l-1]}+b_{j}^{[l]}\right)</script><h2><span id="c1w4l02-forward-and-backward-propagation">C1W4L02： Forward and Backward propagation</span><a href="#c1w4l02-forward-and-backward-propagation" class="header-anchor">#</a></h2><h3><span id="1-forward-propagation">1. forward propagation</span><a href="#1-forward-propagation" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_3.png" alt></p>
<h3><span id="2-backward-propagation">2. backward propagation</span><a href="#2-backward-propagation" class="header-anchor">#</a></h3><script type="math/tex; mode=display">
\begin{array}{l}{d z^{[l]}=d a^{[l]} * g^{[l]}\left(z^{l l}\right)} \\ {d w^{[l]}=d z^{[l]} \cdot a^{[l-1]}}\\d b^{[l]}=d z^{[l]}\\
d a^{[l-1]}=w^{[l]} \cdot d z^{[l]}\\
d z^{[l]}=w^{[l+1] T} d z^{[l+1]} \cdot g^{[l]^{\prime}}\left(z^{[l]}\right)\end{array}</script><p>向量化</p>
<script type="math/tex; mode=display">
\begin{array}{l}{d Z^{[l]}=d A^{[l]} * g^{[l]}\left(Z^{[l]}\right)} \\ {d W^{[l]}=\frac{1}{m} d Z^{[l]} \cdot A^{[l-1] T}}\\
\begin{array}{l}{d b^{[l]}=\frac{1}{m} n p \cdot \operatorname{sum}\left(d z^{[l]}, \text { axis }=1, \text {keepdims}=\text {True}\right)} \\ {d A^{[l-1]}=W^{[l] T} \cdot d Z^{[l]}}\end{array}\end{array}</script><p>summary</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_5.png" alt></p>
<h2><span id="c1w4l03-forward-propagation-in-d-deep-network">C1W4L03 : Forward Propagation in d deep network</span><a href="#c1w4l03-forward-propagation-in-d-deep-network" class="header-anchor">#</a></h2><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_6.png" alt></p>
<p>这里只能用一个显式<strong>for</strong>循环，从1到，然后一层接着一层去计算。</p>
<h2><span id="c1w4l04-getting-matrix-dimension-right">C1W4L04 Getting matrix dimension right</span><a href="#c1w4l04-getting-matrix-dimension-right" class="header-anchor">#</a></h2><p>当实现深度神经网络的时候，其中一个常用的检查代码是否有错的方法就是拿出一张纸过一遍算法中矩阵的维数。</p>
<p>$d_w^{[l]}$和$w^{[l]}$维度相同，$db^{[l]}$和$b^{[l]}$维度相同，且w和b向量化维度不变，但z,a以及x的维度会向量化后发生变化。</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_8.png" alt></p>
<p>反向传播的维数检查</p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_7.png" alt></p>
<p>在你做深度神经网络的反向传播时，一定要确认所有的矩阵维数是前后一致的，可以大大提高代码通过率。</p>
<h2><span id="c1w4l05-why-deep-representations">C1W4L05 Why deep representations?</span><a href="#c1w4l05-why-deep-representations" class="header-anchor">#</a></h2><p>神经网络不需要很大，但是得有深度，也就是隐藏层需要很多，</p>
<h3><span id="1-for-example-of-face-detector">1. for example of face detector</span><a href="#1-for-example-of-face-detector" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_9.png" alt></p>
<h2><span id="c1w4l06-building-blocks-of-a-deep-neural-network">C1W4L06 :Building blocks of a deep neural network</span><a href="#c1w4l06-building-blocks-of-a-deep-neural-network" class="header-anchor">#</a></h2><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_10.png" alt></p>
<p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_11.png" alt></p>
<p>可以看得出，再反向传播的时候，需要用到$Z^{[L]},W^{[L]},b^{[L]}$,因此cash them</p>
<p>正向传播：$Z^{[1]},A^{[1]}…………$,反向传播：$dA^{[L]},dZ{[L]},dW^{[L]}dB^{[L]},dA^{[L-1]}$</p>
<h2><span id="c1w4l07-parameters-vs-hyperparameters">C1W4L07：Parameters vs Hyperparameters</span><a href="#c1w4l07-parameters-vs-hyperparameters" class="header-anchor">#</a></h2><h3><span id="1-what">1 What</span><a href="#1-what" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_12.png" alt></p>
<h3><span id="2-how">2 How</span><a href="#2-how" class="header-anchor">#</a></h3><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/L1_week4_13.png" alt></p>
<p><strong>Idea—Code—Experiment—Idea</strong>这个循环，尝试各种不同的参数，实现模型并观察是否成功，然后再迭代</p>
<p>今天的深度学习应用领域，还是很经验性的过程，通常你有个想法，比如你可能大致知道一个最好的学习率值，可能说最好，我会想先试试看，然后你可以实际试一下，训练一下看看效果如何。然后基于尝试的结果你会发现，你觉得学习率设定再提高到0.05会比较好。如果你不确定什么值是最好的，你大可以先试试一个学习率，再看看损失函数J的值有没有下降。然后你可以试一试大一些的值，然后发现损失函数的值增加并发散了。然后可能试试其他数，看结果是否下降的很快或者收敛到在更高的位置。你可能尝试不同的并观察损失函数这么变了，试试一组值，然后可能损失函数变成这样，这个值会加快学习过程，并且收敛在更低的损失函数值上（箭头标识），我就用这个值了。</p>
<p>在前面几页中，还有很多不同的超参数。然而，当你开始开发新应用时，预先很难确切知道，究竟超参数的最优值应该是什么。所以通常，你必须尝试很多不同的值，并走这个循环，试试各种参数。试试看5个隐藏层，这个数目的隐藏单元，实现模型并观察是否成功，然后再迭代。这页的标题是，应用深度学习领域，一个很大程度基于经验的过程，凭经验的过程通俗来说，就是试直到你找到合适的数值。</p>
<p>所以我经常建议人们，特别是刚开始应用于新问题的人们，去试一定范围的值看看结果如何。然后下一门课程，我们会用更系统的方法，用系统性的尝试各种超参数取值。然后其次，甚至是你已经用了很久的模型，可能你在做网络广告应用，在你开发途中，很有可能学习率的最优数值或是其他超参数的最优值是会变的，所以即使你每天都在用当前最优的参数调试你的系统，你还是会发现，最优值过一年就会变化，因为电脑的基础设施，<strong>CPU</strong>或是<strong>GPU</strong>可能会变化很大。所以有一条经验规律可能每几个月就会变。如果你所解决的问题需要很多年时间，只要经常试试不同的超参数，勤于检验结果，看看有没有更好的超参数数值，相信你慢慢会得到设定超参数的直觉，知道你的问题最好用什么数值。</p>
<p>有一条经验规律：经常试试不同的超参数，勤于检查结果，看看有没有更好的超参数取值，你将会得到设定超参数的直觉。</p>
<p>总结：超参数的设定，靠经验，尝试，并调，根据结果调，</p>
<h2><span id="c1w4l08-what-does-this-have-to-do-with-the-brain">C1W4L08 : What does this have to do with the brain?</span><a href="#c1w4l08-what-does-this-have-to-do-with-the-brain" class="header-anchor">#</a></h2><h1><span id="summary-forward-prop-and-back-prop"># summary : forward prop and back prop</span><a href="#summary-forward-prop-and-back-prop" class="header-anchor">#</a></h1><h2><span id="1-logistics-regression-shallow-neural-network-and-deep-neural-network">1. logistics regression,shallow neural network and deep neural network</span><a href="#1-logistics-regression-shallow-neural-network-and-deep-neural-network" class="header-anchor">#</a></h2><p>logistics regression</p>
<script type="math/tex; mode=display">
Z = W^TX+B\\
A = \frac{1}{1+e^{-Z}}\\
L(A,Y)=-\frac{1}{m}(Ylog^A+(1-Y)log^{1-A}\\
\frac{\partial L}{\partial Z}=(A-Y)\\
\frac{\partial L}{\partial W}=X(A-Y)\\</script><p>说明：X是样本按列堆积，W是列向量</p>
<p>shallow neural network 以二分问题为例</p>
<script type="math/tex; mode=display">
Z^{[1]}=W^{[1]}A^{[0]}+b^{[1]}\\
A^{[1]}=g^{[1]}(Z^{[1]})\\
\ \\
Z^{[2]}=W^{[2]}A^{[1]}+b^{[2]}\\
A^{[2]}=g^{[2]}(Z^{[2]})\\
\ \ \\
\ \\
L(A^{[2]},Y)=-\frac{1}{m}(Ylog^{A}+(1-Y)log^{1-A})\\
\frac{\partial L}{\partial Z^{[2]}}=(A^{[2]}-Y)\\
\frac{\partial L}{\partial W^{[2]}}=(A^{[2]}-Y)A^{[1]^T}\\
\frac{\partial L}{\partial b^{[2]}}=(A^{[2]}-Y)1_{1*m}^T\\
\frac{\partial L}{\partial a^{[1]}}=W^{[2]^T}(A^{[2]}-Y)\\
\ \\
\frac{\partial L}{\partial Z^{[1]}}=W^{[2]^T}(A^{[2]}-Y)* g^{'[1]}(Z^{[1]})\\</script><p>说明：W是按列排$W^{[L]}$是$n^{[L]}*n^{[L-1]}$矩阵，A,Z是按列堆积，记得检查矩阵维数就好了</p>
<h2><span id="deep-neural-network">deep neural network</span><a href="#deep-neural-network" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
Z^{[l]}=W^{[l]}A^{[l-1]}+b^{[l]}\\
A^{[l]}=g^{[l]}(Z^{[l]})\\
\ \ \\
\ \\
\frac{\partial L}{\partial Z^{[l]}}=\partial A^*g^{'[l]}(Z^{l})\\
\frac{\partial L}{\partial W^{[l]}}=\partial Z^{[l]} A^{[1-1]^T}\\
\frac{\partial L}{\partial b^{[l]}}=\partial Z^{[l]}\\
\frac{\partial L}{\partial a^{[l-1]}}=W^{[l]^T}\partial Z^{[l]}\\
\ \\
\frac{\partial L}{\partial Z^{[l-1]}}=W^{[l]^T}\partial Z^{[l]}* g^{'[l-1]}(Z^{[l-1]})\\</script><h2><span id="2-vectorization">2. vectorization</span><a href="#2-vectorization" class="header-anchor">#</a></h2><ol>
<li>推导的时候要向量化，注意矩阵维数表示，可以从单个推导到mutli</li>
<li>充分利用python的广播属性，和内置函数的并行化</li>
<li>python一维，二维数组的特性</li>
</ol>
<h2><span id="3-zhi-shi-jie-gou">3. 知识结构</span><a href="#3-zhi-shi-jie-gou" class="header-anchor">#</a></h2><p><img src="/2019/04/11/Deep%20Learning.ai_Neural%20Networks%20and%20Deep%20Learning/C1.png" alt></p>
]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>Deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>deep_learning.ai深度学习笔记&lt;Andrew Ng&gt;</title>
    <url>/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1><span id="c5-sequence-models">C5: Sequence Models</span><a href="#c5-sequence-models" class="header-anchor">#</a></h1><h2><span id="w1-recurrent-neural-networks-xun-huan-xu-lie-mo-xing">W1 : Recurrent Neural Networks (循环序列模型)</span><a href="#w1-recurrent-neural-networks-xun-huan-xu-lie-mo-xing" class="header-anchor">#</a></h2><h3><span id="l1-why-sequence-models">L1 ： Why Sequence Models?</span><a href="#l1-why-sequence-models" class="header-anchor">#</a></h3><p>循环神经网络（<strong>RNN</strong>）之类的模型在语音识别、自然语言处理和其他领域中引起变革。</p>
<p>序列模型的列子</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c11.png" alt></p>
<h3><span id="l2-notation-shu-xue-fu-hao">L2 : Notation 数学符号</span><a href="#l2-notation-shu-xue-fu-hao" class="header-anchor">#</a></h3><p>NLP</p>
<p>我们用$X^{(i)}$来表示第个i训练样本，所以为了指代第个t元素，或者说是训练样本i的序列中第t个元素用$X^{(i)}<t>$这个符号来表示。如果是序列长度$T_x$，那么你的训练集里不同的训练样本就会有不同的长度，所以$T_x^{(i)}$就代表第个训练样本的输入序列长度。同样$y^{(i)}<t>$代表第i个训练样本中第t个元素，$T_y^{(i)}$就是第i个训练样本的输出序列的长度。</t></t></p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c12.png" alt></p>
<p>预先有一个词典</p>
<h3><span id="l3-recurrent-neural-network-model-xun-huan-shen-jing-wang-luo-mo-xing">L3 : Recurrent Neural Network Model (循环神经网络模型)</span><a href="#l3-recurrent-neural-network-model-xun-huan-shen-jing-wang-luo-mo-xing" class="header-anchor">#</a></h3><p>现在我们讨论一下怎样才能建立一个模型，建立一个神经网络来学习X到Y的映射</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c13.png" alt></p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c14.png" alt></p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c15.png" alt></p>
<p>$a^{&lt;0&gt;}$通常 是零向量<!--0--></p>
<p>N模型包含三类权重系数，分别是Wax，Waa，Wya。且不同元素之间同一位置共享同一权重系数。</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c16.png" alt></p>
<p>RNN的正向传播（Forward Propagation）过程为：</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c17.png" alt></p>
<p>循环神经网络用的激活函数经常是<strong>tanh</strong>，不过有时候也会用<strong>ReLU</strong>，但是<strong>tanh</strong>是更通常的选择，我们有其他方法来避免梯度消失问题，我们将在之后进行讲述。选用哪个激活函数是取决于你的输出y，如果它是一个二分问题，那么我猜你会用<strong>sigmoid</strong>函数作为激活函数，如果是k类别分类问题的话，那么可以选用<strong>softmax</strong>作为激活函数。不过这里激活函数的类型取决于你有什么样类型的输出y，对于命名实体识别来说y只可能是0或者1，那我猜这里第二个激活函数g可以是<strong>sigmoid</strong>激活函数。</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c18.png" alt></p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c19.png" alt></p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c110.png" alt></p>
<h3><span id="c4-backpropagation-through-time-tong-guo-shi-jian-de-fan-xiang-chuan-bo">c4: Backpropagation through time ( 通过时间的反向传播)</span><a href="#c4-backpropagation-through-time-tong-guo-shi-jian-de-fan-xiang-chuan-bo" class="header-anchor">#</a></h3><p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c111.png" alt></p>
<p>参数的关系<img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c112.png" alt>*</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c113.png" alt></p>
<p>单个元素的Loss function:</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c114.png" alt></p>
<p>该样本所有元素的Loss function为：</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c115.png" alt></p>
<p>然后，反向传播（Backpropagation）过程就是从右到左分别计算L(y^,y)对参数Wa，Wy，ba，by的偏导数。思路与做法与标准的神经网络是一样的。一般可以通过成熟的深度学习框架自动求导，例如PyTorch、Tensorflow等。这种从右到左的求导过程被称为Backpropagation through time</p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c116.png" alt></p>
<h3><span id="l5-different-types-of-rnns-bu-tong-lei-xing-de-xun-huan-shen-jing-wang-luo">L5: Different types of <strong>RNN</strong>s (不同类型的循环神经网络)</span><a href="#l5-different-types-of-rnns-bu-tong-lei-xing-de-xun-huan-shen-jing-wang-luo" class="header-anchor">#</a></h3><p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c117.png" alt></p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c118.png" alt></p>
<p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c119.png" alt></p>
<h3><span id="l6-language-model-and-sequence-generation-yu-yan-mo-xing-he-xu-lie-sheng-cheng">L6 : Language model and sequence generation (语言模型和序列生成)</span><a href="#l6-language-model-and-sequence-generation-yu-yan-mo-xing-he-xu-lie-sheng-cheng" class="header-anchor">#</a></h3><p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c120.png" alt></p>
<h3><span id="l7-sampling-novel-sequences-dui-xin-xu-lie-cai-yang">L7 : Sampling novel sequences (对新序列采样)</span><a href="#l7-sampling-novel-sequences-dui-xin-xu-lie-cai-yang" class="header-anchor">#</a></h3><p><img src="/2019/04/11/deep-learning-ai%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/c121.png" alt></p>
<h3><span id="vanishing-gradients-with-rnns-xun-huan-shen-jing-wang-luo-de-ti-du-xiao-shi">Vanishing gradients with <strong>RNN</strong>s (循环神经网络的梯度消失)</span><a href="#vanishing-gradients-with-rnns-xun-huan-shen-jing-wang-luo-de-ti-du-xiao-shi" class="header-anchor">#</a></h3><p>首先从左到右前向传播，然后反向传播。但是反向传播会很困难，因为同样的梯度消失的问题，后面层的输出误差（上图编号6所示）很难影响前面层（上图编号7所示的层）的计算。这就意味着，实际上很难让一个神经网络能够意识到它要记住看到的是单数名词还是复数名词，然后在序列后面生成依赖单复数形式的<strong>was</strong>或者<strong>were</strong>。而且在英语里面，这中间的内容（上图编号8所示）可以任意长，对吧？所以你需要长时间记住单词是单数还是复数，这样后面的句子才能用到这些信息。也正是这个原因，所以基本的<strong>RNN</strong>模型会有很多局部影响</p>
<p><a href="http://www.ai-start.com/dl2017/html/lesson5-week1.html">http://www.ai-start.com/dl2017/html/lesson5-week1.html</a></p>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzIwOTc2MTUyMg==&amp;mid=2247484029&amp;idx=1&amp;sn=c93b5eddec33dc29dc172a5ea0d76822&amp;chksm=976fa7e0a0182ef61e36d1c32aa0706c4e81e1762a7ee2554165beecde929b72cf026c5b7a64&amp;scene=21#wechat_redirect">https://mp.weixin.qq.com/s?__biz=MzIwOTc2MTUyMg==&amp;mid=2247484029&amp;idx=1&amp;sn=c93b5eddec33dc29dc172a5ea0d76822&amp;chksm=976fa7e0a0182ef61e36d1c32aa0706c4e81e1762a7ee2554165beecde929b72cf026c5b7a64&amp;scene=21#wechat_redirect</a></p>
]]></content>
      <categories>
        <category>学习の历程(Journal of Studying)</category>
      </categories>
      <tags>
        <tag>我的读书笔记</tag>
        <tag>deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>deeplearningvideo</title>
    <url>/2019/04/03/deeplearningvideo/</url>
    <content><![CDATA[<p><strong>Coursera深度学习教程中文笔记</strong></p>
<!-- more  -->
<p>课程概述</p>
<p><a href="https://mooc.study.163.com/university/deeplearning_ai#/c">https://mooc.study.163.com/university/deeplearning_ai#/c</a></p>
<p>这些课程专为已有一定基础（基本的编程知识，熟悉<strong>Python</strong>、对机器学习有基本了解），想要尝试进入人工智能领域的计算机专业人士准备。介绍显示：“深度学习是科技业最热门的技能之一，本课程将帮你掌握深度学习。”</p>
<p>在这5堂课中，学生将可以学习到深度学习的基础，学会构建神经网络，并用在包括吴恩达本人在内的多位业界顶尖专家指导下创建自己的机器学习项目。<strong>Deep Learning Specialization</strong>对卷积神经网络 (<strong>CNN</strong>)、递归神经网络 (<strong>RNN</strong>)、长短期记忆 (<strong>LSTM</strong>) 等深度学习常用的网络结构、工具和知识都有涉及。</p>
<p><strong>笔记是根据视频和字幕写的，没有技术含量，只需要专注和严谨。</strong></p>
<p>2018-04-14</p>
<p><strong>本课程视频教程地址：</strong><a href="https://mooc.study.163.com/university/deeplearning_ai#/c">https://mooc.study.163.com/university/deeplearning_ai#/c</a></p>
<p>（该视频从www.deeplearning.ai 网站下载，因众所周知的原因，国内用户观看某些在线视频非常不容易，故一些学者一起制作了离线视频，旨在方便国内用户个人学习使用，请勿用于商业用途。视频内嵌中英文字幕，推荐使用<strong>potplayer</strong>播放。版权属于吴恩达老师所有，若在线视频流畅，请到官方网站观看。）</p>
<p><a href="http://www.ai-start.com/">笔记网站(适合手机阅读)</a></p>
<p>吴恩达老师的机器学习课程笔记和视频：<a href="https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes">https://github.com/fengdu78/Coursera-ML-AndrewNg-Notes</a></p>
<h1><span id="shen-du-xue-xi-bi-ji-mu-lu">深度学习笔记目录</span><a href="#shen-du-xue-xi-bi-ji-mu-lu" class="header-anchor">#</a></h1><h2><span id="di-yi-men-ke-shen-jing-wang-luo-he-shen-du-xue-xi-neural-networks-and-deep-learning">第一门课 神经网络和深度学习(Neural Networks and Deep Learning)</span><a href="#di-yi-men-ke-shen-jing-wang-luo-he-shen-du-xue-xi-neural-networks-and-deep-learning" class="header-anchor">#</a></h2><p>第一周：深度学习引言(Introduction to Deep Learning)</p>
<p>1.1 欢迎(Welcome)</p>
<p>1.2 什么是神经网络？(What is a Neural Network)</p>
<p>1.3 神经网络的监督学习(Supervised Learning with Neural Networks)</p>
<p>1.4 为什么神经网络会流行？(Why is Deep Learning taking off?)</p>
<p>1.5 关于本课程(About this Course)</p>
<p>1.6 课程资源(Course Resources)</p>
<p>1.7 Geoffery Hinton 专访(Geoffery Hinton interview)</p>
<p>第二周：神经网络的编程基础(Basics of Neural Network programming)</p>
<p>2.1 二分类(Binary Classification)</p>
<p>2.2 逻辑回归(Logistic Regression)</p>
<p>2.3 逻辑回归的代价函数（Logistic Regression Cost Function）</p>
<p>2.4 梯度下降（Gradient Descent）</p>
<p>2.5 导数（Derivatives）</p>
<p>2.6 更多的导数例子（More Derivative Examples）</p>
<p>2.7 计算图（Computation Graph）</p>
<p>2.8 计算图导数（Derivatives with a Computation Graph）</p>
<p>2.9 逻辑回归的梯度下降（Logistic Regression Gradient Descent）</p>
<p>2.10 梯度下降的例子(Gradient Descent on m Examples)</p>
<p>2.11 向量化(Vectorization)</p>
<p>2.12 更多的向量化例子（More Examples of Vectorization）</p>
<p>2.13 向量化逻辑回归(Vectorizing Logistic Regression)</p>
<p>2.14 向量化逻辑回归的梯度计算（Vectorizing Logistic Regression’s Gradient）</p>
<p>2.15 Python中的广播机制（Broadcasting in Python）</p>
<p>2.16 关于 Python与numpy向量的使用（A note on python or numpy vectors）</p>
<p>2.17 Jupyter/iPython Notebooks快速入门（Quick tour of Jupyter/iPython Notebooks）</p>
<p>2.18 逻辑回归损失函数详解（Explanation of logistic regression cost function）</p>
<p>第三周：浅层神经网络(Shallow neural networks)</p>
<p>3.1 神经网络概述（Neural Network Overview）</p>
<p>3.2 神经网络的表示（Neural Network Representation）</p>
<p>3.3 计算一个神经网络的输出（Computing a Neural Network’s output）</p>
<p>3.4 多样本向量化（Vectorizing across multiple examples）</p>
<p>3.5 向量化实现的解释（Justification for vectorized implementation）</p>
<p>3.6 激活函数（Activation functions）</p>
<p>3.7 为什么需要非线性激活函数？（why need a nonlinear activation function?）</p>
<p>3.8 激活函数的导数（Derivatives of activation functions）</p>
<p>3.9 神经网络的梯度下降（Gradient descent for neural networks）</p>
<p>3.10（选修）直观理解反向传播（Backpropagation intuition）</p>
<p>3.11 随机初始化（Random+Initialization）</p>
<p>第四周：深层神经网络(Deep Neural Networks)</p>
<p>4.1 深层神经网络（Deep L-layer neural network）</p>
<p>4.2 前向传播和反向传播（Forward and backward propagation）</p>
<p>4.3 深层网络中的前向和反向传播（Forward propagation in a Deep Network）</p>
<p>4.4 核对矩阵的维数（Getting your matrix dimensions right）</p>
<p>4.5 为什么使用深层表示？（Why deep representations?）</p>
<p>4.6 搭建神经网络块（Building blocks of deep neural networks）</p>
<p>4.7 参数VS超参数（Parameters vs Hyperparameters）</p>
<p>4.8 深度学习和大脑的关联性（What does this have to do with the brain?）</p>
<h2><span id="di-er-men-ke-gai-shan-shen-ceng-shen-jing-wang-luo-chao-can-shu-diao-shi-zheng-ze-hua-yi-ji-you-hua-improving-deep-neural-networks-hyperparameter-tuning-regularization-and-optimization">第二门课 改善深层神经网络：超参数调试、正则化以及优化(Improving Deep Neural Networks:Hyperparameter tuning, Regularization and Optimization)</span><a href="#di-er-men-ke-gai-shan-shen-ceng-shen-jing-wang-luo-chao-can-shu-diao-shi-zheng-ze-hua-yi-ji-you-hua-improving-deep-neural-networks-hyperparameter-tuning-regularization-and-optimization" class="header-anchor">#</a></h2><p>第一周：深度学习的实用层面(Practical aspects of Deep Learning)</p>
<p>1.1 训练，验证，测试集（Train / Dev / Test sets）</p>
<p>1.2 偏差，方差（Bias /Variance）</p>
<p>1.3 机器学习基础（Basic Recipe for Machine Learning）</p>
<p>1.4 正则化（Regularization）</p>
<p>1.5 为什么正则化有利于预防过拟合呢？（Why regularization reduces overfitting?）</p>
<p>1.6 dropout 正则化（Dropout Regularization）</p>
<p>1.7 理解 dropout（Understanding Dropout）</p>
<p>1.8 其他正则化方法（Other regularization methods）</p>
<p>1.9 标准化输入（Normalizing inputs）</p>
<p>1.10 梯度消失/梯度爆炸（Vanishing / Exploding gradients）</p>
<p>1.11 神经网络的权重初始化（Weight Initialization for Deep NetworksVanishing /Exploding gradients）</p>
<p>1.12 梯度的数值逼近（Numerical approximation of gradients）</p>
<p>1.13 梯度检验（Gradient checking）</p>
<p>1.14 梯度检验应用的注意事项（Gradient Checking Implementation Notes）</p>
<p>第二周：优化算法 (Optimization algorithms)</p>
<p>2.1 Mini-batch 梯度下降（Mini-batch gradient descent）</p>
<p>2.2 理解Mini-batch 梯度下降（Understanding Mini-batch gradient descent）</p>
<p>2.3 指数加权平均（Exponentially weighted averages）</p>
<p>2.4 理解指数加权平均（Understanding Exponentially weighted averages）</p>
<p>2.5 指数加权平均的偏差修正（Bias correction in exponentially weighted averages）</p>
<p>2.6 momentum梯度下降（Gradient descent with momentum）</p>
<p>2.7 RMSprop——root mean square prop（RMSprop）</p>
<p>2.8 Adam优化算法（Adam optimization algorithm）</p>
<p>2.9 学习率衰减（Learning rate decay）</p>
<p>2.10 局部最优问题（The problem of local optima）</p>
<p>第三周超参数调试，batch正则化和程序框架（Hyperparameter tuning, Batch Normalization and Programming Frameworks)</p>
<p>3.1 调试处理（Tuning process）</p>
<p>3.2 为超参数选择和适合范围（Using an appropriate scale to pick hyperparameters）</p>
<p>3.3 超参数训练的实践：Pandas vs. Caviar（Hyperparameters tuning in practice: Pandas vs. Caviar）</p>
<p>3.4 网络中的正则化激活函数（Normalizing activations in a network）</p>
<p>3.5 将 Batch Norm拟合进神经网络（Fitting Batch Norm into a neural network）</p>
<p>3.6 为什么Batch Norm奏效？（Why does Batch Norm work?）</p>
<p>3.7 测试时的Batch Norm（Batch Norm at test time）</p>
<p>3.8 Softmax 回归（Softmax Regression）</p>
<p>3.9 训练一个Softmax 分类器（Training a softmax classifier）</p>
<p>3.10 深度学习框架（Deep learning frameworks）</p>
<p>3.11 TensorFlow（TensorFlow）</p>
<h2><span id="di-san-men-ke-jie-gou-hua-ji-qi-xue-xi-xiang-mu-structuring-machine-learning-projects">第三门课 结构化机器学习项目 (Structuring Machine Learning Projects)</span><a href="#di-san-men-ke-jie-gou-hua-ji-qi-xue-xi-xiang-mu-structuring-machine-learning-projects" class="header-anchor">#</a></h2><p>第一周：机器学习策略（1）(ML Strategy (1))</p>
<p>1.1 为什么是ML策略？ (Why ML Strategy)</p>
<p>1.2 正交化(Orthogonalization)</p>
<p>1.3 单一数字评估指标(Single number evaluation metric)</p>
<p>1.4 满足和优化指标 (Satisficing and Optimizing metric)</p>
<p>1.5 训练集、开发集、测试集的划分(Train/dev/test distributions)</p>
<p>1.6 开发集和测试集的大小 (Size of the dev and test sets)</p>
<p>1.7 什么时候改变开发集/测试集和评估指标(When to change dev/test sets and metrics)</p>
<p>1.8 为什么是人的表现 (Why human-level performance?)</p>
<p>1.9 可避免偏差(Avoidable bias)</p>
<p>1.10 理解人类的表现 (Understanding human-level performance)</p>
<p>1.11 超过人类的表现(Surpassing human-level performance)</p>
<p>1.12 改善你的模型表现 (Improving your model performance)</p>
<p>第二周：机器学习策略（2）(ML Strategy (2))</p>
<p>2.1 误差分析 (Carrying out error analysis)</p>
<p>2.2 清除标注错误的数据(Cleaning up incorrectly labeled data)</p>
<p>2.3 快速搭建你的第一个系统，并进行迭代(Build your first system quickly, then iterate)</p>
<p>2.4 在不同的分布上的训练集和测试集 (Training and testing on different distributions)</p>
<p>2.5 数据分布不匹配的偏差与方差分析 (Bias and Variance with mismatched data distributions)</p>
<p>2.6 处理数据不匹配问题(Addressing data mismatch)</p>
<p>2.7 迁移学习 (Transfer learning)</p>
<p>2.8 多任务学习(Multi-task learning)</p>
<p>2.9 什么是端到端的深度学习？ (What is end-to-end deep learning?)</p>
<p>2.10 是否使用端到端的深度学习方法 (Whether to use end-to-end deep learning)</p>
<h2><span id="di-si-men-ke-juan-ji-shen-jing-wang-luo-convolutional-neural-networks">第四门课 卷积神经网络（Convolutional Neural Networks）</span><a href="#di-si-men-ke-juan-ji-shen-jing-wang-luo-convolutional-neural-networks" class="header-anchor">#</a></h2><p>第一周 卷积神经网络(Foundations of Convolutional Neural Networks)</p>
<p>1.1    计算机视觉（Computer vision）</p>
<p>1.2    边缘检测示例（Edge detection example）</p>
<p>1.3    更多边缘检测内容（More edge detection）</p>
<p>1.4    Padding</p>
<p>1.5    卷积步长（Strided convolutions）</p>
<p>1.6    三维卷积（Convolutions over volumes）</p>
<p>1.7    单层卷积网络（One layer of a convolutional network）</p>
<p>1.8    简单卷积网络示例（A simple convolution network example）</p>
<p>1.9    池化层（Pooling layers）</p>
<p>1.10 卷积神经网络示例（Convolutional neural network example）</p>
<p>1.11 为什么使用卷积？（Why convolutions?）</p>
<p>第二周 深度卷积网络：实例探究(Deep convolutional models: case studies)</p>
<p>2.1 为什么要进行实例探究？（Why look at case studies?）</p>
<p>2.2 经典网络（Classic networks）</p>
<p>2.3 残差网络（Residual Networks (ResNets)）</p>
<p>2.4 残差网络为什么有用？（Why ResNets work?）</p>
<p>2.5 网络中的网络以及 1×1 卷积（Network in Network and 1×1 convolutions）</p>
<p>2.6 谷歌 Inception 网络简介（Inception network motivation）</p>
<p>2.7 Inception 网络（Inception network）</p>
<p>2.8 使用开源的实现方案（Using open-source implementations）</p>
<p>2.9 迁移学习（Transfer Learning）</p>
<p>2.10 数据扩充（Data augmentation）</p>
<p>2.11 计算机视觉现状（The state of computer vision）</p>
<p>第三周 目标检测（Object detection）</p>
<p>3.1 目标定位（Object localization）</p>
<p>3.2 特征点检测（Landmark detection）</p>
<p>3.3 目标检测（Object detection）</p>
<p>3.4 卷积的滑动窗口实现（Convolutional implementation of sliding windows）</p>
<p>3.5 Bounding Box预测（Bounding box predictions）</p>
<p>3.6 交并比（Intersection over union）</p>
<p>3.7 非极大值抑制（Non-max suppression）</p>
<p>3.8 Anchor Boxes</p>
<p>3.9 YOLO 算法（Putting it together: YOLO algorithm）</p>
<p>3.10 候选区域（选修）（Region proposals (Optional)）</p>
<p>第四周 特殊应用：人脸识别和神经风格转换（Special applications: Face recognition &amp;Neural style transfer）</p>
<p>4.1 什么是人脸识别？(What is face recognition?)</p>
<p>4.2 One-Shot学习（One-shot learning）</p>
<p>4.3 Siamese 网络（Siamese network）</p>
<p>4.4 Triplet 损失（Triplet 损失）</p>
<p>4.5 面部验证与二分类（Face verification and binary classification）</p>
<p>4.6 什么是神经风格转换？（What is neural style transfer?）</p>
<p>4.7 什么是深度卷积网络？（What are deep ConvNets learning?）</p>
<p>4.8 代价函数（Cost function）</p>
<p>4.9 内容代价函数（Content cost function）</p>
<p>4.10 风格代价函数（Style cost function）</p>
<p>4.11 一维到三维推广（1D and 3D generalizations of models）</p>
<h1><span id="di-wu-men-ke-xu-lie-mo-xing-sequence-models">第五门课 序列模型(Sequence Models)</span><a href="#di-wu-men-ke-xu-lie-mo-xing-sequence-models" class="header-anchor">#</a></h1><p>第一周 循环序列模型（Recurrent Neural Networks） 1.1 为什么选择序列模型？（Why Sequence Models?）</p>
<p>1.2 数学符号（Notation）</p>
<p>1.3 循环神经网络模型（Recurrent Neural Network Model）</p>
<p>1.4 通过时间的反向传播（Backpropagation through time）</p>
<p>1.5 不同类型的循环神经网络（Different types of RNNs）</p>
<p>1.6 语言模型和序列生成（Language model and sequence generation）</p>
<p>1.7 对新序列采样（Sampling novel sequences）</p>
<p>1.8 循环神经网络的梯度消失（Vanishing gradients with RNNs）</p>
<p>1.9 GRU单元（Gated Recurrent Unit（GRU））</p>
<p>1.10 长短期记忆（LSTM（long short term memory）unit）</p>
<p>1.11 双向循环神经网络（Bidirectional RNN）</p>
<p>1.12 深层循环神经网络（Deep RNNs）</p>
<p>第二周 自然语言处理与词嵌入（Natural Language Processing and Word Embeddings）</p>
<p>2.1 词汇表征（Word Representation）</p>
<p>2.2 使用词嵌入（Using Word Embeddings）</p>
<p>2.3 词嵌入的特性（Properties of Word Embeddings）</p>
<p>2.4 嵌入矩阵（Embedding Matrix）</p>
<p>2.5 学习词嵌入（Learning Word Embeddings）</p>
<p>2.6 Word2Vec</p>
<p>2.7 负采样（Negative Sampling）</p>
<p>2.8 GloVe 词向量（GloVe Word Vectors）</p>
<p>2.9 情绪分类（Sentiment Classification）</p>
<p>2.10 词嵌入除偏（Debiasing Word Embeddings）</p>
<p>第三周 序列模型和注意力机制（Sequence models &amp; Attention mechanism）</p>
<p>3.1 基础模型（Basic Models）</p>
<p>3.2 选择最可能的句子（Picking the most likely sentence）</p>
<p>3.3 集束搜索（Beam Search）</p>
<p>3.4 改进集束搜索（Refinements to Beam Search）</p>
<p>3.5 集束搜索的误差分析（Error analysis in beam search）</p>
<p>3.6 Bleu 得分（选修）（Bleu Score (optional)）</p>
<p>3.7 注意力模型直观理解（Attention Model Intuition）</p>
<p>3.8注意力模型（Attention Model）</p>
<p>3.9语音识别（Speech recognition）</p>
<p>3.10触发字检测（Trigger Word Detection）</p>
<p>3.11结论和致谢（Conclusion and thank you）</p>
<p>人工智能大师访谈</p>
<p>吴恩达采访 Geoffery Hinton</p>
<p>吴恩达采访 Ian Goodfellow</p>
<p>吴恩达采访 Ruslan Salakhutdinov</p>
<p>吴恩达采访 Yoshua Bengio</p>
<p>吴恩达采访 林元庆</p>
<p>吴恩达采访 Pieter Abbeel</p>
<p>吴恩达采访 Andrej Karpathy</p>
<p>附件</p>
<p>深度学习符号指南（原课程翻译）</p>
]]></content>
      <categories>
        <category>视频学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>贝叶斯分类器</title>
    <url>/2019/03/28/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB%E5%99%A8/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1><span id="gai-lu-lun-de-zhi-shi">概率论的知识</span><a href="#gai-lu-lun-de-zhi-shi" class="header-anchor">#</a></h1><a id="more"></a>
<h2><span id="tiao-jian-gai-lu">条件概率</span><a href="#tiao-jian-gai-lu" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
P(A|B)=P(A\cap B)/P(B)</script><p>已知B发生的概率，求A发生的概率</p>
<h2><span id="quan-gai-lu">全概率</span><a href="#quan-gai-lu" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
P(B) = \sum_{i=1}^{N}P(B \cap A_i)P(A_i)</script><h2><span id="bei-xie-si-tui-duan">贝叶斯推断</span><a href="#bei-xie-si-tui-duan" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
P(A|B)=P(A)\frac{P(B|A)}{P(B)}</script><script type="math/tex; mode=display">
P(A_i|B)=P(A_i)\frac{P(B|A_i)}{\sum P(A_i)P(B|A_i)}</script><p>$P(A)$：Prior probability 先验概率，在B事件发生之前，对A事件做一个判断</p>
<p>$P(A|B)$:Posterior probability 后验概率，在B事件发生之后，对A事件的概率重新评估</p>
<p>$P(B|A)/P(B)$:称为可能性函数，一个调整因子</p>
<p>后验概率=先验概率*调整因子 （可知，调整因此&gt;1,发生概率增大了，</p>
<h1><span id="bei-xie-si-jue-ce-lun">贝叶斯决策论</span><a href="#bei-xie-si-jue-ce-lun" class="header-anchor">#</a></h1><p>英文：Bayesian decision theory</p>
<p>设有$N$种可能的类别, 即γ=${c_1,c_2,…,c_N}$. $λ_ij$是将一个真实类别为$c_j$的样本判为$c_x$的损失。 基于后验概率可得将样本分类所产生的期望损失, 或者成为条件风险(Conditional Risk) </p>
<script type="math/tex; mode=display">
R(C_i|x)=∑_{j=1}^Nλ_{ij}P(c_j|x)</script><p>于是， 我们的任务就是寻找判定准则h， 令$χ→γ$ 使得最小化总体风险，$R(h)=E_x[R(h(x)|x]$最小. 对于每一个$x$，若$h$都能最小化条件风险，那么总体也被最小化了。 可以简化为对每个样本选择其条件风险最小的分类, 即: </p>
<script type="math/tex; mode=display">
h(x)=arg \min_{c⊂λ}R(c|x)</script><p>此$h(x)$就是贝叶斯最优分类器。 $R(h)$为贝叶斯风险(Bayes Risk), $1−R(h)$反映了分类器的最优性能. </p>
<p>具体来说，如果目标是最小化分类错误率，</p>
<script type="math/tex; mode=display">\lambda_{ij}=\begin{cases} 0\ \  i==j\\1 \ \ \ i!=j \end{cases}</script><p>则$R(c|x)=1-p(c|x)$，因此可知，$h(x)=\max_{c\in C} p(c|x)$</p>
<p>对于样本$x$,选择后验概率$P(c|X)$最大的类别为标记。</p>
<p>问题转换为</p>
<script type="math/tex; mode=display">
P(c_i|x)=\frac{P(c_i)P(x|c_i)}{\sum P(x)}</script><p>求先验概率和似然($P(x|c)$)</p>
<p>其中</p>
<p>$P(c)$表达了样本空间种各类样本所占的比列，根据大数定律，当样本足够充分的独立同分布样本是，可以频率估计</p>
<p>$P(x|c)$,涉及关于x所以属性的联合概率，用频率估计概率可能不太好，对于估计类条件概率的一种宠用策略是先假设具有某种确定的概率分布形式，再基于训练样本对概率分布的参数进行估计。</p>
<p>$P(x|c)$是类条件概率，由某个分布决定，$P(x|\theta_c)$来表示了</p>
<p>频率注意派认为可以通过优化似然函数估计参数。$D_c$类别c的样本集合，独立同分布</p>
<script type="math/tex; mode=display">
P(D_c|\theta_c)=\Pi_{x \in D_c}P(x|\theta_c)</script><script type="math/tex; mode=display">
LL(\theta_c)=log  P(D_c|\theta_c)</script><h1><span id="po-su-bei-xie-si-fen-lei-qi">朴素贝叶斯分类器</span><a href="#po-su-bei-xie-si-fen-lei-qi" class="header-anchor">#</a></h1><p>英文：naive Bayes classifier</p>
<p>假设：属性条件独立性假设，每个属性独立性对分类结果发生影响</p>
<script type="math/tex; mode=display">
P(c|x)=\frac{P(c)P(x|c)}{P(x)}=\frac{P(c)\Pi_{i=1}^{d}P(x_i|c)}{P(x)}</script><p>对于一个$x$，$P(x)$都是相同的，因此贝叶斯模型可写为</p>
<script type="math/tex; mode=display">
h_{nb}(x)=arg max_{c\in y}P(c)\Pi_{i=1}^{d}P(x_i|c)</script><h2><span id="ji-suan-guo-cheng">计算过程</span><a href="#ji-suan-guo-cheng" class="header-anchor">#</a></h2><p>假设$D_{c_i}$表示第i类的样本集合，</p>
<ol>
<li><p>$P(c_i)=\frac{|D_{c_i}|}{|D|}$</p>
</li>
<li><p>如果是离散属性</p>
</li>
</ol>
<script type="math/tex; mode=display">
P(x_i|c_i)=\frac{|D_{c,x_i}|}{|D_{c_i}|}</script><p>如果是连续属性，$P(x_i|c_i)$服从$N(u_{c,i},\theta_{c,i}^2)$的分布</p>
<script type="math/tex; mode=display">
P(x_i|c)=\frac{1}{\sqrt{2\pi}\theta_{c,i}}exp(-\frac{(x_i-u_i)^2}{2\theta_{c,i}^2})</script><ol>
<li>$P(c_i)\Pi_{i=1}^{N}P(x_i|c_i)$</li>
</ol>
<p>注意为了避免其他属性携带的信息被训练集中未出现的属性值抹去，因此用拉普拉斯修正（Laplacian correction)</p>
<script type="math/tex; mode=display">
P(c)=\frac{|D_{c_i}|+1}{|D|+N}\\
P(x_i|c)=\frac{|D_{x_i,c}|+1}{|D_c|+N_i}</script><p>$N$:训练集可能出现的类别数</p>
<p>$N_i$:第i个属性可能的取值数</p>
<p>显然，拉普拉斯修正避免因训练集不充分导出的概率估值为0的情况</p>
<h1><span id="po-su-bei-xie-si-de-chong-lei">朴素贝叶斯的种类</span><a href="#po-su-bei-xie-si-de-chong-lei" class="header-anchor">#</a></h1><p>再scikit-learn中，一共有三个朴素贝叶斯，分别是</p>
<h2><span id="gaussiannb">GaussianNB</span><a href="#gaussiannb" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
P(x_i|C_i)=\frac{1}{\sqrt{2\pi}\theta_{c,i}}exp(-\frac{(x_i-u_i)^2}{2\theta_{c,i}^2})</script><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">#导入包</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">from</span> sklearn.naive_bayes <span class="keyword">import</span> GaussianNB</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> accuracy_score</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入数据集</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line">iris=datasets.load_iris()</span><br><span class="line"><span class="comment">#切分数据集</span></span><br><span class="line">Xtrain, Xtest, ytrain, ytest = train_test_split(iris.data,</span><br><span class="line">                                                iris.target,</span><br><span class="line">                                                random_state=<span class="number">42</span>)</span><br><span class="line"><span class="comment">#建模</span></span><br><span class="line">clf = GaussianNB()</span><br><span class="line">clf.fit(Xtrain, ytrain)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在测试集上执行预测，proba导出的是每个样本属于某类的概率</span></span><br><span class="line">clf.predict(Xtest)</span><br><span class="line">clf.predict_proba(Xtest) <span class="comment">#每一类计算结果都输出</span></span><br><span class="line"><span class="comment">#测试准确率</span></span><br><span class="line">accuracy_score(ytest, clf.predict(Xtest))</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">dataSet =pd.read_csv(<span class="string">'iris.txt'</span>,header = <span class="literal">None</span>)</span><br><span class="line">dataSet.head()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randSplit</span>(<span class="params">dataSet, rate</span>):</span></span><br><span class="line">    l = list(dataSet.index) <span class="comment">#提取出索引</span></span><br><span class="line">    random.shuffle(l) <span class="comment">#随机打乱索引</span></span><br><span class="line">    dataSet.index = l <span class="comment">#将打乱后的索引重新赋值给原数据集</span></span><br><span class="line">    n = dataSet.shape[<span class="number">0</span>] <span class="comment">#总行数</span></span><br><span class="line">    m = int(n * rate) <span class="comment">#训练集的数量</span></span><br><span class="line">    train = dataSet.loc[range(m), :] <span class="comment">#提取前m个记录作为训练集</span></span><br><span class="line">    test = dataSet.loc[range(m, n), :] <span class="comment">#剩下的作为测试集</span></span><br><span class="line">    dataSet.index = range(dataSet.shape[<span class="number">0</span>]) <span class="comment">#更新原数据集的索引</span></span><br><span class="line">    test.index = range(test.shape[<span class="number">0</span>]) <span class="comment">#更新测试集的索引</span></span><br><span class="line"></span><br><span class="line">train,test=randSplit(dataSet, <span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gnb_classify</span>(<span class="params">train,test</span>):</span></span><br><span class="line">    labels = train.iloc[:,<span class="number">-1</span>].value_counts().index <span class="comment">#提取训练集的标签种类</span></span><br><span class="line">    mean =[] <span class="comment">#存放每个类别的均值</span></span><br><span class="line">    std =[] <span class="comment">#存放每个类别的方差</span></span><br><span class="line">    result = [] <span class="comment">#存放测试集的预测结果</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> labels:</span><br><span class="line">        item = train.loc[train.iloc[:,<span class="number">-1</span>]==i,:] <span class="comment">#分别提取出每一种类别</span></span><br><span class="line">        m = item.iloc[:,:<span class="number">-1</span>].mean() <span class="comment">#当前类别的平均值</span></span><br><span class="line">        s = np.sum((item.iloc[:,:<span class="number">-1</span>]-m)**<span class="number">2</span>)/(item.shape[<span class="number">0</span>]) <span class="comment">#当前类别的方差</span></span><br><span class="line">        mean.append(m) <span class="comment">#将当前类别的平均值追加至列表</span></span><br><span class="line">        std.append(s) <span class="comment">#将当前类别的方差追加至列表</span></span><br><span class="line">    means = pd.DataFrame(mean,index=labels) <span class="comment">#变成DF格式，索引为类标签</span></span><br><span class="line">    stds = pd.DataFrame(std,index=labels) <span class="comment">#变成DF格式，索引为类标签</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(test.shape[<span class="number">0</span>]):</span><br><span class="line">        iset = test.iloc[j,:<span class="number">-1</span>].tolist() <span class="comment">#当前测试实例</span></span><br><span class="line">        iprob = np.exp(<span class="number">-1</span>*(iset-means)**<span class="number">2</span>/(stds*<span class="number">2</span>))/(np.sqrt(<span class="number">2</span>*np.pi*stds)) <span class="comment">#正态分布公式</span></span><br><span class="line">        prob = train.iloc[:,<span class="number">-1</span>].value_counts()/len(train.iloc[:,<span class="number">-1</span>]) <span class="comment">#初始化当前实例总概率</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> range(test.shape[<span class="number">1</span>]<span class="number">-1</span>): <span class="comment">#遍历每个特征</span></span><br><span class="line">            prob *= iprob[k] <span class="comment">#特征概率之积即为当前实例概率</span></span><br><span class="line">        cla = prob.index[np.argmax(prob.values)] <span class="comment">#返回最大概率的类别</span></span><br><span class="line">        result.append(cla)</span><br><span class="line">    test[<span class="string">'predict'</span>]=result</span><br><span class="line">    acc = (test.iloc[:,<span class="number">-1</span>]==test.iloc[:,<span class="number">-2</span>]).mean() <span class="comment">#计算预测准确率</span></span><br><span class="line">    print(<span class="string">f'模型预测准确率为<span class="subst">{acc}</span>'</span>)</span><br><span class="line">    <span class="keyword">return</span> test</span><br><span class="line"></span><br><span class="line">gnb_classify(train,test)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    train,test= randSplit(dataSet, <span class="number">0.8</span>)</span><br><span class="line">    gnb_classify(train,test)</span><br><span class="line">   </span><br></pre></td></tr></tbody></table></figure>
<h2><span id="multinomialnb">MultinomialNB</span><a href="#multinomialnb" class="header-anchor">#</a></h2><p>先验概率多项式分布的朴素贝叶斯，假设特征是由一共简单多项式分布生成，多项分布可以描述各种类型样本出现的频率，该模型常用于文本分类，特别表示次数。$\lambda$常取值1</p>
<script type="math/tex; mode=display">
P(x_{il}|c)=\frac{x_{il}+\lambda}{m_k+n\lambda}</script><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loadDataSet</span>():</span></span><br><span class="line">    dataSet=[[<span class="string">'my'</span>, <span class="string">'dog'</span>, <span class="string">'has'</span>, <span class="string">'flea'</span>, <span class="string">'problems'</span>, <span class="string">'help'</span>, <span class="string">'please'</span>],</span><br><span class="line">             [<span class="string">'maybe'</span>, <span class="string">'not'</span>, <span class="string">'take'</span>, <span class="string">'him'</span>, <span class="string">'to'</span>, <span class="string">'dog'</span>, <span class="string">'park'</span>, <span class="string">'stupid'</span>],</span><br><span class="line">             [<span class="string">'my'</span>, <span class="string">'dalmation'</span>, <span class="string">'is'</span>, <span class="string">'so'</span>, <span class="string">'cute'</span>, <span class="string">'I'</span>, <span class="string">'love'</span>, <span class="string">'him'</span>],</span><br><span class="line">             [<span class="string">'stop'</span>, <span class="string">'posting'</span>, <span class="string">'stupid'</span>, <span class="string">'worthless'</span>, <span class="string">'garbage'</span>],</span><br><span class="line">             [<span class="string">'mr'</span>, <span class="string">'licks'</span>, <span class="string">'ate'</span>, <span class="string">'my'</span>, <span class="string">'steak'</span>, <span class="string">'how'</span>, <span class="string">'to'</span>, <span class="string">'stop'</span>, <span class="string">'him'</span>],</span><br><span class="line">             [<span class="string">'quit'</span>, <span class="string">'buying'</span>, <span class="string">'worthless'</span>, <span class="string">'dog'</span>, <span class="string">'food'</span>, <span class="string">'stupid'</span>]] <span class="comment">#切分好的词条</span></span><br><span class="line">    classVec = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>] <span class="comment">#类别标签向量，1代表侮辱性词汇，0代表非侮辱性词汇</span></span><br><span class="line">    <span class="keyword">return</span> dataSet,classVec</span><br><span class="line">dataSet,classVec = loadDataSet()</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createVocabList</span>(<span class="params">dataSet</span>):</span></span><br><span class="line">    vocabSet = set() <span class="comment">#创建一个空的集合</span></span><br><span class="line">    <span class="keyword">for</span> doc <span class="keyword">in</span> dataSet: <span class="comment">#遍历dataSet中的每一条言论</span></span><br><span class="line">        vocabSet = vocabSet | set(doc) <span class="comment">#取并集</span></span><br><span class="line">        vocabList = list(vocabSet)</span><br><span class="line">    <span class="keyword">return</span> vocabList</span><br><span class="line"></span><br><span class="line">vocabList = createVocabList(dataSet)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setOfWords2Vec</span>(<span class="params">vocabList, inputSet</span>):</span></span><br><span class="line">    returnVec = [<span class="number">0</span>] * len(vocabList) <span class="comment">#创建一个其中所含元素都为0的向量</span></span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> inputSet: <span class="comment">#遍历每个词条</span></span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> vocabList: <span class="comment">#如果词条存在于词汇表中，则变为1</span></span><br><span class="line">            returnVec[vocabList.index(word)] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">f" <span class="subst">{word}</span> is not in my Vocabulary!"</span> )</span><br><span class="line">    <span class="keyword">return</span> returnVec <span class="comment">#返回文档向量</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_trainMat</span>(<span class="params">dataSet</span>):</span></span><br><span class="line">    trainMat = [] <span class="comment">#初始化向量列表</span></span><br><span class="line">    vocabList = createVocabList(dataSet) <span class="comment">#生成词汇表</span></span><br><span class="line">    <span class="keyword">for</span> inputSet <span class="keyword">in</span> dataSet: <span class="comment">#遍历样本词条中的每一条样本</span></span><br><span class="line">        returnVec=setOfWords2Vec(vocabList, inputSet) <span class="comment">#将当前词条向量化</span></span><br><span class="line">        trainMat.append(returnVec) <span class="comment">#追加到向量列表中</span></span><br><span class="line">    <span class="keyword">return</span> trainMat</span><br><span class="line">trainMat = get_trainMat(dataSet)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trainNB</span>(<span class="params">trainMat,classVec</span>):</span></span><br><span class="line">    n = len(trainMat) <span class="comment">#计算训练的文档数目</span></span><br><span class="line">    m = len(trainMat[<span class="number">0</span>]) <span class="comment">#计算每篇文档的词条数</span></span><br><span class="line">    pAb = sum(classVec)/n <span class="comment">#文档属于侮辱类的概率</span></span><br><span class="line">    p0Num = np.zeros(m) <span class="comment">#词条出现数初始化为0</span></span><br><span class="line">    p1Num = np.zeros(m) <span class="comment">#词条出现数初始化为0</span></span><br><span class="line">    p0Denom = <span class="number">0</span> <span class="comment">#分母初始化为0</span></span><br><span class="line">    p1Denom = <span class="number">0</span> <span class="comment">#分母初始化为0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n): <span class="comment">#遍历每一个文档</span></span><br><span class="line">        <span class="keyword">if</span> classVec[i] == <span class="number">1</span>: <span class="comment">#统计属于侮辱类的条件概率所需的数据</span></span><br><span class="line">            p1Num += trainMat[i]</span><br><span class="line">            p1Denom += sum(trainMat[i])</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment">#统计属于非侮辱类的条件概率所需的数据</span></span><br><span class="line">            p0Num += trainMat[i]</span><br><span class="line">            p0Denom += sum(trainMat[i])</span><br><span class="line">    p1V = p1Num/p1Denom</span><br><span class="line">    p0V = p0Num/p0Denom</span><br><span class="line">    <span class="keyword">return</span> p0V,p1V,pAb <span class="comment">#返回属于非侮辱类,侮辱类和文档属于侮辱类的概率</span></span><br><span class="line"></span><br><span class="line">p0V,p1V,pAb=trainNB(trainMat,classVec)</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classifyNB</span>(<span class="params">vec2Classify, p0V, p1V, pAb</span>):</span></span><br><span class="line">    p1 = reduce(<span class="keyword">lambda</span> x,y:x*y, vec2Classify * p1V) * pAb   <span class="comment">#对应元素相乘</span></span><br><span class="line">    p0 = reduce(<span class="keyword">lambda</span> x,y:x*y, vec2Classify * p0V) * (<span class="number">1</span> - pAb)</span><br><span class="line">    print(<span class="string">'p0:'</span>,p0)</span><br><span class="line">    print(<span class="string">'p1:'</span>,p1)</span><br><span class="line">    <span class="keyword">if</span> p1 &gt; p0:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">testingNB</span>(<span class="params">testVec</span>):</span></span><br><span class="line">    dataSet,classVec = loadDataSet() <span class="comment">#创建实验样本</span></span><br><span class="line">    vocabList = createVocabList(dataSet) <span class="comment">#创建词汇表</span></span><br><span class="line">    trainMat= get_trainMat(dataSet) <span class="comment">#将实验样本向量化</span></span><br><span class="line">    p0V,p1V,pAb = trainNB(trainMat,classVec) <span class="comment">#训练朴素贝叶斯分类器</span></span><br><span class="line">    thisone = setOfWords2Vec(vocabList, testVec) <span class="comment">#测试样本向量化</span></span><br><span class="line">    <span class="keyword">if</span> classifyNB(thisone,p0V,p1V,pAb):</span><br><span class="line">        print(testVec,<span class="string">'属于侮辱类'</span>) <span class="comment">#执行分类并打印分类结果</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(testVec,<span class="string">'属于非侮辱类'</span>) <span class="comment">#执行分类并打印分类结果</span></span><br><span class="line">        </span><br><span class="line">testVec1 = [<span class="string">'love'</span>, <span class="string">'my'</span>, <span class="string">'dalmation'</span>]</span><br><span class="line">testingNB(testVec1)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="bernoullinb">BernoulliNB</span><a href="#bernoullinb" class="header-anchor">#</a></h2><p>伯努利分布，如果是二元伯努利分布</p>
<script type="math/tex; mode=display">
P(x_{il}|C_i)=P(i|Y=C_i)x_{il}+(1-P(i|Y=C_i))(1-x_{il})</script><p>如果样本属性大多数属于连续，GaussionNB</p>
<p>如果是离散值，使用MultinomialNB</p>
<p>如果样本特征是二元离散值或者稀疏离散值，BernoulliNB</p>
<h1><span id="ban-po-su-bei-xie-si">半朴素贝叶斯</span><a href="#ban-po-su-bei-xie-si" class="header-anchor">#</a></h1><h2><span id="xin-xi-liang-shang-lian-he-shang-tiao-jian-shang-hu-xin-xi">信息量、熵、联合熵、条件熵、互信息</span><a href="#xin-xi-liang-shang-lian-he-shang-tiao-jian-shang-hu-xin-xi" class="header-anchor">#</a></h2><h3><span id="xin-xi-liang">信息量</span><a href="#xin-xi-liang" class="header-anchor">#</a></h3><p>反应了随机变量取某个值含的可能性大小，或者是含有的信息多少</p>
<script type="math/tex; mode=display">
I(X=x)=-log_2^{p(x）}</script><h3><span id="shang-entropy">熵(entropy)</span><a href="#shang-entropy" class="header-anchor">#</a></h3><p>反应了信源平均每个符号的信息量,或者是随机变量不确定性的衡量</p>
<script type="math/tex; mode=display">
H(X)=E(I(X))=\sum p(X=x)(-log_2^{p(x)})</script><h2><span id="lian-he-shang">联合熵</span><a href="#lian-he-shang" class="header-anchor">#</a></h2><p>反应了多个随机变量的平均信息量</p>
<script type="math/tex; mode=display">
H(X,Y)=\sum p(x,y)(-log_2^{p(x,y)})</script><h3><span id="tiao-jian-shang-conditional-entropy">条件熵（Conditional entropy）</span><a href="#tiao-jian-shang-conditional-entropy" class="header-anchor">#</a></h3><p>反应了已知一个随机变量下，另一个随机变量的不确定性</p>
<script type="math/tex; mode=display">
H(X|Y)=-\sum p(y)H(X|Y=y)=-\sum p(x,y)log_2^{p(x|y)}</script><h3><span id="hu-xin-xi-mutual-information">互信息(mutual information)</span><a href="#hu-xin-xi-mutual-information" class="header-anchor">#</a></h3><p>反应了已知一个随机变量的情况下，另外一个随机变量不确定性减少了多少,可以把互信息看成由于知道 y 值而造成的 x 的不确定性的减小</p>
<script type="math/tex; mode=display">
I(X;Y)=\sum \sum p(x,y)log(\frac{p(x,y)}{p(x)p(y)})\\
=H(X)-H(X|Y)=H(Y)-H(Y|X)</script><p>如果两个随机变量独立，则互信息为0,因此，互信息可以衡量两个随机变量的相关程度</p>
<h2><span id="tiao-jian-hu-xin-xi">条件互信息</span><a href="#tiao-jian-hu-xin-xi" class="header-anchor">#</a></h2><p>在条件z发生时的条件互信息</p>
<script type="math/tex; mode=display">
I(X;Y|Z) = \sum\sum p(x,y|z)log_2^{\frac{p(x,y|z)}{p(x|z)p(y|z)}}</script><p><img src="/2019/03/28/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB%E5%99%A8/MyBlog\hexo\source\_posts\贝叶斯分类器\熵.png" alt></p>
<h2><span id="ban-po-su-bei-xie-si">半朴素贝叶斯</span><a href="#ban-po-su-bei-xie-si" class="header-anchor">#</a></h2><p>适当的考虑一部分属性间的相互依赖关系，这个关系可以用互信息描述</p>
<h3><span id="du-yi-lai">独依赖</span><a href="#du-yi-lai" class="header-anchor">#</a></h3><p>假设每个属性只有一个其他 的属性.则计算公式改下如下</p>
<script type="math/tex; mode=display">
p(C)\Pi_{i=1}^{d} P(x_i|C_i,pa_i)</script><p>$pa_i$是属性$x_i$所依赖的属性，被称为$x_i$的父属性</p>
<p>1)  <strong>SPODE </strong>最简单的方法是：都选一个属性作为父属性</p>
<p>可以通过交叉验证的方法</p>
<p>2)  TAN :最大带权生成树</p>
<p>权重：当y划分为$c_k$类时条件熵</p>
<script type="math/tex; mode=display">
I(x_i;y_i|y)=\sum_{x_i,y_i,c_k}p(x_i,y_j|c_k)log^{\frac{p(x_i;y_j|c_k)}{p(x_i|c_k)p(y_i|c_k)}}</script><p>step 1: 计算任意两个属性之间条件互信息</p>
<script type="math/tex; mode=display">
I(X;Y|Y)=\sum_{i}I(X;Y|c_i)</script><p>step 2: 以属性为结点构建完全图</p>
<p>step 3: 最大带权生成树，挑选根变量</p>
<p>step 4: 加入类别结点y,增加到每个属性的有向边</p>
<p>条件互信息反应了属性在已知类别下的相关性大小</p>
<p><img src="/2019/03/28/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB%E5%99%A8/MyBlog\hexo\source\_posts\贝叶斯分类器\2.png" alt></p>
<h2><span id="ji-cheng-xue-xi">集成学习</span><a href="#ji-cheng-xue-xi" class="header-anchor">#</a></h2><p>AODE选择模型尝试将每个属性作为超父构建SPODE</p>
<script type="math/tex; mode=display">
P(c_i|X)正比于 \sum_{i=1,|D_{x_i}>=m}p(c,x_i)\Pi_{j=1}^{d}p(x_j|c_i,x_i)</script><p>$m$通常取30,</p>
<script type="math/tex; mode=display">
P(c,x_i)=\frac{|D_{c,x_i}|+1}{|{D}|+N*N_i}\\
P(x_j|c,x_i)=\frac{|D_{c,x_i,x_j}+1|}{|D_{c,xi}|+N_j}</script><h1><span id="bei-xie-si-wang-bayesian-network">贝叶斯网(Bayesian network)</span><a href="#bei-xie-si-wang-bayesian-network" class="header-anchor">#</a></h1><p>借助有向无环图来刻画属性之间的依赖关系，条件概率表来描述属性的联合概率分布。</p>
<p>一个贝叶斯网络$B$,包括结构$G$和参数$\Theta$ ,$B(G,\Theta)$,如果两个属性有直接依赖关系，用边连接，对于属性$x_i$,其父节点集合$G_i$,则$\Theta$包括每个属性条件概率$\Theta_{x_i|\pi_i}=P_B(x_i|\pi_i)$</p>
<h2><span id="jie-gou">结构</span><a href="#jie-gou" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
p(x_1,x_2,...,x_n)=\Pi_{i=1}^{n}p_{B}(x_i|\pi_i)=\Pi_{i=1}^{d}\Theta_{xi|\pi_i}\\
=\Pi_{i=1}^{d}P(x_i|Parents(x_i))</script><h2><span id="tui-duan">推断</span><a href="#tui-duan" class="header-anchor">#</a></h2><p>一旦训练好贝叶斯网后，就能回答query,通过一些属性的观测者来推断其他属性变量的取值，其中，已知变量的值观测推测待查询的过程“推断”,已知变量的观测者”证据“</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>贝叶斯分类器</tag>
      </tags>
  </entry>
  <entry>
    <title>二次规划</title>
    <url>/2019/03/25/%E4%BA%8C%E6%AC%A1%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1><span id="kkt-karush-kuhn-tucher-tiao-jian">KKT(Karush-Kuhn-Tucher)条件</span><a href="#kkt-karush-kuhn-tucher-tiao-jian" class="header-anchor">#</a></h1><a id="more"></a>
<p>给定优化问题</p>
<script type="math/tex; mode=display">
\min f(x)\\
subject\ to \begin{cases}
g_i(x) = 0 (i=1,,,,m\\
h_i(x) <= 0 (i=m+1,...,n)
\end{cases}</script><p>构造lagrange函数</p>
<script type="math/tex; mode=display">
L(x,\lambda) = f(x)+\sum_{i=1}^{m}\lambda_ig_i(x)+\sum_{i=m+1}^{n}\lambda_ih_i(x)</script><p>KKT条件</p>
<script type="math/tex; mode=display">
\frac{\partial L}{\partial x}=0\\
g_i(x)=0\\
\lambda_i>=0 (i=m+1,...,n)\\
\lambda_i h_i(x)=0(i=m+1,..,n)</script><h1><span id="er-ci-gui-hua-wen-ti">二次规划问题</span><a href="#er-ci-gui-hua-wen-ti" class="header-anchor">#</a></h1><p>问题的数学表达</p>
<script type="math/tex; mode=display">
\min Q(x) = \frac{1}{2}x^THx+g^Tx\\
s.t. a_i^Tx = b_i (i=1,..,m)\\
\ \ \  \ \ \ \ a_i^Tx <= b_i(i=m+1,...n)</script><p>KKT条件</p>
<script type="math/tex; mode=display">
\bigtriangledown f(x)-A^T\lambda =0\\
A_{E}x - b_{E}=0\\
A_{L}x-b_L<=0\\
\lambda_L>=0\\
\lambda_L^T(A_LX_L-b_L)=0</script><p>如果$H$半正定，二次规划问题的全局极小值的充要条件，$x^{*}$是一个K-T条件</p>
<p>证明：</p>
<p>必要性：KKT</p>
<p>充分性：</p>
<script type="math/tex; mode=display">
f(x)-f(x^{*})=\frac{1}{2}x^THx+g^Tx-\frac{1}{2}x^{*T}Hx^{*}-g^Tx^{*}\\
=\frac{1}{2}(x-x^{*})^TH(x-x^{*})+x^{*T}H(x-x^{*})+g^T(x-x^{*})\\
>=x^{*T}H(x-x^{*})+g^T(x-x^{*})=\lambda^TA(x-x^{*})</script><p><a href="http://www.hankcs.com/ml/lagrange-duality.html#h3-7">http://www.hankcs.com/ml/lagrange-duality.html#h3-7</a></p>
<h1><span id="smo-sequential-minimal-optimization">SMO ：Sequential minimal optimization</span><a href="#smo-sequential-minimal-optimization" class="header-anchor">#</a></h1><p>支持向量机的对偶问题</p>
<script type="math/tex; mode=display">
\min \frac{1}{2}\sum_{i=1}^{m}\sum_{j=1}^{m}\alpha_i\alpha_jy_iy_jK(x_i,x_j)-\sum_{i=1}^{m}\alpha_i\\
s.t. \sum_{i=1}^{m}\alpha_iy_i=0\\
0<=\alpha_i<=C</script><p>这个优化问题，可以根据二次规划求解，但是如果样本 过多，特别慢</p>
<p>Platt提出了一种更快的方法</p>
<p>SMO算法是一种启发式算法，其基本思路是：</p>
<p>如果所有变量的解都满足此最优化问题的KKT条件（Karush-Kuhn-Tuckerconditions)，那么这个最优化问题的解就得到了。因为KKT条件是该最优化问题的充分必要条件。</p>
<p>否则，选择两个变量，固定其他变量，针对这两个变量构建一个二次规划问题。这个二次规划问题关于这两个变量的解应该更接近原始二次规划问题的解，因为这会使得原始二次规划问题的目标函数值变得更小。重要的是，这时子问题可以通过解析方法求解，这样就可以大大提高整个算法的计算速度。子问题有两个变量，一个是违反KKT条件最严重的那一个，另一个由约束条件自动确定。如此，SMO算法将原问题不断分解为子问题并对子问题求解，进而达到求解原问题的目的。</p>
<p>假设$\alpha_i,\alpha_j$为选择的两个优化变量，则优化问题</p>
<script type="math/tex; mode=display">
\min W(\alpha_i,\alpha_j)=\frac{1}{2}\alpha_i\alpha_iy_iy_iK(x_i,x_i)+\frac{1}{2}\alpha_j\alpha_jy_jy_jK(x_j,x_j)+\alpha_i\alpha_jy_iy_jK(x_i,x_j)\\
+\sum_{k_1,k_2!=i,j}^{m}\alpha_{k_1}\alpha_{k_2}y_{k_1}y_{k_2}K(x_{k_1},x_{k_2})-(\alpha_i+\alpha_j)\\
s.t\ \ \  \alpha_iy_i+\alpha_jy_j=-\sum_{k!=i,j}^{m}\alpha_ky_k=\xi\\
0<=\alpha_i<=C</script><p>上述问题就是关于</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>二次规划</tag>
      </tags>
  </entry>
  <entry>
    <title>scikit-learn</title>
    <url>/2019/03/23/scikit-learn/</url>
    <content><![CDATA[<h1><span id><!-- more  --></span><a href="#" class="header-anchor">#</a></h1><h1><span id="cross-validation-evaluating-estimator-performancep">Cross-validation: evaluating estimator performance</span><a href="#cross-validation-evaluating-estimator-performancep" class="header-anchor">#</a></h1><p><img src="https://scikit-learn.org/stable/_images/grid_search_workflow.png" alt="Grid Search Workflow"></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">from sklearn.model_selection import train_test_split</span><br><span class="line"></span><br><span class="line"># 调用train_test_split函数 自动划分数据集 40%for testing</span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(iris.data,iris.target, test_size=0.4, random_state=0)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="corss-validation">corss validation</span><a href="#corss-validation" class="header-anchor">#</a></h2><p><img src="https://scikit-learn.org/stable/_images/grid_search_cross_validation.png" alt="../_images/grid_search_cross_validation.png"></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">from sklearn.model_selection import cross_validate</span><br><span class="line">from sklearn.metrics import recall_score</span><br><span class="line">scoring = ['precision_macro', 'recall_macro']</span><br><span class="line">clf = svm.SVC(kernel='linear', C=1, random_state=0)</span><br><span class="line">scores = cross_validate(clf, iris.data, iris.target, scoring=scoring,</span><br><span class="line">                        cv=5, return_train_score=False)</span><br><span class="line">sorted(scores.keys())</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="cross-validation-of-time-series-data">Cross validation of time series data</span><a href="#cross-validation-of-time-series-data" class="header-anchor">#</a></h2><p><img src="https://scikit-learn.org/stable/_images/sphx_glr_plot_cv_indices_0101.png" alt="../_images/sphx_glr_plot_cv_indices_0101.png"></p>
<h1><span id="tuning-the-hyper-parameters-of-an-estimator">Tuning the hyper-parameters of an estimator</span><a href="#tuning-the-hyper-parameters-of-an-estimator" class="header-anchor">#</a></h1><p>A search consists of:</p>
<ul>
<li><p>an estimator (regressor or classifier such as <code>sklearn.svm.SVC()</code>);</p>
</li>
<li><p>a parameter space;</p>
</li>
<li><p>a method for searching or sampling candidates;</p>
</li>
<li><p>a cross-validation scheme; and</p>
</li>
<li><p>a <a href="https://scikit-learn.org/stable/modules/grid_search.html#gridsearch-scoring">score function</a>.</p>
</li>
</ul>
<h2><span id="grid-search">Grid Search</span><a href="#grid-search" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">param_grid = [</span><br><span class="line">  {'C': [1, 10, 100, 1000], 'kernel': ['linear']},</span><br><span class="line">  {'C': [1, 10, 100, 1000], 'gamma': [0.001, 0.0001], 'kernel': ['rbf']},</span><br><span class="line"> ]</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> datasets</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> classification_report</span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line"></span><br><span class="line">print(__doc__)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Loading the Digits dataset</span></span><br><span class="line">digits = datasets.load_digits()</span><br><span class="line"></span><br><span class="line"><span class="comment"># To apply an classifier on this data, we need to flatten the image, to</span></span><br><span class="line"><span class="comment"># turn the data in a (samples, feature) matrix:</span></span><br><span class="line">n_samples = len(digits.images)</span><br><span class="line">X = digits.images.reshape((n_samples, <span class="number">-1</span>))</span><br><span class="line">y = digits.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># Split the dataset in two equal parts</span></span><br><span class="line">X_train, X_test, y_train, y_test = train_test_split(</span><br><span class="line">    X, y, test_size=<span class="number">0.5</span>, random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the parameters by cross-validation</span></span><br><span class="line">tuned_parameters = [{<span class="string">'kernel'</span>: [<span class="string">'rbf'</span>], <span class="string">'gamma'</span>: [<span class="number">1e-3</span>, <span class="number">1e-4</span>],</span><br><span class="line">                     <span class="string">'C'</span>: [<span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">1000</span>]},</span><br><span class="line">                    {<span class="string">'kernel'</span>: [<span class="string">'linear'</span>], <span class="string">'C'</span>: [<span class="number">1</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">1000</span>]}]</span><br><span class="line"></span><br><span class="line">scores = [<span class="string">'precision'</span>, <span class="string">'recall'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> score <span class="keyword">in</span> scores:</span><br><span class="line">    print(<span class="string">"# Tuning hyper-parameters for %s"</span> % score)</span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line">    clf = GridSearchCV(SVC(), tuned_parameters, cv=<span class="number">5</span>,</span><br><span class="line">                       scoring=<span class="string">'%s_macro'</span> % score)</span><br><span class="line">    clf.fit(X_train, y_train)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"Best parameters set found on development set:"</span>)</span><br><span class="line">    print()</span><br><span class="line">    print(clf.best_params_)</span><br><span class="line">    print()</span><br><span class="line">    print(<span class="string">"Grid scores on development set:"</span>)</span><br><span class="line">    print()</span><br><span class="line">    means = clf.cv_results_[<span class="string">'mean_test_score'</span>]</span><br><span class="line">    stds = clf.cv_results_[<span class="string">'std_test_score'</span>]</span><br><span class="line">    <span class="keyword">for</span> mean, std, params <span class="keyword">in</span> zip(means, stds, clf.cv_results_[<span class="string">'params'</span>]):</span><br><span class="line">        print(<span class="string">"%0.3f (+/-%0.03f) for %r"</span></span><br><span class="line">              % (mean, std * <span class="number">2</span>, params))</span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"Detailed classification report:"</span>)</span><br><span class="line">    print()</span><br><span class="line">    print(<span class="string">"The model is trained on the full development set."</span>)</span><br><span class="line">    print(<span class="string">"The scores are computed on the full evaluation set."</span>)</span><br><span class="line">    print()</span><br><span class="line">    y_true, y_pred = y_test, clf.predict(X_test)</span><br><span class="line">    print(classification_report(y_true, y_pred))</span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Note the problem is too easy: the hyperparameter plateau is too flat and the</span></span><br><span class="line"><span class="comment"># output model is the same for precision and recall with ties in quality.</span></span><br></pre></td></tr></tbody></table></figure>
<h2><span id="randomized-parameter-optimization">Randomized Parameter Optimization</span><a href="#randomized-parameter-optimization" class="header-anchor">#</a></h2><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">print(__doc__)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> randint <span class="keyword">as</span> sp_randint</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> RandomizedSearchCV</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_digits</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestClassifier</span><br><span class="line"></span><br><span class="line"><span class="comment"># get some data</span></span><br><span class="line">digits = load_digits()</span><br><span class="line">X, y = digits.data, digits.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># build a classifier</span></span><br><span class="line">clf = RandomForestClassifier(n_estimators=<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Utility function to report best scores</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">report</span>(<span class="params">results, n_top=<span class="number">3</span></span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n_top + <span class="number">1</span>):</span><br><span class="line">        candidates = np.flatnonzero(results[<span class="string">'rank_test_score'</span>] == i)</span><br><span class="line">        <span class="keyword">for</span> candidate <span class="keyword">in</span> candidates:</span><br><span class="line">            print(<span class="string">"Model with rank: {0}"</span>.format(i))</span><br><span class="line">            print(<span class="string">"Mean validation score: {0:.3f} (std: {1:.3f})"</span>.format(</span><br><span class="line">                  results[<span class="string">'mean_test_score'</span>][candidate],</span><br><span class="line">                  results[<span class="string">'std_test_score'</span>][candidate]))</span><br><span class="line">            print(<span class="string">"Parameters: {0}"</span>.format(results[<span class="string">'params'</span>][candidate]))</span><br><span class="line">            print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># specify parameters and distributions to sample from</span></span><br><span class="line">param_dist = {<span class="string">"max_depth"</span>: [<span class="number">3</span>, <span class="literal">None</span>],</span><br><span class="line">              <span class="string">"max_features"</span>: sp_randint(<span class="number">1</span>, <span class="number">11</span>),</span><br><span class="line">              <span class="string">"min_samples_split"</span>: sp_randint(<span class="number">2</span>, <span class="number">11</span>),</span><br><span class="line">              <span class="string">"bootstrap"</span>: [<span class="literal">True</span>, <span class="literal">False</span>],</span><br><span class="line">              <span class="string">"criterion"</span>: [<span class="string">"gini"</span>, <span class="string">"entropy"</span>]}</span><br><span class="line"></span><br><span class="line"><span class="comment"># run randomized search</span></span><br><span class="line">n_iter_search = <span class="number">20</span></span><br><span class="line">random_search = RandomizedSearchCV(clf, param_distributions=param_dist,</span><br><span class="line">                                   n_iter=n_iter_search, cv=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">start = time()</span><br><span class="line">random_search.fit(X, y)</span><br><span class="line">print(<span class="string">"RandomizedSearchCV took %.2f seconds for %d candidates"</span></span><br><span class="line">      <span class="string">" parameter settings."</span> % ((time() - start), n_iter_search))</span><br><span class="line">report(random_search.cv_results_)</span><br><span class="line"></span><br><span class="line"><span class="comment"># use a full grid over all parameters</span></span><br><span class="line">param_grid = {<span class="string">"max_depth"</span>: [<span class="number">3</span>, <span class="literal">None</span>],</span><br><span class="line">              <span class="string">"max_features"</span>: [<span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>],</span><br><span class="line">              <span class="string">"min_samples_split"</span>: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">10</span>],</span><br><span class="line">              <span class="string">"bootstrap"</span>: [<span class="literal">True</span>, <span class="literal">False</span>],</span><br><span class="line">              <span class="string">"criterion"</span>: [<span class="string">"gini"</span>, <span class="string">"entropy"</span>]}</span><br><span class="line"></span><br><span class="line"><span class="comment"># run grid search</span></span><br><span class="line">grid_search = GridSearchCV(clf, param_grid=param_grid, cv=<span class="number">5</span>)</span><br><span class="line">start = time()</span><br><span class="line">grid_search.fit(X, y)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"GridSearchCV took %.2f seconds for %d candidate parameter settings."</span></span><br><span class="line">      % (time() - start, len(grid_search.cv_results_[<span class="string">'params'</span>])))</span><br><span class="line">report(grid_search.cv_results_)</span><br></pre></td></tr></tbody></table></figure>
<p>  step1： 交叉验证（评价模型）</p>
<p>step2: 超参数选择，每一组参数：对应一次交叉验证</p>
<p>step 3: 集成学习</p>
<p>也可进行参数的调解</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">from sklearn.model_selection import cross_val_score</span><br><span class="line">from sklearn.datasets import load_iris</span><br><span class="line">from sklearn.ensemble import AdaBoostClassifier</span><br><span class="line"></span><br><span class="line">iris = load_iris()</span><br><span class="line">clf = AdaBoostClassifier(n_estimators=100)</span><br><span class="line">scores = cross_val_score(clf, iris.data, iris.target, cv=5)</span><br><span class="line">scores.mean()                             </span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">from sklearn import datasets</span><br><span class="line">from sklearn.tree import DecisionTreeClassifier</span><br><span class="line">from sklearn.neighbors import KNeighborsClassifier</span><br><span class="line">from sklearn.svm import SVC</span><br><span class="line">from itertools import product</span><br><span class="line">from sklearn.ensemble import VotingClassifier</span><br><span class="line"></span><br><span class="line"># Loading some example data</span><br><span class="line">iris = datasets.load_iris()</span><br><span class="line">X = iris.data[:, [0, 2]]</span><br><span class="line">y = iris.target</span><br><span class="line"></span><br><span class="line"># Training classifiers</span><br><span class="line">clf1 = DecisionTreeClassifier(max_depth=4)</span><br><span class="line">clf2 = KNeighborsClassifier(n_neighbors=7)</span><br><span class="line">clf3 = SVC(gamma='scale', kernel='rbf', probability=True)</span><br><span class="line">eclf = VotingClassifier(estimators=[('dt', clf1), ('knn', clf2), ('svc', clf3)],</span><br><span class="line">                        voting='soft', weights=[2, 1, 2])</span><br><span class="line"></span><br><span class="line">clf1 = clf1.fit(X, y)</span><br><span class="line">clf2 = clf2.fit(X, y)</span><br><span class="line">clf3 = clf3.fit(X, y)</span><br><span class="line">eclf = eclf.fit(X, y)</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>编程语言</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Boosting</title>
    <url>/2019/03/22/Boosting/</url>
    <content><![CDATA[<p>[TOC]</p>
<p>Boosting</p>
<a id="more"></a>
<h1><span id="boosting">Boosting</span><a href="#boosting" class="header-anchor">#</a></h1><h2><span id="yuan-li">原理</span><a href="#yuan-li" class="header-anchor">#</a></h2><p>Boosting算法是将“弱学习算法“提升为“强学习算法”的过程。</p>
<ol>
<li><p>加法模型</p>
<script type="math/tex; mode=display">
F_n(x;P) = \sum_{t=1}^{n}\alpha_th_t(x;a_t)</script></li>
<li><p>前向分步</p>
<script type="math/tex; mode=display">
F_m(x) = F_{m-1}(x)+\alpha_mh_m(x,a_m)</script><p>如果选取不同损失函数，则产生不同的类型</p>
</li>
</ol>
<h1><span id="adaboost">AdaBoost</span><a href="#adaboost" class="header-anchor">#</a></h1><p>AdaBoost就是损失函数为指数损失的Boosting算法。</p>
<ol>
<li><p>每一次迭代的弱学习$h(x;a_m)$有何不一样，如何学习？</p>
<p>AdaBoost改变了训练数据的权值，也就是样本的概率分布，其思想是将关注点放在被错误分类的样本上，减小上一轮被正确分类的样本权值，提高那些被错误分类的样本权值。</p>
</li>
<li><p>弱分类器权值$β_m$如何确定？</p>
<p>AdaBoost采用加权多数表决的方法，加大分类误差率小的弱分类器的权重，减小分类误差率大的弱分类器的权重。这个很好理解，正确率高分得好的弱分类器在强分类器中当然应该有较大的发言权。</p>
</li>
</ol>
<h2><span id="yuan-li-li-jie">原理理解</span><a href="#yuan-li-li-jie" class="header-anchor">#</a></h2><p>基于Boosting的理解，对于AdaBoost，我们要搞清楚两点：</p>
<p>每一次迭代的弱学习h(x;am)有何不一样，如何学习？<br>弱分类器权值βm如何确定？<br>对于第一个问题，AdaBoost改变了训练数据的权值，也就是样本的概率分布，其思想是将关注点放在被错误分类的样本上，减小上一轮被正确分类的样本权值，提高那些被错误分类的样本权值。然后，再根据所采用的一些基本机器学习算法进行学习，比如逻辑回归。</p>
<p>对于第二个问题，AdaBoost采用加权多数表决的方法，加大分类误差率小的弱分类器的权重，减小分类误差率大的弱分类器的权重。这个很好理解，正确率高分得好的弱分类器在强分类器中当然应该有较大的发言权。</p>
<h2><span id="gong-shi-tui-dao">公式推导</span><a href="#gong-shi-tui-dao" class="header-anchor">#</a></h2><p>指数损失函数</p>
<script type="math/tex; mode=display">
L(Y,f(x))=exp(-Yf(x))</script><p>权重更新公式: 采用的指数误差函数</p>
<script type="math/tex; mode=display">
l_{exp}(a_th_t|D_t)=E(exp(-f(x)a_th_t(x)))\\
=p(f(x)=h_t(x))e^{-at}+p(f(x)!=h_t(x))e^{at}\\
=e^{-at}(1-\xi)+e^{at}\xi</script><script type="math/tex; mode=display">
a_t=\frac{1}{2}ln \frac{1-\xi}{\xi}</script><p>分布更新公式</p>
<script type="math/tex; mode=display">
\begin{aligned} l\left(H_{t-1}(x)+\alpha h_{t}(x) | D\right) &=E_{X \sim D}\left(\exp \left(-y(x)\left(H_{t-1}(x)+\alpha h_{t}(x)\right)\right)\right) \\ &=E_{x \sim D}\left(\exp \left(-y(x) H_{t-1}(x)\right) \exp \left(-y(x) \alpha h_{t}(x)\right)\right) \end{aligned}</script><p>在泰勒展开$exp(-y(x)h_t(x))$</p>
<script type="math/tex; mode=display">
\begin{aligned} l\left(H_{t-1}(x)+h_{t}(x) | D\right) & \approx E_{x \sim D}\left[\exp \left(-y(x) H_{t-1}(x)\right)\left(1-\alpha y(x) h_{t}(x)+\frac{\alpha^{2} y^{2}(x) h_{t}^{2}(x)}{2}\right)\right] \\ &=E_{x \sim D}\left[\exp \left(-y(x) H_{t-1}(x)\right)\left(1-y(x) h_{t}(x)+0.5 \alpha^{2}\right)\right] \end{aligned}</script><script type="math/tex; mode=display">
\begin{aligned} h(x) &=\arg \min _{h} l\left(H_{t-1}(x)+\alpha h_{t} | D\right) \\ &=\arg \max _{h} E_{x \sim D}\left[\exp \left(-y(x) H_{t-1}(x)\right) \alpha y(x) h_{t}(x)\right] \\ &=\arg \max _{h}\left[\frac{\exp \left(-y(x) H_{t-1}(x)\right)}{E_{x \sim D}\left[\exp \left(-y(x) H_{t-1}(x)\right)\right]} y(x) h(x)\right] \end{aligned}</script><script type="math/tex; mode=display">
</script><p>令一个新分布,注意分子是常数</p>
<script type="math/tex; mode=display">
D_{t}(x)=\frac{D(x) \exp \left(-y(x) H_{t-1}(x)\right)^{L}}{E_{x \sim D}\left[\exp \left(-y(x) H_{t-1}(x)\right)\right]}</script><script type="math/tex; mode=display">
\begin{aligned} h(x) &=\arg \max _{h} E_{x \sim D,}(y(x) h(x)) \\ &=\arg \max _{h} E_{x \sim D_{t}}(1-2 \mathcal{I}(y(x) \neq h(x))) \\ &=\arg \min _{h} E_{x \sim D_{i}}(\mathcal{I}(y(x) \neq h(x))) \end{aligned}</script><p>同理可得</p>
<script type="math/tex; mode=display">
\begin{aligned} D_{t+1} &=\frac{D(x) \exp \left(-y(x) H_{t}(x)\right)}{E_{x \sim D}\left[\exp \left(-y(x) H_{t}(x)\right)\right]} \\ &=\frac{D_{t}(x) \cdot E_{x \sim D}\left[\exp \left(-y(x) H_{t-1}(x)\right)\right] \cdot \exp \left(-y(x) H_{t}(x)\right)}{\exp \left(-y(x) H_{t-1}(x)\right) \cdot E_{x \sim D}\left[\exp \left(-y(x) H_{t}(x)\right)\right]} \\ &=D_{t}(x) \exp \left(-y(x) \alpha h_{t}(x)\right) \cdot C . \quad(C i s a \text {constant}) \end{aligned}</script><script type="math/tex; mode=display">
Z_{t}=\sum_{i}^{m} D_{t}(x) \exp \left(-y(x) \alpha_{t} h_{y}(x)\right)</script><p>指数误差函数</p>
<script type="math/tex; mode=display">
\begin{aligned} l(H(x) | D) &=\frac{1}{m} \sum_{i}^{m} \exp \left(-y_{i} H\left(x_{i}\right)\right) \\ &=\frac{1}{m} \sum_{i}^{m} \exp \left(-\sum_{j}^{T} \alpha_{j} y_{i} h_{j}\left(x_{i}\right)\right) \\ &=\sum_{i}^{m} D_{1}\left(x_{i}\right) \exp \left(-\sum_{j}^{T} \alpha_{j} y_{i} h_{j}\left(x_{i}\right)\right) \\ &=Z_{1} Z_{2}\left(x_{i}\right) \exp \left(-\sum_{j=2}^{T} \alpha_{j} y_{i} h_{j}\left(x_{i}\right)\right) \\ & \vdots \\ &=\prod_{i=1}^{T} Z_{i} \end{aligned}</script><h2><span id="suan-fa-miao-shu">算法描述</span><a href="#suan-fa-miao-shu" class="header-anchor">#</a></h2><p>总结一下，得到AdaBoost的算法流程：</p>
<p>输入：训练数据集$T={(x1,y1),(x2,y2),(xN,yN)}T={(x1,y1),(x2,y2),(xN,yN)}$，其中，$xi∈X⊆Rnxi∈X⊆Rn，yi∈Y=−1,1yi∈Y=−1,1，$迭代次数M</p>
<p>初始化训练样本的权值分布：$D1=(w1,1,w1,2,…,w1,i),w,i=1,2,…,N$。</p>
<p>对于$m=1,2,…,M$</p>
<p>(a)　使用具有权值分布$D_m$的训练数据集进行学习，得到弱分类器$h_m(x)$　(b)　计算$h_m(x)$在训练数据集上的分类误差率：</p>
<p>$e_m=∑_{i=1}^{N}w_m,iI(h_m(xi)≠y_i)$</p>
<p>(c)　计算$h_m(x)$在强分类器中所占的权重：</p>
<p>$\alpha_m=\frac{1}{2}log(\frac{1−e_m}{e_m})$</p>
<p>(d)　更新训练数据集的权值分布（这里，$z_m是归一化因子，为了使样本的概率分布和为1）：</p>
<script type="math/tex; mode=display">w_{m+1,i}=\frac{w_{m,i}}exp(−α_my_ih_m(xi))，i=1,2,…,10</script><script type="math/tex; mode=display">z_m=∑_{i=1}^{N}w_{m,i}exp(−α_my_ih_m(xi))</script><p> 得到最终分类器：</p>
<script type="math/tex; mode=display">F(x)=sign(∑_{i=1}^{N}α_mh_m(x))</script><h2><span id="mian-jing">面经</span><a href="#mian-jing" class="header-anchor">#</a></h2><p>今年8月开始找工作，参加大厂面试问到的相关问题有如下几点：</p>
<ol>
<li>手推AdaBoost</li>
</ol>
<ol>
<li>与GBDT比较</li>
</ol>
<ol>
<li>AdaBoost几种基本机器学习算法哪个抗噪能力最强，哪个对重采样不敏感？</li>
</ol>
<h2><span id="suan-fa-liu-cheng">算法流程</span><a href="#suan-fa-liu-cheng" class="header-anchor">#</a></h2><h2><span id="shi-li-ji-suan">实例计算</span><a href="#shi-li-ji-suan" class="header-anchor">#</a></h2><h2><span id="python-shi-xian">Python实现</span><a href="#python-shi-xian" class="header-anchor">#</a></h2><p><a href="https://www.cnblogs.com/davidwang456/articles/8927029.html">https://www.cnblogs.com/davidwang456/articles/8927029.html</a></p>
<h1><span id="ji-cheng-xue-xi">集成学习</span><a href="#ji-cheng-xue-xi" class="header-anchor">#</a></h1>]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Boosting, AdaBoost</tag>
      </tags>
  </entry>
  <entry>
    <title>支持向量回归</title>
    <url>/2019/03/19/SVR/</url>
    <content><![CDATA[<p>[TOC]</p>
<p>支持向量机用于分类:硬间隔和软件间隔支持向量机。尽可能分对</p>
<p>支持向量机回归： 希望$f(x)$与$y$尽可能的接近。</p>
<a id="more"></a>
<h1><span id="zhi-chi-xiang-liang-ji-ji-ben-si-xiang">支持向量机基本思想</span><a href="#zhi-chi-xiang-liang-ji-ji-ben-si-xiang" class="header-anchor">#</a></h1><p>英文名:support vector regression</p>
<p>简记：SVR</p>
<h2><span id="biao-zhun-de-xian-xing-zhi-chi-xiang-liang-hui-gui-mo-xing">标准的线性支持向量回归模型</span><a href="#biao-zhun-de-xian-xing-zhi-chi-xiang-liang-hui-gui-mo-xing" class="header-anchor">#</a></h2><p>学习的模型:</p>
<script type="math/tex; mode=display">f(x)=w^Tx+b</script><p>假设能容忍$f(x)$与$y$之间差别绝对值$\xi$,这就以$f(x)=w^Tx+b$形成了一个$2\xi$的间隔带，因此模型</p>
<script type="math/tex; mode=display">
\min \frac{1}{2}w^Tw\\
s.t -\xi<=f(x_i)-y_i<=\xi</script><p>但是上述条件太过严苛，因此增加惩罚项，</p>
<script type="math/tex; mode=display">
\min \frac{1}{2}w^Tw+C\sum(\epsilon_i+\hat{\epsilon}_i)\\
s.t. \begin{cases}f(x_i)-y_i<=\xi+\epsilon_i\\
y_i-f(x_i)<=\xi+\hat{\epsilon}_i\\
\hat{\epsilon}_i>=0,\epsilon_i>=0
\end{cases}</script><p>构造Lagrange函数</p>
<script type="math/tex; mode=display">
\begin{aligned} L :=\frac{1}{2}\|\omega\|^{2} &+C \sum\left(\xi_i+\xi^{\prime}_i\right)-\sum_{i=1}^{N}\left(\eta_{i} \xi_{i}+\eta_{i}^{'} \xi_{i}6{'}\right) \\ &+\sum \alpha_{i}\left(y_{i}-\omega^{T} x_{i}-b-\varepsilon-\xi_{i}\right) \\ &+\sum \alpha_{i}^{'}\left(\omega^{T} x_{i}+b-y_{i}-\varepsilon-\xi_{i}^{\prime}\right) \end{aligned}\tag{1}</script><p>求偏导</p>
<script type="math/tex; mode=display">
\frac{\partial L}{\partial \omega}=\omega-\sum\left(\alpha_{i}-\alpha_{i}\right) x_{i}=0 \Rightarrow \omega=\sum\left(\alpha_{i}-\alpha_{i}^{\prime}\right) x_{i}\tag{2}</script><script type="math/tex; mode=display">
\frac{\partial L}{\partial b}=\sum_{i=1}^{N}\left(\alpha_{i}-\alpha_{i}^{\prime}\right)=0 \tag{3}</script><script type="math/tex; mode=display">
\frac{\partial L}{\partial \xi_{i}^{\prime}}=C-\alpha_{i}^{'}-\eta_{i}^{\prime}=0 \tag{4}</script><script type="math/tex; mode=display">
\frac{\partial L}{\partial \xi_{i}}=C-\alpha_{i}-\eta_{i}=0 \tag{5}</script><p>将(2)-(4)带回(1),可得对偶问题</p>
<script type="math/tex; mode=display">
\begin{aligned} \min L(\boldsymbol{\alpha})=& \frac{1}{2} \sum_{i=1}^{N} \sum_{j=1}^{N}\left(\alpha_{i}-\alpha_{i}^{*}\right)\left(\alpha_{j}-\alpha_{j}^{*}\right)\left\langle x_{i}, x_{j}\right\rangle \\ &+\varepsilon \sum_{i=1}^{N}\left(\alpha_{i}+\alpha_{i}^{*}\right)-\sum_{i=1}^{N} y_{i}\left(\alpha_{i}-\alpha_{i}^{*}\right) \\ \text { s.t. } & \sum_{n=1}^{N}\left(\alpha_{n}-\alpha_{n}^{*}\right)=0 \end{aligned}</script><p>再将(2)带回$Y=w^Tx+b$,可得线性回归模型</p>
<script type="math/tex; mode=display">
y(x)=\sum_{i=1}^{N}\left(\alpha_{i}-\alpha_{i}^{*}\right) x_{i}^{T} x+b</script><h2><span id="fei-xian-xing-zhi-chi-xiang-liang-ji">非线性支持向量机</span><a href="#fei-xian-xing-zhi-chi-xiang-liang-ji" class="header-anchor">#</a></h2><p>考虑模型</p>
<script type="math/tex; mode=display">
y=f(x)+b</script><p>$f(x)$是非线性函数，存在一个由$X$所在空间到希尔伯特空间的映射，使得</p>
<script type="math/tex; mode=display">
f(x)=w^T\varphi(x)</script><p>因此，建立如下的优化问题</p>
<script type="math/tex; mode=display">
\min \frac{1}{2}\|\omega\|^{T}+C \sum_{i}\left(\xi_{i}+\xi_{i}^{\prime}\right)\\
\begin{cases} y\left(x_{i}\right)-\omega^{T} \varphi\left(x_{i}\right)-b \leq \xi_{i} \\ \omega^{T} \varphi\left(x_{i}\right)+b-y\left(x_{i}\right) & \leq \xi_{i} \\ \xi_{i} & \geq 0 \\ \xi_{i} & \geq 0 \end{cases}</script><p>构造lagrange函数</p>
<script type="math/tex; mode=display">
\begin{aligned} L :=\frac{1}{2}\|\omega\|^{2} &+C \sum\left(\xi+\xi^{\prime}\right)-\sum\left(\eta_{i} \xi_{i}+\eta_{i} \xi_{i}^{\prime}\right) \\ &+\sum \alpha_{i}\left(y_{i}-w^{T} \varphi\left(x_{i}\right)-b-\varepsilon_{i}-\xi_{i}\right) \\ &+\sum \alpha_{\mathrm{i}}^{\prime}\left(w^{T} \varphi\left(x_{i}\right)+b-y_{i}-\varepsilon_{i}^{'}-\xi_{i}^{\prime}\right) \end{aligned}</script><p>求偏导</p>
<script type="math/tex; mode=display">
\begin{cases}\frac{\partial L}{\partial w}=w-\sum\left(\alpha_{i}-\alpha_{i}\right) \varphi\left(x_{i}\right)=0\\
 \frac{\partial L}{\partial b} =\sum\left(\alpha_{i}-\alpha_{i}^{\prime}\right)=0 \\ \frac{\partial L}{\partial \xi_{i}^{\prime}} =C-\alpha_{i}^{'}-\eta_{i}^{\prime}=0 \\ \frac{\partial L}{\partial \xi_{i}} =C-\alpha_{i}-\eta_{i}=0 \end{cases}</script><p>再带回优化问题可得</p>
<script type="math/tex; mode=display">\min _{t}-\frac{1}{2} \sum\left(\alpha_{i}-\alpha_{i}^{\prime}\right)\left(\alpha_{j}-\alpha_{j}^{\prime}\right) \varphi\left(x_{i}\right)^{T} \varphi\left(x_{j}\right)-\varepsilon \sum\left(\alpha_{i}+\alpha_{i}^{\prime}\right)+\sum y_{i}\left(\alpha_{i}-\alpha_{i}^{'}\right)\\s t . \sum\left(\alpha_{i}-\alpha_{i}^{\prime}\right)=0</script><p>再次将$w$带回模型</p>
<script type="math/tex; mode=display">
y=\sum\left(\alpha_{i}-\alpha_{i}^{'}\right) \varphi\left(x_{i}\right)^{T} \varphi(x)+b</script>]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>支持向量机回归</tag>
      </tags>
  </entry>
  <entry>
    <title>支持向量机(SVM) ----- 分类器</title>
    <url>/2019/03/17/SVMClassifiar/</url>
    <content><![CDATA[<p>[TOC]</p>
<a id="more"></a>
<h1><span id="yu-bei-de-shu-xue-zhi-shi">预备的数学知识</span><a href="#yu-bei-de-shu-xue-zhi-shi" class="header-anchor">#</a></h1><h2><span id="yue-shu-you-hua-wen-ti">约束优化问题</span><a href="#yue-shu-you-hua-wen-ti" class="header-anchor">#</a></h2><p>原问题,带等式约束，也带不等式约束的一般约束问题</p>
<script type="math/tex; mode=display">
\begin{cases} \min_{x}f(x)\\
s.t \begin{cases} m_i(x)>=0, i=1,..,m\\
n_j(x)=0，j=1,..,m\\
\end{cases}
\end{cases}\tag{1}</script><p>构造lagrange乘子法</p>
<script type="math/tex; mode=display">
L(x,\lambda_i,\eta_j)= f(x)-\sum_{i=1}^{m}\lambda_im_i(x)-\sum_{j=1}^{n}\eta_j \tag{2}</script><script type="math/tex; mode=display">
\begin{cases} \min_{x} max_{\lambda_i,\eta_j} L(R^p)\\
s.t \lambda_i>=0
\end{cases}</script><p>上述两个问题的等价性证明</p>
<p>如果x不满足约束$m_i(x)$,则$\lambda_i&gt;=0$,同时$m_i(x)&lt;$,则$L(R^{p},\lambda,\eta)$趋近无穷，反之，则存在最大值</p>
<script type="math/tex; mode=display">
min_{x} max_{\lambda,\eta}=min_{x}(max f满足条件,max f不满足约束)\\=min_{x} max_{\lambda,\eta}{f满足条件}</script><p>对偶问题: 关于$\lambda,\eta$的最大化问题</p>
<script type="math/tex; mode=display">max min L(x,\lambda,\eta)\\
s.t \lambda_i>=0</script><p><strong>弱对偶问题：对偶问题&lt;=原问题</strong> </p>
<p>证明: $max_{x} min(\lambda \eta ) L&lt;=min_{\eta,\lambda } max_{x} L$</p>
<script type="math/tex; mode=display">
\underbrace{\min_{x}L(x,\lambda,\eta)}_{A(\lambda,\eta)}<=L(x,\lambda,\eta)<=\underbrace{\max_{\lambda,\eta} L(x,\lambda,\eta)}_{B(x)}</script><h1><span id="fen-lei">分类</span><a href="#fen-lei" class="header-anchor">#</a></h1><p>hard-margin SVM、 soft-margin SVM 、kernel SVM</p>
<h1><span id="xian-xing-ke-fen-zhi-chi-xiang-liang-ji">线性可分支持向量机</span><a href="#xian-xing-ke-fen-zhi-chi-xiang-liang-ji" class="header-anchor">#</a></h1><p><img src="/2019/03/17/SVMClassifiar/MyBlog\hexo\source\_posts\SVMClassifiar\1.png" alt></p>
<p>对于A子图，可以用一个超平面($w^Tx+b$)去分类两类数据，建立如下的数学模型</p>
<script type="math/tex; mode=display">f(w,b)=sign(w^Tx+b)</script><p>B,C,D子图提供了超平面都可以分类，显然B,C图的超平面的鲁棒性不如D图。SVM就是找到最好的一个超平面，怎么衡量好呢？找到平面离样本点的距离最大</p>
<h2><span id="hard-margin-svm-zui-da-jian-ge-svm">hard-margin SVM： 最大间隔SVM</span><a href="#hard-margin-svm-zui-da-jian-ge-svm" class="header-anchor">#</a></h2><h2><span id="di-yi-bao-jian-ge">第一宝 间隔</span><a href="#di-yi-bao-jian-ge" class="header-anchor">#</a></h2><p>首先，看下margin的定义</p>
<p><img src="/2019/03/17/SVMClassifiar/MyBlog\hexo\source\_posts\SVMClassifiar\2.png" alt></p>
<script type="math/tex; mode=display">margin(w,b) = min(\frac{|w^Tx_i+b|}{||w||})</script><p>接下来</p>
<p>数学模型：</p>
<script type="math/tex; mode=display">\begin{cases}  \max margin(w,b)\\ st. y_i(w^Tx_i+b)>0\end{cases}</script><script type="math/tex; mode=display">\Longrightarrow\begin{cases}  max \frac{1}{||w||}min(y_i(w^Tx_i+b))\\  st. y_i(w^Tx_i+b)>0\end{cases}</script><p>注意，$y_i(w^Tx_i+b)&gt;0$,所以$\exists r&gt;0, min(y_i(w^Tx_i+b))=r$,可令$r=1$,这是对超平面范数的固定作用，因为$y=w^Tx+b$和$y=2w^T+2b$是同一个超平面，总能找到缩放$w,b$使得，可以将$r$缩放到1</p>
<script type="math/tex; mode=display">\Longrightarrow\begin{cases}  max \frac{1}{||w||}\\  st. y_i(w^Tx_i+b)>=1\end{cases}</script><script type="math/tex; mode=display">\Longrightarrow\begin{cases}  \min \frac{1}{2}w^Tw\\  st. y_i(w^Tx_i+b)>=1\end{cases}</script><p>这是一个土二次规划问题</p>
<h2><span id="di-er-bao-dui-ou">第二宝 对偶</span><a href="#di-er-bao-dui-ou" class="header-anchor">#</a></h2><p>利用lagrange乘子法得出对偶问题</p>
<p><strong>带约束</strong></p>
<script type="math/tex; mode=display">\begin{cases}  \min \frac{1}{2}w^Tw\\  st. y_i(w^Tx_i+b)-1>=0\end{cases}</script><script type="math/tex; mode=display">\Longrightarrow L(w,b,\lambda）=\frac{1}{2}w^Tw-\sum_{i=1}^{N}\lambda_i(1-y_i(w^Tx_i+b)</script><p><strong>无约束</strong></p>
<script type="math/tex; mode=display">\begin{cases}min_{w,b} max_{\lambda}L(w,b,\lambda) \\ s.t \lambda_i>=0\end{cases}</script><p>此时关于$w,b$无约束的。</p>
<p>对$(L(w,b,\lambda))$ 对$w$,$b$求偏导</p>
<script type="math/tex; mode=display">
\frac{\partial L}{\partial w}=w+\sum_{i=1}^{N}y_ix_i\lambda_i=0 \Longrightarrow w=-\sum_{i=1}^{N}y_ix_i\lambda_i\\
\frac{\partial L}{\partial b}=-\sum_{i=1}^{N}\lambda_iy_i=0</script><p>带回$L(w,b,\lambda)$,可得<strong>对偶问题</strong></p>
<script type="math/tex; mode=display">\begin{cases} max_{\lambda}L(w,b,\lambda ) =-\frac{1}{2}\sum_i^N\sum_j^N\lambda_i  \lambda_jy_iy_jx_i^Tx_j +\sum_i^N\lambda_i \\ s .t. \sum_{i=1}^N\lambda_iy_i,\lambda_i>=0\end{cases} \Longrightarrow\\\begin{cases} min_{\lambda}L(w,b,\lambda ) =\frac{1}{2}\sum_i^N\sum_j^N\lambda_i  \lambda_jy_iy_jx_i^Tx_j -\sum_i^N\lambda_i \\ s .t. \sum_{i=1}^N\lambda_iy_i,\lambda_i>=0\end{cases}</script><h3><span id="yuan-wen-ti-he-dui-ou-wen-ti-you-xiang-tong-jie-de-chong-yao-tiao-jian">原问题和对偶问题有相同解的充要条件</span><a href="#yuan-wen-ti-he-dui-ou-wen-ti-you-xiang-tong-jie-de-chong-yao-tiao-jian" class="header-anchor">#</a></h3><p>满足 KKT</p>
<script type="math/tex; mode=display">
\begin{cases}
\frac{\partial L}{\partial w}=0,\frac{\partial L}{\partial b}=0,\frac{\partial L}{\partial \lambda}=0\\
\lambda_i(y_i(w^Tx_i+b)-1)=0\\
\lambda_i>=0\\
y_i(w^Tx_i+b)-1>=0
\end{cases}</script><p>如果存在$(x_k,y_k)=+1or -1$使得$y_i(w^Tx_i+b)-1=0$即可求解$b=y_k-\sum_{i=0}^{N}\lambda_ix_i^Tx_k$</p>
<p>代入模型</p>
<script type="math/tex; mode=display">f(x)=sign(\sum_i^Na_iy_ix_i^Tx+y_k-\sum_{i=0}^{N}\lambda_ix_i^Tx_k)</script><p>注意，对于任意的训练样本，总有$\lambda_i=0$或者$y_if(x_i)=1$,如果$\lambda_i&gt;0$,说明样本点落在最大间隔的边界上，这些点就是支持向量，这条边界$w^Tx+b=1or-1$</p>
<h1><span id="soft-marign-ruan-jian-ge">soft-marign 软间隔</span><a href="#soft-marign-ruan-jian-ge" class="header-anchor">#</a></h1><p>  想法：允许一部分样本可以不被正确分类</p>
<h2><span id="you-hua-mu-biao">优化目标</span><a href="#you-hua-mu-biao" class="header-anchor">#</a></h2><script type="math/tex; mode=display">
\min_{w,b} \frac{1}{2}w^Tw+loss</script><h2><span id="yi-xie-sun-shi-han-shu">一些损失函数</span><a href="#yi-xie-sun-shi-han-shu" class="header-anchor">#</a></h2><ol>
<li><p>0-1损失 个数</p>
<script type="math/tex; mode=display">loss=\sum_{i=1}^NI\{y_i(w^Tx+b)<1\}</script><p>数学性质不好，不连续</p>
</li>
<li><p>0-1损失 距离 <strong>hinge loss</strong></p>
<script type="math/tex; mode=display">
loss = \begin{cases}
0 , y_i(w^Tx_i+b)>=0,\\
1-y_i(w^tx_i+b),  y_i(w^Tx_i+b)<1\\
\end{cases}</script><script type="math/tex; mode=display">
loss_{max} = max(0,1-y_i(w^Tx_i+b)=1-z)</script><p>此时优化问题，令$\xi_i=1-y_i(w^Tx_i+b)$</p>
<script type="math/tex; mode=display">
\min \frac{1}{2}w^Tw+\sum_{i=1}^{N}\xi_i\\
s.t \begin{cases}
y_i(w^Tx_i+b)>=1-\xi_i\\
\xi_i>=0
\end{cases}</script></li>
<li><p>指数损失（<strong>exponential loss </strong>)</p>
<script type="math/tex; mode=display">
l_{exp}(z)=exp(-z)</script></li>
<li><p>对率损失<strong>logistic loss</strong></p>
<script type="math/tex; mode=display">
l_{log}(z)=log(1+exp(-z)）</script></li>
</ol>
<p><img src="/2019/03/17/SVMClassifiar/MyBlog\hexo\source\_posts\SVMClassifiar\3.jpg" alt></p>
<h1><span id="he-fang-fa">核方法</span><a href="#he-fang-fa" class="header-anchor">#</a></h1><h2><span id="he-han-shu-de-ding-yi">核函数的定义</span><a href="#he-han-shu-de-ding-yi" class="header-anchor">#</a></h2><p>设 $\chi$为输入空间（Input Space），  $\mathrm{H}$为特征空间(Feature Space,一定是希尔伯特空间），存在一个映射</p>
<script type="math/tex; mode=display">
\varphi : \chi \rightarrow \mathrm{H}</script><p>对任意的 $x, y \in \mathrm{X}$，函数  $K(x, y)$，满足</p>
<script type="math/tex; mode=display">
K(x, y)=<\varphi(x), \varphi(y)></script><p>则称  $K(x, y)$为核函数。可以看出，我们并不需要知道输入空间和特征空间满足的映射关系   ，只需要知道核函数就可以算出，输入空间中任意两点映射到特征空间的内积。</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>支持向量机</tag>
      </tags>
  </entry>
  <entry>
    <title>回归树</title>
    <url>/2019/03/11/%E5%9B%9E%E5%BD%92%E6%A0%91/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1><span id="fen-lei-shu-yu-hui-gui-shu">分类树与回归树</span><a href="#fen-lei-shu-yu-hui-gui-shu" class="header-anchor">#</a></h1><p>分类树用于分类问题。分类决策树在选取划分点，用信息熵、信息增益、或者信息增益率、或者基尼系数为标准。<br>Classification tree analysis is when the predicted outcome is the class to which the data belongs.</p>
<p>回归决策树用于处理输出为连续型的数据。回归决策树在选取划分点，就希望划分的两个分支的误差越小越好。</p>
<p>Regression tree analysis is when the predicted outcome can be considered a real number (e.g. the price of a house, or a patient’s length of stay in a hospital)。</p>
<a id="more"></a>
<h1><span id="hui-gui-shu">回归树</span><a href="#hui-gui-shu" class="header-anchor">#</a></h1><p>英文名字：Regression Tree</p>
<h2><span id="yuan-li-jie-shao">原理介绍</span><a href="#yuan-li-jie-shao" class="header-anchor">#</a></h2><p>决策树最直观的理解其实就是，输入特征空间($R^n$)，然后对特征空间做划分，每一个划分属于同一类或者对于一个输出的预测值。那么这个算法需要解决的问题是1. 如何决策边界(划分点)？2. 尽可能少的比较次数(决策树的形状)</p>
<p><img src="/2019/03/11/%E5%9B%9E%E5%BD%92%E6%A0%91/MyBlog\hexo\source\_posts\回归树\原理介绍1.PNG" alt="原理1"></p>
<p>如上图，每一个非叶子对于某个特征的划分。</p>
<h3><span id="zui-xiao-er-cheng-hui-gui-shu-sheng-cheng-suan-fa">最小二乘回归树生成算法</span><a href="#zui-xiao-er-cheng-hui-gui-shu-sheng-cheng-suan-fa" class="header-anchor">#</a></h3><p>Q1: 选择划分点？遍历所有的特征($n$),对于每一个特征对应$s_i$个取值，尝试完所有特征，以及特征所以有划分，选择使得损失函数最小的那组特征以及特征的划分取值。</p>
<p>Q2: 叶节点的输出？取每个区域所以结果的平均数作为输出</p>
<p>节点的损失函数的形式</p>
<script type="math/tex; mode=display">
 \min _{j, s}\left[\min _{c_{1}} Loss(y_i,c_1)+\min _{c_{2}} Loss(y_i,c_2)\right]</script><p>节点有两条分支，$c1$是左节点的平均值，$c2$是右节点的平均值，换句话说，分一次划分都是使得划分出的两个分支的误差和最小。最终得到函数是<font color="red">分段函数</font></p>
<h2><span id="cart-suan-fa">CART算法</span><a href="#cart-suan-fa" class="header-anchor">#</a></h2><p>输入： 训练数据集</p>
<p>输出：回归树$f(x)$</p>
<ol>
<li><p>选择最优的特征$j$和分切点$s$</p>
<script type="math/tex; mode=display">
\min _{j, s}\left[\min _{c_{1}} \sum_{x_{i} \in R_{1}(j, s)}\left(y_{i}-c_{1}\right)^{2}+\min _{c_{2}} \sum_{x_{i} \in R_{2}(j, s)}\left(y_{i}-c_{2}\right)^{2}\right]</script></li>
<li><p>对于选定的$(j,s)$划分区域，并确定该区域的预测值</p>
</li>
<li><p>对两个区域递归1. 2. 直到满足停止条件</p>
</li>
<li><p>返回生成树</p>
<p>注：分切点选择：先排序，二分。</p>
</li>
</ol>
<h1><span id="python-dai-ma">Python代码</span><a href="#python-dai-ma" class="header-anchor">#</a></h1><h2><span id="jie-dian-lei">节点类</span><a href="#jie-dian-lei" class="header-anchor">#</a></h2><p>属性：左右节点、loss、特征编号或者特征、分割点</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, score=None</span>):</span></span><br><span class="line">        <span class="comment"># 构造函数</span></span><br><span class="line">        self.score = score</span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br><span class="line">        self.feature = <span class="literal">None</span></span><br><span class="line">        self.split = <span class="literal">None</span></span><br></pre></td></tr></tbody></table></figure>
<h2><span id="hui-gui-shu-lei">回归树类</span><a href="#hui-gui-shu-lei" class="header-anchor">#</a></h2><p>构造方法</p>
<figure class="highlight py"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegressionTree</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.root = Node()</span><br><span class="line">        self.height = <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<p>给定特征、划分点，返回计算MAPE</p>
<figure class="highlight py"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_split_mse</span>(<span class="params">self, X, y, idx, feature, split</span>):</span></span><br><span class="line">	<span class="string">'''</span></span><br><span class="line"><span class="string">	X:训练样本输入</span></span><br><span class="line"><span class="string">	y:训练样本输出</span></span><br><span class="line"><span class="string">	idx:该分支对应的样本编号</span></span><br><span class="line"><span class="string">	feaure: 特征</span></span><br><span class="line"><span class="string">	split: 划分点</span></span><br><span class="line"><span class="string">	'''</span></span><br><span class="line">	split_x1=X[X[idex,feature]&lt;split]</span><br><span class="line">	split_y1=y[X[idex,feature]&lt;split]</span><br><span class="line">	split_x2=X[X[idex,feature]&gt;=split]</span><br><span class="line">	split_y2=y[X[idex,feature]&gt;=split]</span><br><span class="line">	</span><br><span class="line">    split_avg = [np.mean(split_y1), np.mean(split_y2)]</span><br><span class="line">    split_mape = [np.sum((split_y1-split_avg[<span class="number">0</span>])**<span class="number">2</span>),np.sum((split_y2-split_avg[<span class="number">1</span>])**<span class="number">2</span>)]</span><br><span class="line">    <span class="keyword">return</span> split_mse, split, split_avg</span><br></pre></td></tr></tbody></table></figure>
<p>计算给定特征的最佳分割点</p>
<p>遍历特征某一列的所有的不重复的点，找出MAPE最小的点作为最佳分割点。如果特征中没有不重复的元素则返回None。</p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_choose_split_point</span>(<span class="params">self, X, y, idx, feature</span>):</span></span><br><span class="line">    feature_x = X[idx,feature]</span><br><span class="line">    uniques = np.unique(feature_x)</span><br><span class="line">    <span class="keyword">if</span> len(uniques)==<span class="number">1</span>:</span><br><span class="line">    	<span class="keyword">return</span> Noe</span><br><span class="line"></span><br><span class="line">    mape, split, split_avg = min(</span><br><span class="line">   (self._get_split_mse(X, y, idx, feature, split)</span><br><span class="line">       <span class="keyword">for</span> split <span class="keyword">in</span> unique[<span class="number">1</span>:]), key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">return</span> mape, feature, split, split_avg</span><br></pre></td></tr></tbody></table></figure>
<p>选择特征<br>遍历全部特征，计算mape,然后确定特征和对应的切割点，注意如果某个特征的值是一样的，则返回None<br></p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_choose_feature</span>(<span class="params">self, X, y, idx</span>):</span></span><br><span class="line">    m = len(X[<span class="number">0</span>])</span><br><span class="line">    split_rets = [x <span class="keyword">for</span> x <span class="keyword">in</span> map(<span class="keyword">lambda</span> x: self._choose_split_point(</span><br><span class="line">        X, y, idx, x), range(m)) <span class="keyword">if</span> x <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> split_rets == []:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    _, feature, split, split_avg = min(</span><br><span class="line">        split_rets, key=<span class="keyword">lambda</span> x: x[<span class="number">0</span>])</span><br><span class="line"> </span><br><span class="line">    idx_split = [[], []]</span><br><span class="line">    <span class="keyword">while</span> idx:</span><br><span class="line">        i = idx.pop()</span><br><span class="line">        xi = X[i][feature]</span><br><span class="line">        <span class="keyword">if</span> xi &lt; split:</span><br><span class="line">            idx_split[<span class="number">0</span>].append(i)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            idx_split[<span class="number">1</span>].append(i)</span><br><span class="line">    <span class="keyword">return</span> feature, split, split_avg, idx_split</span><br></pre></td></tr></tbody></table></figure><br>对应叶子节点，打印相关的信息<br><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_expr2literal</span>(<span class="params">self, expr</span>):</span></span><br><span class="line">        feature, op, split = expr</span><br><span class="line">        op = <span class="string">"&gt;="</span> <span class="keyword">if</span> op == <span class="number">1</span> <span class="keyword">else</span> <span class="string">"&lt;"</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Feature%d %s %.4f"</span> % (feature, op, split)  </span><br></pre></td></tr></tbody></table></figure><br>建立好二叉树以后，遍历操作<br><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_get_rules</span>(<span class="params">self</span>):</span></span><br><span class="line">    que = [[self.root, []]]</span><br><span class="line">    self.rules = []</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">while</span> que:</span><br><span class="line">        nd, exprs = que.pop(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(nd.left <span class="keyword">or</span> nd.right):</span><br><span class="line">            literals = list(map(self._expr2literal, exprs))</span><br><span class="line">            self.rules.append([literals, nd.score])</span><br><span class="line">     </span><br><span class="line">        <span class="keyword">if</span> nd.left:</span><br><span class="line">            rule_left = []</span><br><span class="line">            rule_left.append([nd.feature, <span class="number">-1</span>, nd.split])</span><br><span class="line">            que.append([nd.left, rule_left])</span><br><span class="line">     </span><br><span class="line">        <span class="keyword">if</span> nd.right:</span><br><span class="line">            rule_right =[]</span><br><span class="line">            rule_right.append([nd.feature, <span class="number">1</span>, nd.split])</span><br><span class="line">            que.append([nd.right, rule_right])</span><br></pre></td></tr></tbody></table></figure><br>建立二叉树的过程，也就是训练的过程          <p></p>
<ol>
<li>控制深度</li>
<li>控制节叶子节点的最少样本数量</li>
<li>至少有一个特征是不重复的<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fit</span>(<span class="params">self, X, y, max_depth=<span class="number">5</span>, min_samples_split=<span class="number">2</span></span>):</span></span><br><span class="line">        self.root = Node()</span><br><span class="line">        que = [[<span class="number">0</span>, self.root, list(range(len(y)))]]</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">while</span> que:</span><br><span class="line">            depth, nd, idx = que.pop(<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">            <span class="keyword">if</span> depth == max_depth:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">            <span class="keyword">if</span> len(idx) &lt; min_samples_split <span class="keyword">or</span> set(map(<span class="keyword">lambda</span> i: y[i,<span class="number">0</span>], idx)) == <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">            feature_rets = self._choose_feature(X, y, idx)</span><br><span class="line">            <span class="keyword">if</span> feature_rets <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">            nd.feature, nd.split, split_avg, idx_split = feature_rets</span><br><span class="line">            nd.left = Node(split_avg[<span class="number">0</span>])</span><br><span class="line">            nd.right = Node(split_avg[<span class="number">1</span>])</span><br><span class="line">            que.append([depth+<span class="number">1</span>, nd.left, idx_split[<span class="number">0</span>]])</span><br><span class="line">            que.append([depth+<span class="number">1</span>, nd.right, idx_split[<span class="number">1</span>]])</span><br><span class="line">    </span><br><span class="line">        self.height = depth</span><br><span class="line">        self._get_rules()</span><br></pre></td></tr></tbody></table></figure>
打印叶子节点<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_rules</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">for</span> i, rule <span class="keyword">in</span> enumerate(self.rules):</span><br><span class="line">            literals, score = rule</span><br><span class="line">            print(<span class="string">"Rule %d: "</span> % i, <span class="string">' | '</span>.join(</span><br><span class="line">                literals) + <span class="string">' =&gt; split_hat %.4f'</span> % score)</span><br><span class="line"> </span><br></pre></td></tr></tbody></table></figure>
预测单样本<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_predict</span>(<span class="params">self, row</span>):</span></span><br><span class="line">        nd = self.root</span><br><span class="line">        <span class="keyword">while</span> nd.left <span class="keyword">and</span> nd.right:</span><br><span class="line">            <span class="keyword">if</span> row[nd.feature] &lt; nd.split:</span><br><span class="line">                nd = nd.left</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nd = nd.right</span><br><span class="line">        <span class="keyword">return</span> nd.score</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 预测多条样本</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span>(<span class="params">self, X</span>):</span></span><br><span class="line">    <span class="keyword">return</span> [self._predict(Xi) <span class="keyword">for</span> Xi <span class="keyword">in</span> X]</span><br><span class="line">  </span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    print(<span class="string">"Tesing the accuracy of RegressionTree..."</span>)</span><br><span class="line">    X_train=np.array([[<span class="number">1</span>],[<span class="number">2</span>],[<span class="number">3</span>],[<span class="number">4</span>],[<span class="number">5</span>],[<span class="number">6</span>],[<span class="number">7</span>],[<span class="number">8</span>],[<span class="number">9</span>],[<span class="number">10</span>]])</span><br><span class="line">    y_train=np.array([[<span class="number">5.56</span> ],[<span class="number">5.7</span>],[<span class="number">5.91</span>],[<span class="number">6.4</span></span><br><span class="line">                      ],[<span class="number">6.8</span>],[<span class="number">7.05</span>],[<span class="number">8.9</span>],[<span class="number">8.7</span></span><br><span class="line">                        ],[<span class="number">9</span> ],[<span class="number">9.05</span>]])</span><br><span class="line">    reg = RegressionTree()</span><br><span class="line">    print(reg)</span><br><span class="line">    reg.fit(X=X_train, y=y_train, max_depth=<span class="number">3</span>)</span><br><span class="line">    reg.print_rules()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></tbody></table></figure>
<h1><span id="jian-dan-de-li-zi">简单的例子</span><a href="#jian-dan-de-li-zi" class="header-anchor">#</a></h1></li>
</ol>
<p>训练数据</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>x</th>
<th style="text-align:center">1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>10</th>
</tr>
</thead>
<tbody>
<tr>
<td>y</td>
<td style="text-align:center">5.56</td>
<td>5.7</td>
<td>5.91</td>
<td>6.4</td>
<td>6.8</td>
<td>7.05</td>
<td>8.9</td>
<td>8.7</td>
<td>9</td>
<td>9.05</td>
</tr>
</tbody>
</table>
</div>
<p>根据上表，只有一个特征$x$.</p>
<ol>
<li><p>选择最优的特征$j$和分切点$s$</p>
<p>| 分切点(s) | 1.5   | 2.5   | 3.5  | 4.5  | 5.5  | 6.5  | 7.5  | 8.5   | 9.5   |<br>| ————- | ——- | ——- | —— | —— | —— | —— | —— | ——- | ——- |<br>| $c_1$     | 5.56  | 5.63  | 5.72 | 5.89 | 6.07 | 6.24 | 6.62 | 6.88  | 7.11  |<br>| $c_2$     | 7.5   | 7.73  | 7.99 | 8.25 | 8.54 | 8.91 | 8.92 | 9.03  | 9.05  |<br>| loss      | 15.72 | 12.07 | 8.36 | 5.78 | 3.91 | 1.93 | 8.01 | 11.73 | 15.74 |</p>
<p>当分切点取$s=6.5$,损失最小$l(s=6.5)=1.93$,此时划分出两个分支，分别是$R_1=\{1,2,3,4,5,6\}$,$c_1=6.42$,$R_2=\{7,8,9,10\}$,$c_2=8.91$</p>
<ol>
<li><p>a) 对R1继续划分</p>
<p>| x    | 1    | 2    | 3    | 4    | 5    | 6    |<br>| —— | —— | —— | —— | —— | —— | —— |<br>| y    | 5.56 | 5.7  | 5.91 | 6.4  | 6.8  | 7.05 |</p>
<p>| 分切点(s) | 1.5    | 2.5   | 3.5    | 4.5    | 5.5    |<br>| ————- | ——— | ——- | ——— | ——— | ——— |<br>| $c_1$     | 5.56   | 5.63  | 5.72   | 5.89   | 6.07   |<br>| $c_2$     | 6.37   | 6.54  | 6.75   | 6.93   | 7.05   |<br>| loss      | 1.3087 | 0.754 | 0.2771 | 0.4368 | 1.0644 |</p>
<p>当分切点取$s=3.5$,损失函数$l(s=3.6)=0.2771$(假设此时满足停止条件）,此时得到两个分支，分别是$R_1=\{1,2,3\}$，$c_1=5.72$,$R_2={4,,5,6}$,$c_2=6.75$</p>
<p>b) 对R2继续划分</p>
<p>| x    | 7    | 8    | 9    | 10   |<br>| —— | —— | —— | —— | —— |<br>| y    | 8.9  | 8.7  | 9    | 9.05 |</p>
<p>| 分切点(s) | 7.5    | 8.5    | 9.5    |<br>| ————- | ——— | ——— | ——— |<br>| $c_1$     | 8.9    | 8.8    | 8.87   |<br>| $c_2$     | 8.92   | 9.03   | 9.05   |<br>| loss      | 0.0717 | 0.0213 | 0.0467 |</p>
<p>当分切点取$s=8.5$,损失函数$l(s=8,5)=0.0213$(假设此时满足停止条件）,此时得到两个分支，分别是$R_1=\{7,8\}$，$c_1=8.8$,$R_2=\{9,10\}$,$c_2=9.03$</p>
</li>
<li><p>函数表达式</p>
</li>
</ol>
</li>
</ol>
<pre><code>  $$
  \begin{equation}
  f(x)=\left\{
  \begin{aligned}
  5.72 &amp; &amp;  x&lt;3.5\\
  6.7 5&amp; &amp;3.5&lt;=x&lt;6.5\\
  8.8&amp; &amp;6.5&lt;=x&lt;8.5\\
  9.03&amp; &amp;8.5&lt;=x&lt;10\\
  \end{aligned}
  \right.
  \end{equation}
  $$
</code></pre><h1><span id="python-ku">Python库</span><a href="#python-ku" class="header-anchor">#</a></h1><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sklearn</span>.<span class="title">tree</span>.<span class="title">DecisionTreeClassifier</span>(<span class="params">criterion=’gini’, splitter=’best’, max_depth=None, min_samples_split=<span class="number">2</span>, min_samples_leaf=<span class="number">1</span>, min_weight_fraction_leaf=<span class="number">0.0</span>, max_features=None, random_state=None, max_leaf_nodes=None, min_impurity_decrease=<span class="number">0.0</span>, min_impurity_split=None, class_weight=None, presort=False</span>)</span></span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">Created on Wed Mar 13 19:59:53 2019</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@author: 23230</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeRegressor</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">X=np.array([[<span class="number">1</span>],[<span class="number">2</span>],[<span class="number">3</span>],[<span class="number">4</span>],[<span class="number">5</span>],[<span class="number">6</span>],[<span class="number">7</span>],[<span class="number">8</span>],[<span class="number">9</span>],[<span class="number">10</span>]])</span><br><span class="line">y=np.array([[<span class="number">5.56</span> ],[<span class="number">5.7</span>],[<span class="number">5.91</span>],[<span class="number">6.4</span>],[<span class="number">6.8</span>],[<span class="number">7.05</span>],[<span class="number">8.9</span>],[<span class="number">8.7</span>],[<span class="number">9</span> ],[<span class="number">9.05</span>]])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Fit regression model</span></span><br><span class="line">regr_1 = DecisionTreeRegressor(max_depth=<span class="number">2</span>)</span><br><span class="line">regr_2 = DecisionTreeRegressor(max_depth=<span class="number">3</span>)</span><br><span class="line">regr_3 = DecisionTreeRegressor(max_depth=<span class="number">4</span>)</span><br><span class="line">regr_1.fit(X, y)</span><br><span class="line">regr_2.fit(X, y)</span><br><span class="line">regr_3.fit(X, y)</span><br><span class="line"></span><br><span class="line">X_test = np.copy(X)</span><br><span class="line">y_1 = regr_1.predict(X_test)</span><br><span class="line">y_2 = regr_2.predict(X_test)</span><br><span class="line">y_3 = regr_3.predict(X_test)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># Plot the results</span></span><br><span class="line">plt.figure()</span><br><span class="line">plt.scatter(X, y, s=<span class="number">20</span>, edgecolor=<span class="string">"black"</span>,c=<span class="string">"darkorange"</span>, label=<span class="string">"data"</span>)</span><br><span class="line">plt.plot(X_test, y_1, color=<span class="string">"cornflowerblue"</span>,label=<span class="string">"max_depth=2"</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">plt.plot(X_test, y_2, color=<span class="string">"yellowgreen"</span>, label=<span class="string">"max_depth=4"</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">plt.plot(X_test, y_3, color=<span class="string">"r"</span>, label=<span class="string">"max_depth=8"</span>, linewidth=<span class="number">2</span>)</span><br><span class="line">plt.xlabel(<span class="string">"data"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"target"</span>)</span><br><span class="line">plt.title(<span class="string">"Decision Tree Regression"</span>)</span><br><span class="line">plt.legend()</span><br></pre></td></tr></tbody></table></figure>
<p><img src="/2019/03/11/%E5%9B%9E%E5%BD%92%E6%A0%91/re.png" alt="1552478769877"></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>回归树</tag>
      </tags>
  </entry>
  <entry>
    <title>BP算法</title>
    <url>/2019/03/05/BP%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<p>[TOC]<br>BP</p>
<a id="more"></a>
<h1><span id="1-xu-yao-de-wei-ji-fen-zhi-shi">1. 需要的微积分知识</span><a href="#1-xu-yao-de-wei-ji-fen-zhi-shi" class="header-anchor">#</a></h1><h2><span id="1-1-dao-shu">1.1 导数</span><a href="#1-1-dao-shu" class="header-anchor">#</a></h2><p>对于一元函数，在导数存在的情况下，在某一点的导数，也就是该点的斜率。<br>对于多元函数，对于某一点求导，则需要指明方向，两个特殊的方向，1. 偏导：在坐标轴方向的导数 2. 梯度的方向:总有一个方向是变化最快的。</p>
<h2><span id="1-2-qiu-dao-de-lian-shi-fa-ze">1.2 求导的链式法则</span><a href="#1-2-qiu-dao-de-lian-shi-fa-ze" class="header-anchor">#</a></h2><ol>
<li><p>$x \in R$, $z=g(f(x))$, $y=f(x)$</p>
<script type="math/tex; mode=display">\frac{\partial z}{\partial x}=\frac{\partial z}{\partial y} \frac{\partial y}{\partial x}</script></li>
<li><p>$ x \in R^m $, $f(x)$是$R^M$到$R^n$的映射，$g(f)$是$R^n$到R的映射</p>
<script type="math/tex; mode=display">\frac{\partial g}{\partial x_i}=\sum_j^n \frac{\partial g}{\partial f_i} \frac{\partial f_i}{\partial x_i}</script><p> 如果使用向量表示</p>
<script type="math/tex; mode=display">\nabla_x^z=(\frac{\partial f}{\partial x})^T \nabla_y^z</script><h1><span id="2-ti-du-xia-jiang-fa">2. 梯度下降法</span><a href="#2-ti-du-xia-jiang-fa" class="header-anchor">#</a></h1><h2><span id="2-1-ti-du">2.1 梯度</span><a href="#2-1-ti-du" class="header-anchor">#</a></h2><p>梯度其实本质也是一个向量，对于函数$f(X,y)$<br>在$(W,y)$这一点的梯度 $(\frac{\partial f}{\partial X},\frac{\partial f}{\partial y})$<br>梯度的几何意义：在该店变化增加最快的地方</p>
</li>
</ol>
<h2><span id="2-2-ti-du-suan-fa-de-jie-shi">2.2 梯度算法的解释</span><a href="#2-2-ti-du-suan-fa-de-jie-shi" class="header-anchor">#</a></h2><p>图来自吴恩达的机器学习课程<br><img src="/2019/03/05/BP%E7%AE%97%E6%B3%95/2.1.1.png" alt="tu"><br>颜色偏红(A)的地方开始，根据梯度的负方向通过9次更新，达到了最小值(B)。<br>现在给定一个点$A(\theta_0,\theta_1)$,干嘛呢，我们想从A到B点（最小值点),类似人类下山，需要知道往那个方向吧、走大多一步呢？<br>方向：梯度的负方向 $ \delta=(\frac{\partial L}{\partial \theta_0},\frac{\partial L}{\partial \theta_1})$)<br>步长：学习率（$\alpha$)<br>因此，计算一次里目标更近了 $(\theta_0,\theta_1)=(\theta_0,\theta_1)-\alpha \dot (\delta)$<br>在重复上两步，直到满意为止。</p>
<h1><span id="3-wu-chai-fan-xiang-chuan-bo-suan-fa">3.误差反向传播算法</span><a href="#3-wu-chai-fan-xiang-chuan-bo-suan-fa" class="header-anchor">#</a></h1><h2><span id="3-1-li-lun-tui-dao">3.1 理论推导</span><a href="#3-1-li-lun-tui-dao" class="header-anchor">#</a></h2><p><img src="/2019/03/05/BP%E7%AE%97%E6%B3%95/3.1.1.png" alt="计算图"></p>
<h3><span id="3-1-1-fu-hao-shuo-ming">3.1.1 符号说明</span><a href="#3-1-1-fu-hao-shuo-ming" class="header-anchor">#</a></h3><p>上图是一个L层的神经网络，输入层为第一层，隐藏层：2至$L-1$层，输出层L</p>
<p>令 输入向量 $\vec{X}$</p>
<script type="math/tex; mode=display">\vec{X} = (x_1,x_2,...,x_{m-1},x_m)</script><p>输出向量 $\vec{Y}$</p>
<script type="math/tex; mode=display">\vec{Y}=(y_1,y_2,...,y_{n-1},y_n)</script><p>第j层隐藏层的输出向量 $\vec{h^{(j)}}$,有 </p>
<script type="math/tex; mode=display">\vec{h^{(j)}}=(h_1^{(j)},h_2^{(j)},...,h_{t-1}^{(j)},h_tj^{(j)})</script><p>其中，$t_j$:表示第j的隐藏层个数<br>第$(l-1)$层的第i个神经元到第$l$层的第j个神经元的连接权重：$w_{ij}^{(l)}$，则第$(l-1)$层神经元到第$l$层神经元的连接权重矩阵<script type="math/tex">W^{(l)}=\left( \begin{matrix}w_{11}^{(l)}& \cdots & w_{1(tj)}\\
    &   \dots &\\
    w_{s(l-1)}^{l}&\cdots&w_{s(l-1)s(l)}^{l}
\end{matrix}\right)</script></p>
<h3><span id="3-1-2-tui-dao-guo-cheng">3.1.2 推导过程</span><a href="#3-1-2-tui-dao-guo-cheng" class="header-anchor">#</a></h3><h4><span id="3-1-2-1-wu-chai">3.1.2.1 误差</span><a href="#3-1-2-1-wu-chai" class="header-anchor">#</a></h4><p>定义的误差函数,常见的衡量性指标见 <a href="#3.6">戳我</a>,这里选择的误差平方和最小<br>第$i$个输出的误差,假设实际输出$(d(1),d(2),…,d(n))$：,一个输入样本对应的误差</p>
<script type="math/tex; mode=display">E(i)=\frac{1}{2}\sum_{k=1}^n(y(i)-d(i))^2=\frac{1}{2}||y-d||^2</script><p>所有训练样本($N$)的误差：</p>
<script type="math/tex; mode=display">E(i)=\frac{1}{2}\sum_{j=1}^{N}(\sum_{k=1}^n(y(i)-d(i))^2)=\frac{1}{2N}\sum_{j=1}^{N}(||y(i)-d(i)||^2)</script><p>因此，</p>
<script type="math/tex; mode=display">E = \frac{1}{2N}\sum_{i=1}^N(||y(i)-d(i)||^2)</script><p>其实，神经网络的输出是关于节点的复合函数。代价函数是关于$W$和$b$的函数。</p>
<h4><span id="3-1-2-2-zheng-xiang-chuan-bo">3.1.2.2 正向传播</span><a href="#3-1-2-2-zheng-xiang-chuan-bo" class="header-anchor">#</a></h4><p>输入层$\hat{X}$：</p>
<script type="math/tex; mode=display">X =(x_1,x_2,x_3,...,x_m)</script><p>当有$N$个训练样本时，可用矩阵表示</p>
<script type="math/tex; mode=display">X=\left( \begin{matrix}
x_{11} &x_{12}&...&x_{1m}\\
x_{21} & x_{22}&...&x_{2m}\\
\vdots & \vdots&\dots&\vdots\\
x_{N1} & \vdots&\vdots&x_{Nm}\\
\end{matrix}  \right)</script><p>第二层 $h^{(2)}$,一共$s2$个节点:<br>第i个节点的计算</p>
<script type="math/tex; mode=display">h^{(2)}(i)=f(\sum_{j=1}^{s2}x(j)*w_{ji}^{(l)}+b_i)=f(x*w(:,i)+b_i)</script><p>矩阵表示</p>
<script type="math/tex; mode=display">h^{(2)}=f(x*W^{(l)}+b^{(2)})</script><p>第i层 矩阵形式</p>
<script type="math/tex; mode=display">h^{(l)}=f(h^{(l-1)}*W^{(l)}+b)</script><h4><span id="3-1-2-3-fan-xiang-chuan-bo">3.1.2.3 反向传播</span><a href="#3-1-2-3-fan-xiang-chuan-bo" class="header-anchor">#</a></h4><p>梯度下降法更新权重，不断迭代到最优解。<br>对$w_{ij}$求导数可得,可更新$w_{ij}$更新公式：</p>
<script type="math/tex; mode=display">w_{ij}=w_{ij}-\alpha \frac{\partial E}{\partial w_{ij}}</script><p>当然简单的情况下，可直接写出公式，当太复杂的时候，引入BP简化求导</p>
<p>方便书写公式，对于第i的输入$h^{(i-1)}*W^{(i)}+b^{(i)}$记作$net^{(i)}$,其中，第$i$的输入和输出的关系，$输入=f(输出)$<br>下面开始推导</p>
<p>首先，对于$L$层，</p>
<p>对于$W^{(L)}$，先看对$W_{ij}^{(L)}$求导，</p>
<script type="math/tex; mode=display">\frac{\partial E}{\partial W_{ij}^{(L)}}
=\frac{\partial E}{\partial y(j)} * \frac{\partial y(i)}{\partial net_{j}^{L}} * \frac{\partial net_{j}^{L}}{\partial W_{ij}^{(L)}}\\
=(y(j)-d(j))*f(x)^{'}|_{x=net_j^{(L)}}h_i^{(L-1)}</script><p>令$\delta_i^{(L)}=y(i)-d(i)$</p>
<p>上述给出了单个分量的求偏导的结果，对于$W^{(L)}$</p>
<script type="math/tex; mode=display">
\frac{\partial E}{\partial W^{(L)}}
=\left[\begin{matrix} 
\frac{\partial E}{\partial W_{11}^{(L)}} & \frac{\partial E}{\partial W_{12}^{(L)}}&\dots & \frac{\partial E}{\partial W_{1n}^{(L)}}\\
\frac{\partial E}{\partial W_{21}^{(L)}} & \frac{\partial E}{\partial W_{22}^{(L)}}&\dots& \frac{\partial E}{\partial W_{2n}^{(L)}}\\
\vdots& \dots& \dots& \dots\\
\frac{\partial E}{\partial W_{sL,1}^{(L)}} & \frac{\partial E}{\partial W_{sL,2}^{(L)}}&\dots& \frac{\partial E}{\partial W_{sL,n}^{(L)}}
\end{matrix}\right]
\\= \left[
\begin{matrix}
h^{(L-1)}_1\\h^{(L-1)}_2\\ \dots\\h^{(L-1)}_n
\end{matrix}
\right] *\left[\begin{matrix}
\delta_1^{(L)}f(x)^{'}|_{x=net_1^{(L)}}\\
\delta_2^{(L)}f(x)^{'}|_{x=net_2^{(L)}}\\
\dots\\
\delta_n^{(L)}f(x)^{'}|_{x=net_n^{(L)}}
\end{matrix}\right] ^T
=h^{(L-1)}S^{(L)}</script><p>其中，</p>
<script type="math/tex; mode=display">
S^{(L)}=\left[\begin{matrix}

\delta_1^{(L)}f(x)^{'}|_{x=net_1^{(L)}}\\
\delta_2^{(L)}f(x)^{'}|_{x=net_2^{(L)}}\\
\dots\\
\delta_n^{(L)}f(x)^{'}|_{x=net_n^{(L)}}
\end{matrix}\right]^T</script><p>同理可得，</p>
<script type="math/tex; mode=display">
\frac{\partial E}{\partial b_k^{(L)}}=(y(j)-d(j))*f(x)^{'}|_{x=net_j^{(L)}}</script><p>其次，对于隐含层$L-1$层，对$W_{ij}^{(L)}$求导</p>
<script type="math/tex; mode=display">
\frac{\partial E}{\partial W_{ij}^{(L-1)}}
=\sum_{k=1}^{n}\frac{\partial E}{\partial y(k)} * \frac{\partial y(k)}{\partial net_{k}^{L}} * \frac{\partial net_{k}^{L}}{\partial f(net_j^{(L-1)})}*\frac{\partial f(net_j^{(L-1)})}{\partial net_j^{(L-1)}}*\frac{\partial net_j^{(L-1)}}{\partial W_{ij}^{(L-1)}}\\
=\sum_{k=1}^{n} (y(j)-d(j))*f(x)^{'}|_{x=net_j^{(L)}}W_{kj}^{(L)}f(x)^{'}|_{x=net_j^{L-1}}h_i^{L-2}\\
=\sum_{k=1}^{n}S_i^{(L)}W_{kj}^{(L)}f(x)^{'}|_{x=net_j^{L-1}}h_i^{L-2}\\</script><p>写出矩阵形式,对$W^{(L-1)}$</p>
<script type="math/tex; mode=display">
\frac{\partial E}{\partial W^{(L-1)}}=\left[\begin{matrix} h^{(L-2)}_1\\h^{(L-2)}_2\\\vdots\\h^{(L-2)}_{s(L-2)}\end{matrix}\right] \left[\begin{matrix}

\delta_1^{(L)}f(x)^{'}|_{x=net_1^{(L)}}\\
\delta_2^{(L)}f(x)^{'}|_{x=net_2^{(L)}}\\
\dots\\
\delta_n^{(L)}f(x)^{'}|_{x=net_n^{(L)}}
\end{matrix}\right]^T
\left[\begin{matrix} 
W_{11}^{(L)} &  W_{12}^{(L)}&\dots & W_{1n}^{(L)}\\
W_{21}^{(L)} &  W_{22}^{(L)}&\dots& W_{2n}^{(L)}\\
\vdots& \dots& \dots& \dots\\
 W_{s(L-1),1}^{(L)} & W_{s(L-1),2}^{(L)}&\dots& W_{s(L-1),n}^{(L)}
\end{matrix}\right]^T
 \\
\left[ \begin{array}{ccc}{f^{'(L-1)}\left(net^{(L-1)}_{(1)}\right)} & {0} & {0}&{0} \\ {0} & {f^{'(L-1)}\left(net^{(L-1)}_{(2)}\right)} & {0} &{0}\\
0 & \dots & \vdots & 0\\{0} & {0} & {0}&{f^{(L-1)}\left(ne t_{s(L-1)}^{(L-1)}\right)}\end{array}\right]\\
=h^{(L-2)}S^{(L-1)}</script><script type="math/tex; mode=display">
S^{(L-1)}=\left(\left[\begin{matrix}

f(x)^{'(L)}|_{x=net_1^{(L)}}&0& \dots& 0\\
0&f(x)^{'}|_{x=net_2^{(L)}}0& \dots& 0\\
0&\dots&\dots&0\\
0&0&0&f(x)^{'(L)}|_{x=net_n^{(L)}}
\end{matrix}\right]\left[\begin{matrix} \delta_1^{(L)}\\\delta_2^{(L)}\\\vdots\\\delta_n^{(L)}\end{matrix}\right] \right)^T\\
\left[\begin{matrix} 
W_{11}^{(L)} &  W_{12}^{(L)}&\dots & W_{1n}^{(L)}\\
W_{21}^{(L)} &  W_{22}^{(L)}&\dots& W_{2n}^{(L)}\\
\vdots& \dots& \dots& \dots\\
 W_{s(L-1),1}^{(L)} & W_{s(L-1),2}^{(L)}&\dots& W_{s(L-1),n}^{(L)}*
\end{matrix}\right]^T
\left[ \begin{array}{ccc}{f^{'(L-1)}\left(net^{(L-1)}_{(1)}\right)} & {0} & {0}&{0} \\ {0} & {f^{'(L-1)}\left(net^{(L-1)}_{(2)}\right)} & {0} &{0}\\
0 & \dots & \vdots & 0\\{0} & {0} & {0}&{f^{(L-1)}\left(ne t_{s(L-1)}^{(L-1)}\right)}\end{array}\right]\\
=S^{(L)}\left[\begin{matrix} 
W_{11}^{(L)} &  W_{12}^{(L)}&\dots & W_{1n}^{(L)}\\
W_{21}^{(L)} &  W_{22}^{(L)}&\dots& W_{2n}^{(L)}\\
\vdots& \dots& \dots& \dots\\
 W_{s(L-1),1}^{(L)} & W_{s(L-1),2}^{(L)}&\dots& W_{s(L-1),n}^{(L)}*
\end{matrix}\right]^T\left[ \begin{array}{ccc}{f^{'(L-1)}\left(net^{(L-1)}_{(1)}\right)} & {0} & {0}&{0} \\ {0} & {f^{'(L-1)}\left(net^{(L-1)}_{(2)}\right)} & {0} &{0}\\
0 & \dots & \vdots & 0\\{0} & {0} & {0}&{f^{(L-1)}\left(ne t_{s(L-1)}^{(L-1)}\right)}\end{array}\right]*\\</script><p>对$1&lt;l&lt;L$,求$W^{(l)}$的偏导,</p>
<p>最后，根据上述的推导喔，很容易得出$S^{(l)}$和$S^{(l+1)}$,</p>
<script type="math/tex; mode=display">
S^{(l)}=S^{(l+1)}W^{(l+1)^T}F^{'(l)}(net^{(l)})\\
S^{(L)}=(Y-\hat{Y})F^{'(L)}(net^{(L)})</script><script type="math/tex; mode=display">
\frac{\partial E}{\part W^{(l)}}=\left[\begin{matrix}h^{(l-1)}_1\\h^{(l-1)}_2 \\\dots \\h^{(l-1)}_{sl}\end{matrix}\right]S^{(l+1)} \left[\begin{matrix}W_{11}^{(l+1)}&W_{12}^{(l+1)} &\dots& W_{2(sl+1)}^{(l+1)}\\
W_{21}^{(l+1)}&W_{22}^{(l+1)} &\dots& W_{2(sl+1)}^{(l+1)}\\
\dots&\dots&\dots&\dots\\
W_{sl1}^{(l+1)}&W_{sl2}^{(l+1)} &\dots& W_{sl(sl+1)}^{(l+1)}\\
\end{matrix}  \right]^T\left[\begin{matrix} \part f^{'(l)}(net_1^{l})&0&\dots & 0\\
0\\0 &\part f^{'(l)}(net_2^{l})&\dots&0\\
0 & 0&\dots&0\\
0&0&\dots&\part f^{'(l)}(net_l^{l})\end{matrix}\right]</script><h2><span id="3-2-bp-suan-fa-de-xiao-jie">3.2 BP算法的小结</span><a href="#3-2-bp-suan-fa-de-xiao-jie" class="header-anchor">#</a></h2><p>算法分为两个阶段：前向阶段和后向传播阶段</p>
<p>后向阶段算法：</p>
<p>Step 1:  计算$\hat{y}^{(L)}$</p>
<p>Step 2:  for l =L:2</p>
<p>​        计算$S^{(l)}=S^{(l+1)}W^{(l+1)}F’(net^{(l)})$</p>
<p>​        计算 $\Delta W^{(l)}=h^{(l-1)}S^{(l)} $</p>
<p>​        计算$W^{(l)}=W^{(l)}-\delta \Delta W^{(l)}$</p>
<h2><span id="3-3-python-shi-xian">3.3 Python实现</span><a href="#3-3-python-shi-xian" class="header-anchor">#</a></h2><h3><span id="3-3-1-zui-jian-dan-san-ceng-wang-luo">3.3.1 最简单三层网络</span><a href="#3-3-1-zui-jian-dan-san-ceng-wang-luo" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">不用任何框架，自己写一个三层的神经网络</span></span><br><span class="line"><span class="string"># input-3,hidden-4 output-1</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Input Matrix</span></span><br><span class="line">X = np.array([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">              [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">0</span> ,<span class="number">1</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Output Matrix</span></span><br><span class="line">y = np.array([[<span class="number">0</span>],</span><br><span class="line">              [<span class="number">1</span>],</span><br><span class="line">              [<span class="number">1</span>],</span><br><span class="line">              [<span class="number">0</span>]])</span><br><span class="line"><span class="comment"># Nonlinear function</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">X,derive=False</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> derive:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> / (<span class="number">1</span> + np.exp(-X))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> X*(<span class="number">1</span>-X)</span><br><span class="line"><span class="comment"># relu</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">relu</span>(<span class="params">X,derive = False</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> derive:</span><br><span class="line">        <span class="keyword">return</span> np.maximum(<span class="number">0</span>,X)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (X&gt;<span class="number">0</span>).astype(float)</span><br><span class="line">        </span><br><span class="line"><span class="comment"># Weight bias</span></span><br><span class="line">W1 = <span class="number">2</span> * np.random.random((<span class="number">3</span>, <span class="number">4</span>))<span class="number">-1</span></span><br><span class="line">b1 = <span class="number">0.1</span> * np.ones((<span class="number">4</span>,))</span><br><span class="line"> </span><br><span class="line">W2 = <span class="number">2</span> * np.random.random((<span class="number">4</span>,<span class="number">1</span>))<span class="number">-1</span></span><br><span class="line">b2 = <span class="number">0.1</span> * np.ones((<span class="number">1</span>,))</span><br><span class="line"> </span><br><span class="line">rate = <span class="number">0.1</span></span><br><span class="line">noline = relu</span><br><span class="line"><span class="comment"># Training</span></span><br><span class="line">train_times = <span class="number">200</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> time <span class="keyword">in</span> range(train_times):</span><br><span class="line">    <span class="comment"># Layer one</span></span><br><span class="line">    A1 = np.dot(X,W1)+b1</span><br><span class="line">    Z1 = noline(A1)</span><br><span class="line">    <span class="comment"># Layer two </span></span><br><span class="line">    A2 = np.dot(Z1, W2)+b2</span><br><span class="line">    Z2 = noline(A2)</span><br><span class="line">    </span><br><span class="line">    cost = -y+Z2</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Calc deltas </span></span><br><span class="line">    S2= cost*noline(A2,<span class="literal">True</span>)</span><br><span class="line">    delta_W2 = np.dot(Z1.T,S2)</span><br><span class="line">    bias2 = S2.sum(axis=<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    S1 = np.dot(S2, W2.T)*noline(A1,<span class="literal">True</span>)</span><br><span class="line">    delta_W1= np.dot(X.T, S1)</span><br><span class="line">    bias1 = S1.sum(axis=<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># update</span></span><br><span class="line">    W1 = W1-rate*delta_W1</span><br><span class="line">    b1 = b1-rate*bias1</span><br><span class="line">    W2 = W2-rate*delta_W2</span><br><span class="line">    b2 = b2-rate*bias2</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'error'</span>,np.mean(((y-Z2)*(y-Z2))**<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">print(<span class="string">"prediction"</span>,Z2)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="3-4-fu-lu"><font id="3.6">3.4  附录</font>：</span><a href="#3-4-fu-lu" class="header-anchor">#</a></h2><div class="table-container">
<table>
<thead>
<tr>
<th>Name</th>
<th>Abbreviation</th>
</tr>
</thead>
<tbody>
<tr>
<td>Mean absolute percentage error</td>
<td>MAPE</td>
</tr>
<tr>
<td>Root mean squares percentage error</td>
<td>RMSPE</td>
</tr>
<tr>
<td>Mean absolute percentage error</td>
<td>MAE</td>
</tr>
<tr>
<td>Mean squares error</td>
<td>MSE</td>
</tr>
<tr>
<td>Index of agreement</td>
<td>IA</td>
</tr>
<tr>
<td>Theil U statistic 1</td>
<td>U1</td>
</tr>
<tr>
<td>Theil U statistic 2</td>
<td>U2</td>
</tr>
<tr>
<td>Correlation coefficient</td>
<td>R</td>
</tr>
</tbody>
</table>
</div>
<p>MAPE    =    $\frac{1}{n} \sum_{k=1}^{n}\left|\frac{x^{(0)}(k)-\hat{x}^{(0)}(k)}{x^{(0)}(k)}\right| \times 100$<br>RMSPE    =    $\sqrt{\frac{1}{n} \sum_{k=1}^{n}\left(\frac{\hat{x}^{(0)}(k)-x^{(0)}(k)}{x^{(0)}(k)}\right)^{2}} \times 100$<br>MAE    =    $\frac{1}{n} \sum_{k=1}^{n}\left|\hat{x}^{(0)}(k)-x^{(0)}(k)\right|$<br>MSE    =    $\frac{1}{n} \sum_{k=1}^{n}\left(\hat{x}^{(0)}(k)-x^{(0)}(k)\right)^{2}$<br>IA    =    $1-\frac{\sum_{k=1}^{n}\left(\hat{x}^{(0)}(k)-x^{(0)}(k)\right)^{2}}{\sum_{k=1}^{n} \left( \left| \hat{x}^{(0)}(k)-\overline{x} \right|+\left| x^{(0)}(k)-\overline{x}\right| \right)^{2}}$<br>U1    =    $\frac{\sqrt{\frac{1}{n} \sum_{k=1}^{n}\left(x^{(0)}(k)-x^{(0)}(k)\right)^{2}}}{\sqrt{\frac{1}{n} \sum_{k=1}^{n} x^{(0)}(k)^{2}}+\sqrt{\frac{1}{n} \sum_{k=1}^{n} x^{(0)}(k)^{2}}}$<br>U2    =    $\frac{\left[\sum_{k=1}^{n}\left(\hat{x}^{(0)}(k)-x^{(0)}(k)\right)^{2}\right]^{1 / 2}}{\left[\sum_{k=1}^{n} x^{(0)}(k)^{2}\right]^{1 / 2}}$<br>R    =    $\frac{\operatorname{Cov}(\hat{x}^{(0)}, x^{(0)})}{\sqrt{\operatorname{Var}[\hat{x}^{(0)}] \operatorname{Var}[x^{(0)}]}}$</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>BP</tag>
      </tags>
  </entry>
  <entry>
    <title>决策树</title>
    <url>/2019/03/03/%E5%86%B3%E7%AD%96%E6%A0%91/</url>
    <content><![CDATA[<p>主要是分享决策的基本知识点，重点在分类决策树上，对于回归的决策树后面在给出。希望大家和我一起做知识的传播者啦！<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😃</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😮</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f62e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>
<a id="more"></a>
<p>[TOC]</p>
<h1><span id="jue-ce-shu">决策树</span><a href="#jue-ce-shu" class="header-anchor">#</a></h1><p>英文名字：Descision Tree</p>
<h2><span id="shi-me-shi-jue-ce-shu">什么是决策树</span><a href="#shi-me-shi-jue-ce-shu" class="header-anchor">#</a></h2><p>举个校园相亲的例子，今天校园的小猫(女)和小狗(男)准备配对，小猫如何才能在众多的优质🐶的心仪的狗呢？于是呢？有一只特乖巧的小猫找到了你，你正在学习机器学习，刚好学习了决策树，准备给这只猫猫挑选优质狗，当然，你不仅仅是直接告诉猫哪些狗是合适你的？你更应该详细的给猫讲解决策树是如何根据它提出的标准选出的符合要求的狗呢？<br>猫给出如下信息：<br>年龄&lt;0.5 不心仪；年龄大于&gt;=0.5  6.5&lt;=体重&lt;=8.5;心仪; 年龄&gt;=0.5 体重&gt;8.5 长相好 心仪;其余情况不心仪; 根据上述条件可以构造一颗树：<br><img src="/2019/03/03/%E5%86%B3%E7%AD%96%E6%A0%91/1.bmp" alt="tuyi"><br>上面的图就是决策树，最终的结果是心仪或者不心仪。决策树算法以树形结构表示数据分类的结果<!--0.5--></p>
<h2><span id="ji-ben-gai-nian">基本概念</span><a href="#ji-ben-gai-nian" class="header-anchor">#</a></h2><p>决策树属于也只能非参数学习算法、可以用于解决(多)分类问题，回归问题。 回归问题的结果，叶子结点的平均值是回归问题的解。<br>根节点：决策树具有数据结构里面的二叉树、树的全部属性<br>非叶子节点 ：（决策点） 代表测试的条件，数据的属性的测试<br>叶子节点 ：分类后获得分类标记<br>分支： 测试的结果</p>
<h2><span id="shu-xue-wen-ti-shang-gini-xi-shu">数学问题-熵-Gini系数</span><a href="#shu-xue-wen-ti-shang-gini-xi-shu" class="header-anchor">#</a></h2><p>什么是熵：熵的概念源于物理学，用于度量一个热力学系统的无序程度。<br>信息熵：不得不提香农这个大写的人啦！信息论里面的知识。在信息论里面，<font color="red">信息熵衡量信息量的大小，也就是对随机变量不确定度的一个衡量。熵越大，不确定性越大；</font><br>对于某个单符号无记忆信源，发出符号($x_i$)的概率是$p_i$,概率越大，符号的信息量就越小，香农公式 $I(x_i)=-log_{p_i}$。信源所含的信息熵就是信息量的期望]<br>$H(x)=-\sum p_i*log_{p_i}$<br>Gini系数： $Gimi(p) = 1-\sum_{k=1}^{K}p_k^2$</p>
<h2><span id="jue-ce-shu-ru-he-gou-jian-de-wen-ti">决策树如何构建的问题</span><a href="#jue-ce-shu-ru-he-gou-jian-de-wen-ti" class="header-anchor">#</a></h2><p>自我提问阶段：</p>
<p><font color="green" size="3">每个节点的位置如何确定？</font><br>特征的选择：每次选入的特征作为分裂的标准，都是使得决策树在这个节点的根据你自己选择的标准（信息熵最小、信息增益最大、gini系数最小）.</p>
<p><font color="green" size="3">每个节点在哪个值上做划分，确定分支结构呢？</font><br>遍历划分的节点的分界值操作来解决这个问题</p>
<p><font color="green" size="3">可以想象，我们构造的决策树足够庞大，决策树可以把每一个样本都分对，那么决策树的泛化能力就可以很差了</font><br>为了解决这个问题，就需要剪枝操作了</p>
<h3><span id="xun-lian-suan-fa">训练算法</span><a href="#xun-lian-suan-fa" class="header-anchor">#</a></h3><h4><span id="ji-yu-xin-xi-shang-de-gou-zao">基于信息熵的构造</span><a href="#ji-yu-xin-xi-shang-de-gou-zao" class="header-anchor">#</a></h4><p>当选择某个特征作为节点时，我们就希望这个特征的信息熵越小越好，那么不确定性越小。<br>计算特征的信息熵公式如下：</p>
<script type="math/tex; mode=display">H(x) = -p_i(x)log^{p_i(x)}
= -\frac{n_j}{S}log^{\frac{n_j}{S}}</script><p>$n_j$: 第j个类别，在样本中出现的频数<br>$S$: 样本个数<br>对于离散属性，直接计算信息熵，连续属性，就需要划分区间，按区间计算信息熵。</p>
<ol>
<li>基于某一层的数据集<br> a. 遍历计算所有属性，遍历相应属性以不同值为分截点的信息熵<br> b. 选择信息熵最小的作为节点<ol>
<li>如果到达终止条件，返回相应信息，否则，按照分支重复步骤1<h4><span id="id3-suan-fa-xin-xi-zeng-yi-zui-da-hua">ID3算法： 信息增益最大化</span><a href="#id3-suan-fa-xin-xi-zeng-yi-zui-da-hua" class="header-anchor">#</a></h4>C:类别<script type="math/tex; mode=display">H(C)=-\sum_{i=1}^{m}p_i log _2^{p_i}</script>按照D组划分C<script type="math/tex; mode=display">H(C/D)=\sum_{i=1}^{v}\frac{|C_i|}{|C|}H(C_i)</script>信息增益<script type="math/tex; mode=display">gain(D) = gain(C)-H(C/D)</script>这里我就以网上给出的数据为例，给出根据信息熵构成决策树的计算过程。</li>
</ol>
</li>
<li><p>确定特征，统计属性值和分解结果，总共四个特征，四种特征的统计结果如下图：<br><img src="/2019/03/03/%E5%86%B3%E7%AD%96%E6%A0%91/2.jpg" alt="图er"></p>
</li>
<li><p>根据历史数据，在不知到任何情况下，计算数据本身的熵为</p>
<script type="math/tex; mode=display">- \frac{9}{14}log_2 \frac{9}{14}-\frac{5}{14}log_2\frac{5}{14}=0.940</script></li>
<li>计算每个特征做为节点的信息熵<br>以天气为例，天气三种属性，当Outlook = sunny时，H(x) = $-\frac{2}{5}log_2\frac{2}{5}-\frac{3}{5}log_2\frac{3}{5}$; 当Outlook= overcast,$H(x)=0$,当Outlook = rainy ,$H(x) = 0.971$<br>所以，当选天气作为节点时，此时$H(x)=\frac{5}{14}<em>0.971+\frac{4}{14}</em>0+\frac{5}{14}*0.971 = 0.693$,gain(天气) = 0.247<br>同理，可得gain(温度) =0.029  gain(湿度)=0.152，gain(风)=0.048<br>因此选择天气节点，在递归实现其他节点的选择。<br>信息增益的方法偏向选择具有大量值的属性，也就是说某个属性特征索取的不同值越多，那么越有可能作为分裂属性，这样是不合理的；</li>
</ol>
<h4><span id="c4-5-xin-xi-zeng-yi-lu">C4.5: 信息增益率</span><a href="#c4-5-xin-xi-zeng-yi-lu" class="header-anchor">#</a></h4><p>如果这里考虑了一列ID,每个ID出现一次，所以算出的信息增益大。<br>$ H(x) = 0$,信息增益最大化了，可以引入信息增益率</p>
<script type="math/tex; mode=display">C(T) = \frac{信息增益}{H(T)}
=\frac{H(C)-H(C/T)}{H(T)}</script><h4><span id="cart-ji-ni-gini-xi-shu">CART:基尼(Gini)系数</span><a href="#cart-ji-ni-gini-xi-shu" class="header-anchor">#</a></h4><script type="math/tex; mode=display">G = 1-\sum_{i=l_k}^{k}p_i^2$$,也是对随机变量不确定性的一个衡量，gini越大，不确定性越大
### 连续属性的处理方法
选取分解点的问题： 分成不同的区间（二分、三分....)，分别计算增益值，然后比较选择。
将需要处理的样本（对应根节点）或样本子集（对应子树）按照连续变量的大小从小到大进行排序
假设该属性对应不同的属性值共N个，那么总共有N-1个可能的候选分割值点，每个候选的分割阈值点的值为上述排序后的属性值中两两前后连续元素的中点
## 评价
评价函数：
$$C(T) = \sum_{releaf} N_t*H(T)</script><p>$ N_t$：每个叶子节点里面含有的样本个数<br>$H(T)$:叶子节点含有的信息熵</p>
<h3><span id="guo-ni-he">过拟合</span><a href="#guo-ni-he" class="header-anchor">#</a></h3><p>如果决策树过于庞大，分支太多，可能造成过拟合。对应训练样本都尽可能的分对，也许样本本身就存在异常点呢？<br>I. 预剪枝：边构建，边剪枝</p>
<ol>
<li>指定深度d</li>
<li>节点的min_sample</li>
<li>节点熵值或者gini值小于阙值<br>熵和基尼值的大小表示数据的复杂程度，当熵或者基尼值过小时，表示数据的纯度比较大，如果熵或者基尼值小于一定程度数，节点停止分裂。</li>
<li>当所以特征都用完了</li>
<li>指定节点个数<br>当节点的数据量小于一个指定的数量时，不继续分裂。两个原因：一是数据量较少时，再做分裂容易强化噪声数据的作用；二是降低树生长的复杂性。提前结束分裂一定程度上有利于降低过拟合的影响。</li>
</ol>
<p>II. 后剪枝： 构建好后，然后才开始裁剪</p>
<script type="math/tex; mode=display">C_\alpha(T) = C(T)+\alpha|T_{leaf}|</script><p>在构造含一棵树后，选一些节点做计算，看是否需要剪枝</p>
<h2><span id="jue-ce-shu-dan-ge-jie-dian-xuan-ze-de-dai-ma-shi-xian">决策树单个节点选择的代码实现</span><a href="#jue-ce-shu-dan-ge-jie-dian-xuan-ze-de-dai-ma-shi-xian" class="header-anchor">#</a></h2><h3><span id="jian-dan-shi-xian-liao-dan-ge-jie-dian-jue-ce-gou-zao-guo-cheng">简单实现了单个节点决策构造过程</span><a href="#jian-dan-shi-xian-liao-dan-ge-jie-dian-jue-ce-gou-zao-guo-cheng" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split</span>(<span class="params">X,y,d,value</span>):</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">在d纬度上，按照value进行划分</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    index_a =(X[:,d]&lt;=value)</span><br><span class="line">    index_b =(X[:,d]&gt;value)</span><br><span class="line">    <span class="keyword">return</span> X[index_a],X[index_b],y[index_a],y[index_b]</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> log </span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entropy</span>(<span class="params">y</span>):</span></span><br><span class="line">    counter = Counter(y) <span class="comment"># 字典</span></span><br><span class="line">    res = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> counter.values():</span><br><span class="line">        p = num/len(y)</span><br><span class="line">        res+=-p*log(p)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gain</span>(<span class="params">X,y,d,v</span>):</span></span><br><span class="line">    X_l,X_r,y_l,y_r = split(X,y,d,v)</span><br><span class="line">    e = len(y_l)/len(y)*entropy(y_l)+len(y_r)/len(y)*entropy(y_r)</span><br><span class="line">    <span class="keyword">return</span> (entropy(y)-e)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gainratio</span>(<span class="params">X,y,d,v</span>):</span></span><br><span class="line">    X_l,X_r,y_l,y_r = split(X,y,d,v)</span><br><span class="line">    gain =entropy(y) - len(y_l)/len(y)*entropy(y_l)+len(y_r)/len(y)*entropy(y_r)</span><br><span class="line">    <span class="keyword">return</span> gain/(entropy(y_l)+entropy(y_r))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gini</span>(<span class="params">y</span>):</span></span><br><span class="line">    counter = Counter(y)</span><br><span class="line">    res = <span class="number">1.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> counter.values():</span><br><span class="line">        p = num / len(y)</span><br><span class="line">        res += -p**<span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">    <span class="comment">#X_l,X_r,y_l,y_r = split(X,y,d,v)</span></span><br><span class="line">    <span class="comment">#return 1-(len(y_l)/len(y))**2-(len(y_r)/len(y))**2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">try_split</span>(<span class="params">X,y</span>):</span></span><br><span class="line">    best_entropy = float(<span class="string">'inf'</span>)</span><br><span class="line">    best_d,best_v=<span class="number">-1</span>,<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> range(X.shape[<span class="number">1</span>]):</span><br><span class="line">        sorted_index = np.argsort(X[:,d])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(X)):</span><br><span class="line">            <span class="keyword">if</span> (X[sorted_index[i],d] != X[sorted_index[i<span class="number">-1</span>],d]):</span><br><span class="line">                v = (X[sorted_index[i<span class="number">-1</span>],d]+X[sorted_index[i],d])/<span class="number">2</span></span><br><span class="line">                X_l,X_r,y_l,y_r = split(X,y,d,v)</span><br><span class="line">                <span class="comment"># 信息熵</span></span><br><span class="line">                e = entropy(y_l)+entropy(y_r)</span><br><span class="line">                <span class="comment">#gini</span></span><br><span class="line">                e = gini(y_l) + gini(y_r)</span><br><span class="line">                <span class="comment"># 信息增益</span></span><br><span class="line">                e = -gain(X,y,d,v)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> e &lt; best_entropy:</span><br><span class="line">                    best_entropy, best_d,best_v = e,d,v</span><br><span class="line">    <span class="keyword">return</span> best_entropy, best_d, best_v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动来划分</span></span><br><span class="line"></span><br><span class="line">data =np.array([[	<span class="number">0.3</span>	,	<span class="number">5</span>	,	<span class="number">2</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.4</span>	,	<span class="number">6</span>	,	<span class="number">0</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.5</span>	,	<span class="number">6.5</span>	,	<span class="number">1</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">0.6</span>	,	<span class="number">6</span>	,	<span class="number">0</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.7</span>	,	<span class="number">9</span>	,	<span class="number">2</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">0.5</span>	,	<span class="number">7</span>	,	<span class="number">1</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.4</span>	,	<span class="number">6</span>	,	<span class="number">0</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.6</span>	,	<span class="number">8.5</span>	,	<span class="number">0</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">0.3</span>	,	<span class="number">5.5</span>	,	<span class="number">2</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.9</span>	,	<span class="number">10</span>	,	<span class="number">0</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">1</span>	,	<span class="number">12</span>	,	<span class="number">1</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.6</span>	,	<span class="number">9</span>	,	<span class="number">1</span>	,	<span class="number">0</span>	],</span><br><span class="line">])</span><br><span class="line">X =data[:,<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">y = data[:,<span class="number">-1</span>]</span><br><span class="line"><span class="comment"># 手动来划分</span></span><br><span class="line">best_entropy, best_d, best_v = try_split(X, y)</span><br><span class="line">print(best_entropy, best_d, best_v)</span><br><span class="line">X1_l, X1_r, y1_l, y1_r = split(X,y,best_d,best_v)</span><br><span class="line">print(X1_l, X1_r, y1_l, y1_r)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">best_entropy2, best_d2, best_v2 = try_split(X1_r, y1_r)</span><br><span class="line">X2_l, X2_r, y2_l, y2_r = split(X1_r,y1_r,best_d2,best_v2)</span><br><span class="line">entropy(y2_l)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="python-sklean-li-mian-tree-mo-kuai-li-mian-de-decisiontreeclassifier">Python sklean里面tree模块里面的DecisionTreeClassifier</span><a href="#python-sklean-li-mian-tree-mo-kuai-li-mian-de-decisiontreeclassifier" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line">clf =tree.DecisionTreeClassifier(max_depth=<span class="number">1</span>,criterion =<span class="string">'gini'</span>) <span class="comment"># criterion='entropy|gini'</span></span><br><span class="line"></span><br><span class="line">clf = clf.fit(X,y)</span><br></pre></td></tr></tbody></table></figure>
<p>训练好一颗决策树之后，我们可以使用export_graphviz导出器以Graphviz格式导出树。<br></p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> graphviz </span><br><span class="line">dot_data = tree.export_graphviz(clf, out_file=<span class="literal">None</span>,) </span><br><span class="line">graph = graphviz.Source(dot_data) </span><br><span class="line">graph.render(<span class="string">"data"</span>) </span><br></pre></td></tr></tbody></table></figure><br>在运行时可以出错：<br>ExecutableNotFound: failed to execute [‘dot’, ‘-Tpdf’, ‘-O’, ‘data’], make sure the Graphviz executables are on your systems’ PATH<br>原因：graphviz本身是一个软件，需要额外下载，并将其bin加入环境变量之中。<a href="https://graphviz.gitlab.io/_pages/Download/Download_windows.html">下载</a><p></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>决策树</tag>
      </tags>
  </entry>
  <entry>
    <title>决策树</title>
    <url>/2019/03/03/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/%E5%86%B3%E7%AD%96%E6%A0%91/</url>
    <content><![CDATA[<p>主要是分享决策的基本知识点，重点在分类决策树上，对于回归的决策树后面在给出。希望大家和我一起做知识的传播者啦！<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😃</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😮</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f62e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p>
<a id="more"></a>
<p>[TOC]</p>
<h1><span id="jue-ce-shu">决策树</span><a href="#jue-ce-shu" class="header-anchor">#</a></h1><p>英文名字：Descision Tree</p>
<h2><span id="shi-me-shi-jue-ce-shu">什么是决策树</span><a href="#shi-me-shi-jue-ce-shu" class="header-anchor">#</a></h2><p>举个校园相亲的例子，今天校园的小猫(女)和小狗(男)准备配对，小猫如何才能在众多的优质🐶的心仪的狗呢？于是呢？有一只特乖巧的小猫找到了你，你正在学习机器学习，刚好学习了决策树，准备给这只猫猫挑选优质狗，当然，你不仅仅是直接告诉猫哪些狗是合适你的？你更应该详细的给猫讲解决策树是如何根据它提出的标准选出的符合要求的狗呢？<br>猫给出如下信息：<br>年龄&lt;0.5 不心仪；年龄大于&gt;=0.5  6.5&lt;=体重&lt;=8.5;心仪; 年龄&gt;=0.5 体重&gt;8.5 长相好 心仪;其余情况不心仪; 根据上述条件可以构造一颗树：<br><img src="/2019/03/03/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/%E5%86%B3%E7%AD%96%E6%A0%91/1.bmp" alt="tuyi"><!--0.5--></p>
<p>上面的图就是决策树，最终的结果是心仪或者不心仪。决策树算法以树形结构表示数据分类的结果</p>
<h2><span id="ji-ben-gai-nian">基本概念</span><a href="#ji-ben-gai-nian" class="header-anchor">#</a></h2><p>决策树属于也只能非参数学习算法、可以用于解决(多)分类问题，回归问题。 回归问题的结果，叶子结点的平均值是回归问题的解。<br>根节点：决策树具有数据结构里面的二叉树、树的全部属性<br>非叶子节点 ：（决策点） 代表测试的条件，数据的属性的测试<br>叶子节点 ：分类后获得分类标记<br>分支： 测试的结果</p>
<h2><span id="shu-xue-wen-ti-shang-gini-xi-shu">数学问题-熵-Gini系数</span><a href="#shu-xue-wen-ti-shang-gini-xi-shu" class="header-anchor">#</a></h2><p>什么是熵：熵的概念源于物理学，用于度量一个热力学系统的无序程度。<br>信息熵：不得不提香农这个大写的人啦！信息论里面的知识。在信息论里面，<font color="red">信息熵衡量信息量的大小，也就是对随机变量不确定度的一个衡量。熵越大，不确定性越大；</font>样本纯度越大越好。<br>对于某个单符号无记忆信源，发出符号($x_i$)的概率是$p_i$,概率越大，符号的信息量就越小，香农公式 $I(x_i)=-log_{p_i}$。信源所含的信息熵就是信息量的期望]<br>$H(x)=-\sum p_i*log_{p_i}$<br>Gini系数： $Gimi(p) = 1-\sum_{k=1}^{K}p_k^2$</p>
<h2><span id="jue-ce-shu-ru-he-gou-jian-de-wen-ti">决策树如何构建的问题</span><a href="#jue-ce-shu-ru-he-gou-jian-de-wen-ti" class="header-anchor">#</a></h2><p>自我提问阶段：</p>
<p><font color="green" size="3">每个节点的位置如何确定？</font><br>特征的选择：每次选入的特征作为分裂的标准，都是使得决策树在这个节点的根据你自己选择的标准（信息熵最小、信息增益最大、gini系数最小）.</p>
<p>选取的标准：尽快能的划分出结果，使得分的结果最好。</p>
<p><font color="green" size="3">每个节点在哪个值上做划分，确定分支结构呢？</font><br>遍历划分的节点的分界值操作来解决这个问题</p>
<p><font color="green" size="3">可以想象，我们构造的决策树足够庞大，决策树可以把每一个样本都分对，那么决策树的泛化能力就可以很差了</font><br>为了解决这个问题，就需要剪枝操作了</p>
<h3><span id="xun-lian-suan-fa">训练算法</span><a href="#xun-lian-suan-fa" class="header-anchor">#</a></h3><h4><span id="ji-yu-xin-xi-shang-de-gou-zao">基于信息熵的构造</span><a href="#ji-yu-xin-xi-shang-de-gou-zao" class="header-anchor">#</a></h4><p>当选择某个特征作为节点时，我们就希望这个特征的使得分类结果信息熵越小越好，那么不确定性越小。<br>计算特征的信息熵公式如下：</p>
<script type="math/tex; mode=display">H(x) = -p_i(x)log^{p_i(x)}
= -\frac{n_j}{S}log^{\frac{n_j}{S}}</script><p>$n_j$: 第j个类别，在样本中出现的频数<br>$S$: 样本个数<br>对于离散属性，直接计算信息熵，连续属性，就需要划分区间，按区间计算信息熵。</p>
<ol>
<li>基于某一层的数据集<br> a. 遍历计算所有属性，遍历相应属性以不同值为分截点的信息熵<br> b. 选择信息熵最小的作为节点<ol>
<li>如果到达终止条件，返回相应信息，否则，按照分支重复步骤1<h4><span id="id3-suan-fa-xin-xi-zeng-yi-zui-da-hua">ID3 算法： 信息增益最大化</span><a href="#id3-suan-fa-xin-xi-zeng-yi-zui-da-hua" class="header-anchor">#</a></h4></li>
</ol>
</li>
</ol>
<p>建立在奥卡姆剃刀的基础上。</p>
<ol>
<li>思想</li>
</ol>
<p>集合C的信息熵</p>
<script type="math/tex; mode=display">H(C)=-\sum_{i=1}^{m}p_i log _2^{p_i}</script><p>按照D组划分C，数据集C的条件熵，</p>
<script type="math/tex; mode=display">H(C/D)=\sum_{i=1}^{v}\frac{|C_i|}{|C|}H(C_i) = \sum_{i=1}^{v}\frac{|C_i|}{|C|}\sum_{j = 1}^{m}\frac{|C_{ik}|}{|C_i|}log_2\frac{|C_{ik}|}{|C_2|}</script><p>信息增益 = 信息熵-条件熵</p>
<script type="math/tex; mode=display">gain(C,D) = gain(C)-H(C/D)</script><p>这里我就以网上给出的数据为例，给出根据信息熵构成决策树的计算过程。</p>
<ol>
<li>确定特征，统计属性值和分解结果，总共四个特征，四种特征的统计结果如下图：<br><img src="/2019/03/03/%E7%AE%97%E6%B3%95%E6%B1%87%E6%80%BB/%E5%86%B3%E7%AD%96%E6%A0%91/2.jpg" alt="图er"></li>
<li>根据历史数据，在不知到任何情况下，计算数据本身的熵为<script type="math/tex; mode=display">- \frac{9}{14}log_2 \frac{9}{14}-\frac{5}{14}log_2\frac{5}{14}=0.940</script></li>
<li><p>计算每个特征做为节点的信息熵<br>以天气为例，天气三种属性，当Outlook = sunny时，H(x) = $-\frac{2}{5}log_2\frac{2}{5}-\frac{3}{5}log_2\frac{3}{5}$; 当Outlook= overcast,$H(x)=0$,当Outlook = rainy ,$H(x) = 0.971$<br>所以，当选天气作为节点时，此时$H(x)=\frac{5}{14}<em>0.971+\frac{4}{14}</em>0+\frac{5}{14}*0.971 = 0.693$,gain(天气) = 0.247<br>同理，可得gain(温度) =0.029  gain(湿度)=0.152，gain(风)=0.048<br>因此选择天气节点，在递归实现其他节点的选择。<br>信息增益的方法偏向选择具有大量值的属性，也就是说某个属性特征索取的不同值越多，那么越有可能作为分裂属性，这样是不合理的；</p>
</li>
<li><p>缺点</p>
<p>没有剪纸策略，容易过拟合</p>
<p>信息增益准则表现出对取值较多的特征，列如编号，生日这种</p>
<p>没有考虑缺失值</p>
</li>
</ol>
<h4><span id="c4-5-xin-xi-zeng-yi-lu">C4.5: 信息增益率</span><a href="#c4-5-xin-xi-zeng-yi-lu" class="header-anchor">#</a></h4><p>C4.5 相对于ID3的缺点改进如下：</p>
<ol>
<li><p>引入了剪纸策略</p>
<p>  对于具有缺失值特征，用没有缺失的样本子集所占比重来折算；   </p>
</li>
<li><p>引入信息增益率作为划分标准</p>
</li>
<li><p>连续特征离散化</p>
</li>
<li><p>缺失值处理。</p>
<p>  以不同概率划分到不同节点中   </p>
</li>
</ol>
<p>如果这里考虑了一列ID,每个ID出现一次，所以算出的信息增益大。<br>$ H(x) = 0$,信息增益最大化了，可以引入信息增益率</p>
<script type="math/tex; mode=display">C(T) = \frac{信息增益}{H(T)}
=\frac{H(C)-H(C/T)}{H(T)}</script><h4><span id="cart-ji-ni-gini-xi-shu">CART:基尼(Gini)系数</span><a href="#cart-ji-ni-gini-xi-shu" class="header-anchor">#</a></h4><script type="math/tex; mode=display">G = 1-\sum_{i=l_k}^{k}p_i^2$$,也是对随机变量不确定性的一个衡量，gini越大，不确定性越大
### 连续属性的处理方法
选取分解点的问题： 分成不同的区间（二分、三分....)，分别计算增益值，然后比较选择。
将需要处理的样本（对应根节点）或样本子集（对应子树）按照连续变量的大小从小到大进行排序
假设该属性对应不同的属性值共N个，那么总共有N-1个可能的候选分割值点，每个候选的分割阈值点的值为上述排序后的属性值中两两前后连续元素的中点。

阙值：threshold

## 评价
评价函数：
$$C(T) = \sum_{releaf} N_t*H(T)</script><p>$ N_t$：每个叶子节点里面含有的样本个数<br>$H(T)$:叶子节点含有的信息熵</p>
<h3><span id="guo-ni-he">过拟合</span><a href="#guo-ni-he" class="header-anchor">#</a></h3><p>如果决策树过于庞大，分支太多，可能造成过拟合。对应训练样本都尽可能的分对，也许样本本身就存在异常点呢？<br>I. 预剪枝：边构建，边剪枝</p>
<ol>
<li>指定深度d</li>
<li>节点的min_sample</li>
<li>节点熵值或者gini值小于阙值<br>熵和基尼值的大小表示数据的复杂程度，当熵或者基尼值过小时，表示数据的纯度比较大，如果熵或者基尼值小于一定程度数，节点停止分裂。</li>
<li>当所有7特征都用完了</li>
<li>指定节点个数<br>当节点的数据量小于一个指定的数量时，不继续分裂。两个原因：一是数据量较少时，再做分裂容易强化噪声数据的作用；二是降低树生长的复杂性。提前结束分裂一定程度上有利于降低过拟合的影响。</li>
</ol>
<p>II. 后剪枝： 构建好后，然后才开始裁剪</p>
<script type="math/tex; mode=display">C_\alpha(T) = C(T)+\alpha|T_{leaf}|</script><p>在构造含一棵树后，选一些节点做计算，看是否需要剪枝。  后剪枝决策树的欠拟合风险很小，泛化性能往往优于预剪枝决策树。但同时其训练时间会大的多   </p>
<h3><span id="shang-bias">熵 bias</span><a href="#shang-bias" class="header-anchor">#</a></h3><p>生日这种属性，把属性分的太多了，分的越细，往往熵越大。</p>
<h2><span id="jue-ce-shu-dan-ge-jie-dian-xuan-ze-de-dai-ma-shi-xian">决策树单个节点选择的代码实现</span><a href="#jue-ce-shu-dan-ge-jie-dian-xuan-ze-de-dai-ma-shi-xian" class="header-anchor">#</a></h2><h3><span id="jian-dan-shi-xian-liao-dan-ge-jie-dian-jue-ce-gou-zao-guo-cheng">简单实现了单个节点决策构造过程</span><a href="#jian-dan-shi-xian-liao-dan-ge-jie-dian-jue-ce-gou-zao-guo-cheng" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split</span>(<span class="params">X,y,d,value</span>):</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">在d纬度上，按照value进行划分</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">    index_a =(X[:,d]&lt;=value)</span><br><span class="line">    index_b =(X[:,d]&gt;value)</span><br><span class="line">    <span class="keyword">return</span> X[index_a],X[index_b],y[index_a],y[index_b]</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> log </span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entropy</span>(<span class="params">y</span>):</span></span><br><span class="line">    counter = Counter(y) <span class="comment"># 字典</span></span><br><span class="line">    res = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> counter.values():</span><br><span class="line">        p = num/len(y)</span><br><span class="line">        res+=-p*log(p)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gain</span>(<span class="params">X,y,d,v</span>):</span></span><br><span class="line">    X_l,X_r,y_l,y_r = split(X,y,d,v)</span><br><span class="line">    e = len(y_l)/len(y)*entropy(y_l)+len(y_r)/len(y)*entropy(y_r)</span><br><span class="line">    <span class="keyword">return</span> (entropy(y)-e)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gainratio</span>(<span class="params">X,y,d,v</span>):</span></span><br><span class="line">    X_l,X_r,y_l,y_r = split(X,y,d,v)</span><br><span class="line">    gain =entropy(y) - len(y_l)/len(y)*entropy(y_l)+len(y_r)/len(y)*entropy(y_r)</span><br><span class="line">    <span class="keyword">return</span> gain/(entropy(y_l)+entropy(y_r))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gini</span>(<span class="params">y</span>):</span></span><br><span class="line">    counter = Counter(y)</span><br><span class="line">    res = <span class="number">1.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> counter.values():</span><br><span class="line">        p = num / len(y)</span><br><span class="line">        res += -p**<span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">    <span class="comment">#X_l,X_r,y_l,y_r = split(X,y,d,v)</span></span><br><span class="line">    <span class="comment">#return 1-(len(y_l)/len(y))**2-(len(y_r)/len(y))**2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">try_split</span>(<span class="params">X,y</span>):</span></span><br><span class="line">    best_entropy = float(<span class="string">'inf'</span>)</span><br><span class="line">    best_d,best_v=<span class="number">-1</span>,<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> range(X.shape[<span class="number">1</span>]):</span><br><span class="line">        sorted_index = np.argsort(X[:,d])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, len(X)):</span><br><span class="line">            <span class="keyword">if</span> (X[sorted_index[i],d] != X[sorted_index[i<span class="number">-1</span>],d]):</span><br><span class="line">                v = (X[sorted_index[i<span class="number">-1</span>],d]+X[sorted_index[i],d])/<span class="number">2</span></span><br><span class="line">                X_l,X_r,y_l,y_r = split(X,y,d,v)</span><br><span class="line">                <span class="comment"># 信息熵</span></span><br><span class="line">                e = entropy(y_l)+entropy(y_r)</span><br><span class="line">                <span class="comment">#gini</span></span><br><span class="line">                e = gini(y_l) + gini(y_r)</span><br><span class="line">                <span class="comment"># 信息增益</span></span><br><span class="line">                e = -gain(X,y,d,v)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> e &lt; best_entropy:</span><br><span class="line">                    best_entropy, best_d,best_v = e,d,v</span><br><span class="line">    <span class="keyword">return</span> best_entropy, best_d, best_v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动来划分</span></span><br><span class="line"></span><br><span class="line">data =np.array([[	<span class="number">0.3</span>	,	<span class="number">5</span>	,	<span class="number">2</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.4</span>	,	<span class="number">6</span>	,	<span class="number">0</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.5</span>	,	<span class="number">6.5</span>	,	<span class="number">1</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">0.6</span>	,	<span class="number">6</span>	,	<span class="number">0</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.7</span>	,	<span class="number">9</span>	,	<span class="number">2</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">0.5</span>	,	<span class="number">7</span>	,	<span class="number">1</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.4</span>	,	<span class="number">6</span>	,	<span class="number">0</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.6</span>	,	<span class="number">8.5</span>	,	<span class="number">0</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">0.3</span>	,	<span class="number">5.5</span>	,	<span class="number">2</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.9</span>	,	<span class="number">10</span>	,	<span class="number">0</span>	,	<span class="number">1</span>	],</span><br><span class="line">[	<span class="number">1</span>	,	<span class="number">12</span>	,	<span class="number">1</span>	,	<span class="number">0</span>	],</span><br><span class="line">[	<span class="number">0.6</span>	,	<span class="number">9</span>	,	<span class="number">1</span>	,	<span class="number">0</span>	],</span><br><span class="line">])</span><br><span class="line">X =data[:,<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">y = data[:,<span class="number">-1</span>]</span><br><span class="line"><span class="comment"># 手动来划分</span></span><br><span class="line">best_entropy, best_d, best_v = try_split(X, y)</span><br><span class="line">print(best_entropy, best_d, best_v)</span><br><span class="line">X1_l, X1_r, y1_l, y1_r = split(X,y,best_d,best_v)</span><br><span class="line">print(X1_l, X1_r, y1_l, y1_r)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">best_entropy2, best_d2, best_v2 = try_split(X1_r, y1_r)</span><br><span class="line">X2_l, X2_r, y2_l, y2_r = split(X1_r,y1_r,best_d2,best_v2)</span><br><span class="line">entropy(y2_l)</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="python-sklean-li-mian-tree-mo-kuai-li-mian-de-decisiontreeclassifier">Python sklean里面tree模块里面的DecisionTreeClassifier</span><a href="#python-sklean-li-mian-tree-mo-kuai-li-mian-de-decisiontreeclassifier" class="header-anchor">#</a></h3><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line">clf =tree.DecisionTreeClassifier(max_depth=<span class="number">1</span>,criterion =<span class="string">'gini'</span>) <span class="comment"># criterion='entropy|gini'</span></span><br><span class="line"></span><br><span class="line">clf = clf.fit(X,y)</span><br></pre></td></tr></tbody></table></figure>
<p>训练好一颗决策树之后，我们可以使用export_graphviz导出器以Graphviz格式导出树。<br></p><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> graphviz </span><br><span class="line">dot_data = tree.export_graphviz(clf, out_file=<span class="literal">None</span>,) </span><br><span class="line">graph = graphviz.Source(dot_data) </span><br><span class="line">graph.render(<span class="string">"data"</span>) </span><br></pre></td></tr></tbody></table></figure><br>在运行时可以出错：<br>ExecutableNotFound: failed to execute [‘dot’, ‘-Tpdf’, ‘-O’, ‘data’], make sure the Graphviz executables are on your systems’ PATH<br>原因：graphviz本身是一个软件，需要额外下载，并将其bin加入环境变量之中。<a href="https://graphviz.gitlab.io/_pages/Download/Download_windows.html">下载</a><p></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>决策树</tag>
      </tags>
  </entry>
  <entry>
    <title>我的读书笔记</title>
    <url>/2019/02/28/SVD/</url>
    <content><![CDATA[<h1><span id="mu-lu">目录 <span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></span><a href="#mu-lu" class="header-anchor">#</a></h1><p><span class="github-emoji"><span>1⃣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="#1">简单说一下特征值、特征向量与特征分解</a><br>&nbsp;&nbsp; I. <a href="#1.1">特征值、特征向量与特征分解</a><br>&nbsp;&nbsp; II. <a href="#1.2">几何意义</a><br>&nbsp;&nbsp; III.  <a href="#1.3">如何实现通过Matlab、Python实现</a><br><span class="github-emoji"><span>2⃣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="#2">详细解说SVD</a><br>&nbsp;&nbsp; I. <a href="#2.1">几何意义</a><br>&nbsp;&nbsp; I. <a href="#2.2">奇异值分解的推导过程</a><br>&nbsp;&nbsp; I. <a href="#2.3">SVD算例</a><br>&nbsp;&nbsp; I. <a href="#2.4">如何通过Matlab和Python</a><br><span class="github-emoji"><span>3⃣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/0033-20e3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="#3">应用举例</a><br>&nbsp;&nbsp; I. <a href="#3.1">特征值、特征向量与特征分解</a><br><span class="github-emoji"><span>4⃣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/0034-20e3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="#4">特征分解、奇异值分解的区别</a><br>&nbsp;&nbsp; I. <a href="#4">特征分解、奇异值分解的区别</a></p>
<h1><span id="jian-dan-shuo-yi-xia-te-zheng-zhi-te-zheng-xiang-liang-yu-te-zheng-fen-jie"><font id="1" color="blue"> 简单说一下特征值、特征向量与特征分解</font></span><a href="#jian-dan-shuo-yi-xia-te-zheng-zhi-te-zheng-xiang-liang-yu-te-zheng-fen-jie" class="header-anchor">#</a></h1><a id="more"></a>
<h2><span id="te-zheng-zhi-te-zheng-xiang-liang-yu-te-zheng-fen-jie"><font id="1.1">特征值、特征向量与特征分解</font></span><a href="#te-zheng-zhi-te-zheng-xiang-liang-yu-te-zheng-fen-jie" class="header-anchor">#</a></h2><p><font color="red">Theory:</font><br>对于一个正阵$M$，满足如下：</p>
<script type="math/tex; mode=display">Mx=\lambda x</script><p>其中$\lambda$被成为特征值，满足$||M-\lambda E||=0$再有$(M-\lambda E)x=0$，可计算其特征向量。<br>如果有了特征值和特征向量后呢，则可以将矩阵$M$用特征分解：</p>
<script type="math/tex; mode=display">M=W\sum W^{-1}</script><p>$W={w_1,w_2,…,w_n}$分别是特征值$\lambda_1,\lambda_2,…,\lambda_n$对应的特征向量构成的方阵</p>
<h2><span id="ji-he-yi-yi"><font id="1.2"> 几何意义 </font></span><a href="#ji-he-yi-yi" class="header-anchor">#</a></h2><p>对应矩阵M,其对应的线性变化</p>
<script type="math/tex; mode=display">Mx = x'</script><p>上面这个式子，$Mx，x’$是一个向量，$x,x’$可能是不共线的(如图(b))，如果向量$Mx,x’$满足$Mx=x’=\lambda x$,则如图(b)，这说明了这个变换就是对向量x做一个拉伸或者压缩。<br><img src="/2019/02/28/SVD/SVD1.png" alt="图一"></p>
<h2><span id="ru-he-shi-xian-tong-guo-matlab-python-shi-xian"><font id="1.2">如何实现通过Matlab、Python实现</font></span><a href="#ru-he-shi-xian-tong-guo-matlab-python-shi-xian" class="header-anchor">#</a></h2><p>数学推导：</p>
<script type="math/tex; mode=display">Mx = \lambda x</script><script type="math/tex; mode=display">Mx-\lambda x=(M-\lambda E)x=0</script><p>齐次线性方程组有非零解，则$||M-\lambda E||=0$可求得特征向量<br>再带回，可得特征向量。<br>Matlab:<br></p><figure class="highlight matlab"><table><tbody><tr><td class="code"><pre><span class="line">d = eig(M) <span class="comment">% 求取矩阵M的特征值，向量形式存储</span></span><br><span class="line">[V,D] = eig(M) <span class="comment">% 计算M的特征值对角阵D和特征向量V，使得MV = VD成立</span></span><br><span class="line">[V,D] = eig(M,<span class="string">'nobalance'</span>)   <span class="comment">%当矩阵M中有与截断误差数量级相差不远的值时，该指令可能更精确。'nobalance'起误差调节作用</span></span><br></pre></td></tr></tbody></table></figure><br>Python<br>numpy科学计算库提供相应的方法<br><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.diag((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)) <span class="comment"># 这是你想要求取特征值的数组</span></span><br><span class="line">a,b = numpy.linalg.elg(x) <span class="comment"># 特征值赋值给a,对应的特征向量赋值给b</span></span><br></pre></td></tr></tbody></table></figure><p></p>
<h1><span id="xiang-xi-jie-shuo-svd"><font id="2" color="blue">详细解说SVD</font></span><a href="#xiang-xi-jie-shuo-svd" class="header-anchor">#</a></h1><p>SVD的英文全称： Singular Value Decomposition，中文名字：奇异值分解</p>
<h2><span id="ji-he-yi-yi"><font id="2.1">几何意义</font></span><a href="#ji-he-yi-yi" class="header-anchor">#</a></h2><p><a href="http://www.ams.org/publicoutreach/feature-column/fcarc-svd">图来源</a><br>以二维空间为例<br><img src="/2019/02/28/SVD/SVD3.png" alt="图二"><img src="/2019/02/28/SVD/SVD4.png" alt="图二"><br>几何意义就是把一个单位正交的网格，转换为另外一个单位正交的网格</p>
<p>假如选取了一组单位正交基{$\vec{v}_1$,$\vec{v}_2$},刚好矩阵$M$的线性变化$M\vec{v}_1 $,$M\vec{v}_2 $ 也正交，用$\vec{u}_1,\vec{u}_2 $分别表示$M\vec{v}_1 $,$M\vec{v}_2 $ 的单位向量，用$\lambda_1,\lambda_2 $表示$M\vec{v}_1 $,$M\vec{v}_2$的长度，描述网格在这些特定方向上的拉伸量，也被称作矩阵M的奇异值。<br>$M\vec{v}_1 =\lambda_1\vec{u}_1 $<br>$M\vec{v}_2 =\lambda_2\vec{u}_2 $<br>对任意给定的向量 $\vec{x}$ ,则有</p>
<script type="math/tex; mode=display">
\mathbf{x}=\left(\mathbf{v}_{1} \cdot \mathbf{x}\right) \mathbf{v}_{1}+\left(\mathbf{v}_{2} \cdot \mathbf{x}\right) \mathbf{v}_{2}</script><p> 再将M的线性变换</p>
<script type="math/tex; mode=display">
\begin{aligned} M \mathbf{x} &=\left(\mathbf{v}_{1} \cdot \mathbf{x}\right) M \mathbf{N}_{1}+\left(\mathbf{v}_{2} \cdot \mathbf{x}\right) M \mathbf{v}_{2} \\ M \mathbf{x} &=\left(\mathbf{v}_{1} \cdot \mathbf{x}\right) \sigma_{1} \mathbf{u}_{1}+\left(\mathbf{v}_{2} \cdot \mathbf{x}\right) \sigma_{2} \mathbf{u}_{2} \end{aligned}</script><script type="math/tex; mode=display">
\begin{array}{c}{M \mathbf{x}=\mathbf{u}_{1} \sigma_{1} \mathbf{v}_{1}^{\top} \mathbf{x}+\mathbf{u}_{2} \sigma_{2} \mathbf{v}_{2}^{\top} \mathbf{x}} \\ {M=\mathbf{u}_{1} \sigma_{1} \mathbf{v}_{1}^{\top}+\mathbf{u}_{2} \sigma_{2} \mathbf{v}_{2}^{\top}}\end{array}</script><p> so</p>
<script type="math/tex; mode=display">
M=U \Sigma V^{T}</script><h2><span id="qi-yi-zhi-fen-jie-de-tui-dao-guo-cheng"><font id="2.2">奇异值分解的推导过程</font></span><a href="#qi-yi-zhi-fen-jie-de-tui-dao-guo-cheng" class="header-anchor">#</a></h2><p>$u=(u_1,u_2,…,u_m)$<br>$v=(v_1,v_2,…,v_n)$<br>$u,v$都是空间的基,是正交矩阵 $u^Tu=E,v^Tv = E$<br><img src="/2019/02/28/SVD/SVD2.png" alt="图二"><br>任何一个矩阵$M_{m*n}$，$rank(M)=k$，一定存在ＳＶＤ,换句话说，M可以将一组单位正交基映射到另一组单位正交基。答案是肯定的<br>证明如下：<br>在n为空间中，有一组单位正交基{$\vec{v}_1,\vec{v}_2,…,\vec{v}_n$},线性变化作用以后</p>
<script type="math/tex; mode=display">
{M\vec{v}_1,M\vec{v}_2,...,M\vec{v}_n}</script><p>也是正交的，则有</p>
<script type="math/tex; mode=display">
(M\vec{v}_i,M\vec{v}_j) = (M\vec{x}_i)^TM\vec{v}_j=\vec{v}_i^TM^TM\vec{v}_j=0</script><p>注意喔，$M^TM$是矩阵喔，则会有$M^TM\vec{v}_j=\lambda \vec{v}_j$<br>接下去，</p>
<script type="math/tex; mode=display">
\begin{aligned} v_{i}^{T} M^{T} \mathrm{M} v_{j}=& v_{i}^{T} \lambda_{j} v_{j} \\ &=\lambda_{j} v_{i}^{T} v_{j} \\ &=\lambda_{j} v_{i}\dot v_{j}=0 \end{aligned}</script><p> 上述就证明了是有的：任何一个矩阵，都可以将一组单位正交基转换成另外一组正交基。<br> 当$i=j$,$<m\vec{v}_i,m \vec{v}_i>=\lambda_i \vec{v}_i \vec{v}_i=\lambda_i$<br> 进行一些单位化，记$u_i=\frac{A\vec{v}_i}{|M\vec{v}_i|}=\frac{1}{\sqrt{\lambda_i}}M\vec{v}_i$<br>则</m\vec{v}_i,m></p>
<script type="math/tex; mode=display">
A v_{i}=\sigma_{i} u_{i}, \sigma_{i}(\operatorname{奇异值})=\sqrt{\lambda_{i}}, 0 \leq i \leq \mathrm{k}, \mathrm{k}=\operatorname{Rank}(\mathrm{A})</script><p> 当$k &lt; i &lt;= m$时，对$u1，u2，…，uk$进行扩展$u(k+1),…,um$，使得$u1，u2，…，um$为$m$维空间中的一组正交基.也可对$\vec{v}_1,\vec{v}_2,…,\vec{v}_k$进行扩展，扩展的$\vec{v}_{k+1},…,\vec{v}_{n}$存在零子空间里面。</p>
<script type="math/tex; mode=display">
M\left[ \begin{array}{lll}{\vec{v}_{1}} & {\cdots} & {\vec{v}_{k}}\end{array}\right| \vec{v}_{k+1} \quad \cdots \quad \vec{v}_{m} ]=
\left[ \begin{array}{c}{\vec{u}_{1}^{T}} \\ {\vdots} \\ {\frac{\vec{u}_{k}^{T}}{\vec{u}_{k+1}}} \\ {\vdots} \\ {\vec{u}_{n}^{T}}\end{array}\right] \left[ \begin{array}{ccc|c}\sigma_{1} &   & 0 & 0\\  & {\ddots} & \sigma_{k} & 0 \\ \hline 0 &  & 0 &0\end{array}\right]</script><script type="math/tex; mode=display">
M=\left[ \begin{array}{lll}{\vec{u}_{1}} & {\cdots} & {\vec{u}_{k}}\end{array}\right] \left
[ \begin{array}{ccc}\sigma_{1} &  & \\  & {\ddots} & \\  &  & {\sigma_{k}}\end{array}\right] 
\left[ \begin{array}{c}{\vec{v}_{1}^{T}} \\ {\vdots} \\ {\vec{v}_{k}^{T}}\end{array}\right]+
\left[ \begin{array}{ccc}{\vec{u}_{k+1}} & {\cdots} & {\vec{u}_{m}}\end{array}\right] 
\left[\begin{array}{c} 0 \end{array} \right] 
\left[ \begin{array}{c}{\vec{v}_{k+1}^{T}} \\ {\vdots} \\ {\vec{v}_{n}^{T}}\end{array}\right]</script><h2><span id="svd-suan-li"><font id="2.3">SVD算例</font></span><a href="#svd-suan-li" class="header-anchor">#</a></h2><p>U：$AA^T$的特征值和特征向量，用单位化的特征向量构成 U<br>V: $A^TA$ 的特征值和特征向量，用单位化的特征向量构成 V<br>$\sum_{mn} $ :将$ AA^{T} $或者 A^{T}A 的特征值求平方根，然后构成 Σ<br>以矩阵$A = \left[\begin{matrix} 1 &amp; 1\\1 &amp;1\\ 0 &amp;0\\\end{matrix} \right]$<br>第一步 U ，下面是一种计算方法<br>对矩阵</p>
<script type="math/tex; mode=display">
A A^{T}=\left[ \begin{array}{lll}{2} & {2} & {0} \\ {2} & {2} & {0} \\ {0} & {0} & {0}\end{array}\right]</script><p> 特征分解，<br> 特征是4，0，0<br> 特征向量是<br> $\left[\frac{1}{\sqrt{2}}, \frac{1}{\sqrt{2}}, 0\right]^{T},\left[-\frac{1}{\sqrt{2}}, \frac{1}{\sqrt{2}}, 0\right]^{T},[0,0,1]^{T}$,可得到</p>
<script type="math/tex; mode=display">
U=\left[ \begin{array}{ccc}{\frac{1}{\sqrt{2}}} & {-\frac{1}{\sqrt{2}}} & {0} \\ {\frac{1}{\sqrt{2}}} & {\frac{1}{\sqrt{2}}} & {0} \\ {0} & {0} & {1}\end{array}\right]</script><p> 第二步<br> 计算矩阵$A^TA$的特征分解，可得<br> 特征值4，0，</p>
<script type="math/tex; mode=display">
V=\left[ \begin{array}{cc}{\frac{1}{\sqrt{2}}} & {-\frac{1}{\sqrt{2}}} \\ {\frac{1}{\sqrt{2}}} & {\frac{1}{\sqrt{2}}}\end{array}\right]</script><p>第三步<br>计算$\sum_{mn}$</p>
<script type="math/tex; mode=display">
\Sigma=\left[ \begin{array}{ll}{2} & {0} \\ {0} & {0} \\ {0} & {0}\end{array}\right]</script><p> 最后，</p>
<script type="math/tex; mode=display">
A=U \Sigma V^{T}=\left[ \begin{array}{ccc}{\frac{1}{\sqrt{2}}} & {-\frac{1}{\sqrt{2}}} & {0} \\ {\frac{1}{\sqrt{2}}} & {\frac{1}{\sqrt{2}}} & {0} \\ {0} & {0} & {1}\end{array}\right] \left[ \begin{array}{ll}{2} & {0} \\ {0} & {0} \\ {0} & {0}\end{array}\right] \left[ \begin{array}{cc}{\frac{1}{\sqrt{2}}} & {-\frac{1}{\sqrt{2}}} \\ {\frac{1}{\sqrt{2}}} & {\frac{1}{\sqrt{2}}}\end{array}\right]^{T}=\left[ \begin{array}{cc}{1} & {1} \\ {1} & {1} \\ {0} & {0}\end{array}\right]</script><h2><span id="ru-he-tong-guo-matlab-he-python"><font id="2.4">如何通过Matlab和Python</font></span><a href="#ru-he-tong-guo-matlab-he-python" class="header-anchor">#</a></h2><p>Matlab：<br></p><figure class="highlight matlab"><table><tbody><tr><td class="code"><pre><span class="line">s = svd(A)</span><br><span class="line">[U,S,V] = svd(A)</span><br><span class="line">[U,S,V] = svd(A,<span class="string">'econ'</span>)</span><br><span class="line">[U,S,V] = svd(A,<span class="number">0</span>)</span><br><span class="line">input: A 矩阵</span><br><span class="line">output:</span><br><span class="line">        s:奇异值，以列向量形式返回。奇异值是以降序顺序列出的非负实数</span><br><span class="line">        S：</span><br><span class="line">        U:左奇异向量，以矩阵的列形式返回。</span><br><span class="line">        V:奇异值，以对角矩阵形式返回。S 的对角元素是以降序排列的非负奇异值。</span><br><span class="line">        右奇异向量，以矩阵的列形式返回。</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><br>Python<br><figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">M = np.array([ [<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]])</span><br><span class="line">U,S,V  = np.linalg.svd(M)</span><br></pre></td></tr></tbody></table></figure><p></p>
<h1><span id="ying-yong-ju-li"><font id="3" color="blue">应用举例</font></span><a href="#ying-yong-ju-li" class="header-anchor">#</a></h1><h2><span id="ying-yong"><font id="3.1">应用</font></span><a href="#ying-yong" class="header-anchor">#</a></h2><p> 2.1 信息检索<br> 2.2 推荐系统<br> 2.3 基于协同过滤的推荐系统<br> 2.4 图像压缩</p>
<h1><span id="te-zheng-zhi-fen-jie-he-qi-yi-zhi-fen-jie-de-qu-bie"><font id="4" color="blue">特征值分解和奇异值分解的区别</font></span><a href="#te-zheng-zhi-fen-jie-he-qi-yi-zhi-fen-jie-de-qu-bie" class="header-anchor">#</a></h1><ol>
<li>特征值分解只能是方阵，而奇异值分解是矩阵就可以</li>
<li>特征值分解只考虑了对矩阵缩放效果，奇异值分解对矩阵有选择、收缩、投影的效果<br><img src="/2019/02/28/SVD/SVD5.png" alt="图二"><img src="/2019/02/28/SVD/SVD6.png" alt="图二"><img src="/2019/02/28/SVD/SVD7.png" alt="图二"></li>
</ol>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>SVD</tag>
      </tags>
  </entry>
  <entry>
    <title>python库</title>
    <url>/2019/02/24/python%E5%BA%93/</url>
    <content><![CDATA[<p>开始接触Python是大二结束的时候，到现在都快两年了，其实一直并不是很细节的学习，只是希望能够跑个结果。不过呢？，以后肯定是会经常用Python，所以呢？我接下来会认真学习Python</p>
<a id="more"></a>
<h1><span id="python-gao-ji-yong-fa-zong-jie">Python 高级用法总结</span><a href="#python-gao-ji-yong-fa-zong-jie" class="header-anchor">#</a></h1><p>基本数据类型：整型、浮点型、布尔类型</p>
<h3><span id="rong-qi-containers">容器： Containers</span><a href="#rong-qi-containers" class="header-anchor">#</a></h3><p>容器是一种把多个元素组织在一起的数据结构，容器中的元素可以逐个地迭代获取，可以用in, not in关键字判断元素是否包含在容器中。通常这类数据结构把所有的元素存储在内存中（也有一些特例，并不是所有的元素都放在内存，比如迭代器和生成器对象）在Python中，常见的容器对象有：<br>list, deque<br>set, frozensets<br>dict, defaultdict, OrderedDict, Counter<br>tuple, namedtuple<br>str</p>
<h2><span id="list-tui-dao-list-comprehensions">list推导（list comprehensions)</span><a href="#list-tui-dao-list-comprehensions" class="header-anchor">#</a></h2><p>官方解释：列表解析式是Python内置的非常<strong>简单</strong>却<strong>强大</strong>的可以用来创建list的生成式。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">对于一个列表，既要遍历索引又要遍历元素。</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight py"><table><tbody><tr><td class="code"><pre><span class="line">array = [<span class="string">'I'</span>, <span class="string">'love'</span>, <span class="string">'Python'</span>]</span><br><span class="line"><span class="keyword">for</span> i, element <span class="keyword">in</span> enumerate(array):</span><br><span class="line">    array[i] = <span class="string">'%d: %s'</span> % (i, seq[i])</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight py"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getitem</span>(<span class="params">index, element</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'%d: %s'</span> % (index, element)</span><br><span class="line"></span><br><span class="line">array = [<span class="string">'I'</span>, <span class="string">'love'</span>, <span class="string">'Python'</span>]</span><br><span class="line">arrayIndex = [getitem(index, element) <span class="keyword">for</span> index, element <span class="keyword">in</span> enumerate(array)]</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="die-dai-qi-he-sheng-cheng-qi">迭代器和生成器</span><a href="#die-dai-qi-he-sheng-cheng-qi" class="header-anchor">#</a></h2><h3><span id="ke-die-dai-dui-xiang">可迭代对象：</span><a href="#ke-die-dai-dui-xiang" class="header-anchor">#</a></h3><p>凡是可以返回一个迭代器的对象都可称之为可迭代对象<br>例如：list    dic    str     set     tuple     range()     enumerate(枚举)     f=open()（文件句柄）<br></p><figure class="highlight py"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">### 迭代器(iterator)</span></span><br><span class="line">是一个带状态的对象，他能在你调用next()方法的时候返回容器中的下一个值，任何实现了__iter__和__next__()（python2中实现next()）方法的对象都是迭代器，__iter__返回迭代器自身，__next__返回容器中的下一个值，如果容器中没有更多元素了，则抛出StopIteration异常</span><br><span class="line"><span class="comment">### 生成器(generator)</span></span><br><span class="line">生成器其实是一种特殊的迭代器，不过这种迭代器更加优雅。它不需要再像上面的类一样写__iter__()和__next__()方法了，只需要一个yiled关键字。 生成器一定是迭代器（反之不成立）</span><br><span class="line"><span class="comment">#列表生成式</span></span><br><span class="line">lis = [x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"><span class="comment"># 受到内存限制，列表容量肯定是有限的</span></span><br><span class="line"><span class="comment">#生成器表达式</span></span><br><span class="line">generator_ex = (x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>))</span><br></pre></td></tr></tbody></table></figure><br>生成器： 不用创建完整的list，为节省大量的空间，在Python中，这种一边循环一边计算的机制，称为生成器：generator<br>Tuples:()<br> 字典：{：，}<br> Sets: {,}<br>函数<br>类<p></p>
<h1><span id="python-ku-numpy">Python库——numpy</span><a href="#python-ku-numpy" class="header-anchor">#</a></h1><h3><span id="what">What</span><a href="#what" class="header-anchor">#</a></h3><p>NumPy=Numerical+Python<br>主要是提供了高性能多维数组这个对象，以及处理相关的方法</p>
<h3><span id="how">How</span><a href="#how" class="header-anchor">#</a></h3><ol>
<li>自定义一个（1D or MD)数组或者特殊的数组,一维，二维</li>
<li>数组切片（也就是提取数组元素），注意 a[:,0]和a[:,0:1]是不同的喔</li>
<li>关于数组属性的方法</li>
<li>数组运算</li>
<li>索引<br> where 函数<br> 索引的布尔数组</li>
<li>广播（Broadcasting）<br>用于处理不同性状的 数组。 Broadcasting提供了一种矢量化数组操作的方法，使得循环发生在C而不是Python。标量乘以一个矢量的时候，用Boradcasting更快，因为 broadcasting在乘法期间移动较少的内存</li>
<li>array 和 matrix 选择哪个?<br> <a href="https://www.numpy.org.cn/user_guide/numpy_for_matlab_users.html">戳我</a></li>
<li>矢量化和广播、索引<br>在Python中循环数组或任何数据结构时，会涉及很多开销。 NumPy中的向量化操作将内部循环委托给高度优化的C和Fortran函数，从而实现更清晰，更快速的Python代码。<h2><span id="stack-vstack-hstack">stack|vstack|hstack</span><a href="#stack-vstack-hstack" class="header-anchor">#</a></h2></li>
</ol>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">b = np.array([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">np.stack((a, b))</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"></span><br><span class="line">% hstack</span><br><span class="line">a = np.array((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">b = np.array((<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>))</span><br><span class="line">np.hstack((a,b))</span><br><span class="line">array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">a = np.array([[<span class="number">1</span>],[<span class="number">2</span>],[<span class="number">3</span>]])</span><br><span class="line">b = np.array([[<span class="number">2</span>],[<span class="number">3</span>],[<span class="number">4</span>]])</span><br><span class="line">np.hstack((a,b))</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">% vstack</span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">b = np.array([<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line">np.vstack((a,b))</span><br><span class="line">array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>],</span><br><span class="line">       [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">a = np.array([[<span class="number">1</span>], [<span class="number">2</span>], [<span class="number">3</span>]])</span><br><span class="line">b = np.array([[<span class="number">2</span>], [<span class="number">3</span>], [<span class="number">4</span>]])</span><br><span class="line">np.vstack((a,b))</span><br><span class="line">array([[<span class="number">1</span>],</span><br><span class="line">       [<span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>],</span><br><span class="line">       [<span class="number">2</span>],</span><br><span class="line">       [<span class="number">3</span>],</span><br><span class="line">       [<span class="number">4</span>]])</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="mean">mean</span><a href="#mean" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">a = np.array([[1, 2], [3, 4]])</span><br><span class="line">np.mean(a)</span><br><span class="line"></span><br><span class="line">np.mean(a, axis=0)</span><br><span class="line"></span><br><span class="line">np.mean(a, axis=1)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="reshape">reshape</span><a href="#reshape" class="header-anchor">#</a></h2><p>reshape(x, y)，其中x表示转换后数组的行数，y表示转换后数组的列数。当x或者y为-1时，表示该元素随机分配，如reshape(2, -1)表示列数随机，行数为两行。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">格式：np.reshape((x, y, z))</span><br><span class="line"></span><br><span class="line">参数的含义：</span><br><span class="line"></span><br><span class="line">x：表示生成的三维数组中二维数组的个数</span><br><span class="line"></span><br><span class="line">y：表示单个二维数组中一维数组的个数</span><br><span class="line"></span><br><span class="line">z：表示三维数组的列数</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="numpy-shu-zu-qu-diao-rong-yu-de-wei-du-squeeze-han-shu">numpy数组去掉冗余的维度——-squeeze()函数</span><a href="#numpy-shu-zu-qu-diao-rong-yu-de-wei-du-squeeze-han-shu" class="header-anchor">#</a></h2><p>import numpy as np a = [[[10, 2, 3]]] a = np.array(a) a_sque = np.squeeze(a) print(a) print(a_sque)</p>
<h1><span id="python-ku-pandas">Python库——pandas</span><a href="#python-ku-pandas" class="header-anchor">#</a></h1><p>记得学习pandas是在大三时候的美赛，花了一天多时间学习pandas，然后预处理数据，当时三个队友都是各自的家，是非常愉快的！！！</p>
<h3><span id="what">what</span><a href="#what" class="header-anchor">#</a></h3><p>Python Data Analysis Library</p>
<ol>
<li>三种数据结构<br>序列： Series 1D<br>数据帧： DataFrame 2D<br>面板： Panel &gt;2D</li>
<li>自定义创建<ol>
<li>可以通过字段、数据、series、列表</li>
<li>列表传入的时候，主要行列，如果单个列表：列；如果是[[],[]]是按行[]</li>
<li>如果位置不对可转置</li>
<li>创建空 pd.DataFrame()</li>
</ol>
</li>
<li>选择区块<br> a) Series<br> []<br> b) DataFrame<br> 列选择 [‘colums的名字’]<br> 行列选择：.loc[列名,行名]名称 .iloc[列索引,行索引]整数</li>
<li>array<br>.value</li>
<li>统计描述<br> .descibe(include = ‘all’) .head() .tail()<br> .select_dtype(include=[])<br> .columns<br> .dtype</li>
<li><p>缺少数据</p>
<ol>
<li>查看缺失值<br>isnull() notnull() 也可以 做一些统计，sum, any,all </li>
<li>清理缺失值<br> dropna(axis=0)：axis = 0:index axis=1,columns</li>
<li>填充缺少指<br> fillna() 标量替换</li>
<li>替换</li>
</ol>
</li>
<li><p>统计函数</p>
</li>
</ol>
<ol>
<li><p>Pandas 函数应用<br>表合理函数应用：pipe()<br>行或列函数应用：apply()<br>元素函数应用：applymap()<br>eg： pd.pipe(lambda x: x*100)</p>
</li>
<li><p>类别变量向量化<br>非数值类型的处理方法</p>
</li>
<li><p>时间序列生成 data_range</p>
<ol>
<li>pandas.date_range(“11:00”, “21:30”, freq=”30min”)</li>
<li>参数<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line">Return a fixed frequency DatetimeIndex.</span><br></pre></td></tr></tbody></table></figure>
</li>
</ol>
</li>
</ol>
<p>Parameters<br>startstr or datetime-like, optional<br>Left bound for generating dates.</p>
<p>endstr or datetime-like, optional<br>Right bound for generating dates.</p>
<p>periodsint, optional<br>Number of periods to generate.</p>
<p>freqstr or DateOffset, default ‘D’<br>Frequency strings can have multiples, e.g. ‘5H’. See here for a list of frequency aliases.</p>
<p>tzstr or tzinfo, optional<br>Time zone name for returning localized DatetimeIndex, for example ‘Asia/Hong_Kong’. By default, the resulting DatetimeIndex is timezone-naive.</p>
<p>normalizebool, default False<br>Normalize start/end dates to midnight before generating date range.</p>
<p>namestr, default None<br>Name of the resulting DatetimeIndex.</p>
<p>closed{None, ‘left’, ‘right’}, optional<br>Make the interval closed with respect to the given frequency to the ‘left’, ‘right’, or both sides (None, the default).</p>
<p>**kwargs<br>For compatibility. Has no effect on the result.</p>
<p>Returns<br>rngDatetimeIndex<br></p><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">11. DataFrame.stack</span><br><span class="line">Parameters</span><br><span class="line">levelint, str, list, default -1</span><br><span class="line">Level(s) to stack from the column axis onto the index axis, defined as one index or label, or a list of indices or labels.</span><br><span class="line"></span><br><span class="line">dropnabool, default True</span><br><span class="line">Whether to drop rows in the resulting Frame/Series with missing values. Stacking a column level onto the index axis can create combinations of index and column values that are missing from the original dataframe. See Examples section.</span><br><span class="line"></span><br><span class="line">Returns</span><br><span class="line">DataFrame or Series</span><br><span class="line">Stacked dataframe or series.</span><br><span class="line">​```python</span><br><span class="line">df_single_level_cols</span><br><span class="line">     weight height</span><br><span class="line">cat       0      1</span><br><span class="line">dog       2      3</span><br><span class="line">df_single_level_cols.stack()</span><br><span class="line">cat  weight    0</span><br><span class="line">     height    1</span><br><span class="line">dog  weight    2</span><br><span class="line">     height    </span><br></pre></td></tr></tbody></table></figure><br>DataFrame.value_connts()返回序列，index=统计值，值：统计个数<p></p>
<h2><span id="matplotlib">Matplotlib</span><a href="#matplotlib" class="header-anchor">#</a></h2><p>matplotlib.pyplot as plt</p>
<ol>
<li>窗口：figure: 一个窗口，plt.figure(num=,figsize=(h,w))下面数据都属于当前的figure,有一定的顺序喔</li>
<li>画图：plt.plot(x,y,color=,linewidth=,linestyle,label=)</li>
<li>标注信息： plt.xlim((,)), plt.yxlim((,)),plt.xlabel(),plt.ylabel(),ticks:图像的小标，plt.xticks(),plt.yticks([值1，值2],[r’$值1\ 对应的文字$’,r’值2的文字 \alpha])</li>
<li>坐标轴：axis gac=’get current axis’<br>ax = plt.gca() # 轴<br># 获取四个轴<br>ax.spines[‘right|left|top|’].set_color(‘none’)<br>ax.xaxis.set_ticks_position(‘bottom’)<br>ax.spines[‘bottom’].set_position((‘data’,-1))</li>
<li>图例：legend:<br> a. plt.plot(,label=), plt.legend()<br> b. l1, = plt.plot() plt.legend(handles=[l1,],labels=[,],loc=’best|upper right|’)</li>
<li>注解 annotation<br>a. 点的位置(x0，y0) plt.scatter(). plt.plot([x0,y0],[y0,0],’k—‘,lw=)<br>b . method 1:<br>plt.annotate(r’name’,xy=(,)起始点，xycoords=’data’//基于xy,xytext=(+30,30),textcoords=’offseet points’//文本基于xy,arrowprops=dict(arrowstyle=’-&gt;’箭头,connectionstyle=’arc3,rad=.2’)弧度)</li>
<li>Bar 柱状图<br>plt.bar(x,+|-y,facecolor=””,edgecolor,)<br>|# ha horizontal alignment 对齐方式<br>for x,y in zip(x,y):<br> plt.text(x+0,4,y+0.05,’%.2f’%y,ha=’center’,va=’bottom’)</li>
<li>很多自动 subplot(总行，当前行的列，总的按最小分的第几个)<br>subplot(,,)<h2><span id="index">index</span><a href="#index" class="header-anchor">#</a></h2></li>
</ol>
<p>reset_index:限于DataFrame</p>
<p>set_index</p>
<p>index</p>
<h1><span id="scikit-learn">scikit-learn</span><a href="#scikit-learn" class="header-anchor">#</a></h1><p>官方教程绝对是最好最棒的选择，有简单数学推导、直观立马就能上手的案例，还能提阅读英文的能力喔，实在是一举多得啊！！！！ <a href="https://scikit-learn.org/">scikit-learn.org</a></p>
<h2><span id="regression">regression</span><a href="#regression" class="header-anchor">#</a></h2><h2><span id="feature-selection">Feature selection</span><a href="#feature-selection" class="header-anchor">#</a></h2><h3><span id="method-from-sklearn-feature-selection-import-variancethreshold">Method from sklearn.feature_selection import VarianceThreshold</span><a href="#method-from-sklearn-feature-selection-import-variancethreshold" class="header-anchor">#</a></h3><h3><span id="sklearn-feature-selection-selectfrommodel">sklearn.feature_selection.SelectFromModel</span><a href="#sklearn-feature-selection-selectfrommodel" class="header-anchor">#</a></h3><p><em>class</em> sklearn.feature_selection.SelectFromModel(<em>estimator</em>, , <em>threshold=None</em>, <em>prefit=False</em>, <em>norm_order=1</em>, <em>max_features=None</em>)</p>
<h1><span id> </span><a href="#" class="header-anchor">#</a></h1><h1><span id="seaborn">seaborn</span><a href="#seaborn" class="header-anchor">#</a></h1><p>seaborn.jointplot(x, y, data=None, kind=’scatter’, stat_func=None, color=None, height=6, ratio=5, space=0.2, dropna=True, xlim=None, ylim=None, joint_kws=None, marginal_kws=None, annot_kws=None, **kwargs)</p>
<ul>
<li><p>Parameters</p>
<p><strong>x, y</strong>strings or vectorsData or names of variables in <code>data</code>.<strong>data</strong>DataFrame, optionalDataFrame when <code>x</code> and <code>y</code> are variable names.<strong>kind</strong>{ “scatter” | “reg” | “resid” | “kde” | “hex” }, optionalKind of plot to draw.<strong>stat_func</strong>callable or None, optional<em>Deprecated**</em>color<strong>matplotlib color, optionalColor used for the plot elements.</strong>height<strong>numeric, optionalSize of the figure (it will be square).</strong>ratio<strong>numeric, optionalRatio of joint axes height to marginal axes height.</strong>space<strong>numeric, optionalSpace between the joint and marginal axes</strong>dropna<strong>bool, optionalIf True, remove observations that are missing from <code>x</code> and <code>y</code>.</strong>{x, y}lim<strong>two-tuples, optionalAxis limits to set before plotting.</strong>{joint, marginal, annot}_kws<strong>dicts, optionalAdditional keyword arguments for the plot components.</strong>kwargs**key, value pairingsAdditional keyword arguments are passed to the function used to draw the plot on the joint Axes, superseding items in the <code>joint_kws</code> dictionary.</p>
</li>
<li><p>Returns</p>
<p><strong>grid</strong><a href="https://seaborn.pydata.org/generated/seaborn.JointGrid.html#seaborn.JointGrid"><code>JointGrid</code></a><a href="https://seaborn.pydata.org/generated/seaborn.JointGrid.html#seaborn.JointGrid"><code>JointGrid</code></a> object with the plot on it.</p>
</li>
</ul>
<p><a href="http://seaborn.pydata.org/generated/seaborn.JointGrid.html#seaborn.JointGrid">http://seaborn.pydata.org/generated/seaborn.JointGrid.html#seaborn.JointGrid</a></p>
<p>g = sns.jointplot(x=”x”, y=”y”, kind = ‘reg’ , space=0,color = ‘g’, data=df11,stat_func=sci.pearsonr)</p>
<p>sns.set()</p>
<p>sns.axes_style(“darkgrid”)</p>
<p>sns.set_context(“paper”)</p>
<p><a href="https://blog.mazhangjing.com/2018/03/29/learn_seaborn/">https://blog.mazhangjing.com/2018/03/29/learn_seaborn/</a></p>
<p><a href="https://blog.csdn.net/weiyudang11/article/details/51549672">https://blog.csdn.net/weiyudang11/article/details/51549672</a></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">#初始化类</span><br><span class="line">g=sns.JointGrid(x='v_ma5',y='price_change',data=stock,space=0.5,ratio=5)</span><br><span class="line"></span><br><span class="line">g=sns.JointGrid(x='v_ma5',y='price_change',data=stock,space=0.5,ratio=5)</span><br><span class="line">g=g.plot_joint(plt.scatter,color='.3',edgecolor='r')</span><br><span class="line">g=g.plot_marginals(sns.distplot,kde=False)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from scipy import stats</span><br><span class="line">g=sns.JointGrid(x='v_ma5',y='price_change',data=stock,space=0.5,ratio=5)</span><br><span class="line">g=g.plot_joint(plt.scatter,color='.3',edgecolor='r')</span><br><span class="line">_=g.ax_marg_x.hist(stock.v_ma10,color='r',alpha=.6,bins=50)</span><br><span class="line">_=g.ax_marg_y.hist(stock.low,color='y',orientation="horizontal",bins=20)</span><br><span class="line">rquare=lambda a,b:stats.pearsonr(a,b)[0]**2</span><br><span class="line">g=g.annotate(rquare,template='{stat}:{val:.2f}',stat='$R^2$',loc='upper left',fontsize=12)</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="yan-se-he-feng-ge-she-zhi">颜色和风格设置</span><a href="#yan-se-he-feng-ge-she-zhi" class="header-anchor">#</a></h2><h2><span id="diao-se-ban">调色板</span><a href="#diao-se-ban" class="header-anchor">#</a></h2><p>主要使用以下几个函数设置颜色：<br>color_palette() 能传入任何Matplotlib所有支持的颜色<br>color_palette() 不写参数则默认颜色</p>
<p>current_palette = sns.color_palette() sns.palplot(current_palette) plt.show()</p>
<p>set_palette() 设置所有图的颜色</p>
<p>sns.palplot(sns.color_palette(“hls”,8)) plt.show()</p>
<h2><span id="yan-se-de-liang-du-ji-bao-he-du">颜色的亮度及饱和度</span><a href="#yan-se-de-liang-du-ji-bao-he-du" class="header-anchor">#</a></h2><p>l-光度 lightness<br>s-饱和 saturation</p>
<p>sns.palplot(sns.hls_palette(8,l=.7,s=.9)) plt.show()</p>
<h2><span id="xkcd-xuan-qu-yan-se">xkcd选取颜色</span><a href="#xkcd-xuan-qu-yan-se" class="header-anchor">#</a></h2><p>xkcd包含了一套众包努力的针对随机RGB色的命名。产生了954个可以随时通过xkcd_rgb字典中调用的命名颜色</p>
<p>plt.plot([0,1],[0,1],sns.xkcd_rgb[‘pale red’],lw = 3) #lw = 线宽度<br>plt.plot([0,1],[0,2],sns.xkcd_rgb[‘medium green’],lw = 3)<br>plt.plot([0,1],[0,3],sns.xkcd_rgb[‘denim blue’],lw = 3)<br>plt.show()</p>
<p><img src="https://img-blog.csdnimg.cn/20190216223007343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0Ryb2tlX1pob3U=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h2><span id="hui-zong">汇总</span><a href="#hui-zong" class="header-anchor">#</a></h2><p><a href="http://seaborn.pydata.org/api.html#">http://seaborn.pydata.org/api.html#</a></p>
<p><a href="https://github.com/mwaskom/seaborn/blob/master/seaborn/rcmod.py">https://github.com/mwaskom/seaborn/blob/master/seaborn/rcmod.py</a></p>
<p><a href="https://xkcd.com/color/rgb/">https://xkcd.com/color/rgb/</a></p>
<h1><span id="di-tu-geopy">地图：geopy</span><a href="#di-tu-geopy" class="header-anchor">#</a></h1><h2><span id="geocoding">Geocoding</span><a href="#geocoding" class="header-anchor">#</a></h2><p><a href="https://geopy.readthedocs.io/en/latest/#module-geopy.distance">https://geopy.readthedocs.io/en/latest/#module-geopy.distance</a></p>
<h3><span id="from-address-to-coordinates">from address to coordinates</span><a href="#from-address-to-coordinates" class="header-anchor">#</a></h3><p>使用 geopy 查询地址前需要首先选择一个地图服务，绝大多数的服务需要一个密钥（api_key）。你需要到其开发者页面注册和申请，例如<a href="http://lbsyun.baidu.com/">百度</a>。免费的密钥通常会对使用频率和次数做限制。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from geopy.geocoders import Nominatim</span><br><span class="line">&gt;&gt;&gt; geolocator = Nominatim(user_agent="specify_your_app_name_here")</span><br><span class="line">&gt;&gt;&gt; location = geolocator.geocode("175 5th Avenue NYC")</span><br><span class="line">&gt;&gt;&gt; print(location.address)</span><br><span class="line">Flatiron Building, 175, 5th Avenue, Flatiron, New York, NYC, New York, ...</span><br><span class="line">&gt;&gt;&gt; print((location.latitude, location.longitude))</span><br><span class="line">(40.7410861, -73.9896297241625)</span><br><span class="line">&gt;&gt;&gt; print(location.raw)</span><br><span class="line">{'place_id': '9167009604', 'type': 'attraction', ...}</span><br></pre></td></tr></tbody></table></figure>
<h3><span id="from-coordinates-to-address">from coordinates to address</span><a href="#from-coordinates-to-address" class="header-anchor">#</a></h3><p>使用百度</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">from geopy.geocoders import Baidu</span><br><span class="line">geocoder = Baidu(</span><br><span class="line">            api_key='ak',#自己修改</span><br><span class="line">            security_key='sk',#自己修改</span><br><span class="line">            timeout=200</span><br><span class="line">        )</span><br></pre></td></tr></tbody></table></figure>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from geopy.geocoders import Nominatim</span><br><span class="line">&gt;&gt;&gt; geolocator = Nominatim(user_agent="specify_your_app_name_here")</span><br><span class="line">&gt;&gt;&gt; location = geolocator.reverse("52.509669, 13.376294")</span><br><span class="line">&gt;&gt;&gt; print(location.address)</span><br><span class="line">Potsdamer Platz, Mitte, Berlin, 10117, Deutschland, European Union</span><br><span class="line">&gt;&gt;&gt; print((location.latitude, location.longitude))</span><br><span class="line">(52.5094982, 13.3765983)</span><br><span class="line">&gt;&gt;&gt; print(location.raw)</span><br><span class="line">{'place_id': '654513', 'osm_type': 'node', ...}</span><br></pre></td></tr></tbody></table></figure>
<h2><span id="measuring-distance">Measuring Distance</span><a href="#measuring-distance" class="header-anchor">#</a></h2><p>  <a href="https://en.wikipedia.org/wiki/Geodesics_on_an_ellipsoid">geodesic distance</a> uses ellipsoidal model of the earth.     <a href="https://en.wikipedia.org/wiki/Great-circle_distance">great-circle distance</a> uses a spherical model of the earth.</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; from geopy import distance</span><br><span class="line">&gt;&gt;&gt; newport_ri = (41.49008, -71.312796)</span><br><span class="line">&gt;&gt;&gt; cleveland_oh = (41.499498, -81.695391)</span><br><span class="line">&gt;&gt;&gt; print(distance.distance(newport_ri, cleveland_oh).miles)</span><br><span class="line">538.39044536</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; wellington = (-41.32, 174.81)</span><br><span class="line">&gt;&gt;&gt; salamanca = (40.96, -5.50)</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(distance.distance(wellington, salamanca).km)</span><br><span class="line">19959.6792674</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt; print(distance.great_circle(newport_ri, cleveland_oh).miles)</span><br></pre></td></tr></tbody></table></figure>]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>MayMay</title>
    <url>/2019/02/22/MayMay/</url>
    <content><![CDATA[<p><a href="https://www.kaggle.com/dgawlik/house-prices-eda/data">https://www.kaggle.com/dgawlik/house-prices-eda/data</a><br><a href="https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python">https://www.kaggle.com/pmarcelino/comprehensive-data-exploration-with-python</a></p>
]]></content>
      <tags>
        <tag>wan</tag>
      </tags>
  </entry>
</search>
